{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./jslib/common/src/abstractions/i18n.service.ts","webpack:///./jslib/common/src/abstractions/platformUtils.service.ts","webpack:///./jslib/common/src/abstractions/api.service.ts","webpack:///./jslib/common/src/abstractions/user.service.ts","webpack:///./jslib/angular/src/pipes/i18n.pipe.ts","webpack:///./jslib/common/src/abstractions/messaging.service.ts","webpack:///./jslib/common/src/abstractions/crypto.service.ts","webpack:///./jslib/angular/src/directives/a11y-title.directive.ts","webpack:///./jslib/angular/src/directives/api-action.directive.ts","webpack:///./jslib/common/src/abstractions/cipher.service.ts","webpack:///./jslib/common/src/models/response/baseResponse.ts","webpack:///./jslib/angular/src/components/callout.component.ts","webpack:///./jslib/angular/src/components/callout.component.html","webpack:///./jslib/common/src/importers/baseImporter.ts","webpack:///./jslib/common/src/models/domain/importResult.ts","webpack:///./jslib/common/src/misc/utils.ts","webpack:///./jslib/common/src/abstractions/policy.service.ts","webpack:///./jslib/common/src/abstractions/passwordGeneration.service.ts","webpack:///./jslib/common/src/abstractions/state.service.ts","webpack:///./jslib/angular/src/directives/stop-click.directive.ts","webpack:///./jslib/common/src/enums/cipherType.ts","webpack:///./jslib/common/src/abstractions/storage.service.ts","webpack:///./jslib/common/src/abstractions/collection.service.ts","webpack:///./jslib/angular/src/directives/input-verbatim.directive.ts","webpack:///./jslib/common/src/abstractions/folder.service.ts","webpack:///./jslib/angular/src/directives/stop-prop.directive.ts","webpack:///./jslib/common/src/abstractions/environment.service.ts","webpack:///./jslib/common/src/abstractions/auth.service.ts","webpack:///./jslib/common/src/abstractions/sync.service.ts","webpack:///./jslib/angular/src/directives/autofocus.directive.ts","webpack:///./jslib/common/src/services/constants.service.ts","webpack:///./jslib/common/src/abstractions/event.service.ts","webpack:///./jslib/common/src/abstractions/search.service.ts","webpack:///./jslib/common/src/models/request/passwordVerificationRequest.ts","webpack:///./jslib/common/src/models/domain/domainBase.ts","webpack:///./src/app/modal.component.ts","webpack:///./jslib/common/src/abstractions/vaultTimeout.service.ts","webpack:///./jslib/common/src/models/domain/encString.ts","webpack:///./jslib/common/src/abstractions/audit.service.ts","webpack:///./jslib/common/src/models/view/cardView.ts","webpack:///./jslib/common/src/abstractions/cryptoFunction.service.ts","webpack:///./jslib/common/src/models/view/secureNoteView.ts","webpack:///./jslib/common/src/enums/secureNoteType.ts","webpack:///./jslib/common/src/abstractions/token.service.ts","webpack:///./jslib/angular/src/components/icon.component.ts","webpack:///./jslib/angular/src/components/icon.component.html","webpack:///./jslib/angular/src/services/broadcaster.service.ts","webpack:///./jslib/common/src/enums/twoFactorProviderType.ts","webpack:///./src/app/components/avatar.component.ts","webpack:///./jslib/common/src/enums/policyType.ts","webpack:///./jslib/common/src/abstractions/totp.service.ts","webpack:///./src/app/settings/payment.component.ts","webpack:///./src/app/settings/payment.component.html","webpack:///./jslib/common/src/enums/fieldType.ts","webpack:///./jslib/common/src/models/view/cipherView.ts","webpack:///./jslib/common/src/models/view/folderView.ts","webpack:///./jslib/common/src/models/domain/collection.ts","webpack:///./jslib/common/src/enums/organizationUserStatusType.ts","webpack:///./jslib/common/src/abstractions/export.service.ts","webpack:///./src/app/settings/tax-info.component.ts","webpack:///./src/app/settings/tax-info.component.html","webpack:///./jslib/common/src/models/view/identityView.ts","webpack:///./jslib/common/src/models/view/loginView.ts","webpack:///./jslib/common/src/abstractions/send.service.ts","webpack:///./jslib/common/src/models/data/collectionData.ts","webpack:///./jslib/common/src/models/view/collectionView.ts","webpack:///./jslib/common/src/models/data/cipherData.ts","webpack:///./jslib/common/src/enums/sendType.ts","webpack:///./src/app/settings/two-factor-verify.component.ts","webpack:///./src/app/settings/two-factor-verify.component.html","webpack:///./jslib/common/src/models/domain/cipher.ts","webpack:///./jslib/common/src/enums/cipherRepromptType.ts","webpack:///./jslib/common/src/abstractions/passwordReprompt.service.ts","webpack:///./src/app/components/password-strength.component.ts","webpack:///./src/app/components/password-strength.component.html","webpack:///./jslib/angular/src/pipes/search.pipe.ts","webpack:///./jslib/common/src/enums/eventType.ts","webpack:///./jslib/common/src/models/view/fieldView.ts","webpack:///./jslib/common/src/models/request/cipherRequest.ts","webpack:///./jslib/common/src/models/response/errorResponse.ts","webpack:///./jslib/angular/src/services/validation.service.ts","webpack:///./src/app/services/router.service.ts","webpack:///./jslib/common/src/enums/kdfType.ts","webpack:///./jslib/common/src/enums/organizationUserType.ts","webpack:///./src/app/services/event.service.ts","webpack:///./jslib/common/src/models/domain/symmetricCryptoKey.ts","webpack:///./jslib/common/src/enums/paymentMethodType.ts","webpack:///./src/app/settings/two-factor-base.component.ts","webpack:///./src/app/tools/cipher-report.component.ts","webpack:///./jslib/common/src/models/view/loginUriView.ts","webpack:///./jslib/common/src/enums/uriMatchType.ts","webpack:///./src/app/vault/add-edit.component.ts","webpack:///./src/app/vault/add-edit.component.html","webpack:///./jslib/common/src/abstractions/import.service.ts","webpack:///./jslib/common/src/models/response/cipherResponse.ts","webpack:///./src/app/vault/ciphers.component.ts","webpack:///./src/app/vault/ciphers.component.html","webpack:///./jslib/common/src/enums/encryptionType.ts","webpack:///./jslib/common/src/enums/hashPurpose.ts","webpack:///./jslib/common/src/models/request/keysRequest.ts","webpack:///./jslib/common/src/models/data/policyData.ts","webpack:///./jslib/common/src/services/auth.service.ts","webpack:///./jslib/common/src/models/request/selectionReadOnlyRequest.ts","webpack:///./jslib/common/src/enums/deviceType.ts","webpack:///./jslib/common/src/abstractions/settings.service.ts","webpack:///./jslib/common/src/enums/planType.ts","webpack:///./src/app/settings/organization-plans.component.ts","webpack:///./src/app/settings/organization-plans.component.html","webpack:///./jslib/common/src/models/domain/card.ts","webpack:///./jslib/common/src/models/domain/field.ts","webpack:///./jslib/common/src/models/domain/identity.ts","webpack:///./jslib/common/src/models/domain/login.ts","webpack:///./jslib/common/src/models/domain/loginUri.ts","webpack:///./jslib/common/src/models/domain/secureNote.ts","webpack:///./jslib/angular/src/directives/true-false-value.directive.ts","webpack:///./jslib/common/src/models/response/selectionReadOnlyResponse.ts","webpack:///./jslib/common/src/models/response/profileResponse.ts","webpack:///./src/app/vault/groupings.component.ts","webpack:///./src/app/vault/groupings.component.html","webpack:///./jslib/common/src/models/domain/organization.ts","webpack:///./jslib/common/src/models/view/sendFileView.ts","webpack:///./jslib/common/src/models/view/sendTextView.ts","webpack:///./src/app/settings/organizations.component.ts","webpack:///./src/app/settings/organizations.component.html","webpack:///./src/app/layouts/navbar.component.ts","webpack:///./src/app/layouts/navbar.component.html","webpack:///./src/app/layouts/footer.component.ts","webpack:///./src/app/layouts/footer.component.html","webpack:///./jslib/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack:///./jslib/common/src/models/domain/policy.ts","webpack:///./jslib/angular/src/components/change-password.component.ts","webpack:///./src/app/organizations/manage/entity-users.component.ts","webpack:///./src/app/organizations/manage/entity-users.component.html","webpack:///./jslib/common/src/models/request/organizationKeysRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserBulkRequest.ts","webpack:///./src/app/organizations/manage/entity-events.component.ts","webpack:///./src/app/organizations/manage/entity-events.component.html","webpack:///./jslib/common/src/models/api/permissionsApi.ts","webpack:///./src/app/settings/api-key.component.ts","webpack:///./src/app/settings/api-key.component.html","webpack:///./src/app/settings/purge-vault.component.ts","webpack:///./src/app/settings/purge-vault.component.html","webpack:///./src/app/settings/user-billing.component.ts","webpack:///./src/app/settings/user-billing.component.html","webpack:///./src/app/settings/add-credit.component.ts","webpack:///./src/app/settings/add-credit.component.html","webpack:///./src/app/settings/adjust-payment.component.ts","webpack:///./src/app/settings/adjust-payment.component.html","webpack:///./src/app/settings/update-license.component.ts","webpack:///./src/app/settings/update-license.component.html","webpack:///./jslib/common/src/enums/productType.ts","webpack:///./src/app/settings/adjust-storage.component.ts","webpack:///./src/app/settings/adjust-storage.component.html","webpack:///./src/app/settings/two-factor-duo.component.ts","webpack:///./src/app/settings/two-factor-duo.component.html","webpack:///./src/app/settings/two-factor-setup.component.ts","webpack:///./src/app/settings/two-factor-setup.component.html","webpack:///./src/app/tools/export.component.ts","webpack:///./src/app/tools/export.component.html","webpack:///./src/app/tools/exposed-passwords-report.component.ts","webpack:///./src/app/tools/exposed-passwords-report.component.html","webpack:///./src/app/organizations/vault/add-edit.component.ts","webpack:///./jslib/common/src/models/data/attachmentData.ts","webpack:///./jslib/common/src/models/data/cardData.ts","webpack:///./jslib/common/src/models/data/fieldData.ts","webpack:///./jslib/common/src/models/data/identityData.ts","webpack:///./jslib/common/src/models/data/loginData.ts","webpack:///./jslib/common/src/models/data/loginUriData.ts","webpack:///./jslib/common/src/models/data/secureNoteData.ts","webpack:///./jslib/common/src/models/domain/attachment.ts","webpack:///./jslib/common/src/models/view/passwordHistoryView.ts","webpack:///./src/app/tools/import.component.ts","webpack:///./src/app/tools/import.component.html","webpack:///./src/app/tools/inactive-two-factor-report.component.ts","webpack:///./src/app/tools/inactive-two-factor-report.component.html","webpack:///./src/app/tools/reused-passwords-report.component.ts","webpack:///./src/app/tools/reused-passwords-report.component.html","webpack:///./src/app/tools/unsecured-websites-report.component.ts","webpack:///./src/app/tools/unsecured-websites-report.component.html","webpack:///./src/app/tools/weak-passwords-report.component.ts","webpack:///./src/app/tools/weak-passwords-report.component.html","webpack:///./src/app/vault/attachments.component.ts","webpack:///./src/app/vault/attachments.component.html","webpack:///./jslib/common/src/models/response/attachmentResponse.ts","webpack:///./jslib/common/src/models/response/collectionResponse.ts","webpack:///./jslib/common/src/models/response/domainsResponse.ts","webpack:///./jslib/common/src/models/response/folderResponse.ts","webpack:///./jslib/common/src/models/response/sendResponse.ts","webpack:///./jslib/common/src/models/api/sendFileApi.ts","webpack:///./jslib/common/src/models/api/sendTextApi.ts","webpack:///./src/app/organizations/vault/ciphers.component.ts","webpack:///./src/app/vault/collections.component.ts","webpack:///./src/app/vault/collections.component.html","webpack:///./src/app/organizations/vault/groupings.component.ts","webpack:///./src/app/vault/bulk-actions.component.ts","webpack:///./src/app/vault/bulk-actions.component.html","webpack:///./jslib/common/src/models/domain/sendFile.ts","webpack:///./jslib/common/src/models/domain/sendText.ts","webpack:///./jslib/common/src/models/request/cipherWithIdRequest.ts","webpack:///./jslib/common/src/models/request/folderRequest.ts","webpack:///./jslib/angular/src/directives/select-copy.directive.ts","webpack:///./jslib/angular/src/pipes/color-password.pipe.ts","webpack:///./jslib/common/src/models/data/folderData.ts","webpack:///./jslib/common/src/models/domain/folder.ts","webpack:///./jslib/common/src/abstractions/notifications.service.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/layouts/frontend-layout.component.ts","webpack:///./src/app/layouts/frontend-layout.component.html","webpack:///./src/app/layouts/organization-layout.component.ts","webpack:///./src/app/layouts/organization-layout.component.html","webpack:///./src/app/layouts/user-layout.component.ts","webpack:///./src/app/layouts/user-layout.component.html","webpack:///./src/app/accounts/accept-emergency.component.ts","webpack:///./src/app/accounts/accept-emergency.component.html","webpack:///./src/app/common/base.accept.component.ts","webpack:///./src/app/accounts/accept-organization.component.ts","webpack:///./src/app/accounts/accept-organization.component.html","webpack:///./src/app/accounts/hint.component.ts","webpack:///./src/app/accounts/hint.component.html","webpack:///./src/app/accounts/lock.component.ts","webpack:///./src/app/accounts/lock.component.html","webpack:///./src/app/accounts/login.component.ts","webpack:///./src/app/accounts/login.component.html","webpack:///./src/app/accounts/recover-delete.component.ts","webpack:///./src/app/accounts/recover-delete.component.html","webpack:///./src/app/accounts/recover-two-factor.component.ts","webpack:///./src/app/accounts/recover-two-factor.component.html","webpack:///./src/app/accounts/register.component.ts","webpack:///./src/app/accounts/register.component.html","webpack:///./src/app/accounts/set-password.component.ts","webpack:///./src/app/accounts/set-password.component.html","webpack:///./src/app/accounts/sso.component.ts","webpack:///./src/app/accounts/sso.component.html","webpack:///./jslib/angular/src/components/sso.component.ts","webpack:///./src/app/accounts/two-factor.component.ts","webpack:///./src/app/accounts/two-factor.component.html","webpack:///./src/app/accounts/two-factor-options.component.ts","webpack:///./src/app/accounts/two-factor-options.component.html","webpack:///./jslib/common/src/models/request/twoFactorEmailRequest.ts","webpack:///./jslib/common/src/models/domain/authResult.ts","webpack:///./src/app/accounts/verify-email-token.component.ts","webpack:///./src/app/accounts/verify-email-token.component.html","webpack:///./src/app/accounts/verify-recover-delete.component.ts","webpack:///./src/app/accounts/verify-recover-delete.component.html","webpack:///./src/app/organizations/manage/collections.component.ts","webpack:///./src/app/organizations/manage/collections.component.html","webpack:///./src/app/organizations/manage/collection-add-edit.component.ts","webpack:///./src/app/organizations/manage/collection-add-edit.component.html","webpack:///./jslib/common/src/models/request/collectionRequest.ts","webpack:///./src/app/organizations/manage/events.component.ts","webpack:///./src/app/organizations/manage/events.component.html","webpack:///./src/app/organizations/manage/groups.component.ts","webpack:///./src/app/organizations/manage/groups.component.html","webpack:///./src/app/organizations/manage/group-add-edit.component.ts","webpack:///./src/app/organizations/manage/group-add-edit.component.html","webpack:///./src/app/organizations/manage/manage.component.ts","webpack:///./src/app/organizations/manage/manage.component.html","webpack:///./src/app/organizations/manage/people.component.ts","webpack:///./src/app/organizations/manage/people.component.html","webpack:///./src/app/organizations/manage/bulk/bulk-confirm.component.ts","webpack:///./src/app/organizations/manage/bulk/bulk-confirm.component.html","webpack:///./src/app/organizations/manage/bulk/bulk-remove.component.ts","webpack:///./src/app/organizations/manage/bulk/bulk-remove.component.html","webpack:///./src/app/organizations/manage/bulk/bulk-status.component.ts","webpack:///./src/app/organizations/manage/bulk/bulk-status.component.html","webpack:///./src/app/organizations/manage/reset-password.component.ts","webpack:///./src/app/organizations/manage/reset-password.component.html","webpack:///./src/app/organizations/manage/user-add-edit.component.ts","webpack:///./src/app/organizations/manage/user-add-edit.component.html","webpack:///./src/app/organizations/manage/user-confirm.component.ts","webpack:///./src/app/organizations/manage/user-confirm.component.html","webpack:///./src/app/organizations/manage/user-groups.component.ts","webpack:///./src/app/organizations/manage/user-groups.component.html","webpack:///./src/app/organizations/manage/policies.component.ts","webpack:///./src/app/organizations/manage/policies.component.html","webpack:///./jslib/common/src/abstractions/index.ts","webpack:///./src/app/organizations/manage/policy-edit.component.ts","webpack:///./src/app/organizations/manage/policy-edit.component.html","webpack:///./src/app/organizations/settings/account.component.ts","webpack:///./src/app/organizations/settings/account.component.html","webpack:///./jslib/common/src/models/request/organizationTaxInfoUpdateRequest.ts","webpack:///./jslib/common/src/models/request/taxInfoUpdateRequest.ts","webpack:///./src/app/organizations/settings/delete-organization.component.ts","webpack:///./src/app/organizations/settings/delete-organization.component.html","webpack:///./src/app/organizations/settings/organization-billing.component.ts","webpack:///./src/services/webConstants.ts","webpack:///./src/app/organizations/settings/organization-subscription.component.ts","webpack:///./src/app/organizations/settings/organization-subscription.component.html","webpack:///./src/app/organizations/settings/change-plan.component.ts","webpack:///./src/app/organizations/settings/change-plan.component.html","webpack:///./src/app/organizations/settings/download-license.component.ts","webpack:///./src/app/organizations/settings/download-license.component.html","webpack:///./src/app/organizations/settings/adjust-seats.component.ts","webpack:///./src/app/organizations/settings/adjust-seats.component.html","webpack:///./src/app/organizations/settings/settings.component.ts","webpack:///./src/app/organizations/settings/settings.component.html","webpack:///./src/app/organizations/settings/two-factor-setup.component.ts","webpack:///./src/app/settings/two-factor-authenticator.component.ts","webpack:///./src/app/settings/two-factor-authenticator.component.html","webpack:///./src/app/settings/two-factor-email.component.ts","webpack:///./src/app/settings/two-factor-email.component.html","webpack:///./src/app/settings/two-factor-recovery.component.ts","webpack:///./src/app/settings/two-factor-recovery.component.html","webpack:///./src/app/settings/two-factor-webauthn.component.ts","webpack:///./src/app/settings/two-factor-webauthn.component.html","webpack:///./src/app/settings/two-factor-yubikey.component.ts","webpack:///./src/app/settings/two-factor-yubikey.component.html","webpack:///./src/app/organizations/tools/export.component.ts","webpack:///./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack:///./jslib/common/src/models/data/passwordHistoryData.ts","webpack:///./jslib/common/src/models/view/attachmentView.ts","webpack:///./jslib/common/src/models/domain/password.ts","webpack:///./jslib/common/src/models/request/cipherCreateRequest.ts","webpack:///./jslib/common/src/models/api/cardApi.ts","webpack:///./jslib/common/src/models/api/fieldApi.ts","webpack:///./jslib/common/src/models/api/identityApi.ts","webpack:///./jslib/common/src/models/api/loginApi.ts","webpack:///./jslib/common/src/models/api/loginUriApi.ts","webpack:///./jslib/common/src/models/api/secureNoteApi.ts","webpack:///./jslib/angular/src/directives/fallback-src.directive.ts","webpack:///./src/app/organizations/tools/import.component.ts","webpack:///./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack:///./src/app/organizations/tools/reused-passwords-report.component.ts","webpack:///./src/app/organizations/tools/tools.component.ts","webpack:///./src/app/organizations/tools/tools.component.html","webpack:///./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack:///./src/app/organizations/tools/weak-passwords-report.component.ts","webpack:///./src/app/organizations/vault/vault.component.ts","webpack:///./src/app/organizations/vault/vault.component.html","webpack:///./src/app/organizations/vault/attachments.component.ts","webpack:///./jslib/angular/src/components/attachments.component.ts","webpack:///./jslib/common/src/models/response/globalDomainResponse.ts","webpack:///./jslib/common/src/models/response/identityTokenResponse.ts","webpack:///./jslib/common/src/models/response/identityTwoFactorResponse.ts","webpack:///./jslib/common/src/models/response/keysResponse.ts","webpack:///./jslib/common/src/models/response/listResponse.ts","webpack:///./jslib/common/src/models/response/profileOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/syncResponse.ts","webpack:///./jslib/common/src/models/response/policyResponse.ts","webpack:///./src/app/organizations/vault/collections.component.ts","webpack:///./jslib/common/src/models/request/cipherCollectionsRequest.ts","webpack:///./src/app/vault/bulk-delete.component.ts","webpack:///./src/app/vault/bulk-delete.component.html","webpack:///./jslib/common/src/models/request/cipherBulkDeleteRequest.ts","webpack:///./src/app/vault/bulk-move.component.ts","webpack:///./src/app/vault/bulk-move.component.html","webpack:///./src/app/vault/bulk-restore.component.ts","webpack:///./src/app/vault/bulk-restore.component.html","webpack:///./src/app/vault/bulk-share.component.ts","webpack:///./src/app/vault/bulk-share.component.html","webpack:///./src/app/send/access.component.ts","webpack:///./src/app/send/access.component.html","webpack:///./src/app/send/send.component.ts","webpack:///./src/app/send/send.component.html","webpack:///./src/app/send/add-edit.component.ts","webpack:///./src/app/send/add-edit.component.html","webpack:///./jslib/common/src/models/view/sendView.ts","webpack:///./src/app/settings/account.component.ts","webpack:///./src/app/settings/account.component.html","webpack:///./src/app/settings/deauthorize-sessions.component.ts","webpack:///./src/app/settings/deauthorize-sessions.component.html","webpack:///./src/app/settings/delete-account.component.ts","webpack:///./src/app/settings/delete-account.component.html","webpack:///./src/app/settings/profile.component.ts","webpack:///./src/app/settings/profile.component.html","webpack:///./src/app/settings/change-email.component.ts","webpack:///./src/app/settings/change-email.component.html","webpack:///./jslib/common/src/models/request/emailTokenRequest.ts","webpack:///./src/app/settings/change-password.component.ts","webpack:///./src/app/settings/change-password.component.html","webpack:///./jslib/common/src/enums/emergencyAccessStatusType.ts","webpack:///./jslib/common/src/models/request/emergencyAccessUpdateRequest.ts","webpack:///./jslib/common/src/models/request/folderWithIdRequest.ts","webpack:///./jslib/common/src/models/request/passwordRequest.ts","webpack:///./jslib/common/src/models/request/updateKeyRequest.ts","webpack:///./src/app/settings/change-kdf.component.ts","webpack:///./src/app/settings/change-kdf.component.html","webpack:///./src/app/settings/create-organization.component.ts","webpack:///./src/app/settings/create-organization.component.html","webpack:///./src/app/settings/domain-rules.component.ts","webpack:///./src/app/settings/domain-rules.component.html","webpack:///./src/app/settings/options.component.ts","webpack:///./src/app/settings/options.component.html","webpack:///./src/app/settings/link-sso.component.ts","webpack:///./src/app/settings/link-sso.component.html","webpack:///./src/app/settings/premium.component.ts","webpack:///./src/app/settings/premium.component.html","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/user-subscription.component.ts","webpack:///./src/app/settings/user-subscription.component.html","webpack:///./src/app/tools/breach-report.component.ts","webpack:///./src/app/tools/breach-report.component.html","webpack:///./src/app/tools/password-generator.component.ts","webpack:///./src/app/tools/password-generator.component.html","webpack:///./src/app/tools/password-generator-history.component.ts","webpack:///./src/app/tools/password-generator-history.component.html","webpack:///./src/app/tools/tools.component.ts","webpack:///./src/app/tools/tools.component.html","webpack:///./src/app/vault/vault.component.ts","webpack:///./src/app/vault/vault.component.html","webpack:///./src/app/settings/update-key.component.ts","webpack:///./src/app/settings/update-key.component.html","webpack:///./src/app/vault/folder-add-edit.component.ts","webpack:///./src/app/vault/folder-add-edit.component.html","webpack:///./src/app/vault/share.component.ts","webpack:///./src/app/vault/share.component.html","webpack:///./src/app/settings/verify-email.component.ts","webpack:///./src/app/settings/verify-email.component.html","webpack:///./src/app/services/organization-guard.service.ts","webpack:///./src/app/services/organization-type-guard.service.ts","webpack:///./jslib/common/src/enums/permissions.ts","webpack:///./jslib/angular/src/services/auth-guard.service.ts","webpack:///./jslib/angular/src/services/lock-guard.service.ts","webpack:///./jslib/angular/src/services/unauth-guard.service.ts","webpack:///./src/app/settings/emergency-access-view.component.ts","webpack:///./src/app/settings/emergency-access-view.component.html","webpack:///./jslib/common/src/models/domain/encryptedObject.ts","webpack:///./jslib/common/src/models/domain/environmentUrls.ts","webpack:///./jslib/common/src/models/domain/generatedPasswordHistory.ts","webpack:///./src/app/settings/emergency-access-attachments.component.ts","webpack:///./src/app/settings/emergency-add-edit.component.ts","webpack:///./src/app/settings/emergency-access.component.ts","webpack:///./src/app/settings/emergency-access.component.html","webpack:///./jslib/common/src/enums/emergencyAccessType.ts","webpack:///./jslib/common/src/models/response/emergencyAccessResponse.ts","webpack:///./src/app/settings/emergency-access-add-edit.component.ts","webpack:///./src/app/settings/emergency-access-add-edit.component.html","webpack:///./src/app/settings/emergency-access-confirm.component.ts","webpack:///./src/app/settings/emergency-access-confirm.component.html","webpack:///./src/app/settings/emergency-access-takeover.component.ts","webpack:///./src/app/settings/emergency-access-takeover.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./jslib/common/src/services/api.service.ts","webpack:///./jslib/common/src/models/response/organizationResponse.ts","webpack:///./jslib/common/src/models/response/planResponse.ts","webpack:///./jslib/common/src/models/response/subscriptionResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack:///./jslib/common/src/services/appId.service.ts","webpack:///./jslib/common/src/services/audit.service.ts","webpack:///./jslib/common/src/services/cipher.service.ts","webpack:///./jslib/common/src/misc/sequentialize.ts","webpack:///./jslib/common/src/services/collection.service.ts","webpack:///./jslib/common/src/misc/serviceUtils.ts","webpack:///./jslib/common/src/services/container.service.ts","webpack:///./jslib/common/src/services/crypto.service.ts","webpack:///./jslib/common/src/misc/wordlist.ts","webpack:///./jslib/common/src/services/environment.service.ts","webpack:///./jslib/common/src/services/folder.service.ts","webpack:///./jslib/common/src/services/i18n.service.ts","webpack:///./jslib/common/src/services/passwordGeneration.service.ts","webpack:///./jslib/common/src/services/settings.service.ts","webpack:///./jslib/common/src/services/state.service.ts","webpack:///./jslib/common/src/services/sync.service.ts","webpack:///./jslib/common/src/models/data/sendData.ts","webpack:///./jslib/common/src/services/token.service.ts","webpack:///./jslib/common/src/services/totp.service.ts","webpack:///./jslib/common/src/services/user.service.ts","webpack:///./jslib/common/src/services/vaultTimeout.service.ts","webpack:///./jslib/common/src/services/consoleLog.service.ts","webpack:///./jslib/common/src/enums/logLevelType.ts","webpack:///./jslib/common/src/models/export/cipherWithIds.ts","webpack:///./jslib/common/src/models/export/collectionWithId.ts","webpack:///./jslib/common/src/models/export/folderWithId.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/onepasswordCsvImporter.ts","webpack:///./jslib/common/src/models/view/index.ts","webpack:///./jslib/common/src/enums/notificationType.ts","webpack:///./bitwarden_license/src/app/main.ts","webpack:///./src/scss/styles.scss?580e","webpack:///./src/app/app.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./jslib/common/src/services/broadcaster.service.ts","webpack:///./jslib/common/src/misc/tldjs.noop.ts","webpack:///./jslib/common/src/models/request/emergencyAccessAcceptRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserAcceptRequest.ts","webpack:///./jslib/angular/src/components/hint.component.ts","webpack:///./jslib/common/src/models/request/passwordHintRequest.ts","webpack:///./jslib/angular/src/components/lock.component.ts","webpack:///./jslib/angular/src/components/login.component.ts","webpack:///./jslib/common/src/models/request/deleteRecoverRequest.ts","webpack:///./jslib/common/src/models/request/twoFactorRecoveryRequest.ts","webpack:///./jslib/angular/src/components/register.component.ts","webpack:///./jslib/common/src/models/request/registerRequest.ts","webpack:///./jslib/common/src/models/request/referenceEventRequest.ts","webpack:///./jslib/angular/src/components/set-password.component.ts","webpack:///./jslib/common/src/models/request/setPasswordRequest.ts","webpack:///./jslib/angular/src/components/two-factor-options.component.ts","webpack:///./jslib/angular/src/components/modal.component.ts","webpack:///./jslib/angular/src/components/two-factor.component.ts","webpack:///./jslib/common/src/models/request/deviceRequest.ts","webpack:///./jslib/common/src/models/request/preloginRequest.ts","webpack:///./jslib/common/src/models/request/tokenRequest.ts","webpack:///./jslib/common/src/misc/webauthn.ts","webpack:///./jslib/common/src/models/request/verifyEmailRequest.ts","webpack:///./jslib/common/src/models/request/verifyDeleteRecoverRequest.ts","webpack:///./jslib/common/src/models/view/eventView.ts","webpack:///./jslib/common/src/models/request/groupRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserConfirmRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserBulkConfirmRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserInviteRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserUpdateRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack:///./jslib/common/src/abstractions/appId.service.ts","webpack:///./jslib/common/src/abstractions/log.service.ts","webpack:///./jslib/common/src/models/request/policyRequest.ts","webpack:///./jslib/common/src/models/request/organizationUpdateRequest.ts","webpack:///./jslib/common/src/enums/transactionType.ts","webpack:///./jslib/common/src/models/request/verifyBankRequest.ts","webpack:///./jslib/common/src/models/request/bitPayInvoiceRequest.ts","webpack:///./jslib/common/src/models/request/paymentRequest.ts","webpack:///./jslib/common/src/models/request/organizationCreateRequest.ts","webpack:///./jslib/common/src/models/request/organizationUpgradeRequest.ts","webpack:///./jslib/common/src/models/request/seatRequest.ts","webpack:///./jslib/common/src/models/request/storageRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorDuoRequest.ts","webpack:///./jslib/common/src/models/request/twoFactorProviderRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorEmailRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorWebAuthnDeleteRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorWebAuthnRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack:///./jslib/angular/src/components/export.component.ts","webpack:///./jslib/common/src/models/request/attachmentRequest.ts","webpack:///./jslib/angular/src/components/add-edit.component.ts","webpack:///./jslib/common/src/models/response/index.ts","webpack:///./jslib/common/src/models/response/passwordHistoryResponse.ts","webpack:///./jslib/common/src/models/response/deviceResponse.ts","webpack:///./jslib/angular/src/components/ciphers.component.ts","webpack:///./jslib/angular/src/components/collections.component.ts","webpack:///./jslib/angular/src/components/groupings.component.ts","webpack:///./jslib/common/src/models/domain/sendAccess.ts","webpack:///./jslib/common/src/models/view/sendAccessView.ts","webpack:///./jslib/common/src/models/request/sendAccessRequest.ts","webpack:///./jslib/angular/src/components/send/send.component.ts","webpack:///./jslib/angular/src/components/send/add-edit.component.ts","webpack:///./jslib/common/src/models/request/updateProfileRequest.ts","webpack:///./jslib/common/src/models/request/emailRequest.ts","webpack:///./jslib/common/src/models/request/kdfRequest.ts","webpack:///./jslib/common/src/models/request/updateDomainsRequest.ts","webpack:///./jslib/angular/src/components/password-generator.component.ts","webpack:///./jslib/angular/src/components/password-generator-history.component.ts","webpack:///./jslib/angular/src/components/folder-add-edit.component.ts","webpack:///./jslib/angular/src/components/share.component.ts","webpack:///./jslib/common/src/models/data/index.ts","webpack:///./jslib/common/src/models/domain/index.ts","webpack:///./jslib/common/src/models/request/emergencyAccessConfirmRequest.ts","webpack:///./jslib/common/src/models/request/emergencyAccessInviteRequest.ts","webpack:///./jslib/common/src/models/request/emergencyAccessPasswordRequest.ts","webpack:///./src/app/oss.module.ts","webpack:///./jslib/angular/src/directives/blur-click.directive.ts","webpack:///./jslib/angular/src/directives/box-row.directive.ts","webpack:///./jslib/angular/src/pipes/search-ciphers.pipe.ts","webpack:///./src/app/services/services.module.ts","webpack:///./src/services/broadcasterMessaging.service.ts","webpack:///./src/services/htmlStorage.service.ts","webpack:///./jslib/common/src/services/index.ts","webpack:///./jslib/common/src/models/response/apiKeyResponse.ts","webpack:///./jslib/common/src/models/response/attachmentUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/billingResponse.ts","webpack:///./jslib/common/src/models/response/breachAccountResponse.ts","webpack:///./jslib/common/src/models/response/eventResponse.ts","webpack:///./jslib/common/src/models/response/groupResponse.ts","webpack:///./jslib/common/src/models/response/organizationKeysResponse.ts","webpack:///./jslib/common/src/models/response/organizationSubscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserResponse.ts","webpack:///./jslib/common/src/models/response/paymentResponse.ts","webpack:///./jslib/common/src/models/response/preloginResponse.ts","webpack:///./jslib/common/src/models/response/sendAccessResponse.ts","webpack:///./jslib/common/src/models/response/sendFileDownloadDataResponse.ts","webpack:///./jslib/common/src/models/response/sendFileUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/taxInfoResponse.ts","webpack:///./jslib/common/src/models/response/taxRateResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorDuoResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorEmailResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorProviderResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorRescoverResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///./jslib/common/src/models/response/userKeyResponse.ts","webpack:///./jslib/common/src/misc/throttle.ts","webpack:///./jslib/common/src/models/request/cipherBulkMoveRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkRestoreRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkShareRequest.ts","webpack:///./jslib/common/src/models/request/cipherShareRequest.ts","webpack:///./jslib/common/src/models/domain/sortedCiphersCache.ts","webpack:///./jslib/common/src/models/domain/treeNode.ts","webpack:///./jslib/common/src/models/domain/encArrayBuffer.ts","webpack:///./jslib/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack:///./jslib/common/src/models/data/organizationData.ts","webpack:///./jslib/common/src/models/data/sendFileData.ts","webpack:///./jslib/common/src/models/data/sendTextData.ts","webpack:///./src/services/i18n.service.ts","webpack:///./src/services/memoryStorage.service.ts","webpack:///./src/services/webPlatformUtils.service.ts","webpack:///./jslib/common/src/services/event.service.ts","webpack:///./jslib/common/src/models/data/eventData.ts","webpack:///./jslib/common/src/models/request/eventRequest.ts","webpack:///./jslib/common/src/services/export.service.ts","webpack:///./jslib/common/src/models/export/cipher.ts","webpack:///./jslib/common/src/models/export/card.ts","webpack:///./jslib/common/src/models/export/field.ts","webpack:///./jslib/common/src/models/export/identity.ts","webpack:///./jslib/common/src/models/export/login.ts","webpack:///./jslib/common/src/models/export/loginUri.ts","webpack:///./jslib/common/src/models/export/secureNote.ts","webpack:///./jslib/common/src/models/export/collection.ts","webpack:///./jslib/common/src/models/export/event.ts","webpack:///./jslib/common/src/models/export/folder.ts","webpack:///./jslib/common/src/services/fileUpload.service.ts","webpack:///./jslib/common/src/enums/fileUploadType.ts","webpack:///./jslib/common/src/services/azureFileUpload.service.ts","webpack:///./jslib/common/src/services/bitwardenFileUpload.service.ts","webpack:///./jslib/common/src/services/import.service.ts","webpack:///./jslib/common/src/models/request/importCiphersRequest.ts","webpack:///./jslib/common/src/models/request/importOrganizationCiphersRequest.ts","webpack:///./jslib/common/src/models/request/kvpRequest.ts","webpack:///./jslib/common/src/importers/ascendoCsvImporter.ts","webpack:///./jslib/common/src/importers/avastCsvImporter.ts","webpack:///./jslib/common/src/importers/avastJsonImporter.ts","webpack:///./jslib/common/src/importers/aviraCsvImporter.ts","webpack:///./jslib/common/src/importers/bitwardenCsvImporter.ts","webpack:///./jslib/common/src/importers/bitwardenJsonImporter.ts","webpack:///./jslib/common/src/importers/blackBerryCsvImporter.ts","webpack:///./jslib/common/src/importers/blurCsvImporter.ts","webpack:///./jslib/common/src/importers/buttercupCsvImporter.ts","webpack:///./jslib/common/src/importers/chromeCsvImporter.ts","webpack:///./jslib/common/src/importers/clipperzHtmlImporter.ts","webpack:///./jslib/common/src/importers/codebookCsvImporter.ts","webpack:///./jslib/common/src/importers/dashlaneJsonImporter.ts","webpack:///./jslib/common/src/importers/encryptrCsvImporter.ts","webpack:///./jslib/common/src/importers/enpassCsvImporter.ts","webpack:///./jslib/common/src/importers/enpassJsonImporter.ts","webpack:///./jslib/common/src/importers/firefoxCsvImporter.ts","webpack:///./jslib/common/src/importers/fsecureFskImporter.ts","webpack:///./jslib/common/src/importers/gnomeJsonImporter.ts","webpack:///./jslib/common/src/importers/kasperskyTxtImporter.ts","webpack:///./jslib/common/src/importers/keepass2XmlImporter.ts","webpack:///./jslib/common/src/importers/keepassxCsvImporter.ts","webpack:///./jslib/common/src/importers/keeperCsvImporter.ts","webpack:///./jslib/common/src/importers/lastpassCsvImporter.ts","webpack:///./jslib/common/src/importers/logMeOnceCsvImporter.ts","webpack:///./jslib/common/src/importers/meldiumCsvImporter.ts","webpack:///./jslib/common/src/importers/msecureCsvImporter.ts","webpack:///./jslib/common/src/importers/mykiCsvImporter.ts","webpack:///./jslib/common/src/importers/nordpassCsvImporter.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/onepassword1PifImporter.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/onepasswordMacCsvImporter.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/cipherImportContext.ts","webpack:///./jslib/common/src/models/view/view.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/onepasswordWinCsvImporter.ts","webpack:///./jslib/common/src/importers/padlockCsvImporter.ts","webpack:///./jslib/common/src/importers/passkeepCsvImporter.ts","webpack:///./jslib/common/src/importers/passmanJsonImporter.ts","webpack:///./jslib/common/src/importers/passpackCsvImporter.ts","webpack:///./jslib/common/src/importers/passwordAgentCsvImporter.ts","webpack:///./jslib/common/src/importers/passwordBossJsonImporter.ts","webpack:///./jslib/common/src/importers/passwordDragonXmlImporter.ts","webpack:///./jslib/common/src/importers/passwordSafeXmlImporter.ts","webpack:///./jslib/common/src/importers/passwordWalletTxtImporter.ts","webpack:///./jslib/common/src/importers/rememBearCsvImporter.ts","webpack:///./jslib/common/src/importers/roboformCsvImporter.ts","webpack:///./jslib/common/src/importers/safeInCloudXmlImporter.ts","webpack:///./jslib/common/src/enums/index.ts","webpack:///./jslib/common/src/importers/saferpassCsvImport.ts","webpack:///./jslib/common/src/importers/secureSafeCsvImporter.ts","webpack:///./jslib/common/src/importers/splashIdCsvImporter.ts","webpack:///./jslib/common/src/importers/stickyPasswordXmlImporter.ts","webpack:///./jslib/common/src/importers/truekeyCsvImporter.ts","webpack:///./jslib/common/src/importers/upmCsvImporter.ts","webpack:///./jslib/common/src/importers/yotiCsvImporter.ts","webpack:///./jslib/common/src/importers/zohoVaultCsvImporter.ts","webpack:///./jslib/common/src/services/notifications.service.ts","webpack:///./jslib/common/src/models/response/notificationResponse.ts","webpack:///./jslib/common/src/services/passwordReprompt.service.ts","webpack:///./jslib/common/src/services/policy.service.ts","webpack:///./jslib/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack:///./jslib/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack:///./jslib/common/src/services/search.service.ts","webpack:///./jslib/common/src/services/send.service.ts","webpack:///./jslib/common/src/models/request/sendRequest.ts","webpack:///./jslib/common/src/models/domain/send.ts","webpack:///./jslib/common/src/services/webCryptoFunction.service.ts","webpack:///./jslib/common/src/models/domain/decryptParameters.ts","webpack:///./jslib/common/src/abstractions/fileUpload.service.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","I18nService","PlatformUtilsService","ApiService","UserService","i18nService","transform","id","p1","p2","p3","this","I18nPipe","Pipe","MessagingService","CryptoService","el","renderer","title","ngOnInit","nativeElement","hasAttribute","setAttribute","A11yTitleDirective","Directive","selector","appA11yTitle","Input","validationService","ngOnChanges","changes","appApiAction","then","loading","response","e","showError","ApiActionDirective","CipherService","getResponseProperty","propertyName","exactName","Error","undefined","otherCasePropertyName","charAt","toUpperCase","toLowerCase","BaseResponse","type","calloutStyle","icon","CalloutComponent","Component","templateUrl","clickable","organizationId","logService","ConsoleLogService","newLineRegex","passwordFieldNames","usernameFieldNames","notesFieldNames","uriFieldNames","parseCsvOptions","encoding","skipEmptyLines","parseXml","doc","DOMParser","parseFromString","querySelector","parseCsv","header","options","parseOptions","assign","splitNewLine","join","trim","papa","parse","errors","forEach","row","warning","message","parseSingleRowCsv","rowData","isNullOrWhitespace","parsedRow","makeUriArray","uri","loginUri","LoginUriView","fixUri","match","u","indexOf","substring","nameFromUrl","url","hostname","Utils","getHostname","startsWith","replace","str","getValueOrDefault","defaultValue","split","getCardBrand","cardNum","re","RegExp","test","setCardExpiration","cipher","expiration","parts","month","year","substr","card","expMonth","expYear","moveFoldersToCollections","folderRelationships","collectionRelationships","collections","folders","map","f","collection","CollectionView","querySelectorDirectChild","parentEl","query","els","querySelectorAllDirectChild","Array","from","querySelectorAll","filter","parentNode","initLoginCipher","CipherView","favorite","notes","fields","login","LoginView","CipherType","Login","cleanupCipher","processKvp","FieldType","Text","search","field","FieldView","processFolder","folderName","folderIndex","hasFolder","addFolder","FolderView","ciphers","convertToNoteIfNeeded","username","password","uris","SecureNote","secureNote","SecureNoteView","SecureNoteType","Generic","BaseImporter","success","ImportResult","nodeURL","init","inited","isNode","process","release","isBrowser","isNativeScript","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","fromB64ToArray","Uint8Array","Buffer","binaryString","atob","bytes","charCodeAt","fromUrlB64ToArray","fromUrlB64ToB64","fromHexToArray","parseInt","fromUtf8ToArray","strUtf8","unescape","encodeURIComponent","arr","fromByteStringToArray","fromBufferToB64","buffer","toString","binary","byteLength","String","fromCharCode","btoa","fromBufferToUrlB64","fromB64toUrlB64","b64Str","fromBufferToUtf8","encodedString","decodeURIComponent","escape","fromBufferToByteString","fromBufferToHex","x","urlB64Str","output","fromUrlB64ToUtf8","fromB64ToUtf8","fromUtf8ToB64","utfStr","newGuid","Math","random","isGuid","uriString","getUrl","getHost","host","getDomain","httpUrl","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","domain","getQueryParams","Map","pair","set","getSortFunction","prop","a","b","collator","compare","localeCompare","nameOf","target","source","ipString","win","mobile","navigator","userAgent","vendor","opera","URL","hasProtocol","anchor","document","createElement","href","regexpEmojiPresentation","PolicyService","PasswordGenerationService","StateService","onClick","$event","preventDefault","StopClickDirective","HostListener","StorageService","CollectionService","condition","disableComplete","InputVerbatimDirective","appInputVerbatim","FolderService","stopPropagation","StopPropDirective","EnvironmentService","AuthService","SyncService","autofocus","focus","AutofocusDirective","appAutofocus","environmentUrlsKey","ConstantsService","disableGaKey","disableAddLoginNotificationKey","disableContextMenuItemKey","disableFaviconKey","disableBadgeCounterKey","disableAutoTotpCopyKey","enableAutoFillOnPageLoadKey","autoFillOnPageLoadDefaultKey","vaultTimeoutKey","vaultTimeoutActionKey","lastActiveKey","neverDomainsKey","installedVersionKey","localeKey","themeKey","collapsedGroupingsKey","autoConfirmFingerprints","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","defaultUriMatch","pinProtectedKey","protectedPin","clearClipboardKey","eventCollectionKey","ssoCodeVerifierKey","ssoStateKey","biometricUnlockKey","biometricText","biometricAwaitingAcceptance","biometricFingerprintValidated","disableChangedPasswordNotificationKey","EventService","indexedEntityId","SearchService","PasswordVerificationRequest","buildDomainModel","dataObj","alreadyEncrypted","notEncList","objProp","EncString","buildDataModel","notEncStringList","encryptedString","decryptObj","viewModel","orgId","promises","self","theProp","Promise","resolve","mapProp","decrypt","val","all","componentFactoryResolver","messagingService","ngOnDestroy","show","parentContainer","fade","setComponentParameters","factory","resolveComponentFactory","componentRef","container","createComponent","instance","modals","jq","modal","on","onShow","emit","send","onShown","find","onClose","onClosed","clear","close","ModalComponent","template","VaultTimeoutService","encryptedStringOrType","iv","mac","encType","encryptionType","headerPieces","encPieces","EncryptionType","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decryptedValue","containerService","bitwardenContainerService","cryptoService","getCryptoService","getOrgKey","decryptToUtf8","AuditService","cardholderName","code","_brand","_number","_subTitle","repeat","number","brand","count","exp","formatYear","CardView","CryptoFunctionService","TokenService","IconMap","environmentService","stateService","iconsUrl","baseUrl","imageEnabled","load","setLoginIcon","Card","Identity","hostnameUri","isWebsite","image","fallbackImage","IconComponent","BroadcasterService","Injectable","TwoFactorProviderType","PolicyType","TotpService","StripeElementStyle","base","color","fontFamily","fontSize","fontSmoothing","invalid","StripeElementClasses","empty","platformUtilsService","apiService","showMethods","showOptions","method","PaymentMethodType","hideBank","hidePaypal","hideCredit","bank","routing_number","account_number","account_holder_name","account_holder_type","currency","country","paymentMethodType","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","src","async","onload","Stripe","WebConstants","stripeLiveKey","elements","setStripeElement","btScript","PayPal","BankAccount","Credit","head","appendChild","removeChild","setTimeout","body","btStylesheet","changeMethod","braintree","dropin","authorization","isDev","btSandboxKey","btProductionKey","paymentOptionPriority","paypal","flow","buttonStyle","label","size","shape","createErr","console","error","createPaymentToken","reject","requestPaymentMethod","payload","nonce","catch","err","postSetupPayment","clientSecret","handleCardSetup","setupIntent","status","payment_method","createToken","token","handleStripeCardPayment","successCallback","paymentIntent","style","classes","placeholder","mount","PaymentComponent","folderId","organizationUseTotp","edit","viewPassword","identity","IdentityView","attachments","passwordHistory","collectionIds","revisionDate","deletedDate","reprompt","CipherRepromptType","None","localData","subTitle","hasAttachments","passwordRevisionDate","obj","externalId","readOnly","hidePasswords","Collection","OrganizationUserStatusType","ExportService","route","onCountryChanged","EventEmitter","taxInfo","taxId","line1","line2","city","state","postalCode","includeTaxId","pristine","parent","params","subscribe","getOrganizationTaxInfo","getTaxInfo","getTaxRates","taxRates","localTaxRate","rate","getTaxInfoRequest","request","OrganizationTaxInfoUpdateRequest","TaxInfoUpdateRequest","submitTaxInfo","hasChanged","putOrganizationTaxInfo","putTaxInfo","changeCountry","TaxInfoComponent","Output","middleName","address1","address2","address3","company","email","phone","ssn","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","address","addressPart2","totp","autofillOnPageLoad","hasUris","some","canLaunch","launchUri","SendService","CollectionData","userId","LoginData","SecureNoteData","CardData","IdentityData","FieldData","AttachmentData","ph","PasswordHistoryData","CipherData","SendType","toasterService","onAuthed","submit","masterPassword","popAsync","hashPassword","masterPasswordHash","formPromise","getTwoFactorRecover","Duo","OrganizationDuo","getTwoFactorOrganizationDuo","getTwoFactorDuo","Email","getTwoFactorEmail","WebAuthn","getTwoFactorWebAuthn","Authenticator","getTwoFactorAuthenticator","Yubikey","getTwoFactorYubiKey","TwoFactorVerifyComponent","Date","Attachment","Field","Password","encKey","model","reduce","promise","attachment","decAttachment","decField","decPh","toCipherData","toISOString","toLoginData","toSecureNoteData","toCardData","toIdentityData","toFieldData","toAttachmentData","toPasswordHistoryData","Cipher","PasswordRepromptService","showText","scoreWidth","score","text","PasswordStrengthComponent","items","searchText","prop1","prop2","prop3","SearchPipe","EventType","newField","showValue","lastKnownRevisionDate","LoginApi","LoginUriApi","SecureNoteApi","CardApi","IdentityApi","FieldApi","lastUsedDate","attachments2","fileName","attachmentRequest","AttachmentRequest","CipherRequest","identityResponse","errorModel","responseErrorModel","validationErrors","statusCode","getSingleMessage","getAllMessages","messages","item","prefix","lastSep","lastIndexOf","ErrorResponse","defaultErrorMessage","concat","showToast","timeout","ValidationService","router","activatedRoute","titleService","previousUrl","currentUrl","events","event","NavigationEnd","titleId","rawTitle","child","firstChild","snapshot","newTitle","setTitle","getPreviousUrl","setPreviousUrl","RouterService","KdfType","OrganizationUserType","policyService","getDefaultDateFilters","end","getFullYear","getMonth","getDate","setDate","start","toDateTimeLocalString","formatDateFilters","filterStart","filterEnd","isNaN","getTime","getEventInfo","ev","EventOptions","appInfo","getAppInfo","deviceType","getEventMessage","humanReadableMessage","appIcon","appName","msg","humanReadableMsg","User_LoggedIn","User_ChangedPassword","User_Updated2fa","User_Disabled2fa","User_Recovered2fa","User_FailedLogIn","User_FailedLogIn2fa","User_ClientExportedVault","Cipher_Created","Cipher_Updated","Cipher_Deleted","Cipher_SoftDeleted","Cipher_Restored","Cipher_AttachmentCreated","Cipher_AttachmentDeleted","Cipher_Shared","Cipher_ClientViewed","Cipher_ClientToggledPasswordVisible","Cipher_ClientToggledHiddenFieldVisible","Cipher_ClientToggledCardCodeVisible","Cipher_ClientCopiedHiddenField","Cipher_ClientCopiedPassword","Cipher_ClientCopiedCardCode","Cipher_ClientAutofilled","Cipher_UpdatedCollections","Collection_Created","Collection_Updated","Collection_Deleted","Group_Created","Group_Updated","Group_Deleted","OrganizationUser_Invited","OrganizationUser_Confirmed","OrganizationUser_Updated","OrganizationUser_Removed","OrganizationUser_UpdatedGroups","OrganizationUser_UnlinkedSso","OrganizationUser_ResetPassword_Enroll","OrganizationUser_ResetPassword_Withdraw","OrganizationUser_AdminResetPassword","Organization_Updated","Organization_PurgedVault","Policy_Updated","formatCipherId","getShortId","cipherId","formatCollectionId","collectionId","formatGroupId","groupId","formatOrgUserId","organizationUserId","formatPolicyId","getAll","policies","policy","policyId","DeviceType","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","WindowsDesktop","MacOsDesktop","LinuxDesktop","ChromeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","VivaldiBrowser","EdgeBrowser","IEBrowser","UnknownBrowser","shortId","cipherInfo","makeAnchor","outerHTML","innerHTML","date","pad","getHours","getMinutes","num","norm","floor","abs","EventInfo","macKey","keyB64","encKeyB64","macKeyB64","SymmetricCryptoKey","onUpdated","twoFactorProviderType","enabled","authed","auth","authResponse","enable","enableFunction","disable","showDialog","TwoFactorProviderRequest","putTwoFactorOrganizationDisable","putTwoFactorDisable","TwoFactorBaseComponent","userService","requiresPaid","hasLoaded","setCiphers","selectCipher","childComponent","cipherAddEditModalRef","organization","AddEditComponent","onSavedCipher","onDeletedCipher","onRestoredCipher","checkAccess","useTotp","canAccessPremium","accessPremium","CipherReportComponent","ViewContainerRef","ViewChild","read","static","CanLaunchWhitelist","_uri","_domain","_hostname","_host","_canLaunch","UriMatchType","RegularExpression","cipherService","folderService","auditService","collectionService","totpService","passwordGenerationService","eventService","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","viewOnly","passwordRevisionDisplayDate","cleanUp","totpUpdateCode","getTimeInterval","totpTick","totpInterval","setInterval","toggleFavorite","launch","copy","typeI18nKey","aType","copyToClipboard","editMode","collect","generatePassword","confirmed","getOptions","premiumRequired","upgradeOrganization","viewHistory","clearInterval","getCode","totpCode","half","totpCodeFormatted","allowOwnershipAssignment","cloneMode","ownershipOptions","allowPersonal","intervalSeconds","epoch","round","mod","totpSec","totpDash","totpLow","ImportService","AttachmentResponse","h","PasswordHistoryResponse","CipherResponse","searchService","passwordRepromptService","showAddNew","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","cipherType","userHasPremiumAccess","pageSize","selectAll","repromptCipher","share","clone","delete","actionPromise","permanent","isDeleted","deleteCipher","refresh","restore","restoreWithServer","protectedFields","includes","displayTotpCopyButton","select","selectCount","checkCipher","checked","getSelected","getSelectedIds","hasTotp","deleteWithServer","softDeleteWithServer","showFixOldAttachments","hasOldAttachments","showPasswordPrompt","CiphersComponent","HashPurpose","publicKey","encryptedPrivateKey","KeysRequest","PolicyData","TwoFactorProviders","description","priority","sort","premium","tokenService","appIdService","vaultTimeoutService","setCryptoKeys","selectedTwoFactorProviderType","logIn","makePreloginKey","hashedPassword","LocalAuthorization","localHashedPassword","logInHelper","logInSso","codeVerifier","redirectUrl","logInApiKey","clientId","logInTwoFactor","twoFactorProvider","twoFactorToken","remember","localMasterPasswordHash","ssoRedirectUrl","logInComplete","logInSsoComplete","logInApiKeyComplete","logOut","callback","getSupportedTwoFactorProviders","providers","twoFactorProvidersData","has","supportsDuo","supportsWebAuthn","getDefaultTwoFactorProvider","webAuthnSupported","providerType","providerPriority","provider","kdf","kdfIterations","postPrelogin","PreloginRequest","preloginResponse","makeKey","authingWithApiKey","authingWithSso","authingWithPassword","getTwoFactorToken","storedTwoFactorToken","getAppId","appId","deviceRequest","DeviceRequest","emailPassword","codeCodeVerifier","clientIdClientSecret","TokenRequest","Remember","postIdentityToken","clearState","AuthResult","twoFactor","accessToken","twoFactorResponse","twoFactorProviders2","twoFactorProviders","tokenResponse","resetMasterPassword","setTwoFactorToken","setTokens","refreshToken","setInformation","getUserId","getEmail","setKey","setKeyHash","setEncKey","privateKey","makeKeyPair","keyPair","postAccountKeys","setEncPrivateKey","biometricLocked","SelectionReadOnlyRequest","SettingsService","PlanType","syncService","showFree","showCancel","product","ProductType","Free","plan","onSuccess","onCanceled","selfHosted","ownedBusiness","premiumAccessAddon","additionalStorage","additionalSeats","productTypes","singleOrgPolicyBlock","freeTrial","isSelfHost","getPlans","plans","Enterprise","Teams","selectedPlan","isAnnual","validPlans","Custom","canBeUsedByBusiness","legacyYear","disabled","additionalStoragePriceMonthly","additionalStoragePricePerGb","seatPriceMonthly","seatPrice","additionalStorageTotal","hasAdditionalStorageOption","seatTotal","hasAdditionalSeatsOption","subTotal","basePrice","hasPremiumAccessOption","premiumAccessOptionPrice","taxComponent","taxRate","subtotal","taxCharges","changedProduct","selectablePlans","baseSeats","trialPeriodDays","changedOwnedBusiness","TeamsAnnually","changedCountry","paymentComponent","cancel","userHasBlockingSingleOrgPolicy","doSubmit","createOrganization","makeShareKey","shareKey","encrypt","collectionCt","orgKeys","createSelfHosted","createCloudHosted","updateOrganization","refreshIdentityToken","fullSync","navigate","SingleOrg","getAllOrganizations","orgs","orgsWithSingleOrgPolicy","org","Owner","Admin","Invited","OrganizationUpgradeRequest","businessName","additionalStorageGb","planType","billingAddressCountry","billingAddressPostalCode","getOrganization","hasPublicAndPrivateKeys","orgShareKey","keys","OrganizationKeysRequest","postOrganizationUpgrade","paymentIntentClientSecret","OrganizationCreateRequest","collectionName","billingEmail","tokenResult","paymentToken","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","postOrganization","fileEl","getElementById","files","fd","FormData","append","postOrganizationLicense","postOrganizationKeys","OrganizationPlansComponent","LoginUri","view","toLoginUriData","LoginUriData","elementRef","trueValue","falseValue","propagateChange","_","onHostChange","writeValue","setProperty","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","TrueFalseValueDirective","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","SelectionReadOnlyResponse","organizations","emailVerified","masterPasswordHint","culture","twoFactorEnabled","securityStamp","ProfileOrganizationResponse","ProfileResponse","storageService","onSearchTextChanged","searchPlaceholder","searchTextChanged","GroupingsComponent","selectType","usePolicies","useGroups","useDirectory","useEvents","use2fa","useApi","useBusinessPortal","useSso","useResetPassword","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","ssoBound","identifier","permissions","resetPasswordEnrolled","Confirmed","Manager","isAdmin","accessBusinessPortal","accessEventLogs","accessImportExport","accessReports","manageAllCollections","isManager","manageAssignedCollections","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","Organization","sizeName","SendFileView","hidden","SendTextView","vault","loaded","ResetPassword","allowEnrollmentChanges","autoEnrollEnabled","showEnrolledStatus","unlinkSso","deleteSsoUser","leave","postLeaveOrganization","toggleResetPasswordEnrollment","keyString","toastStringRef","getOrganizationKeys","getEncKey","rsaEncrypt","encryptedKey","OrganizationUserResetPasswordEnrollmentRequest","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","OrganizationsComponent","getName","lock","NavbarComponent","getApplicationVersion","version","FooterComponent","Policy","getMasterPasswordPolicyOptions","enforcedPolicyOptions","getPasswordScoreAlertDisplay","minComplexity","strongPassword","setupSubmitActions","getKdf","getKdfIterations","makeEncKey","remakeEncKey","performSubmitActions","masterPasswordRetype","strengthResult","passwordStrength","getPasswordStrengthUserInput","evaluateMasterPassword","updatePasswordStrength","masterPasswordStrengthTimeout","clearTimeout","masterPasswordScore","userInput","atPosition","ChangePasswordComponent","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","allUsers","loadUsers","getOrganizationUsers","users","entity","getGroupUsers","entityId","user","getCollectionUsers","accessAll","check","selectedChanged","filterSelected","selections","putGroupUsers","putCollectionUsers","EntityUsersComponent","entityName","ids","OrganizationUserBulkRequest","showUser","orgUsersUserIdMap","orgUsersIdMap","defaultDates","loadEvents","clearExisting","refreshPromise","morePromise","dates","getEventsOrganizationUser","continuationToken","getEventsCipher","actingUserId","eventInfo","userName","userEmail","ip","ipAddress","EntityEventsComponent","manageCiphers","PermissionsApi","postKey","apiKey","keyType","ApiKeyComponent","postPurgeCiphers","PurgeVaultComponent","firstLoaded","showAdjustPayment","showAddCredit","transactionType","TransactionType","getOrganizationBilling","billing","getUserBilling","verifyBank","VerifyBankRequest","amount1","verifyAmount1","amount2","verifyAmount2","verifyBankPromise","postOrganizationVerifyBank","addCredit","paymentSourceInApp","closeAddCredit","changePayment","closePayment","balance","paymentSource","AppleInApp","GoogleInApp","invoices","transactions","UserBillingComponent","onAdded","ppButtonFormAction","buttonActionProduction","ppButtonBusinessId","businessIdProduction","ppLoading","buttonActionSandbox","businessIdSandbox","creditAmount","ppButtonCustomField","subject","returnUrl","location","ppButtonFormRef","BitPay","req","BitPayInvoiceRequest","credit","amount","creditAmountNumber","postBitPayInvoice","bitPayUrl","formatAmount","floatAmount","parseFloat","toFixed","AddCreditComponent","ElementRef","onAdjusted","PaymentRequest","taxInfoComponent","postAccountPayment","postOrganizationPayment","AdjustPaymentComponent","currentType","updatePromise","postAccountLicense","postOrganizationLicenseUpdate","UpdateLicenseComponent","storageGbPrice","add","interval","storageAdjustment","StorageRequest","storageGbAdjustment","action","postAccountStorage","postOrganizationStorage","relativeTo","AdjustStorageComponent","processResponse","UpdateTwoFactorDuoRequest","integrationKey","ikey","secretKey","skey","putTwoFactorOrganizationDuo","putTwoFactorDuo","TwoFactorDuoComponent","showPolicyWarning","filterProvider","getTwoFactorProviders","evaluatePolicies","manage","openModal","authenticatorModalRef","TwoFactorAuthenticatorComponent","updateStatus","yubikeyModalRef","TwoFactorYubiKeyComponent","duoModalRef","emailModalRef","TwoFactorEmailComponent","webAuthnModalRef","TwoFactorWebAuthnComponent","recoveryCode","recoveryModalRef","TwoFactorRecoveryComponent","ref","TwoFactorAuthentication","TwoFactorSetupComponent","exportService","saved","ExportComponent","exposedPasswordMap","getAllCiphers","allCiphers","exposedPasswordCiphers","passwordLeaked","exposedCount","getAllDecrypted","canManageCipher","ExposedPasswordsReportComponent","originalCipher","canManageAllCollections","loadCollections","loadCipher","getCipherAdmin","encryptCipher","saveCipher","putCipherAdmin","CipherCreateRequest","postCipherAdmin","deleteCipherAdmin","putDeleteCipherAdmin","AttachmentView","orgKey","decryptToBytes","decValue","PasswordHistoryView","importService","format","successNavigate","setImportOptions","importOptions","importer","getImporter","fileContents","getFileContents","content","import","getFormatInstructionTitle","results","featuredImportOptions","regularImportOptions","fire","heightAuto","buttonsStyling","iconHtml","input","inputValue","inputAttributes","titleText","showConfirmButton","confirmButtonText","onOpen","popupEl","scrollTo","file","reader","FileReader","readAsText","evt","pre","textContent","onerror","ImportComponent","services","cipherDocs","load2fa","fetch","Request","json","categoryName","responseJson","serviceName","category","service","InactiveTwoFactorReportComponent","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","ReusedPasswordsReportComponent","unsecuredCiphers","UnsecuredWebsitesReportComponent","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","cacheKey","scoreKey","WeakPasswordsReportComponent","reupload","reuploadCipherAttachment","AttachmentsComponent","CollectionResponse","CollectionDetailsResponse","groups","g","CollectionGroupDetailsResponse","globalEquivalentDomains","equivalentDomains","GlobalDomainResponse","DomainsResponse","FolderResponse","accessId","maxAccessCount","accessCount","expirationDate","deletionDate","hideEmail","SendTextApi","SendFileApi","SendResponse","onEventsClicked","accessEvents","getAllFromApiForOrganization","indexCiphers","applyFilter","deleted","CollectionsComponent","getCollections","collectionDomains","decryptMany","unassignedCollection","getAllNested","nestedCollections","collapse","grouping","isCollapsed","bulkDelete","promptPassword","selectedIds","ciphersComponent","bulkDeleteModalRef","BulkDeleteComponent","cipherIds","onDeleted","bulkRestore","bulkRestoreModalRef","BulkRestoreComponent","onRestored","bulkShare","selectedCiphers","bulkShareModalRef","BulkShareComponent","onShared","bulkMove","bulkMoveModalRef","BulkMoveComponent","onMoved","notProtected","BulkActionsComponent","SendFile","SendText","CipherWithIdRequest","folder","FolderRequest","onCopy","copyText","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","SelectCopyDirective","passwordArray","colorizedPassword","character","isSpecial","ColorPasswordPipe","FolderData","Folder","NotificationsService","webpackEmptyAsyncContext","classList","remove","FrontendLayoutComponent","BroadcasterSubscriptionId","broadcasterService","ngZone","businessUrl","enterpriseUrl","run","command","unsubscribe","goToBusinessPortal","businessTokenPromise","getEnterprisePortalSignInToken","showManageTab","showToolsTab","isOwner","canManageUsers","canManageAssignedCollections","canManageGroups","canManagePolicies","canAccessEventLogs","canAccessImportExport","canAccessReports","canAccessBusinessPortal","OrganizationLayoutComponent","UserLayoutComponent","requiredParameters","failedShortMessage","failedMessage","authedHandler","qParams","EmergencyAccessAcceptRequest","postEmergencyAccessAccept","toast","unauthedHandler","AcceptEmergencyComponent","BaseAcceptComponent","fired","queryParams","errorMessage","isAuthenticated","save","getRedirectRoute","urlTree","parseUrl","OrganizationUserAcceptRequest","performResetPasswordAutoEnroll","postOrganizationUserAccept","resetRequest","orgName","organizationName","policyList","getPoliciesByToken","mapPoliciesFromToken","getResetPasswordPolicyOptions","AcceptOrganizationComponent","HintComponent","routerService","onSuccessfulSubmit","successRoute","LockComponent","togglePassword","authService","cryptoFunctionService","showResetPasswordAutoEnrollWarning","onSuccessfulLoginNavigate","goAfterLogIn","queryParamsSub","invite","loginRedirect","LoginComponent","DeleteRecoverRequest","postAccountRecoverDelete","RecoverDeleteComponent","TwoFactorRecoveryRequest","postTwoFactorRecover","RecoverTwoFactorComponent","showCreateOrgMessage","layout","referenceData","ReferenceEventRequest","reference","cookie","pop","policiesData","RegisterComponent","SetPasswordComponent","IdentifierStorageKey","redirectUri","origin","storedIdentifier","SsoComponent","loggingIn","twoFactorRoute","changePasswordRoute","checkState","getOrgIdentiferFromState","codeChallenge","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidate","buildAuthorizeUrl","authorizeUrl","sameWindow","preValidateSso","passwordOptions","uppercase","lowercase","numbers","special","hash","codeVerifierHash","identityBaseUrl","getSsoUserIdentifier","userIdentifier","orgIdFromState","onSuccessfulLoginTwoFactorNavigate","sso","onSuccessfulLoginChangePasswordNavigate","disableFavicon","onSuccessfulLogin","stateSplit","checkStateSplit","anotherMethod","twoFactorOptionsModal","TwoFactorOptionsComponent","onProviderSelected","selectedProviderType","onRecoverSelected","TwoFactorComponent","recover","TwoFactorEmailRequest","postAccountVerifyEmailToken","VerifyEmailRequest","VerifyEmailTokenComponent","VerifyDeleteRecoverRequest","postAccountRecoverDeleteToken","VerifyRecoverDeleteComponent","didScroll","pagedCollectionsCount","getUserCollections","resetPaging","loadMore","pagedLength","pagedCollections","pagedSize","addEditModalRef","CollectionAddEditComponent","onSavedCollection","onDeletedCollection","removeCollection","deleteCollection","usersModalRef","isSearching","isSearchable","isPaging","searching","index","accessGroups","getGroups","groupsResponse","getCollectionDetails","group","CollectionRequest","putCollection","postCollection","deletePromise","dirtyDates","exportEvents","appApiPromiseUnfulfilled","parseDates","exportPromise","export","loadAndParseEvents","getEventExport","getFileName","saveFile","startDate","endDate","getEventsOrganization","EventView","EventsComponent","pagedGroupsCount","pagedGroups","GroupAddEditComponent","onSavedGroup","onDeletedGroup","removeGroup","deleteGroup","GroupsComponent","access","getGroupDetails","GroupRequest","putGroup","postGroup","accessPolicies","ManageComponent","searchPipe","statusMap","canResetPassword","orgUseResetPassword","orgHasKeys","orgResetPasswordPolicyEnabled","callingUserType","pagedUsersCount","canManageUsersPassword","viewEvents","allowResetPassword","orgUser","callingUserHasPermission","pagedUsers","Accepted","confirmedCount","acceptedCount","UserAddEditComponent","onSavedUser","onDeletedUser","removeUser","groupsModalRef","UserGroupsComponent","deleteOrganizationUser","reinvite","postOrganizationUserReinvite","bulkRemove","bulkRemoveModalRef","BulkRemoveComponent","getCheckedUsers","bulkReinvite","filteredUsers","postManyOrganizationUserReinvite","showBulkStatus","bulkConfirm","bulkConfirmModalRef","BulkConfirmComponent","confirm","confirmUser","doConfirmation","mapIndex","updateUser","autoConfirm","confirmModalRef","UserConfirmComponent","onConfirmedUser","getUserPublicKey","publicKeyResponse","log","getFingerprint","eventsModalRef","resetPassword","resetPasswordModalRef","ResetPasswordComponent","onPasswordReset","checkUser","successfullMessage","bulkStatusModalRef","BulkStatusComponent","OrganizationUserConfirmRequest","postOrganizationUserConfirm","PeopleComponent","publicKeys","fingerprints","statuses","done","excludedUsers","postOrganizationUsersPublicKey","entry","fingerprint","userIdsWithKeys","OrganizationUserBulkConfirmRequest","postOrganizationUserBulkConfirm","deleteManyOrganizationUsers","newPassword","showPassword","getOrganizationUserResetPasswordDetails","kdfType","orgSymKey","decPrivateKey","rsaDecrypt","userEncKey","newKey","newPasswordHash","newEncKey","OrganizationUserResetPasswordRequest","newMasterPasswordHash","putOrganizationUserResetPassword","newPasswordStrengthTimeout","User","showCustom","getOrganizationUser","setRequestPermissions","clearPermissions","handleDependentPermissions","OrganizationUserUpdateRequest","putOrganizationUser","OrganizationUserInviteRequest","emails","postOrganizationUserInvite","dontAskAgain","getOrganizationUserGroups","userGroups","ug","OrganizationUserUpdateGroupsRequest","groupIds","putOrganizationUserGroups","userCanAccessBusinessPortal","policiesEnabledMap","display","MasterPassword","PasswordGenerator","RequireSso","PersonalOwnership","DisableSend","SendOptions","policyIdFromEvents","orgPolicies","orgPolicy","getPolicies","op","editModalRef","PolicyEditComponent","onSavedPolicy","goToEnterprisePortal","enterpriseTokenPromise","PoliciesComponent","AppIdService","LogService","policyType","masterPassMinComplexity","passwordScores","defaultTypes","getPolicy","passGenDefaultType","defaultType","passGenMinLength","minLength","passGenUseUpper","useUpper","passGenUseLower","useLower","passGenUseNumbers","useNumbers","passGenUseSpecial","useSpecial","passGenMinNumbers","minNumbers","passGenMinSpecial","minSpecial","passGenMinNumberWords","minNumberWords","passGenCapitalize","capitalize","passGenIncludeNumber","includeNumber","masterPassMinLength","masterPassRequireUpper","requireUpper","masterPassRequireLower","requireLower","masterPassRequireNumbers","requireNumbers","masterPassRequireSpecial","requireSpecial","sendDisableHideEmail","disableHideEmail","resetPasswordAutoEnroll","PolicyRequest","putPolicy","canUseApi","OrganizationUpdateRequest","putOrganization","taxFormPromise","deleteOrganization","deleteModalRef","DeleteOrganizationComponent","purgeVault","purgeModalRef","viewApiKey","apiKeyModalRef","postOrganizationApiKey","scope","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKey","rotateApiKeyModalRef","isRotation","postOrganizationRotateApiKey","AccountComponent","OrganizationBillingComponent","stripeTestKey","adjustSeatsAdd","showAdjustSeats","adjustStorageAdd","showAdjustStorage","showUpdateLicense","showDownloadLicense","showChangePlan","getOrganizationSubscription","sub","reinstate","reinstatePromise","postOrganizationReinstate","cancelPromise","postOrganizationCancel","changePlan","subscription","closeChangePlan","changed","downloadLicense","closeDownloadLicense","updateLicense","closeUpdateLicense","updated","adjustSeats","closeSeats","adjustStorage","closeStorage","cancelled","cancelAtEndDate","upcomingInvoice","storageGb","storagePercentage","OrganizationSubscriptionComponent","onChanged","defaultUpgradePlan","FamiliesAnnually","defaultUpgradeProduct","Families","ChangePlanComponent","onDownloaded","installationId","getOrganizationLicense","license","licenseString","JSON","stringify","DownloadLicenseComponent","seatAdjustment","SeatRequest","postOrganizationSeat","AdjustSeatsComponent","access2fa","SettingsComponent","duoComp","getTwoFactorOrganizationProviders","qrScript","UpdateTwoFactorAuthenticatorRequest","putTwoFactorAuthenticator","QRious","element","sendEmail","emailPromise","postTwoFactorEmailSetup","sentEmail","UpdateTwoFactorEmailRequest","putTwoFactorEmail","print","w","open","write","onafterprint","formatString","keyIdAvailable","keysConfiguredCount","webAuthnResponse","UpdateTwoFactorWebAuthnRequest","deviceResponse","putTwoFactorWebAuthn","removePromise","UpdateTwoFactorWebAuthnDeleteRequest","deleteTwoFactorWebAuthn","readKey","challengePromise","getTwoFactorWebAuthnChallenge","challenge","readDevice","webAuthnChallenge","resetWebAuthn","credentials","webAuthnListening","webAuthnError","listening","k","configured","migrated","nfc","UpdateTwoFactorYubioOtpRequest","key1","key2","key3","key4","key5","putTwoFactorYubiKey","disablePromise","existingKey","padRight","max","getExportData","getOrganizationExport","collectEvent","manageableCiphers","onError","appFallbackSrc","FallbackSrcDirective","ToolsComponent","changeDetectorRef","trashCleanupWarning","groupingsComponent","successfully","detectChanges","selectedAll","reload","selectedTrash","filterDeleted","selectedType","filterCipherType","selectedCollectionId","filterCollection","clearGroupingFilters","clearFilters","go","filterSearchText","editCipherAttachments","attachmentsModalRef","madeAttachmentChanges","onUploadedAttachment","onDeletedAttachment","editCipherCollections","collectionsModalRef","onSavedCollections","addCipher","component","editCipher","cloneCipher","replaceUrl","VaultComponent","saveCipherAttachment","saveAttachmentWithServer","cipherDomain","deleteCipherAttachment","attachmentId","deleteCipherAttachmentAdmin","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","download","downloading","canAccessAttachments","getAttachmentData","attachmentDownloadResponse","cache","arrayBuffer","buf","decryptFromBytes","decBuf","hasEncKey","admin","saveAttachmentRawWithServer","foundAttachment","a2","deleteAttachmentWithServer","Window","domains","excluded","access_token","expiresIn","expires_in","refresh_token","tokenType","token_type","IdentityTokenResponse","IdentityTwoFactorResponse","KeysResponse","dr","ListResponse","sends","profile","PolicyResponse","SyncResponse","allowSelectNone","loadCipherCollections","saveCollections","CipherCollectionsRequest","putCipherCollectionsAdmin","deleteCiphers","deleteCiphersAdmin","deleteManyWithServer","softDeleteManyWithServer","deleteRequest","CipherBulkDeleteRequest","deleteManyCiphersAdmin","putDeleteManyCiphersAdmin","moveManyWithServer","restoreManyWithServer","nonShareableCount","shareableCiphers","writeableCollections","allCollections","filterCollections","checkedCollectionIds","shareManyWithServer","sendType","passwordRequired","unavailable","maskedText","creatorIdentifier","sendId","decKey","getSendFileDownloadData","accessRequest","downloadData","toggleText","keyArray","SendAccessRequest","pbkdf2","passwordHash","sendResponse","postSendAccess","sendAccess","SendAccess","makeSendKey","AccessComponent","sendService","addSend","disableSend","editSend","sendAddEditModalRef","onSavedSend","onDeletedSend","SendComponent","datePipe","copyLinkToClipboard","link","SendView","deauthorizeSessions","deauthModalRef","DeauthorizeSessionsComponent","deleteAccount","DeleteAccountComponent","viewUserApiKey","viewUserApiKeyModalRef","postUserApiKey","rotateUserApiKey","rotateUserApiKeyModalRef","postUserRotateApiKey","postSecurityStamp","getProfile","UpdateProfileRequest","putProfile","ProfileComponent","tokenSent","newEmail","EmailTokenRequest","postEmailToken","EmailRequest","postEmail","reset","ChangeEmailComponent","rotateEncKey","rotateEncKeyClicked","currentMasterPassword","PasswordRequest","postPassword","updateKey","getPrivateKey","encPrivateKey","UpdateKeyRequest","FolderWithIdRequest","postAccountKey","updateEmergencyAccesses","updateAllResetPasswordKeys","getEmergencyAccessTrusted","emergencyAccess","allowedStatuses","EmergencyAccessStatusType","RecoveryInitiated","RecoveryApproved","filteredAccesses","details","granteeId","updateRequest","EmergencyAccessUpdateRequest","waitTimeDays","keyEncrypted","putEmergencyAccess","PBKDF2_SHA256","kdfOptions","KdfRequest","postAccountKdf","ChangeKdfComponent","orgPlansComponent","EnterpriseAnnually","CreateOrganizationComponent","custom","getSettingsDomains","toggleExcluded","globalDomain","customize","UpdateDomainsRequest","excludedGlobalEquivalentDomains","d2","putSettingsDomains","indexTrackBy","DomainRulesComponent","vaultTimeout","vaultTimeoutAction","vaultTimeouts","localeOptions","supportedTranslationLocales","locale","localeNames","disableIcons","enableGravatars","enableFullWidth","startingLocale","setVaultTimeoutOptions","vaultTimeoutActionChanged","newValue","OptionsComponent","ngAfterContentInit","LinkSsoComponent","premiumPrice","getPremium","getEmailVerified","finalizePremium","postPremium","paymentResponse","PremiumComponent","getUserSubscription","usingInAppPurchase","postReinstatePremium","postCancelPremium","UserSubscriptionComponent","breachedAccounts","checkedUsername","BreachReportComponent","history","historyModalRef","PasswordGeneratorHistoryComponent","lengthChanged","minNumberChanged","minSpecialChanged","PasswordGeneratorComponent","regenerate","favorites","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","organizationsComponent","selectedFavorites","filterFavorites","selectedFolder","selectedFolderId","filterFolder","shareCipher","shareModalRef","ShareComponent","onSharedCipher","folderAddEditModalRef","FolderAddEditComponent","onSavedFolder","loadFolders","editFolder","onDeletedFolder","updateKeyModalRef","UpdateKeyComponent","makeRequest","getKey","postAccountVerifyEmail","VerifyEmailComponent","canActivate","OrganizationGuardService","Permissions","AccessBusinessPortal","AccessEventLogs","AccessImportExport","AccessReports","ManageAllCollections","ManageAssignedCollections","ManageGroups","ManageOrganization","ManagePolicies","ManageUsers","ManageUsersPassword","OrganizationTypeGuardService","routerState","isLocked","promptBiometric","AuthGuardService","homepage","LockGuardService","UnauthGuardService","EmergencyAddEditComponent","postEmergencyAccessView","viewAttachments","EmergencyAccessAttachmentsComponent","decCiphers","oldKeyBuffer","oldEncKey","cipherResponse","cipherData","getLocaleSortingFunction","EmergencyAccessViewComponent","EncryptedObject","EnvironmentUrls","GeneratedPasswordHistory","emergencyAccessType","EmergencyAccessType","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","getEmergencyAccessGranted","grantedContacts","EmergencyAccessAddEditComponent","onSaved","contact","postEmergencyAccessReinvite","EmergencyAccessConfirmComponent","onConfirmed","deleteEmergencyAccess","EmergencyAccessGranteeDetailsResponse","removeGrantee","removeGrantor","requestAccess","postEmergencyAccessInitiate","approve","View","postEmergencyAccessApprove","postEmergencyAccessReject","takeover","EmergencyAccessTakeoverComponent","takeoverModalRef","onDone","EmergencyAccessConfirmRequest","postEmergencyAccessConfirm","EmergencyAccessComponent","creationDate","grantorId","EmergencyAccessGrantorDetailsResponse","EmergencyAccessTakeoverResponse","EmergencyAccessViewResponse","waitTimes","getEmergencyAccess","waitTime","EmergencyAccessInviteRequest","postEmergencyAccessInvite","getEmergencyGrantorPolicies","policyResponse","postEmergencyAccessTakeover","takeoverResponse","EmergencyAccessPasswordRequest","postEmergencyAccessPassword","settingsService","sanitizer","notificationsService","toasterConfig","ToasterConfig","showCloseButton","mouseoverTimerStop","animation","limit","lastActivity","idleTimer","isIdle","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","updateConnection","expired","setFullWidth","uploadEvents","clearEvents","setLastSync","clearToken","clearKeys","purge","clearIndex","now","idleStateChanged","sanitize","SecurityContext","HTML","bodyOutputType","BodyOutputType","TrustedHtml","trustedHtml","disconnectFromInactivity","reconnectFromActivity","AppComponent","logoutCallback","customUserAgent","urlsSet","isWebClient","isDesktopClient","usingBaseUrl","device","getDevice","setUrls","urls","apiBaseUrl","eventsBaseUrl","api","headers","Headers","alterIdentityTokenHeaders","qsStringify","toIdentityToken","identityClientId","getCredentials","isJsonResponse","TwoFactorProviders2","clearTwoFactorToken","doRefreshToken","BillingResponse","SubscriptionResponse","TaxInfoResponse","PreloginResponse","setPassword","getAccountRevisionDate","postPasswordHint","postRegister","PaymentResponse","postIapCheck","postAccountVerifyPassword","ApiKeyResponse","getFolder","postFolder","putFolder","deleteFolder","getSend","apiUrl","addSendIdHeader","SendAccessResponse","SendFileDownloadDataResponse","getSends","postSend","postFileTypeSend","SendFileUploadDataResponse","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCiphersOrganization","postCipher","postCipherCreate","putCipher","deleteManyCiphers","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","path","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteManyCiphers","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","AttachmentUploadDataResponse","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","deleteCollectionUser","GroupDetailsResponse","GroupResponse","deleteGroupUser","OrganizationUserDetailsResponse","OrganizationUserUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","OrganizationUserBulkResponse","OrganizationUserBulkPublicKeyResponse","PlanResponse","postImportDirectory","postPublicImportDirectory","TaxRateResponse","getSync","TwoFactorProviderResponse","TwoFactorAuthenticatorResponse","TwoFactorEmailResponse","TwoFactorDuoResponse","TwoFactorYubiKeyResponse","TwoFactorWebAuthnResponse","ChallengeResponse","TwoFactorRecoverResponse","rawId","extensions","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","postTwoFactorEmail","OrganizationResponse","OrganizationSubscriptionResponse","OrganizationKeysResponse","getEvents","addEventParameters","EventResponse","postEventsCollect","getActiveBearerToken","authHeader","UserKeyResponse","getHibpBreach","BreachAccountResponse","getToken","tokenNeedsRefresh","nativeFetch","handleError","getRefreshToken","decodedToken","decodeToken","grant_type","client_id","hasResponse","alterHeaders","requestInit","tokenError","isTextResponse","Message","typeHeader","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","nameLocalizationKey","descriptionLocalizationKey","baseStorageGb","maxUsers","maxAdditionalSeats","maxAdditionalStorage","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","storageName","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","BillingSubscriptionItemResponse","quantity","KeyResponse","attestation","authenticatorSelection","excludeCredentials","pubKeyCredParams","rp","makeAndGetAppId","getAnonymousAppId","existingId","guid","hashBytes","hashStart","hashEnding","leakedHashes","v","throttle","Keys","DomainMatchBlacklist","Set","fileUploadService","sortedCiphersCache","SortedCiphersCache","sortCiphersByLastUsed","_decryptedCipherCache","clearCache","decryptedCipherCache","existingCipher","hasFields","existingHiddenFields","Hidden","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encryptField","encField","fieldModel","Boolean","phModels","encPhs","encryptPasswordHistory","encPh","phModel","hasKey","getAllDecryptedForGrouping","groupingId","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","matches","eqDomain","matchingDomains","Domain","domainUrlHost","Host","urlHost","Exact","StartsWith","Never","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedIndex","updateLastUsedDate","ciphersLocalData","cached","updateLastLaunchedDate","lastLaunched","saveNeverDomain","saveWithServer","upsert","shareWithServer","attachmentPromises","shareAttachmentWithServer","encCipher","CipherShareRequest","encCiphers","CipherBulkShareRequest","unencryptedFile","readAsArrayBuffer","cData","filename","encFileName","dataEncKey","encryptToBytes","encData","fileSize","adminRequest","uploadDataResponse","cipherMiniResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","blob","Blob","filepath","contentType","saveCollectionsWithServer","CipherBulkMoveRequest","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","softDelete","setDeletedDate","clearDeletedDate","constructor","CipherBulkRestoreRequest","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","isCached","addCiphers","getLastLaunched","getLastUsed","getNext","sequentialize","propertyKey","descriptor","originalMethod","caches","getCache","argsCacheKey","args","onFinally","decryptedCollectionCache","decCollections","nodes","collectionCopy","ServiceUtils","nestedTraverse","getNested","getTreeNodeObject","nodeTree","partIndex","delimiter","partName","node","TreeNode","children","newPartName","attachToWindow","attachToGlobal","ContainerService","encOrgKeys","keyHash","secureStorageService","platformUtilService","storeKey","setOrgKeys","keySuffix","getKeyFromStorage","symmetricKey","retrieveKeyFromStorage","validateKey","getKeyHash","compareAndUpdateKeyHash","storedKeyHash","localKeyHash","ServerAuthorization","serverKeyHash","encKeyCipher","decEncKey","stretchKey","getPublicKey","rsaExtractPublicKey","keyFingerprint","hkdfExpand","userFingerprint","hashPhrase","getOrgKeys","hasKeyInMemory","hasKeyStored","clearKey","clearSecretStorage","legacyEtmKey","clearStoredKey","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","clearOrgKeys","clearPinProtectedKey","toggleKey","salt","makeKeyFromPin","pin","protectedKeyCs","makePinKey","pinKey","randomBytes","rsaGenerateKeyPair","publicB64","privateEnc","keyMaterial","hkdf","sendKey","hashPurpose","iterations","getKeyForEncryption","theKey","buildEncKey","plainValue","plainBuf","aesEncrypt","encObj","encValue","macLen","encBytes","EncArrayBuffer","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","aesDecryptToBytes","decipher","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","biometricUnlock","supportsSecureStorage","macData","hmac","keyForEnc","resolveLegacyKey","fastParams","aesDecryptFastParameters","hmacFast","computedMac","compareFast","aesDecryptFast","aesDecrypt","minimumEntropy","entropyPerWord","EEFLongWordList","numWords","hashArr","entropyAvailable","phrase","hashNumber","bigInt","fromArray","remainder","divide","encKeyEnc","getWebVaultUrl","webVaultUrl","setUrlsFromStorage","urlsObj","icons","notifications","webVault","enterprise","envUrls","identityUrl","notificationsUrl","eventsUrl","formatUrl","decryptedFolderCache","decFolders","noneFolder","folderCopy","cId","updates","systemLanguage","localesDirectory","getLocalesJson","defaultMessages","localeMessages","translationLocale","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","replaceToken","replaceContent","DefaultOptions","ambiguous","minNumber","minUppercase","minLowercase","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","optionsCache","enforcePasswordGeneratorPoliciesOnOptions","enforcedOptions","getPasswordGeneratorPolicyOptions","useUppercase","useLowercase","numberCount","specialCount","PasswordGeneratorPolicyOptions","currentPolicy","saveOptions","getHistory","encrypted","decryptHistory","addHistory","currentHistory","matchesPrevious","unshift","encryptHistory","newHistory","userInputs","globalUserInputs","finalUserInputs","zxcvbn","normalizeOptions","decrypted","array","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","settingsCache","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","settings","syncInProgress","getLastSync","lastSync","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","syncUpsertFolder","notification","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","syncDeleteCipher","syncUpsertSend","localSend","remoteSend","SendData","syncDeleteSend","getSecurityStamp","stamp","setSecurityStamp","setEmailVerified","OrganizationData","replaceOrganizations","SendTextData","File","SendFileData","setToken","setRefreshToken","skipTokenStorage","toggleTokens","decoded","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","valueOf","minutes","email_verified","getIssuer","iss","B32Chars","SteamChars","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","timeHex","leftPad","decToHex","timeBytes","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","isAutoCopyEnabled","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","clearOrganizations","lockedCallback","loggedOutCallback","everBeenUnlocked","checkOnInterval","startCheck","checkVaultTimeout","isViewOpen","lockTimeout","lastActive","vaultTimeoutSeconds","allowSoftLock","isPinLockSet","isBiometricLockSet","timersMap","debug","LogLevelType","Debug","info","Info","Warning","level","warn","time","hrtime","timeEnd","elapsed","build","CipherWithIds","CollectionWithId","FolderWithId","IgnoredProperties","loginPropertyParsers","setLoginUsername","setLoginPassword","setLoginUris","creditCardPropertyParsers","setCreditCardNumber","setCreditCardVerification","setCreditCardCardholderName","setCreditCardExpiry","identityPropertyParsers","setIdentityFirstName","setIdentityInitial","setIdentityLastName","setIdentityUserName","setIdentityEmail","setIdentityPhone","setIdentityCompany","quoteChar","escapeChar","getProp","setNotes","setCipherType","altUsername","context","CipherImportContext","setKnownLoginValue","setKnownCreditCardValue","setKnownIdentityValue","setUnknownValue","entries","agg","getPropByRegexp","regexp","matchingKeys","getPropIncluding","includesMap","importRecord","func","lowerProperty","readableDate","toUTCString","OnePasswordCsvImporter","NotificationType","enableProdMode","platformBrowser","bootstrapModule","preserveWhitespaces","AppModule","OssModule","BrowserAnimationsModule","FormsModule","ServicesModule","ToasterModule","forRoot","InfiniteScrollModule","DragDropModule","AppRoutingModule","NgModule","imports","bootstrap","routes","pathMatch","redirectTo","RouterModule","useHash","paramsInheritanceStrategy","subscribers","messageCallback","PasswordHintRequest","pinLock","webVaultHostname","invalidPinAttempts","pinSet","supportsBiometric","biometricLock","vaultUrl","failed","decPin","setKeyAndContinue","passwordValid","unlockBiometric","doContinue","rememberEmail","focusInput","launchSsoBrowser","ssoRedirectUri","ssoCodeVerifier","webUrl","confirmMasterPassword","hint","showTerms","acceptPolicies","useLowerKdf","isIE","RegisterRequest","orgInvite","confirmField","syncLoading","SetPasswordRequest","orgIdentifier","onSuccessfulChangePassword","choose","backdrop","className","addEventListener","webAuthnReady","webAuthnNewTab","webAuthn","twoFactorEmail","loginRoute","authing","needsLock","cleanupWebAuthn","providerData","authWebAuthn","DuoWebSDK","iframe","sig_request","Signature","submit_callback","sig","stop","doToast","cleanup","getDeviceString","pushToken","codes","client_secret","code_verifier","redirect_uri","deviceIdentifier","deviceName","twoFactorRemember","errorCallback","infoCallback","parseFunction","parseMessage","connectorLink","URLSearchParams","base64Encode","btnText","allow","sendMessage","contentWindow","postMessage","removeEventListener","validMessage","warningDialog","downloadFile","encryptedFormat","getExport","extension","csv","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","showCardNumber","showCardCode","fieldType","addFieldType","currentDate","typeOptions","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","addFieldTypeOptions","uriMatchOptions","autofillOnPageLoadOptions","myEmail","addEditCipherInfo","organizationChanged","previousCipherId","addUri","removeUri","addField","removeField","trackByFunction","editCollections","restorePromise","restoreCipher","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","toggleFieldValue","toggleUriOptions","loginUriMatchChanged","drop","moveItemInArray","previousIndex","currentIndex","checkPassword","checkPasswordPromise","repromptChanged","DeviceResponse","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","pagedCiphers","searchPending","searchTimeout","pagedCiphersCount","refreshing","indexedCiphers","deletedFilter","searchCiphers","rightClickCipher","addCipherOptions","selectedCollectionIds","showFolders","showCollections","showFavorites","showTrash","onAllClicked","onFavoritesClicked","onTrashClicked","onCipherTypeClicked","onFolderClicked","onAddFolder","onEditFolder","onCollectionClicked","setLoaded","collapsedGroupings","nestedFolders","clearSelections","selectFavorites","selectTrash","selectFolder","selectCollection","idPrefix","SendAccessView","filteredSends","hasSearched","onSuccessfulLoad","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","sendLinkBaseUrl","urlB64Key","searchSends","DateField","copyLink","deletionDateSelect","expirationDateSelect","alertShown","deletionDateOptions","expirationDateOptions","isSafari","isFirefox","nullOrWhiteSpaceCount","expirationDateFallback","expirationTimeFallback","formatDateFallbacks","deletionDateFallback","deletionTimeFallback","disableSendPolicies","sendOptionsPolicies","loadSend","hasPassword","isDateTimeLocalSupported","dateToString","deletionDateParts","dateToSplitString","safariDeletionTime","expirationDateParts","safariExpirationTime","safariDeletionTimeOptions","safariTimeOptions","DeletionDate","safariExpirationTimeOptions","ExpriationDate","deletionDateTimeFallback","expirationDateTimeFallback","setHours","encryptSend","encSend","copySuccess","clearExpiration","typeChanged","toggleOptions","expirationDateFallbackChanged","sendData","dateString","togglePasswordVisible","strarray","noon","midnight","ams","pms","hour","midnightOption","standard","military","noonOption","amOption","pmOption","validTimes","previousValue","showSelect","onSelected","avoidAmbiguous","passTypeOptions","optionsResponse","sliderChanged","sliderInput","copyOptions","cipherView","registerLocaleData","DatePipe","CommonModule","forChild","AvatarComponent","BlurClickDirective","BoxRowDirective","SearchCiphersPipe","declarations","blur","elRef","formEls","formEl","contains","tagName","inputEl","click","language","BroadcasterMessagingService","consoleLogService","WebPlatformUtilsService","HtmlStorageService","MemoryStorageService","WebCryptoFunctionService","FileUploadService","eventLoggingService","initFactory","htmlEl","documentElement","theme","useValue","APP_INITIALIZER","useFactory","deps","LOCALE_ID","subscriber","arg","localStorageKeys","localStorageStartsWithKeys","memoryStorageStartsWithKeys","memoryStorage","isLocalStorage","localStorage","getItem","isMemoryStorage","sessionStorage","setItem","removeItem","swKey","fileUploadType","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","createdDate","refunded","partiallyRefunded","refundedAmount","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","OrganizationUserResponse","userProfile","taxIdType","throttleKey","allThrottles","getThrottles","throttles","argsThrottleKey","queue","exec","comparator","sortedCiphersByUrl","timeouts","Ciphers","resetTimer","lastUsedIndex","y","getNextIndex","inEffect","filePath","store","browserCache","chrome","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","rel","blobData","blobOptions","fileNameLower","doDownload","endsWith","msSaveOrOpenBlob","msSaveBlob","createObjectURL","position","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","removeAttribute","iconHtmlStr","html","showCancelButton","cancelButtonText","showPasswordDialog","passwordValidation","autocapitalize","autocorrect","inputValidator","isConfirmed","clipboardData","setData","queryCommandSupported","textarea","copyEl","execCommand","readFromClipboard","authenticateBiometric","getDefaultSystemTheme","onDefaultSystemThemeChange","eventType","uploadImmediately","orgIds","eventCollection","EventData","EventRequest","getEncryptedExport","getDecryptedExport","getOrganizationEncryptedExport","getOrganizationDecryptedExport","unparse","Event","padNumber","getSeconds","buildCommonCipher","encKeyValidation","jsonDoc","encKeyValidation_DO_NOT_EDIT","collectionPromises","decCol","cipherPromises","decCipher","width","padCharacter","numString","login_uri","login_username","login_password","login_totp","toView","values","toDomain","azureFileUploadService","AzureFileUploadService","bitwardenFileUploadService","BitwardenFileUploadService","uploadSendFile","uploadData","encryptedFileData","FileUploadType","Direct","Azure","upload","renewalCallback","encryptedFileName","azureUploadBlob","azureUploadBlocks","urlObject","searchParams","blobResponse","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","setTime","utfBlockId","blockIdList","xml","Version","day","Number","compareTo","apiCall","getImportOptions","importResult","halfway","last","badData","postImport","errorResponse","handleServerError","getImporterInstance","BitwardenCsvImporter","BitwardenJsonImporter","LastPassCsvImporter","KeePassXCsvImporter","AviraCsvImporter","BlurCsvImporter","SafeInCloudXmlImporter","PadlockCsvImporter","KeePass2XmlImporter","ChromeCsvImporter","FirefoxCsvImporter","UpmCsvImporter","SaferPassCsvImporter","MeldiumCsvImporter","OnePassword1PifImporter","OnePasswordWinCsvImporter","OnePasswordMacCsvImporter","KeeperCsvImporter","PasswordDragonXmlImporter","EnpassCsvImporter","EnpassJsonImporter","PasswordSafeXmlImporter","DashlaneJsonImporter","MSecureCsvImporter","StickyPasswordXmlImporter","TrueKeyCsvImporter","ClipperzHtmlImporter","RoboFormCsvImporter","AscendoCsvImporter","PasswordBossJsonImporter","ZohoVaultCsvImporter","SplashIdCsvImporter","PassKeepCsvImporter","GnomeJsonImporter","PasswordAgentCsvImporter","PasspackCsvImporter","PassmanJsonImporter","AvastCsvImporter","AvastJsonImporter","FSecureFskImporter","KasperskyTxtImporter","RememBearCsvImporter","PasswordWalletTxtImporter","MykiCsvImporter","SecureSafeCsvImporter","LogMeOnceCsvImporter","BlackBerryCsvImporter","ButtercupCsvImporter","CodebookCsvImporter","EncryptrCsvImporter","YotiCsvImporter","NordPassCsvImporter","ImportCiphersRequest","KvpRequest","ImportOrganizationCiphersRequest","itemType","fieldLower","web","logins","custName","note","pwd","loginName","cards","holderName","cardNumber","cvv","website","secondary_username","col","addCollection","collectionIndex","delimPosition","parseEncrypted","parseDecrypted","groupingsMap","fav","extra","OfficialProps","processingCustomFields","currentVersion","actionType","labelLower","Category","Favorite","Entry","Note","Username","TOTP","Website","Phone","PIN","Account","HandledResults","ADDRESS","processAddress","AUTHENTIFIANT","processAuth","BANKSTATEMENT","processNote","IDCARD","PAYMENTMEANS_CREDITCARD","processCard","IDENTITY","processIdentity","credential","secondaryLogin","fullName","nameParts","pseudo","addressName","addressFull","zipcode","owner","nameProperty","Label","Notes","CVV","Expiry","expParts","firstRow","containsField","fieldValue","fieldName","fieldNameLower","foldersMap","foldersIndexMap","folderTree","buildFolderTree","flattenFolderTree","template_type","processLogin","sensitive","uuid","parent_uuid","titlePrefix","tree","creditNumber","creditCvv","creditExpiry","keyRing","display_name","secret","attributes","attr","username_value","NotesHeader","ApplicationsHeader","WebsitesHeader","Delimiter","notesData","applicationsData","websitesData","workingData","parseDataCategory","applications","websites","nameKey","itemComment","itemCommentKey","colonIndex","rootGroup","traverse","isRootNode","groupPrefixName","groupName","nameEl","cipherIndex","entryString","valueEl","keyEl","attrs","ProtectInMemory","Title","Group","buildBaseCipher","parseSecureNote","parseCard","parseIdentity","ccnum","cardCipher","profilename","firstname","lastname","ccname","cccsc","ccexp","ccexpParts","middlename","zip","extraParts","processedNote","typeParts","mappedData","parseSecureNoteMapping","monthString","processingNotes","extraPart","DisplayName","UserName","Url","nickname","additionalInfo","twoFactAuthToken","cardName","exp_month","exp_year","firstAddressLine","secondAddressLine","zipCode","record","recordType","evaluateType","cardholdername","cardnumber","cvc","expirydate","processName","full_name","phone_number","line","trashed","processStandardItem","processWinOpVaultItem","overview","URLs","parsePasswordHistory","notesPlain","parseFields","sections","section","openContents","faveIndex","typeName","secureContents","maxSize","designationKey","valueKey","fieldDesignation","street","setIdentityAddress","expSplit","tags","tag","getValue","custom_fields","customField","field_type","tagsJson","Tags","tagJson","__parsed_extra","fieldsJson","extraFields","fieldJson","newVersion","altFormat","login_url","identifiers","valObj","expDate","cf","records","categoryText","accountName","passwordSafe","notesDelimiter","getAttribute","groupText","trash","cardholder","verification","expiryMonth","expMonthNumber","expiryYear","expYearNumber","Name","Pwd","Rf_fields","labelEl","cardEl","labelIdEl","labelId","fieldEl","notesEl","candidates","choice","Comment","parseFieldsToNotes","startIndex","loginNodes","loginNode","accountId","usernameText","passwordText","linkText","notesText","accountLogin","account","parentElement","buildGroupText","PropertiesToIgnore","memo","kind","expiryDate","document_content","ChamberName","parseData","SecretData","CustomData","connected","inactive","reconnectTimer","signalrConnection","off","signalR","HubConnectionBuilder","withUrl","accessTokenFactory","skipNegotiation","transport","HttpTransportType","WebSockets","withHubProtocol","signalRMsgPack","MessagePackHubProtocol","processNotification","NotificationResponse","onclose","reconnect","isAuthedAndUnlocked","sync","contextId","payloadUserId","UserId","myUserId","SyncCipherCreate","SyncCipherUpdate","SyncCipherDelete","SyncLoginDelete","SyncFolderCreate","SyncFolderUpdate","SyncFolderDelete","SyncVault","SyncCiphers","SyncSettings","SyncOrgKeys","LogOut","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncCipherNotification","SyncFolderNotification","UserNotification","SyncSendNotification","passwordValidator","policyCache","MasterPasswordPolicyOptions","toLocaleLowerCase","toLocaleUpperCase","resetPasswordPolicyOptions","ResetPasswordPolicyOptions","policiesResponse","indexing","searchableMinLength","builder","lunr","Builder","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","isArray","every","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","joined","protocolIndex","queryIndex","decryptedSendCache","fileData","Send","cryptoKey","ArrayBuffer","encryptFileData","parseFile","decSends","SendRequest","legacyServerSendFileUpload","encFileData","fileLength","crypto","subtle","ua","isOldSafari","algorithm","forgeLen","passwordBytes","toByteString","saltBytes","derivedKeyBytes","forge","wcLen","passwordBuf","toBuf","saltBuf","pbkdf2Params","toWebCryptoAlgorithm","importKey","impKey","deriveBits","ikm","outputByteSize","infoBuf","hkdfParams","prk","hashLen","infoArr","runningOkmLength","previousT","okm","md","md5","sha1","valueBytes","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","util","createBuffer","putInt32","DecryptParameters","meta","encKeyByteString","macKeyByteString","decode64","parameters","dataBuffer","createDecipher","finish","rsaParams","impPrivateKey","exportKey","jwkPrivateKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","encodeUtf8"],"mappings":"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,MAAM,gDAKpB,IAFMu5F,EAAmB,GACrBC,EAAaC,EAAOC,UAAUL,EAAS,KACpCD,KACGO,EAAYH,EAAW9gE,IAAI,EAAAygE,gBAAgBl/F,QACjDu/F,EAAaA,EAAWI,OAAO,EAAAT,gBAAgBl/F,QAC/Cs/F,EAAOh/F,KAAK,EAAA4+F,gBAAgBQ,IAEhC,MAAO,CAAP,EAAOJ,UAGG,YAAApD,YAAd,SAA0Bt5F,EAAyBupB,G,yGAE3CyzE,EAAuB,KACA,KAAvBh9F,EAAIA,IAAI+N,WAAR,MACe,GAAM3M,KAAK41F,WAAWh3F,I,OACzB,OADNm6D,EAAS,SACH,GAAM/4D,KAAKmnC,QAAQhf,EAAQ4wC,I,cAAvC6iC,EAAY,S,oBACkB,KAAvBh9F,EAAIA,IAAI+N,WAAR,MACK,GAAM3M,KAAKmnC,QAAQhf,EAAQvpB,I,cAAvCg9F,EAAY,S,aAEZ,MAAM,IAAI75F,MAAM,qB,OAEpB,MAAO,CAAC,EAAD,CAAC,IAAI,EAAAkzB,mBAAmB9M,GAASyzE,YAhpB5C,GADC,EAAA/I,eAAc,WAAM,qB,iDACA,EAAA59D,qB,8DA4ErB,GADC,EAAA49D,eAAc,WAAM,sB,mHAukBzB,EAxwBA,GAAa,EAAAzyF,iB,uGClCA,EAAA86F,gBAAkB,CAC3B,SACA,UACA,YACA,QACA,UACA,UACA,SACA,OACA,WACA,WACA,WACA,UACA,UACA,SACA,WACA,UACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,SACA,SACA,UACA,YACA,YACA,UACA,WACA,WACA,WACA,UACA,WACA,SACA,OACA,QACA,WACA,UACA,OACA,UACA,UACA,SACA,SACA,WACA,YACA,SACA,WACA,WACA,WACA,UACA,OACA,UACA,YACA,WACA,WACA,UACA,YACA,OACA,SACA,WACA,YACA,YACA,YACA,YACA,SACA,QACA,YACA,WACA,SACA,UACA,SACA,SACA,WACA,QACA,SACA,YACA,YACA,YACA,YACA,YACA,OACA,UACA,SACA,SACA,QACA,YACA,SACA,QACA,UACA,QACA,WACA,UACA,YACA,QACA,YACA,YACA,SACA,WACA,YACA,UACA,QACA,OACA,OACA,OACA,MACA,OACA,YACA,QACA,YACA,QACA,UACA,UACA,YACA,QACA,QACA,YACA,WACA,SACA,QACA,QACA,WACA,WACA,UACA,WACA,SACA,OACA,QACA,QACA,QACA,YACA,QACA,WACA,UACA,WACA,WACA,OACA,WACA,SACA,SACA,WACA,QACA,YACA,QACA,WACA,YACA,YACA,WACA,YACA,YACA,SACA,YACA,YACA,SACA,UACA,UACA,WACA,OACA,QACA,QACA,QACA,UACA,WACA,UACA,WACA,QACA,SACA,WACA,QACA,YACA,UACA,QACA,QACA,SACA,WACA,SACA,YACA,SACA,UACA,WACA,YACA,UACA,YACA,UACA,SACA,UACA,UACA,UACA,SACA,SACA,WACA,OACA,YACA,UACA,QACA,SACA,SACA,SACA,UACA,UACA,YACA,YACA,UACA,SACA,UACA,YACA,YACA,WACA,QACA,YACA,QACA,QACA,WACA,YACA,WACA,WACA,UACA,WACA,UACA,YACA,UACA,YACA,WACA,WACA,WACA,SACA,UACA,YACA,WACA,SACA,WACA,WACA,YACA,WACA,YACA,WACA,YACA,YACA,YACA,YACA,SACA,UACA,QACA,QACA,UACA,SACA,UACA,SACA,WACA,WACA,UACA,SACA,WACA,QACA,SACA,UACA,YACA,SACA,UACA,YACA,YACA,WACA,WACA,YACA,UACA,WACA,QACA,YACA,YACA,UACA,QACA,YACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,QACA,QACA,WACA,QACA,OACA,WACA,YACA,YACA,WACA,OACA,QACA,WACA,WACA,QACA,QACA,YACA,UACA,WACA,QACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,OACA,QACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,SACA,YACA,WACA,QACA,MACA,SACA,YACA,SACA,YACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,YACA,SACA,WACA,SACA,UACA,WACA,UACA,UACA,YACA,YACA,YACA,SACA,WACA,QACA,OACA,WACA,OACA,SACA,YACA,UACA,SACA,SACA,UACA,YACA,WACA,YACA,YACA,SACA,QACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,WACA,UACA,UACA,WACA,QACA,WACA,YACA,SACA,YACA,SACA,SACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,SACA,SACA,WACA,SACA,UACA,WACA,QACA,WACA,UACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,SACA,QACA,OACA,OACA,SACA,WACA,SACA,SACA,WACA,YACA,YACA,WACA,SACA,SACA,YACA,WACA,WACA,UACA,YACA,WACA,WACA,YACA,UACA,UACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,YACA,SACA,WACA,WACA,YACA,WACA,QACA,WACA,YACA,SACA,QACA,UACA,QACA,UACA,SACA,WACA,QACA,SACA,UACA,SACA,SACA,YACA,UACA,QACA,UACA,WACA,QACA,SACA,WACA,SACA,UACA,YACA,UACA,QACA,WACA,SACA,SACA,SACA,WACA,QACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,SACA,YACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,QACA,WACA,UACA,WACA,SACA,UACA,SACA,OACA,YACA,UACA,YACA,SACA,WACA,YACA,UACA,WACA,YACA,WACA,OACA,YACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,QACA,OACA,YACA,WACA,YACA,UACA,UACA,SACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,UACA,YACA,YACA,QACA,YACA,YACA,QACA,WACA,YACA,SACA,UACA,SACA,QACA,QACA,UACA,QACA,QACA,WACA,QACA,QACA,UACA,UACA,WACA,SACA,OACA,WACA,QACA,WACA,UACA,WACA,OACA,OACA,WACA,WACA,UACA,OACA,SACA,UACA,QACA,SACA,YACA,QACA,QACA,UACA,SACA,QACA,QACA,WACA,UACA,WACA,WACA,OACA,SACA,UACA,SACA,SACA,UACA,UACA,YACA,OACA,SACA,SACA,QACA,OACA,MACA,UACA,OACA,UACA,SACA,UACA,WACA,QACA,WACA,WACA,WACA,QACA,UACA,SACA,SACA,QACA,OACA,YACA,YACA,OACA,YACA,SACA,QACA,SACA,UACA,WACA,UACA,QACA,QACA,QACA,SACA,UACA,WACA,YACA,OACA,YACA,WACA,SACA,QACA,OACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,YACA,YACA,SACA,SACA,QACA,SACA,UACA,OACA,SACA,SACA,WACA,YACA,UACA,WACA,SACA,SACA,WACA,UACA,UACA,QACA,QACA,QACA,QACA,UACA,UACA,SACA,YACA,OACA,QACA,QACA,UACA,UACA,YACA,UACA,UACA,YACA,YACA,UACA,UACA,YACA,YACA,YACA,UACA,WACA,SACA,SACA,YACA,SACA,SACA,WACA,QACA,QACA,UACA,WACA,YACA,SACA,WACA,WACA,SACA,WACA,QACA,QACA,WACA,QACA,YACA,SACA,WACA,SACA,YACA,SACA,SACA,SACA,WACA,WACA,YACA,YACA,WACA,WACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,UACA,QACA,OACA,QACA,YACA,SACA,OACA,UACA,YACA,YACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,QACA,QACA,SACA,SACA,SACA,UACA,YACA,WACA,QACA,OACA,SACA,OACA,SACA,UACA,OACA,WACA,OACA,SACA,UACA,SACA,YACA,QACA,UACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,WACA,UACA,OACA,UACA,OACA,WACA,WACA,UACA,YACA,WACA,UACA,YACA,OACA,UACA,UACA,UACA,YACA,QACA,SACA,WACA,SACA,WACA,UACA,WACA,SACA,QACA,SACA,SACA,UACA,SACA,QACA,OACA,SACA,WACA,WACA,SACA,UACA,SACA,SACA,SACA,QACA,YACA,SACA,UACA,SACA,UACA,UACA,WACA,OACA,YACA,UACA,UACA,SACA,YACA,UACA,UACA,UACA,YACA,UACA,YACA,UACA,UACA,QACA,UACA,SACA,YACA,SACA,UACA,WACA,WACA,YACA,YACA,YACA,WACA,SACA,YACA,QACA,SACA,UACA,UACA,WACA,UACA,YACA,WACA,YACA,QACA,YACA,YACA,UACA,UACA,UACA,SACA,YACA,QACA,SACA,WACA,SACA,UACA,YACA,YACA,QACA,UACA,UACA,UACA,OACA,OACA,SACA,SACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,WACA,SACA,UACA,WACA,WACA,UACA,YACA,WACA,UACA,SACA,SACA,SACA,UACA,YACA,SACA,QACA,UACA,YACA,SACA,SACA,YACA,QACA,UACA,YACA,UACA,WACA,WACA,UACA,SACA,SACA,QACA,SACA,YACA,WACA,WACA,SACA,SACA,SACA,WACA,WACA,YACA,YACA,YACA,UACA,WACA,WACA,QACA,WACA,QACA,QACA,UACA,YACA,UACA,YACA,WACA,SACA,SACA,UACA,QACA,QACA,YACA,WACA,UACA,QACA,UACA,YACA,YACA,WACA,UACA,WACA,UACA,UACA,QACA,UACA,UACA,WACA,QACA,UACA,SACA,WACA,WACA,WACA,UACA,WACA,SACA,WACA,UACA,QACA,QACA,SACA,SACA,OACA,YACA,UACA,QACA,YACA,SACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,QACA,YACA,YACA,YACA,WACA,YACA,YACA,QACA,QACA,QACA,OACA,WACA,SACA,WACA,WACA,QACA,WACA,WACA,SACA,YACA,UACA,QACA,UACA,WACA,SACA,OACA,SACA,UACA,WACA,SACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,WACA,QACA,SACA,WACA,SACA,WACA,WACA,YACA,SACA,UACA,UACA,WACA,UACA,SACA,SACA,OACA,QACA,QACA,OACA,QACA,WACA,SACA,SACA,QACA,YACA,QACA,WACA,UACA,UACA,WACA,UACA,WACA,UACA,QACA,QACA,QACA,UACA,SACA,WACA,OACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,YACA,WACA,QACA,SACA,UACA,SACA,UACA,WACA,QACA,SACA,WACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,WACA,UACA,UACA,WACA,QACA,SACA,UACA,WACA,YACA,QACA,WACA,SACA,SACA,YACA,SACA,UACA,QACA,YACA,UACA,UACA,WACA,YACA,YACA,OACA,WACA,SACA,UACA,SACA,QACA,UACA,MACA,WACA,SACA,UACA,SACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,OACA,OACA,OACA,OACA,WACA,WACA,UACA,WACA,SACA,YACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,SACA,WACA,OACA,OACA,OACA,UACA,QACA,QACA,SACA,QACA,WACA,UACA,UACA,WACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,SACA,UACA,SACA,YACA,WACA,WACA,YACA,UACA,YACA,WACA,WACA,YACA,WACA,YACA,UACA,UACA,UACA,WACA,UACA,YACA,UACA,QACA,YACA,UACA,WACA,WACA,SACA,WACA,YACA,YACA,UACA,YACA,YACA,UACA,OACA,UACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,YACA,UACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,WACA,WACA,UACA,YACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,UACA,YACA,YACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,YACA,UACA,UACA,YACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,OACA,QACA,OACA,WACA,YACA,UACA,SACA,SACA,SACA,YACA,YACA,WACA,WACA,YACA,QACA,WACA,UACA,WACA,YACA,SACA,UACA,WACA,UACA,YACA,YACA,UACA,SACA,SACA,WACA,YACA,SACA,SACA,YACA,OACA,UACA,SACA,QACA,QACA,QACA,YACA,YACA,WACA,YACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,UACA,SACA,WACA,OACA,WACA,YACA,WACA,WACA,SACA,WACA,UACA,WACA,YACA,YACA,SACA,QACA,YACA,QACA,UACA,UACA,QACA,QACA,QACA,UACA,WACA,WACA,WACA,WACA,SACA,SACA,UACA,YACA,QACA,UACA,UACA,YACA,SACA,WACA,YACA,SACA,WACA,WACA,WACA,WACA,WACA,SACA,QACA,QACA,SACA,QACA,QACA,WACA,UACA,WACA,YACA,UACA,WACA,UACA,WACA,OACA,UACA,QACA,QACA,QACA,UACA,SACA,WACA,UACA,UACA,UACA,WACA,UACA,YACA,SACA,WACA,UACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,UACA,UACA,QACA,QACA,UACA,UACA,YACA,UACA,YACA,UACA,QACA,YACA,SACA,UACA,WACA,WACA,YACA,UACA,WACA,YACA,UACA,UACA,WACA,QACA,OACA,SACA,UACA,UACA,YACA,OACA,UACA,UACA,WACA,SACA,SACA,WACA,WACA,YACA,WACA,UACA,YACA,WACA,UACA,YACA,UACA,QACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,SACA,SACA,SACA,YACA,UACA,QACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,YACA,QACA,QACA,QACA,OACA,SACA,UACA,YACA,UACA,YACA,WACA,YACA,UACA,MACA,QACA,SACA,UACA,UACA,WACA,SACA,YACA,YACA,MACA,MACA,WACA,SACA,QACA,WACA,SACA,QACA,QACA,WACA,QACA,UACA,YACA,SACA,WACA,QACA,SACA,SACA,WACA,YACA,QACA,WACA,WACA,YACA,UACA,WACA,WACA,UACA,OACA,OACA,YACA,OACA,YACA,OACA,WACA,SACA,WACA,WACA,UACA,OACA,SACA,WACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,WACA,SACA,YACA,WACA,SACA,UACA,YACA,QACA,OACA,YACA,SACA,WACA,QACA,UACA,WACA,SACA,QACA,SACA,SACA,QACA,QACA,YACA,QACA,WACA,SACA,WACA,YACA,WACA,UACA,SACA,YACA,YACA,UACA,YACA,UACA,YACA,WACA,OACA,WACA,UACA,SACA,YACA,YACA,YACA,QACA,WACA,SACA,WACA,YACA,SACA,SACA,OACA,OACA,SACA,SACA,WACA,SACA,WACA,SACA,UACA,SACA,YACA,YACA,YACA,WACA,UACA,YACA,WACA,WACA,WACA,UACA,SACA,WACA,SACA,WACA,UACA,YACA,WACA,YACA,YACA,QACA,WACA,UACA,UACA,SACA,SACA,OACA,WACA,YACA,WACA,SACA,YACA,QACA,WACA,QACA,WACA,YACA,SACA,WACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,UACA,QACA,SACA,WACA,SACA,YACA,YACA,WACA,SACA,YACA,WACA,SACA,WACA,YACA,YACA,WACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,UACA,OACA,YACA,YACA,WACA,YACA,SACA,UACA,YACA,WACA,SACA,SACA,SACA,WACA,YACA,YACA,UACA,UACA,QACA,WACA,SACA,SACA,WACA,QACA,UACA,YACA,UACA,YACA,YACA,WACA,WACA,YACA,YACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,YACA,WACA,WACA,SACA,YACA,YACA,WACA,YACA,YACA,SACA,WACA,YACA,WACA,UACA,QACA,UACA,WACA,UACA,UACA,YACA,WACA,SACA,UACA,YACA,UACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,YACA,YACA,UACA,OACA,WACA,SACA,YACA,QACA,OACA,SACA,UACA,YACA,WACA,YACA,WACA,WACA,YACA,YACA,MACA,WACA,YACA,WACA,OACA,SACA,OACA,WACA,QACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,YACA,QACA,QACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,UACA,WACA,YACA,YACA,WACA,YACA,WACA,YACA,WACA,WACA,WACA,SACA,WACA,WACA,UACA,YACA,WACA,UACA,UACA,YACA,WACA,WACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,WACA,OACA,YACA,UACA,OACA,UACA,YACA,YACA,WACA,WACA,YACA,SACA,UACA,WACA,UACA,WACA,SACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,YACA,WACA,UACA,WACA,UACA,YACA,UACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,WACA,QACA,QACA,QACA,YACA,UACA,WACA,WACA,WACA,WACA,SACA,WACA,YACA,YACA,WACA,WACA,WACA,YACA,QACA,SACA,SACA,OACA,WACA,WACA,QACA,QACA,QACA,QACA,OACA,SACA,YACA,SACA,QACA,UACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,QACA,QACA,SACA,WACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,UACA,QACA,OACA,YACA,SACA,SACA,OACA,SACA,WACA,SACA,OACA,OACA,QACA,OACA,OACA,WACA,YACA,YACA,WACA,YACA,WACA,UACA,UACA,YACA,WACA,YACA,QACA,UACA,UACA,OACA,UACA,WACA,YACA,YACA,WACA,YACA,YACA,YACA,SACA,SACA,WACA,SACA,SACA,QACA,OACA,UACA,QACA,QACA,QACA,UACA,WACA,YACA,WACA,WACA,SACA,WACA,SACA,SACA,WACA,UACA,UACA,UACA,QACA,QACA,QACA,YACA,UACA,WACA,UACA,UACA,UACA,QACA,QACA,WACA,SACA,OACA,MACA,SACA,YACA,UACA,WACA,UACA,WACA,WACA,QACA,OACA,OACA,SACA,SACA,MACA,OACA,SACA,WACA,OACA,UACA,WACA,WACA,MACA,OACA,SACA,YACA,YACA,UACA,UACA,WACA,SACA,SACA,OACA,OACA,UACA,OACA,QACA,QACA,QACA,UACA,UACA,WACA,UACA,YACA,UACA,WACA,UACA,WACA,WACA,OACA,QACA,UACA,UACA,UACA,SACA,UACA,QACA,UACA,UACA,WACA,WACA,WACA,UACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,SACA,UACA,QACA,UACA,SACA,WACA,SACA,YACA,YACA,SACA,WACA,UACA,QACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,YACA,OACA,SACA,UACA,YACA,UACA,WACA,YACA,UACA,YACA,YACA,OACA,WACA,SACA,OACA,UACA,SACA,WACA,YACA,WACA,MACA,YACA,UACA,YACA,SACA,YACA,SACA,SACA,WACA,WACA,YACA,UACA,YACA,SACA,QACA,YACA,UACA,SACA,QACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,SACA,MACA,WACA,WACA,YACA,QACA,UACA,SACA,MACA,UACA,WACA,MACA,YACA,QACA,YACA,WACA,YACA,QACA,UACA,QACA,QACA,UACA,SACA,UACA,YACA,YACA,QACA,WACA,UACA,SACA,SACA,WACA,SACA,YACA,QACA,UACA,YACA,WACA,OACA,QACA,WACA,UACA,WACA,UACA,UACA,WACA,WACA,YACA,WACA,YACA,WACA,WACA,WACA,WACA,UACA,UACA,YACA,QACA,MACA,SACA,YACA,SACA,YACA,YACA,WACA,UACA,YACA,SACA,SACA,YACA,YACA,WACA,UACA,UACA,WACA,WACA,YACA,QACA,SACA,UACA,UACA,YACA,YACA,UACA,YACA,WACA,YACA,YACA,WACA,YACA,WACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,WACA,WACA,YACA,UACA,SACA,UACA,YACA,YACA,YACA,UACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,SACA,SACA,SACA,UACA,UACA,SACA,SACA,YACA,WACA,YACA,WACA,SACA,UACA,SACA,SACA,YACA,SACA,SACA,WACA,UACA,WACA,UACA,YACA,WACA,WACA,WACA,UACA,WACA,QACA,OACA,SACA,OACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,WACA,UACA,QACA,SACA,WACA,UACA,UACA,YACA,SACA,YACA,YACA,WACA,SACA,SACA,UACA,YACA,SACA,SACA,UACA,QACA,QACA,WACA,YACA,YACA,WACA,WACA,WACA,SACA,YACA,YACA,WACA,UACA,QACA,UACA,YACA,YACA,SACA,WACA,WACA,YACA,YACA,WACA,UACA,UACA,WACA,UACA,QACA,YACA,SACA,YACA,WACA,UACA,QACA,WACA,YACA,YACA,UACA,UACA,OACA,YACA,YACA,YACA,WACA,WACA,QACA,WACA,UACA,OACA,QACA,YACA,SACA,QACA,UACA,UACA,WACA,YACA,YACA,YACA,SACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,SACA,YACA,YACA,YACA,YACA,QACA,OACA,YACA,SACA,UACA,SACA,QACA,WACA,OACA,SACA,YACA,WACA,WACA,SACA,UACA,YACA,YACA,YACA,YACA,YACA,QACA,SACA,WACA,YACA,SACA,SACA,WACA,UACA,YACA,WACA,UACA,UACA,UACA,YACA,WACA,WACA,YACA,SACA,WACA,UACA,YACA,YACA,WACA,YACA,SACA,YACA,WACA,WACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,UACA,SACA,WACA,SACA,YACA,UACA,UACA,SACA,YACA,UACA,UACA,OACA,SACA,UACA,SACA,OACA,QACA,UACA,OACA,WACA,SACA,SACA,WACA,UACA,UACA,YACA,QACA,UACA,OACA,UACA,YACA,YACA,UACA,UACA,WACA,SACA,UACA,WACA,SACA,YACA,YACA,UACA,WACA,WACA,MACA,QACA,UACA,SACA,SACA,OACA,OACA,SACA,SACA,WACA,WACA,WACA,WACA,WACA,QACA,QACA,UACA,SACA,UACA,WACA,YACA,WACA,SACA,SACA,QACA,SACA,SACA,WACA,UACA,YACA,QACA,QACA,QACA,QACA,UACA,SACA,WACA,WACA,YACA,UACA,UACA,QACA,WACA,QACA,UACA,SACA,WACA,SACA,SACA,SACA,UACA,OACA,SACA,QACA,WACA,SACA,WACA,WACA,UACA,UACA,YACA,QACA,WACA,QACA,UACA,WACA,WACA,YACA,SACA,UACA,UACA,WACA,MACA,OACA,UACA,UACA,WACA,WACA,YACA,YACA,QACA,UACA,QACA,QACA,YACA,UACA,WACA,WACA,OACA,UACA,YACA,YACA,YACA,WACA,WACA,SACA,QACA,UACA,WACA,SACA,WACA,UACA,YACA,YACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,OACA,UACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,WACA,OACA,SACA,UACA,QACA,WACA,UACA,UACA,QACA,SACA,UACA,WACA,OACA,MACA,MACA,OACA,QACA,OACA,WACA,SACA,WACA,SACA,WACA,SACA,OACA,OACA,OACA,UACA,WACA,WACA,YACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,YACA,WACA,UACA,WACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,MACA,QACA,WACA,WACA,UACA,YACA,WACA,YACA,WACA,QACA,QACA,UACA,UACA,YACA,SACA,UACA,QACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,SACA,YACA,WACA,YACA,WACA,UACA,WACA,YACA,WACA,UACA,SACA,WACA,SACA,YACA,WACA,QACA,UACA,UACA,WACA,SACA,SACA,QACA,SACA,WACA,YACA,YACA,WACA,QACA,SACA,UACA,QACA,UACA,YACA,SACA,OACA,QACA,YACA,UACA,WACA,WACA,YACA,SACA,QACA,QACA,SACA,WACA,YACA,WACA,QACA,YACA,SACA,MACA,QACA,MACA,YACA,UACA,QACA,OACA,YACA,WACA,UACA,SACA,SACA,UACA,YACA,SACA,YACA,WACA,OACA,SACA,QACA,SACA,SACA,WACA,UACA,MACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,MACA,WACA,YACA,SACA,UACA,WACA,QACA,OACA,OACA,SACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,WACA,WACA,QACA,UACA,YACA,SACA,QACA,YACA,WACA,YACA,UACA,YACA,WACA,WACA,SACA,YACA,YACA,YACA,WACA,YACA,UACA,YACA,UACA,UACA,UACA,QACA,QACA,YACA,SACA,UACA,YACA,QACA,OACA,WACA,YACA,WACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,SACA,WACA,QACA,QACA,SACA,QACA,UACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,SACA,WACA,YACA,QACA,UACA,QACA,WACA,UACA,WACA,UACA,SACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,WACA,WACA,SACA,YACA,YACA,UACA,WACA,QACA,QACA,QACA,UACA,WACA,UACA,OACA,SACA,YACA,UACA,SACA,OACA,OACA,WACA,OACA,UACA,QACA,WACA,WACA,YACA,OACA,UACA,QACA,UACA,OACA,OACA,OACA,QACA,WACA,YACA,QACA,SACA,OACA,SACA,OACA,SACA,WACA,OACA,UACA,SACA,SACA,SACA,OACA,OACA,OACA,WACA,YACA,WACA,YACA,SACA,SACA,WACA,UACA,YACA,WACA,WACA,UACA,WACA,QACA,WACA,WACA,UACA,UACA,UACA,WACA,UACA,SACA,UACA,QACA,WACA,QACA,QACA,UACA,YACA,QACA,QACA,YACA,UACA,UACA,YACA,WACA,SACA,YACA,SACA,YACA,YACA,UACA,QACA,OACA,UACA,WACA,WACA,YACA,SACA,QACA,UACA,WACA,OACA,YACA,OACA,QACA,YACA,WACA,WACA,QACA,UACA,YACA,QACA,YACA,QACA,SACA,WACA,OACA,UACA,OACA,WACA,SACA,QACA,QACA,SACA,WACA,SACA,QACA,SACA,UACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,WACA,WACA,UACA,UACA,YACA,UACA,WACA,SACA,QACA,YACA,WACA,WACA,QACA,UACA,YACA,QACA,OACA,WACA,QACA,OACA,UACA,UACA,YACA,UACA,QACA,SACA,WACA,OACA,OACA,QACA,QACA,UACA,OACA,SACA,MACA,UACA,WACA,YACA,WACA,UACA,WACA,SACA,SACA,UACA,UACA,MACA,UACA,QACA,OACA,UACA,OACA,SACA,SACA,YACA,SACA,UACA,SACA,UACA,YACA,UACA,WACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,SACA,UACA,WACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,SACA,YACA,SACA,QACA,YACA,YACA,UACA,WACA,UACA,YACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,UACA,WACA,YACA,SACA,WACA,WACA,WACA,YACA,WACA,QACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,UACA,QACA,UACA,OACA,SACA,QACA,UACA,YACA,QACA,SACA,YACA,WACA,UACA,WACA,YACA,OACA,UACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,SACA,OACA,WACA,WACA,YACA,YACA,YACA,SACA,SACA,YACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,UACA,WACA,YACA,YACA,UACA,WACA,OACA,OACA,QACA,UACA,YACA,UACA,QACA,UACA,YACA,QACA,SACA,SACA,SACA,UACA,UACA,WACA,WACA,UACA,YACA,QACA,WACA,QACA,SACA,SACA,YACA,QACA,WACA,SACA,UACA,UACA,UACA,UACA,QACA,YACA,WACA,WACA,UACA,WACA,SACA,SACA,WACA,OACA,MACA,OACA,OACA,OACA,QACA,SACA,WACA,SACA,QACA,YACA,WACA,UACA,SACA,YACA,WACA,YACA,WACA,WACA,SACA,SACA,YACA,YACA,SACA,WACA,SACA,OACA,SACA,UACA,WACA,WACA,SACA,SACA,SACA,UACA,SACA,YACA,UACA,QACA,OACA,UACA,OACA,SACA,YACA,MACA,SACA,UACA,WACA,YACA,WACA,YACA,YACA,YACA,SACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,MACA,UACA,QACA,OACA,OACA,MACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,WACA,WACA,SACA,QACA,OACA,QACA,WACA,SACA,SACA,YACA,WACA,WACA,QACA,YACA,WACA,UACA,WACA,UACA,YACA,WACA,UACA,YACA,WACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,SACA,SACA,YACA,UACA,WACA,YACA,YACA,WACA,SACA,UACA,YACA,YACA,WACA,UACA,YACA,YACA,QACA,WACA,YACA,WACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,UACA,WACA,YACA,WACA,UACA,YACA,YACA,YACA,UACA,YACA,SACA,WACA,SACA,SACA,MACA,OACA,SACA,OACA,QACA,MACA,OACA,YACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,WACA,YACA,YACA,UACA,QACA,UACA,YACA,UACA,OACA,YACA,SACA,QACA,MACA,MACA,SACA,SACA,YACA,UACA,WACA,YACA,SACA,YACA,WACA,MACA,UACA,UACA,SACA,UACA,UACA,WACA,QACA,OACA,QACA,UACA,UACA,OACA,UACA,YACA,OACA,OACA,YACA,UACA,QACA,SACA,SACA,MACA,QACA,SACA,QACA,SACA,WACA,OACA,UACA,UACA,MACA,SACA,YACA,SACA,UACA,OACA,UACA,WACA,WACA,YACA,QACA,OACA,MACA,SACA,WACA,YACA,SACA,UACA,WACA,YACA,WACA,QACA,YACA,WACA,YACA,OACA,SACA,WACA,UACA,QACA,YACA,QACA,UACA,UACA,OACA,SACA,QACA,OACA,WACA,WACA,OACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,OACA,UACA,YACA,UACA,SACA,WACA,WACA,QACA,WACA,UACA,SACA,QACA,QACA,SACA,WACA,OACA,MACA,OACA,SACA,OACA,WACA,WACA,SACA,OACA,OACA,WACA,WACA,YACA,WACA,OACA,SACA,SACA,WACA,SACA,WACA,UACA,UACA,UACA,OACA,UACA,UACA,YACA,WACA,SACA,UACA,UACA,OACA,SACA,QACA,OACA,UACA,WACA,OACA,QACA,WACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,UACA,UACA,WACA,YACA,WACA,SACA,SACA,QACA,UACA,WACA,SACA,UACA,SACA,OACA,OACA,QACA,SACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,YACA,WACA,YACA,WACA,YACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,OACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,WACA,UACA,SACA,WACA,SACA,UACA,UACA,SACA,WACA,SACA,WACA,SACA,WACA,OACA,WACA,OACA,SACA,QACA,SACA,SACA,WACA,UACA,UACA,YACA,OACA,UACA,SACA,YACA,UACA,QACA,OACA,SACA,OACA,OACA,UACA,SACA,UACA,YACA,WACA,SACA,UACA,QACA,WACA,SACA,WACA,YACA,YACA,SACA,UACA,YACA,UACA,UACA,WACA,MACA,OACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,SACA,QACA,QACA,OACA,OACA,UACA,YACA,QACA,QACA,UACA,WACA,OACA,QACA,WACA,WACA,SACA,SACA,WACA,UACA,OACA,OACA,MACA,UACA,UACA,SACA,OACA,OACA,WACA,YACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,YACA,UACA,SACA,SACA,YACA,YACA,QACA,UACA,YACA,WACA,YACA,YACA,SACA,WACA,UACA,SACA,YACA,WACA,YACA,UACA,UACA,SACA,QACA,WACA,WACA,YACA,YACA,OACA,QACA,OACA,YACA,OACA,SACA,WACA,SACA,YACA,UACA,YACA,WACA,QACA,YACA,SACA,QACA,YACA,WACA,WACA,SACA,WACA,WACA,QACA,OACA,UACA,YACA,WACA,UACA,SACA,UACA,WACA,QACA,YACA,WACA,YACA,YACA,YACA,UACA,YACA,WACA,WACA,SACA,WACA,UACA,YACA,WACA,WACA,QACA,YACA,SACA,YACA,OACA,OACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,WACA,SACA,SACA,QACA,QACA,YACA,UACA,UACA,UACA,YACA,WACA,YACA,SACA,UACA,UACA,YACA,QACA,UACA,SACA,UACA,QACA,WACA,SACA,SACA,SACA,OACA,MACA,WACA,YACA,UACA,UACA,WACA,QACA,QACA,YACA,YACA,SACA,WACA,SACA,SACA,UACA,WACA,SACA,YACA,SACA,UACA,SACA,QACA,YACA,SACA,YACA,YACA,UACA,SACA,YACA,SACA,UACA,WACA,SACA,UACA,UACA,UACA,YACA,WACA,UACA,WACA,YACA,WACA,WACA,YACA,OACA,SACA,YACA,YACA,SACA,SACA,SACA,SACA,WACA,WACA,WACA,QACA,WACA,WACA,UACA,QACA,SACA,YACA,SACA,UACA,SACA,WACA,WACA,UACA,QACA,SACA,SACA,WACA,SACA,UACA,YACA,SACA,UACA,YACA,WACA,QACA,WACA,OACA,YACA,WACA,WACA,UACA,MACA,YACA,SACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,YACA,UACA,WACA,UACA,YACA,QACA,SACA,WACA,SACA,YACA,WACA,UACA,WACA,YACA,YACA,YACA,WACA,MACA,SACA,WACA,UACA,YACA,WACA,WACA,WACA,QACA,YACA,WACA,YACA,YACA,UACA,WACA,SACA,QACA,OACA,WACA,YACA,SACA,WACA,YACA,SACA,YACA,QACA,QACA,YACA,WACA,UACA,WACA,UACA,WACA,QACA,YACA,YACA,QACA,QACA,UACA,OACA,QACA,SACA,QACA,SACA,OACA,OACA,MACA,MACA,WACA,QACA,OACA,SACA,UACA,WACA,WACA,YACA,YACA,SACA,WACA,QACA,YACA,UACA,QACA,QACA,WACA,UACA,YACA,SACA,QACA,YACA,QACA,YACA,WACA,SACA,UACA,YACA,WACA,QACA,QACA,SACA,YACA,QACA,UACA,UACA,SACA,YACA,QACA,UACA,SACA,WACA,OACA,YACA,YACA,SACA,OACA,SACA,SACA,SACA,UACA,YACA,UACA,OACA,QACA,MACA,OACA,OACA,SACA,QACA,YACA,OACA,SACA,SACA,UACA,QACA,SACA,UACA,YACA,WACA,SACA,WACA,UACA,SACA,WACA,WACA,WACA,YACA,OACA,SACA,UACA,SACA,WACA,SACA,WACA,SACA,YACA,SACA,SACA,WACA,WACA,YACA,WACA,YACA,YACA,UACA,UACA,OACA,SACA,OACA,UACA,QACA,OACA,MACA,YACA,SACA,WACA,WACA,SACA,UACA,QACA,OACA,SACA,WACA,WACA,QACA,QACA,SACA,SACA,WACA,YACA,QACA,WACA,QACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,WACA,UACA,WACA,YACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,WACA,YACA,QACA,SACA,QACA,MACA,MACA,QACA,MACA,YACA,WACA,WACA,SACA,WACA,UACA,WACA,YACA,SACA,YACA,OACA,UACA,YACA,YACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,SACA,YACA,SACA,UACA,YACA,YACA,WACA,WACA,SACA,QACA,SACA,UACA,SACA,UACA,UACA,OACA,MACA,OACA,WACA,OACA,MACA,QACA,WACA,QACA,OACA,UACA,WACA,OACA,WACA,UACA,WACA,UACA,QACA,SACA,WACA,OACA,WACA,QACA,UACA,YACA,UACA,OACA,SACA,OACA,OACA,OACA,OACA,UACA,OACA,OACA,WACA,UACA,YACA,YACA,YACA,WACA,QACA,UACA,WACA,SACA,WACA,WACA,YACA,YACA,MACA,YACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,UACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,WACA,QACA,WACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,UACA,YACA,YACA,UACA,UACA,SACA,UACA,UACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,SACA,OACA,QACA,OACA,UACA,UACA,WACA,UACA,WACA,WACA,YACA,YACA,WACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,UACA,YACA,YACA,YACA,UACA,WACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,WACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,UACA,YACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,UACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,UACA,WACA,WACA,WACA,UACA,YACA,WACA,YACA,MACA,SACA,UACA,YACA,UACA,YACA,SACA,WACA,SACA,QACA,QACA,YACA,UACA,WACA,WACA,WACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,QACA,SACA,UACA,SACA,YACA,OACA,WACA,YACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,WACA,QACA,WACA,OACA,YACA,QACA,UACA,WACA,YACA,UACA,YACA,SACA,QACA,YACA,YACA,SACA,QACA,UACA,UACA,WACA,YACA,SACA,UACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,WACA,WACA,YACA,SACA,UACA,YACA,SACA,SACA,QACA,UACA,UACA,SACA,WACA,SACA,SACA,UACA,UACA,UACA,SACA,UACA,YACA,SACA,UACA,YACA,QACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,UACA,UACA,YACA,WACA,WACA,WACA,QACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,YACA,SACA,WACA,YACA,OACA,WACA,UACA,QACA,YACA,UACA,SACA,YACA,YACA,SACA,WACA,QACA,YACA,WACA,SACA,SACA,UACA,UACA,WACA,SACA,QACA,QACA,SACA,UACA,WACA,UACA,SACA,SACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,UACA,SACA,OACA,SACA,WACA,UACA,SACA,UACA,UACA,YACA,WACA,UACA,YACA,QACA,SACA,UACA,WACA,YACA,MACA,WACA,UACA,QACA,YACA,YACA,YACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,QACA,OACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,QACA,OACA,YACA,YACA,SACA,YACA,QACA,SACA,WACA,QACA,YACA,SACA,YACA,YACA,QACA,UACA,UACA,SACA,UACA,YACA,SACA,UACA,YACA,QACA,YACA,QACA,SACA,WACA,UACA,UACA,WACA,QACA,UACA,QACA,SACA,UACA,UACA,SACA,WACA,UACA,WACA,WACA,UACA,WACA,YACA,YACA,WACA,WACA,SACA,UACA,YACA,YACA,UACA,WACA,YACA,WACA,UACA,UACA,WACA,UACA,YACA,WACA,QACA,WACA,QACA,SACA,YACA,SACA,WACA,YACA,UACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,UACA,WACA,SACA,OACA,YACA,UACA,QACA,MACA,OACA,OACA,OACA,UACA,UACA,WACA,YACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,WACA,QACA,OACA,YACA,UACA,YACA,UACA,SACA,OACA,OACA,UACA,OACA,SACA,SACA,QACA,WACA,WACA,UACA,WACA,YACA,OACA,SACA,WACA,WACA,SACA,YACA,WACA,UACA,SACA,WACA,QACA,OACA,SACA,WACA,WACA,SACA,UACA,SACA,UACA,WACA,SACA,SACA,UACA,YACA,UACA,UACA,QACA,SACA,WACA,QACA,UACA,OACA,WACA,YACA,UACA,QACA,SACA,MACA,WACA,SACA,WACA,UACA,WACA,YACA,SACA,UACA,WACA,YACA,UACA,WACA,WACA,UACA,YACA,UACA,SACA,WACA,YACA,UACA,UACA,SACA,YACA,YACA,UACA,YACA,WACA,YACA,YACA,SACA,UACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,SACA,UACA,SACA,YACA,YACA,YACA,SACA,UACA,YACA,UACA,QACA,UACA,YACA,UACA,YACA,YACA,WACA,UACA,SACA,UACA,UACA,YACA,UACA,UACA,WACA,SACA,YACA,WACA,QACA,SACA,YACA,UACA,UACA,SACA,QACA,WACA,QACA,QACA,QACA,SACA,SACA,WACA,UACA,UACA,YACA,QACA,YACA,WACA,WACA,YACA,QACA,UACA,YACA,UACA,YACA,UACA,WACA,YACA,WACA,WACA,UACA,UACA,UACA,UACA,YACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,UACA,WACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,QACA,QACA,YACA,SACA,WACA,YACA,SACA,YACA,WACA,WACA,YACA,WACA,UACA,QACA,UACA,YACA,WACA,SACA,YACA,YACA,WACA,WACA,QACA,WACA,SACA,SACA,WACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,UACA,UACA,WACA,YACA,QACA,SACA,QACA,YACA,QACA,UACA,MACA,UACA,SACA,YACA,SACA,SACA,MACA,OACA,YACA,OACA,UACA,QACA,YACA,OACA,SACA,SACA,QACA,WACA,YACA,YACA,UACA,WACA,OACA,QACA,SACA,QACA,WACA,YACA,WACA,SACA,WACA,YACA,QACA,UACA,WACA,SACA,SACA,UACA,SACA,SACA,WACA,YACA,OACA,QACA,YACA,WACA,UACA,WACA,WACA,YACA,SACA,YACA,UACA,WACA,UACA,SACA,QACA,UACA,OACA,SACA,WACA,UACA,YACA,SACA,QACA,WACA,QACA,WACA,QACA,UACA,YACA,YACA,UACA,UACA,QACA,UACA,UACA,SACA,YACA,YACA,WACA,UACA,SACA,QACA,UACA,UACA,YACA,YACA,YACA,QACA,QACA,QACA,UACA,YACA,QACA,OACA,SACA,YACA,WACA,YACA,QACA,QACA,OACA,SACA,SACA,OACA,SACA,QACA,SACA,WACA,YACA,WACA,YACA,WACA,QACA,SACA,SACA,OACA,OACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,UACA,SACA,OACA,SACA,QACA,SACA,WACA,OACA,SACA,QACA,YACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,SACA,SACA,OACA,UACA,SACA,QACA,SACA,SACA,UACA,YACA,WACA,QACA,YACA,WACA,WACA,UACA,WACA,OACA,YACA,WACA,UACA,YACA,YACA,YACA,WACA,SACA,WACA,WACA,WACA,UACA,YACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,SACA,SACA,YACA,SACA,SACA,SACA,SACA,YACA,YACA,UACA,SACA,WACA,UACA,WACA,YACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,YACA,SACA,SACA,UACA,SACA,WACA,WACA,SACA,YACA,YACA,UACA,WACA,WACA,YACA,WACA,UACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,YACA,UACA,WACA,WACA,WACA,YACA,YACA,SACA,SACA,UACA,SACA,WACA,WACA,WACA,WACA,YACA,UACA,UACA,WACA,UACA,UACA,YACA,SACA,YACA,YACA,UACA,SACA,WACA,YACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,WACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,YACA,QACA,SACA,SACA,YACA,YACA,UACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,YACA,UACA,WACA,WACA,QACA,QACA,UACA,UACA,YACA,WACA,WACA,WACA,UACA,QACA,UACA,YACA,UACA,SACA,SACA,SACA,WACA,SACA,YACA,OACA,SACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,YACA,YACA,QACA,UACA,YACA,SACA,UACA,SACA,YACA,UACA,UACA,UACA,WACA,SACA,WACA,YACA,YACA,WACA,YACA,YACA,UACA,UACA,WACA,WACA,YACA,WACA,SACA,SACA,SACA,WACA,UACA,SACA,UACA,YACA,YACA,UACA,SACA,SACA,WACA,YACA,SACA,WACA,WACA,SACA,WACA,UACA,SACA,UACA,QACA,WACA,SACA,YACA,SACA,YACA,YACA,UACA,UACA,WACA,YACA,YACA,YACA,OACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,YACA,UACA,QACA,SACA,WACA,UACA,SACA,WACA,WACA,WACA,WACA,SACA,SACA,QACA,UACA,UACA,YACA,YACA,YACA,WACA,WACA,UACA,WACA,YACA,YACA,YACA,SACA,WACA,WACA,WACA,WACA,SACA,WACA,UACA,WACA,SACA,SACA,WACA,YACA,YACA,SACA,WACA,YACA,SACA,YACA,YACA,UACA,UACA,UACA,UACA,WACA,SACA,SACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YACA,YACA,QACA,SACA,UACA,SACA,UACA,UACA,WACA,QACA,SACA,UACA,UACA,UACA,SACA,UACA,YACA,WACA,WACA,UACA,YACA,YACA,SACA,YACA,SACA,WACA,UACA,YACA,UACA,UACA,WACA,YACA,SACA,SACA,WACA,YACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,WACA,SACA,OACA,SACA,UACA,OACA,UACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,UACA,OACA,UACA,WACA,WACA,UACA,SACA,WACA,UACA,OACA,SACA,OACA,UACA,UACA,QACA,QACA,YACA,WACA,YACA,YACA,UACA,WACA,SACA,UACA,QACA,UACA,OACA,QACA,WACA,SACA,WACA,SACA,SACA,WACA,YACA,UACA,WACA,YACA,WACA,QACA,QACA,QACA,OACA,OACA,SACA,SACA,OACA,SACA,UACA,UACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,UACA,QACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,OACA,SACA,SACA,MACA,SACA,OACA,SACA,WACA,UACA,QACA,YACA,UACA,SACA,UACA,QACA,OACA,SACA,UACA,QACA,OACA,OACA,OACA,MACA,UACA,WACA,YACA,SACA,YACA,SACA,YACA,UACA,WACA,QACA,UACA,SACA,YACA,YACA,SACA,WACA,UACA,OACA,OACA,UACA,QACA,OACA,QACA,OACA,QACA,SACA,WACA,SACA,SACA,QACA,SACA,QACA,OACA,WACA,SACA,UACA,YACA,YACA,OACA,SACA,WACA,WACA,WACA,YACA,SACA,UACA,WACA,UACA,YACA,UACA,SACA,WACA,UACA,UACA,YACA,UACA,YACA,YACA,WACA,QACA,WACA,YACA,OACA,QACA,UACA,YACA,QACA,UACA,YACA,UACA,OACA,YACA,QACA,UACA,WACA,QACA,YACA,YACA,UACA,WACA,WACA,YACA,QACA,QACA,SACA,UACA,QACA,UACA,SACA,QACA,YACA,MACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,UACA,WACA,OACA,UACA,UACA,WACA,QACA,YACA,SACA,WACA,YACA,SACA,QACA,UACA,YACA,WACA,QACA,YACA,SACA,WACA,YACA,SACA,WACA,YACA,WACA,UACA,UACA,YACA,QACA,QACA,WACA,QACA,QACA,UACA,QACA,SACA,YACA,YACA,SACA,YACA,SACA,UACA,QACA,WACA,SACA,YACA,UACA,WACA,WACA,SACA,WACA,WACA,WACA,YACA,YACA,QACA,UACA,UACA,SACA,WACA,SACA,WACA,YACA,SACA,SACA,UACA,YACA,WACA,WACA,UACA,UACA,WACA,QACA,QACA,WACA,YACA,SACA,UACA,WACA,YACA,YACA,SACA,UACA,SACA,YACA,SACA,UACA,WACA,WACA,QACA,SACA,WACA,WACA,WACA,SACA,WACA,UACA,UACA,UACA,SACA,WACA,YACA,YACA,WACA,OACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,SACA,UACA,OACA,SACA,WACA,YACA,YACA,YACA,YACA,WACA,QACA,YACA,SACA,SACA,SACA,WACA,YACA,SACA,SACA,YACA,UACA,WACA,QACA,UACA,UACA,SACA,WACA,UACA,UACA,SACA,WACA,QACA,YACA,YACA,UACA,UACA,WACA,SACA,QACA,SACA,UACA,YACA,UACA,SACA,QACA,QACA,WACA,UACA,YACA,UACA,QACA,QACA,UACA,UACA,QACA,UACA,WACA,QACA,SACA,QACA,UACA,QACA,YACA,UACA,UACA,UACA,YACA,QACA,SACA,OACA,QACA,QACA,QACA,QACA,UACA,SACA,WACA,SACA,SACA,UACA,WACA,YACA,SACA,UACA,SACA,UACA,QACA,UACA,YACA,UACA,QACA,OACA,QACA,YACA,QACA,QACA,WACA,UACA,WACA,WACA,QACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,YACA,SACA,QACA,QACA,UACA,WACA,WACA,SACA,WACA,UACA,UACA,QACA,UACA,YACA,YACA,WACA,QACA,SACA,WACA,WACA,YACA,WACA,SACA,SACA,SACA,SACA,SACA,UACA,WACA,YACA,SACA,QACA,SACA,WACA,UACA,UACA,YACA,OACA,QACA,OACA,MACA,UACA,WACA,UACA,SACA,SACA,SACA,OACA,UACA,WACA,WACA,SACA,SACA,UACA,OACA,YACA,QACA,OACA,OACA,SACA,YACA,SACA,YACA,SACA,WACA,SACA,UACA,YACA,SACA,UACA,SACA,WACA,WACA,UACA,SACA,UACA,MACA,QACA,SACA,SACA,SACA,UACA,WACA,YACA,UACA,UACA,QACA,UACA,WACA,YACA,UACA,UACA,OACA,SACA,SACA,WACA,SACA,UACA,YACA,WACA,WACA,UACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,UACA,UACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,SACA,YACA,UACA,WACA,WACA,QACA,UACA,WACA,WACA,UACA,QACA,YACA,UACA,OACA,UACA,UACA,WACA,YACA,SACA,QACA,OACA,UACA,QACA,WACA,YACA,UACA,WACA,QACA,UACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,YACA,SACA,SACA,UACA,QACA,SACA,YACA,UACA,WACA,YACA,WACA,WACA,QACA,WACA,YACA,SACA,OACA,OACA,SACA,WACA,SACA,SACA,UACA,WACA,SACA,OACA,YACA,UACA,SACA,OACA,OACA,QACA,QACA,MACA,QACA,UACA,YACA,UACA,WACA,UACA,QACA,WACA,QACA,YACA,QACA,QACA,QACA,UACA,QACA,OACA,SACA,YACA,YACA,UACA,QACA,UACA,SACA,UACA,SACA,SACA,WACA,YACA,SACA,WACA,QACA,UACA,UACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,WACA,QACA,QACA,UACA,WACA,SACA,UACA,SACA,QACA,UACA,UACA,QACA,QACA,WACA,YACA,YACA,UACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,WACA,WACA,YACA,WACA,QACA,OACA,QACA,UACA,SACA,WACA,QACA,YACA,YACA,WACA,YACA,UACA,WACA,UACA,WACA,SACA,YACA,YACA,WACA,YACA,SACA,QACA,YACA,UACA,WACA,YACA,UACA,WACA,QACA,OACA,SACA,YACA,SACA,SACA,QACA,SACA,QACA,QACA,UACA,SACA,UACA,UACA,WACA,UACA,WACA,QACA,SACA,WACA,YACA,UACA,YACA,WACA,YACA,UACA,WACA,SACA,WACA,WACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,UACA,WACA,SACA,SACA,YACA,SACA,SACA,UACA,QACA,WACA,SACA,QACA,QACA,QACA,WACA,SACA,SACA,WACA,YACA,UACA,UACA,WACA,SACA,UACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,YACA,YACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,OACA,UACA,WACA,WACA,QACA,SACA,WACA,SACA,WACA,WACA,YACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,QACA,WACA,WACA,SACA,SACA,SACA,YACA,UACA,YACA,YACA,SACA,QACA,UACA,QACA,QACA,UACA,WACA,WACA,YACA,UACA,WACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,QACA,QACA,QACA,SACA,WACA,YACA,SACA,UACA,WACA,WACA,YACA,UACA,QACA,WACA,UACA,YACA,UACA,WACA,SACA,WACA,UACA,WACA,UACA,YACA,UACA,UACA,WACA,QACA,QACA,SACA,YACA,SACA,UACA,SACA,UACA,YACA,UACA,QACA,YACA,WACA,WACA,YACA,QACA,QACA,QACA,YACA,WACA,YACA,YACA,UACA,OACA,SACA,UACA,OACA,SACA,UACA,YACA,YACA,WACA,YACA,UACA,OACA,QACA,UACA,UACA,YACA,SACA,WACA,YACA,QACA,YACA,YACA,UACA,WACA,UACA,WACA,WACA,WACA,SACA,WACA,SACA,UACA,YACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,YACA,YACA,YACA,UACA,QACA,QACA,SACA,QACA,QACA,YACA,YACA,WACA,UACA,UACA,WACA,YACA,WACA,UACA,YACA,YACA,QACA,QACA,QACA,WACA,UACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,UACA,QACA,QACA,SACA,SACA,SACA,WACA,YACA,QACA,SACA,UACA,SACA,WACA,SACA,SACA,SACA,SACA,WACA,SACA,WACA,SACA,SACA,WACA,YACA,WACA,YACA,SACA,YACA,UACA,WACA,QACA,SACA,QACA,UACA,UACA,UACA,WACA,SACA,QACA,UACA,UACA,SACA,QACA,UACA,WACA,SACA,UACA,YACA,QACA,QACA,UACA,UACA,WACA,QACA,SACA,WACA,SACA,UACA,YACA,UACA,WACA,SACA,QACA,YACA,YACA,YACA,UACA,WACA,WACA,WACA,YACA,UACA,WACA,SACA,WACA,UACA,YACA,WACA,YACA,YACA,WACA,SACA,UACA,WACA,YACA,YACA,YACA,UACA,YACA,YACA,UACA,UACA,WACA,YACA,YACA,UACA,WACA,SACA,WACA,WACA,UACA,SACA,SACA,YACA,UACA,YACA,OACA,UACA,SACA,SACA,OACA,WACA,YACA,UACA,SACA,YACA,WACA,QACA,UACA,QACA,WACA,WACA,WACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,WACA,YACA,SACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,SACA,WACA,SACA,UACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,YACA,SACA,UACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,YACA,YACA,WACA,SACA,WACA,UACA,YACA,WACA,QACA,UACA,UACA,WACA,YACA,YACA,OACA,YACA,UACA,YACA,OACA,WACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,UACA,UACA,YACA,YACA,UACA,WACA,WACA,WACA,UACA,WACA,QACA,QACA,SACA,SACA,UACA,UACA,QACA,SACA,QACA,QACA,QACA,WACA,WACA,YACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,YACA,YACA,QACA,SACA,UACA,UACA,QACA,WACA,SACA,SACA,YACA,UACA,YACA,UACA,SACA,WACA,QACA,OACA,UACA,WACA,UACA,UACA,WACA,UACA,YACA,MACA,UACA,OACA,SACA,SACA,WACA,OACA,QACA,SACA,WACA,QACA,SACA,OACA,SACA,UACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,UACA,OACA,YACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,OACA,SACA,QACA,YACA,UACA,QACA,WACA,SACA,WACA,SACA,QACA,SACA,QACA,OACA,OACA,UACA,YACA,OACA,QACA,QACA,WACA,WACA,UACA,UACA,YACA,QACA,SACA,WACA,UACA,UACA,YACA,WACA,WACA,QACA,UACA,QACA,QACA,SACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,SACA,QACA,QACA,QACA,WACA,SACA,SACA,WACA,YACA,SACA,SACA,SACA,WACA,SACA,YACA,SACA,WACA,YACA,YACA,UACA,WACA,OACA,QACA,WACA,WACA,OACA,YACA,UACA,QACA,QACA,QACA,SACA,WACA,UACA,OACA,QACA,UACA,UACA,YACA,YACA,WACA,UACA,OACA,SACA,OACA,OACA,QACA,SACA,UACA,YACA,UACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,OACA,UACA,OACA,SACA,SACA,SACA,UACA,YACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,UACA,QACA,UACA,YACA,UACA,UACA,WACA,YACA,QACA,UACA,SACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,QACA,QACA,SACA,WACA,WACA,OACA,YACA,WACA,YACA,UACA,QACA,SACA,OACA,UACA,UACA,YACA,SACA,SACA,QACA,WACA,SACA,QACA,WACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,WACA,WACA,UACA,YACA,SACA,WACA,WACA,UACA,QACA,SACA,YACA,WACA,UACA,YACA,UACA,WACA,WACA,UACA,OACA,SACA,WACA,UACA,UACA,UACA,WACA,WACA,SACA,WACA,UACA,UACA,YACA,SACA,WACA,QACA,SACA,QACA,QACA,UACA,QACA,SACA,YACA,UACA,WACA,WACA,YACA,QACA,MACA,QACA,WACA,UACA,UACA,UACA,MACA,UACA,QACA,SACA,WACA,QACA,SACA,UACA,WACA,WACA,YACA,OACA,SACA,UACA,SACA,SACA,OACA,QACA,OACA,MACA,QACA,QACA,QACA,WACA,SACA,YACA,SACA,QACA,QACA,UACA,YACA,OACA,WACA,QACA,QACA,QACA,YACA,UACA,UACA,WACA,SACA,SACA,UACA,SACA,QACA,OACA,QACA,WACA,YACA,QACA,YACA,WACA,SACA,YACA,SACA,YACA,YACA,WACA,UACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,UACA,YACA,WACA,SACA,SACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,UACA,WACA,WACA,YACA,UACA,YACA,YACA,UACA,UACA,SACA,YACA,YACA,UACA,QACA,SACA,UACA,SACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,SACA,YACA,YACA,WACA,UACA,UACA,UACA,UACA,YACA,UACA,YACA,WACA,QACA,YACA,UACA,YACA,SACA,YACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,YACA,YACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,UACA,SACA,YACA,UACA,YACA,WACA,UACA,WACA,UACA,SACA,WACA,SACA,YACA,UACA,WACA,YACA,WACA,YACA,WACA,UACA,YACA,SACA,YACA,YACA,YACA,SACA,WACA,UACA,YACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,SACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,SACA,UACA,WACA,YACA,YACA,WACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,YACA,WACA,UACA,YACA,SACA,SACA,UACA,WACA,UACA,UACA,YACA,YACA,QACA,YACA,YACA,YACA,YACA,YACA,QACA,WACA,YACA,SACA,WACA,OACA,YACA,WACA,WACA,UACA,SACA,YACA,YACA,UACA,UACA,UACA,WACA,WACA,YACA,UACA,SACA,YACA,YACA,YACA,YACA,UACA,WACA,WACA,QACA,YACA,WACA,WACA,WACA,YACA,YACA,UACA,WACA,WACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,UACA,WACA,UACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,UACA,YACA,YACA,WACA,YACA,SACA,WACA,SACA,YACA,WACA,UACA,WACA,WACA,YACA,WACA,YACA,YACA,YACA,YACA,WACA,SACA,YACA,WACA,UACA,WACA,UACA,YACA,YACA,SACA,SACA,YACA,YACA,YACA,WACA,SACA,YACA,YACA,WACA,SACA,YACA,YACA,UACA,SACA,YACA,SACA,WACA,WACA,SACA,SACA,WACA,UACA,WACA,YACA,YACA,UACA,WACA,WACA,YACA,WACA,WACA,SACA,WACA,YACA,SACA,YACA,YACA,WACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,SACA,WACA,WACA,SACA,WACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,YACA,UACA,YACA,YACA,WACA,WACA,WACA,SACA,UACA,WACA,YACA,UACA,UACA,YACA,WACA,UACA,WACA,WACA,SACA,QACA,QACA,UACA,WACA,WACA,YACA,SACA,YACA,YACA,YACA,YACA,UACA,YACA,SACA,UACA,WACA,UACA,UACA,WACA,SACA,UACA,WACA,WACA,YACA,WACA,YACA,WACA,WACA,YACA,UACA,WACA,YACA,SACA,WACA,YACA,UACA,QACA,YACA,SACA,WACA,YACA,SACA,UACA,YACA,YACA,YACA,SACA,YACA,WACA,UACA,UACA,YACA,YACA,QACA,SACA,UACA,WACA,YACA,SACA,UACA,UACA,WACA,SACA,SACA,SACA,WACA,YACA,SACA,OACA,QACA,UACA,WACA,UACA,SACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,WACA,WACA,UACA,SACA,UACA,SACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,UACA,SACA,SACA,YACA,UACA,SACA,QACA,UACA,OACA,YACA,OACA,QACA,QACA,UACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,SACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,QACA,SACA,SACA,YACA,QACA,UACA,SACA,SACA,WACA,UACA,YACA,WACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,SACA,WACA,OACA,QACA,SACA,YACA,SACA,WACA,SACA,WACA,UACA,SACA,YACA,WACA,WACA,YACA,UACA,QACA,QACA,YACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,YACA,WACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,YACA,SACA,QACA,OACA,WACA,UACA,QACA,WACA,SACA,UACA,WACA,YACA,WACA,UACA,UACA,YACA,WACA,UACA,UACA,YACA,WACA,SACA,SACA,QACA,QACA,UACA,WACA,QACA,OACA,YACA,UACA,WACA,UACA,UACA,SACA,WACA,UACA,QACA,QACA,WACA,WACA,UACA,WACA,YACA,UACA,YACA,QACA,WACA,WACA,UACA,WACA,QACA,UACA,OACA,WACA,SACA,UACA,UACA,QACA,SACA,UACA,QACA,QACA,SACA,YACA,MACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,SACA,UACA,SACA,WACA,YACA,YACA,WACA,YACA,UACA,SACA,SACA,YACA,UACA,UACA,WACA,YACA,UACA,OACA,UACA,QACA,QACA,WACA,SACA,OACA,WACA,SACA,OACA,QACA,QACA,WACA,QACA,YACA,SACA,QACA,WACA,UACA,QACA,WACA,UACA,WACA,SACA,MACA,OACA,SACA,QACA,SACA,QACA,QACA,YACA,UACA,OACA,OACA,YACA,WACA,UACA,SACA,WACA,WACA,WACA,WACA,SACA,WACA,SACA,YACA,UACA,SACA,YACA,OACA,OACA,QACA,UACA,OACA,OACA,UACA,SACA,WACA,SACA,OACA,QACA,WACA,SACA,OACA,SACA,OACA,OACA,WACA,QACA,UACA,SACA,SACA,WACA,SACA,MACA,OACA,YACA,YACA,YACA,YACA,YACA,UACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,UACA,YACA,QACA,YACA,YACA,QACA,QACA,QACA,MACA,UACA,QACA,SACA,WACA,UACA,WACA,SACA,UACA,UACA,UACA,UACA,QACA,UACA,UACA,YACA,UACA,WACA,UACA,YACA,UACA,OACA,QACA,QACA,MACA,UACA,UACA,OACA,OACA,OACA,WACA,WACA,SACA,WACA,QACA,UACA,OACA,MACA,YACA,UACA,QACA,MACA,SACA,QACA,QACA,OACA,SACA,SACA,OACA,QACA,MACA,UACA,QACA,MACA,WACA,OACA,YACA,QACA,YACA,UACA,UACA,QACA,OACA,MACA,SACA,SACA,OACA,SACA,YACA,YACA,UACA,S,y+CCjmPJ,aAEA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CA,GAAAC,gBACA,GAAAznC,sBACA,GAAA5vB,qBACA,GAAAjB,oBACA,GAAAc,kBACA,GAAAT,qBACA,GAAAK,mBACA,GAAA9iD,iBACA,GAAAmuE,qBACA,GAAAgC,mBACA,GAAAzgC,wBACA,GAAAkwB,oBACA,GAAA9kC,iBACA,GAAAumB,qBACA,GAAAmD,kBACA,GAAA8rB,4BACA,GAAAxD,6BACA,GAAAE,uBACA,GAAA5Q,4BACA,GAAA6U,qBACA,GAAA7Q,yBACA,GAAA4X,gCACA,GAAAlB,oCACA,GAAAwC,yBACA,GAAAlB,gCACA,GAAAa,iCACA,GAAA5B,6BACA,GAAAV,0BACA,GAAA78B,gBACA,GAAAS,gCACA,GAAAgqB,qBACA,GAAAmQ,uBACA,EAAAxmC,gBACA,EAAA6W,wBACA,GAAA/a,mBACA,EAAAse,cACA,GAAA9qD,SACA,GAAA2a,cACA,GAAA0lC,gBACA,GAAAY,iCACA,GAAA1vC,uBACA,GAAAmjE,iBACA,EAAAxpB,cACA,EAAAU,eACA,EAAAr0C,eACA,EAAAg5B,gBACA,GAAAikC,iBACA,mBACA,oBACA,GAAA5U,6BACA,GAAAz1B,2BACA,GAAA23B,kCACA,wBACA,sBACA,uBACA,sBACA,oBACA,6BACA,wBACA,wBACA,uBACA,kBACA,mBACA,mCACA,mBACA,oCACA,wBACA,sBACA,kBACA,uBACA,kBACA,kBACA,sBACA,oBACA,yBACA,kCACA,qBACA,kBACA,2BACA,uBACA,uBACA,sBACA,GAAA1xB,uBACA,EAAA0Y,4BACA,oCACA,kBACA,gCACA,GAAAktB,2BACA,GAAAJ,kCACA,EAAAnsD,0BACA,GAAA9I,iBACA,GAAAs0D,iBACA,GAAA9E,iBACA,GAAA76B,oBACA,EAAAyW,uBACA,EAAAG,0BACA,EAAAS,kBACA,GAAAtL,+BACA,GAAA87D,kBACA,GAAApzF,WACA,GAAA48B,oBACA,oBACA,GAAAooB,cACA,GAAA7L,kBACA,GAAA6T,eACA,EAAA9pB,aACA,GAAAh8C,mBACA,GAAAU,kBACA,GAAAwS,iBACA,GAAA6iD,eACA,GAAA37B,wB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","file":"app/main.16c1bcad047c7c14d2e3.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([866,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export abstract class I18nService {\n    locale: string;\n    supportedTranslationLocales: string[];\n    translationLocale: string;\n    collator: Intl.Collator;\n    localeNames: Map<string, string>;\n    t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n    translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { DeviceType } from '../enums/deviceType';\n\nexport abstract class PlatformUtilsService {\n    identityClientId: string;\n    getDevice: () => DeviceType;\n    getDeviceString: () => string;\n    isFirefox: () => boolean;\n    isChrome: () => boolean;\n    isEdge: () => boolean;\n    isOpera: () => boolean;\n    isVivaldi: () => boolean;\n    isSafari: () => boolean;\n    isIE: () => boolean;\n    isMacAppStore: () => boolean;\n    isViewOpen: () => Promise<boolean>;\n    /**\n     * @deprecated This only ever returns null. Pull from your platform's storage using ConstantsService.vaultTimeoutKey\n     */\n    lockTimeout: () => number;\n    launchUri: (uri: string, options?: any) => void;\n    saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\n    getApplicationVersion: () => Promise<string>;\n    supportsWebAuthn: (win: Window) => boolean;\n    supportsDuo: () => boolean;\n    showToast: (type: 'error' | 'success' | 'warning' | 'info', title: string, text: string | string[],\n        options?: any) => void;\n    showDialog: (body: string, title?: string, confirmText?: string, cancelText?: string,\n        type?: string, bodyIsHtml?: boolean) => Promise<boolean>;\n    showPasswordDialog: (title: string, body: string, passwordValidation: (value: string) => Promise<boolean>) => Promise<boolean>;\n    isDev: () => boolean;\n    isSelfHost: () => boolean;\n    copyToClipboard: (text: string, options?: any) => void | boolean;\n    readFromClipboard: (options?: any) => Promise<string>;\n    supportsBiometric: () => Promise<boolean>;\n    authenticateBiometric: () => Promise<boolean>;\n    getDefaultSystemTheme: () => Promise<'light' | 'dark'>;\n    onDefaultSystemThemeChange: (callback: ((theme: 'light' | 'dark') => unknown)) => unknown;\n    supportsSecureStorage: () => boolean;\n}\n","import { PolicyType } from '../enums/policyType';\n\nimport { EnvironmentUrls } from '../models/domain/environmentUrls';\nimport { AttachmentRequest } from '../models/request/attachmentRequest';\n\nimport { BitPayInvoiceRequest } from '../models/request/bitPayInvoiceRequest';\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkRestoreRequest } from '../models/request/cipherBulkRestoreRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { DeleteRecoverRequest } from '../models/request/deleteRecoverRequest';\nimport { EmailRequest } from '../models/request/emailRequest';\nimport { EmailTokenRequest } from '../models/request/emailTokenRequest';\nimport { EmergencyAccessAcceptRequest } from '../models/request/emergencyAccessAcceptRequest';\nimport { EmergencyAccessConfirmRequest } from '../models/request/emergencyAccessConfirmRequest';\nimport { EmergencyAccessInviteRequest } from '../models/request/emergencyAccessInviteRequest';\nimport { EmergencyAccessPasswordRequest } from '../models/request/emergencyAccessPasswordRequest';\nimport { EmergencyAccessUpdateRequest } from '../models/request/emergencyAccessUpdateRequest';\nimport { EventRequest } from '../models/request/eventRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { GroupRequest } from '../models/request/groupRequest';\nimport { IapCheckRequest } from '../models/request/iapCheckRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportDirectoryRequest } from '../models/request/importDirectoryRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KdfRequest } from '../models/request/kdfRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { OrganizationCreateRequest } from '../models/request/organizationCreateRequest';\nimport { OrganizationImportRequest } from '../models/request/organizationImportRequest';\nimport { OrganizationKeysRequest } from '../models/request/organizationKeysRequest';\nimport { OrganizationTaxInfoUpdateRequest } from '../models/request/organizationTaxInfoUpdateRequest';\nimport { OrganizationUpdateRequest } from '../models/request/organizationUpdateRequest';\nimport { OrganizationUpgradeRequest } from '../models/request/organizationUpgradeRequest';\nimport { OrganizationUserAcceptRequest } from '../models/request/organizationUserAcceptRequest';\nimport { OrganizationUserBulkConfirmRequest } from '../models/request/organizationUserBulkConfirmRequest';\nimport { OrganizationUserBulkRequest } from '../models/request/organizationUserBulkRequest';\nimport { OrganizationUserConfirmRequest } from '../models/request/organizationUserConfirmRequest';\nimport { OrganizationUserInviteRequest } from '../models/request/organizationUserInviteRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from '../models/request/organizationUserResetPasswordEnrollmentRequest';\nimport { OrganizationUserResetPasswordRequest } from '../models/request/organizationUserResetPasswordRequest';\nimport { OrganizationUserUpdateGroupsRequest } from '../models/request/organizationUserUpdateGroupsRequest';\nimport { OrganizationUserUpdateRequest } from '../models/request/organizationUserUpdateRequest';\nimport { PasswordHintRequest } from '../models/request/passwordHintRequest';\nimport { PasswordRequest } from '../models/request/passwordRequest';\nimport { PasswordVerificationRequest } from '../models/request/passwordVerificationRequest';\nimport { PaymentRequest } from '../models/request/paymentRequest';\nimport { PolicyRequest } from '../models/request/policyRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { RegisterRequest } from '../models/request/registerRequest';\nimport { SeatRequest } from '../models/request/seatRequest';\nimport { SelectionReadOnlyRequest } from '../models/request/selectionReadOnlyRequest';\nimport { SendAccessRequest } from '../models/request/sendAccessRequest';\nimport { SendRequest } from '../models/request/sendRequest';\nimport { SetPasswordRequest } from '../models/request/setPasswordRequest';\nimport { StorageRequest } from '../models/request/storageRequest';\nimport { TaxInfoUpdateRequest } from '../models/request/taxInfoUpdateRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\nimport { TwoFactorEmailRequest } from '../models/request/twoFactorEmailRequest';\nimport { TwoFactorProviderRequest } from '../models/request/twoFactorProviderRequest';\nimport { TwoFactorRecoveryRequest } from '../models/request/twoFactorRecoveryRequest';\nimport { UpdateDomainsRequest } from '../models/request/updateDomainsRequest';\nimport { UpdateKeyRequest } from '../models/request/updateKeyRequest';\nimport { UpdateProfileRequest } from '../models/request/updateProfileRequest';\nimport { UpdateTwoFactorAuthenticatorRequest } from '../models/request/updateTwoFactorAuthenticatorRequest';\nimport { UpdateTwoFactorDuoRequest } from '../models/request/updateTwoFactorDuoRequest';\nimport { UpdateTwoFactorEmailRequest } from '../models/request/updateTwoFactorEmailRequest';\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from '../models/request/updateTwoFactorWebAuthnDeleteRequest';\nimport { UpdateTwoFactorWebAuthnRequest } from '../models/request/updateTwoFactorWebAuthnRequest';\nimport { UpdateTwoFactorYubioOtpRequest } from '../models/request/updateTwoFactorYubioOtpRequest';\nimport { VerifyBankRequest } from '../models/request/verifyBankRequest';\nimport { VerifyDeleteRecoverRequest } from '../models/request/verifyDeleteRecoverRequest';\nimport { VerifyEmailRequest } from '../models/request/verifyEmailRequest';\n\nimport { ApiKeyResponse } from '../models/response/apiKeyResponse';\nimport { AttachmentResponse } from '../models/response/attachmentResponse';\nimport { AttachmentUploadDataResponse } from '../models/response/attachmentUploadDataResponse';\nimport { BillingResponse } from '../models/response/billingResponse';\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport {\n    CollectionGroupDetailsResponse,\n    CollectionResponse,\n} from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport {\n    EmergencyAccessGranteeDetailsResponse,\n    EmergencyAccessGrantorDetailsResponse,\n    EmergencyAccessTakeoverResponse,\n    EmergencyAccessViewResponse\n} from '../models/response/emergencyAccessResponse';\nimport { EventResponse } from '../models/response/eventResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    GroupDetailsResponse,\n    GroupResponse,\n} from '../models/response/groupResponse';\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\nimport { ListResponse } from '../models/response/listResponse';\nimport { OrganizationKeysResponse } from '../models/response/organizationKeysResponse';\nimport { OrganizationResponse } from '../models/response/organizationResponse';\nimport { OrganizationSubscriptionResponse } from '../models/response/organizationSubscriptionResponse';\nimport { OrganizationUserBulkPublicKeyResponse } from '../models/response/organizationUserBulkPublicKeyResponse';\nimport { OrganizationUserBulkResponse } from '../models/response/organizationUserBulkResponse';\nimport {\n    OrganizationUserDetailsResponse,\n    OrganizationUserResetPasswordDetailsReponse,\n    OrganizationUserUserDetailsResponse,\n} from '../models/response/organizationUserResponse';\nimport { PaymentResponse } from '../models/response/paymentResponse';\nimport { PlanResponse } from '../models/response/planResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\nimport { PreloginResponse } from '../models/response/preloginResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { SelectionReadOnlyResponse } from '../models/response/selectionReadOnlyResponse';\nimport { SendAccessResponse } from '../models/response/sendAccessResponse';\nimport { SendFileDownloadDataResponse } from '../models/response/sendFileDownloadDataResponse';\nimport { SendFileUploadDataResponse } from '../models/response/sendFileUploadDataResponse';\nimport { SendResponse } from '../models/response/sendResponse';\nimport { SubscriptionResponse } from '../models/response/subscriptionResponse';\nimport { SyncResponse } from '../models/response/syncResponse';\nimport { TaxInfoResponse } from '../models/response/taxInfoResponse';\nimport { TaxRateResponse } from '../models/response/taxRateResponse';\nimport { TwoFactorAuthenticatorResponse } from '../models/response/twoFactorAuthenticatorResponse';\nimport { TwoFactorDuoResponse } from '../models/response/twoFactorDuoResponse';\nimport { TwoFactorEmailResponse } from '../models/response/twoFactorEmailResponse';\nimport { TwoFactorProviderResponse } from '../models/response/twoFactorProviderResponse';\nimport { TwoFactorRecoverResponse } from '../models/response/twoFactorRescoverResponse';\nimport { ChallengeResponse, TwoFactorWebAuthnResponse } from '../models/response/twoFactorWebAuthnResponse';\nimport { TwoFactorYubiKeyResponse } from '../models/response/twoFactorYubiKeyResponse';\nimport { UserKeyResponse } from '../models/response/userKeyResponse';\n\nimport { SendAccessView } from '../models/view/sendAccessView';\n\nexport abstract class ApiService {\n    urlsSet: boolean;\n    apiBaseUrl: string;\n    identityBaseUrl: string;\n    eventsBaseUrl: string;\n\n    setUrls: (urls: EnvironmentUrls) => void;\n    postIdentityToken: (request: TokenRequest) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse>;\n    refreshIdentityToken: () => Promise<any>;\n\n    getProfile: () => Promise<ProfileResponse>;\n    getUserBilling: () => Promise<BillingResponse>;\n    getUserSubscription: () => Promise<SubscriptionResponse>;\n    getTaxInfo: () => Promise<TaxInfoResponse>;\n    putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n    putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n    postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n    postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n    postEmail: (request: EmailRequest) => Promise<any>;\n    postPassword: (request: PasswordRequest) => Promise<any>;\n    setPassword: (request: SetPasswordRequest) => Promise<any>;\n    postSecurityStamp: (request: PasswordVerificationRequest) => Promise<any>;\n    deleteAccount: (request: PasswordVerificationRequest) => Promise<any>;\n    getAccountRevisionDate: () => Promise<number>;\n    postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n    postRegister: (request: RegisterRequest) => Promise<any>;\n    postPremium: (data: FormData) => Promise<PaymentResponse>;\n    postIapCheck: (request: IapCheckRequest) => Promise<any>;\n    postReinstatePremium: () => Promise<any>;\n    postCancelPremium: () => Promise<any>;\n    postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n    postAccountPayment: (request: PaymentRequest) => Promise<any>;\n    postAccountLicense: (data: FormData) => Promise<any>;\n    postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n    postAccountKeys: (request: KeysRequest) => Promise<any>;\n    postAccountVerifyEmail: () => Promise<any>;\n    postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n    postAccountVerifyPassword: (request: PasswordVerificationRequest) => Promise<any>;\n    postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n    postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n    postAccountKdf: (request: KdfRequest) => Promise<any>;\n    getEnterprisePortalSignInToken: () => Promise<string>;\n    postUserApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    postUserRotateApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n\n    getFolder: (id: string) => Promise<FolderResponse>;\n    postFolder: (request: FolderRequest) => Promise<FolderResponse>;\n    putFolder: (id: string, request: FolderRequest) => Promise<FolderResponse>;\n    deleteFolder: (id: string) => Promise<any>;\n\n    getSend: (id: string) => Promise<SendResponse>;\n    postSendAccess: (id: string, request: SendAccessRequest, apiUrl?: string) => Promise<SendAccessResponse>;\n    getSends: () => Promise<ListResponse<SendResponse>>;\n    postSend: (request: SendRequest) => Promise<SendResponse>;\n    postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n    postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n    putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n    putSendRemovePassword: (id: string) => Promise<SendResponse>;\n    deleteSend: (id: string) => Promise<any>;\n    getSendFileDownloadData: (send: SendAccessView, request: SendAccessRequest, apiUrl?: string) => Promise<SendFileDownloadDataResponse>;\n    renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n    getCipher: (id: string) => Promise<CipherResponse>;\n    getCipherAdmin: (id: string) => Promise<CipherResponse>;\n    getAttachmentData: (cipherId: string, attachmentId: string, emergencyAccessId?: string) => Promise<AttachmentResponse>;\n    getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n    postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n    postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n    postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n    putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n    putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n    deleteCipher: (id: string) => Promise<any>;\n    deleteCipherAdmin: (id: string) => Promise<any>;\n    deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n    deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n    putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n    putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n    putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n    putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n    postPurgeCiphers: (request: PasswordVerificationRequest, organizationId?: string) => Promise<any>;\n    postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n    postImportOrganizationCiphers: (organizationId: string, request: ImportOrganizationCiphersRequest) => Promise<any>;\n    putDeleteCipher: (id: string) => Promise<any>;\n    putDeleteCipherAdmin: (id: string) => Promise<any>;\n    putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putRestoreCipher: (id: string) => Promise<CipherResponse>;\n    putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n    putRestoreManyCiphers: (request: CipherBulkRestoreRequest) => Promise<ListResponse<CipherResponse>>;\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n    postCipherAttachment: (id: string, request: AttachmentRequest) => Promise<AttachmentUploadDataResponse>;\n    deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n    deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n    postShareCipherAttachment: (id: string, attachmentId: string, data: FormData,\n        organizationId: string) => Promise<any>;\n    renewAttachmentUploadUrl: (id: string, attachmentId: string) => Promise<AttachmentUploadDataResponse>;\n    postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n    getCollectionDetails: (organizationId: string, id: string) => Promise<CollectionGroupDetailsResponse>;\n    getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n    getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n    getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n    postCollection: (organizationId: string, request: CollectionRequest) => Promise<CollectionResponse>;\n    putCollectionUsers: (organizationId: string, id: string, request: SelectionReadOnlyRequest[]) => Promise<any>;\n    putCollection: (organizationId: string, id: string, request: CollectionRequest) => Promise<CollectionResponse>;\n    deleteCollection: (organizationId: string, id: string) => Promise<any>;\n    deleteCollectionUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n    getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n    getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n    getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n    postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n    putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n    putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n    deleteGroup: (organizationId: string, id: string) => Promise<any>;\n    deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n    getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n    getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n    getPoliciesByToken: (organizationId: string, token: string, email: string, organizationUserId: string) =>\n        Promise<ListResponse<PolicyResponse>>;\n    putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<PolicyResponse>;\n\n    getOrganizationUser: (organizationId: string, id: string) => Promise<OrganizationUserDetailsResponse>;\n    getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n    getOrganizationUsers: (organizationId: string) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n    getOrganizationUserResetPasswordDetails: (organizationId: string, id: string)\n        => Promise<OrganizationUserResetPasswordDetailsReponse>;\n    postOrganizationUserInvite: (organizationId: string, request: OrganizationUserInviteRequest) => Promise<any>;\n    postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n    postManyOrganizationUserReinvite: (organizationId: string, request: OrganizationUserBulkRequest) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n    postOrganizationUserAccept: (organizationId: string, id: string,\n        request: OrganizationUserAcceptRequest) => Promise<any>;\n    postOrganizationUserConfirm: (organizationId: string, id: string,\n        request: OrganizationUserConfirmRequest) => Promise<any>;\n    postOrganizationUsersPublicKey: (organizationId: string, request: OrganizationUserBulkRequest) =>\n        Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n    postOrganizationUserBulkConfirm: (organizationId: string, request: OrganizationUserBulkConfirmRequest) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n    putOrganizationUser: (organizationId: string, id: string, request: OrganizationUserUpdateRequest) => Promise<any>;\n    putOrganizationUserGroups: (organizationId: string, id: string,\n        request: OrganizationUserUpdateGroupsRequest) => Promise<any>;\n    putOrganizationUserResetPasswordEnrollment: (organizationId: string, userId: string,\n        request: OrganizationUserResetPasswordEnrollmentRequest) => Promise<any>;\n    putOrganizationUserResetPassword: (organizationId: string, id: string,\n        request: OrganizationUserResetPasswordRequest) => Promise<any>;\n    deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n    deleteManyOrganizationUsers: (organizationId: string, request: OrganizationUserBulkRequest) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n    getSync: () => Promise<SyncResponse>;\n    postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n    postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n    getSettingsDomains: () => Promise<DomainsResponse>;\n    putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n    getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n    getTwoFactorOrganizationProviders: (organizationId: string) => Promise<ListResponse<TwoFactorProviderResponse>>;\n    getTwoFactorAuthenticator: (request: PasswordVerificationRequest) => Promise<TwoFactorAuthenticatorResponse>;\n    getTwoFactorEmail: (request: PasswordVerificationRequest) => Promise<TwoFactorEmailResponse>;\n    getTwoFactorDuo: (request: PasswordVerificationRequest) => Promise<TwoFactorDuoResponse>;\n    getTwoFactorOrganizationDuo: (organizationId: string,\n        request: PasswordVerificationRequest) => Promise<TwoFactorDuoResponse>;\n    getTwoFactorYubiKey: (request: PasswordVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n    getTwoFactorWebAuthn: (request: PasswordVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n    getTwoFactorWebAuthnChallenge: (request: PasswordVerificationRequest) => Promise<ChallengeResponse>;\n    getTwoFactorRecover: (request: PasswordVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n    putTwoFactorAuthenticator: (\n        request: UpdateTwoFactorAuthenticatorRequest) => Promise<TwoFactorAuthenticatorResponse>;\n    putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n    putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n    putTwoFactorOrganizationDuo: (organizationId: string,\n        request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n    putTwoFactorYubiKey: (request: UpdateTwoFactorYubioOtpRequest) => Promise<TwoFactorYubiKeyResponse>;\n    putTwoFactorWebAuthn: (request: UpdateTwoFactorWebAuthnRequest) => Promise<TwoFactorWebAuthnResponse>;\n    deleteTwoFactorWebAuthn: (request: UpdateTwoFactorWebAuthnDeleteRequest) => Promise<TwoFactorWebAuthnResponse>;\n    putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n    putTwoFactorOrganizationDisable: (organizationId: string,\n        request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n    postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n    postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n    postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n\n    getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n    getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n    getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n    getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n    putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n    deleteEmergencyAccess: (id: string) => Promise<any>;\n    postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n    postEmergencyAccessReinvite: (id: string) => Promise<any>;\n    postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n    postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n    postEmergencyAccessInitiate: (id: string) => Promise<any>;\n    postEmergencyAccessApprove: (id: string) => Promise<any>;\n    postEmergencyAccessReject: (id: string) => Promise<any>;\n    postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n    postEmergencyAccessPassword: (id: string, request: EmergencyAccessPasswordRequest) => Promise<any>;\n    postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n\n    getOrganization: (id: string) => Promise<OrganizationResponse>;\n    getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n    getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n    getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n    getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n    postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n    putOrganization: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n    putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n    postLeaveOrganization: (id: string) => Promise<any>;\n    postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n    postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n    postOrganizationApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    postOrganizationRotateApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    postOrganizationUpgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n    postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n    postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n    postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n    postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n    postOrganizationCancel: (id: string) => Promise<any>;\n    postOrganizationReinstate: (id: string) => Promise<any>;\n    deleteOrganization: (id: string, request: PasswordVerificationRequest) => Promise<any>;\n    getPlans: () => Promise<ListResponse<PlanResponse>>;\n    getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n    getOrganizationKeys: (id: string) => Promise<OrganizationKeysResponse>;\n    postOrganizationKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n\n    getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsCipher: (id: string, start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsOrganization: (id: string, start: string, end: string,\n        token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsOrganizationUser: (organizationId: string, id: string,\n        start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n    deleteSsoUser: (organizationId: string) => Promise<any>;\n    getSsoUserIdentifier: () => Promise<string>;\n\n    getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n    getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n    postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n    postSetupPayment: () => Promise<string>;\n\n    getActiveBearerToken: () => Promise<string>;\n    fetch: (request: Request) => Promise<Response>;\n    nativeFetch: (request: Request) => Promise<Response>;\n\n    preValidateSso: (identifier: string) => Promise<boolean>;\n}\n","import { OrganizationData } from '../models/data/organizationData';\nimport { Organization } from '../models/domain/organization';\n\nimport { KdfType } from '../enums/kdfType';\n\nexport abstract class UserService {\n    setInformation: (userId: string, email: string, kdf: KdfType, kdfIterations: number) => Promise<any>;\n    setEmailVerified: (emailVerified: boolean) => Promise<any>;\n    setSecurityStamp: (stamp: string) => Promise<any>;\n    getUserId: () => Promise<string>;\n    getEmail: () => Promise<string>;\n    getSecurityStamp: () => Promise<string>;\n    getKdf: () => Promise<KdfType>;\n    getKdfIterations: () => Promise<number>;\n    getEmailVerified: () => Promise<boolean>;\n    clear: () => Promise<any>;\n    isAuthenticated: () => Promise<boolean>;\n    canAccessPremium: () => Promise<boolean>;\n    getOrganization: (id: string) => Promise<Organization>;\n    getAllOrganizations: () => Promise<Organization[]>;\n    replaceOrganizations: (organizations: { [id: string]: OrganizationData; }) => Promise<any>;\n    clearOrganizations: (userId: string) => Promise<any>;\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Pipe({\n    name: 'i18n',\n})\nexport class I18nPipe implements PipeTransform {\n    constructor(private i18nService: I18nService) { }\n\n    transform(id: string, p1?: string, p2?: string, p3?: string): string {\n        return this.i18nService.t(id, p1, p2, p3);\n    }\n}\n","export abstract class MessagingService {\n    send: (subscriber: string, arg?: any) => void;\n}\n","import { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { ProfileOrganizationResponse } from '../models/response/profileOrganizationResponse';\n\nimport { HashPurpose } from '../enums/hashPurpose';\nimport { KdfType } from '../enums/kdfType';\nimport { KeySuffixOptions } from './storage.service';\n\nexport abstract class CryptoService {\n    setKey: (key: SymmetricCryptoKey) => Promise<any>;\n    setKeyHash: (keyHash: string) => Promise<{}>;\n    setEncKey: (encKey: string) => Promise<{}>;\n    setEncPrivateKey: (encPrivateKey: string) => Promise<{}>;\n    setOrgKeys: (orgs: ProfileOrganizationResponse[]) => Promise<{}>;\n    getKey: (keySuffix?: KeySuffixOptions) => Promise<SymmetricCryptoKey>;\n    getKeyFromStorage: (keySuffix: KeySuffixOptions) => Promise<SymmetricCryptoKey>;\n    getKeyHash: () => Promise<string>;\n    compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n    getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n    getPublicKey: () => Promise<ArrayBuffer>;\n    getPrivateKey: () => Promise<ArrayBuffer>;\n    getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n    getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n    getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n    hasKey: () => Promise<boolean>;\n    hasKeyInMemory: () => boolean;\n    hasKeyStored: (keySuffix?: KeySuffixOptions) => Promise<boolean>;\n    hasEncKey: () => Promise<boolean>;\n    clearKey: (clearSecretStorage?: boolean) => Promise<any>;\n    clearKeyHash: () => Promise<any>;\n    clearEncKey: (memoryOnly?: boolean) => Promise<any>;\n    clearKeyPair: (memoryOnly?: boolean) => Promise<any>;\n    clearOrgKeys: (memoryOnly?: boolean) => Promise<any>;\n    clearPinProtectedKey: () => Promise<any>;\n    clearKeys: () => Promise<any>;\n    toggleKey: () => Promise<any>;\n    makeKey: (password: string, salt: string, kdf: KdfType, kdfIterations: number) => Promise<SymmetricCryptoKey>;\n    makeKeyFromPin: (pin: string, salt: string, kdf: KdfType, kdfIterations: number,\n        protectedKeyCs?: EncString) => Promise<SymmetricCryptoKey>;\n    makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n    makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n    makePinKey: (pin: string, salt: string, kdf: KdfType, kdfIterations: number) => Promise<SymmetricCryptoKey>;\n    makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n    hashPassword: (password: string, key: SymmetricCryptoKey, hashPurpose?: HashPurpose) => Promise<string>;\n    makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n    remakeEncKey: (key: SymmetricCryptoKey, encKey?: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n    encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n    encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n    rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n    rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n    decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n    decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n    decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n    randomNumber: (min: number, max: number) => Promise<number>;\n    validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    Renderer2,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appA11yTitle]',\n})\nexport class A11yTitleDirective {\n    @Input() set appA11yTitle(title: string) {\n        this.title = title;\n    }\n\n    private title: string;\n\n    constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n    ngOnInit() {\n        if (!this.el.nativeElement.hasAttribute('title')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'title', this.title);\n        }\n        if (!this.el.nativeElement.hasAttribute('aria-label')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'aria-label', this.title);\n        }\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { ValidationService } from '../services/validation.service';\n\n@Directive({\n    selector: '[appApiAction]',\n})\nexport class ApiActionDirective implements OnChanges {\n    @Input() appApiAction: Promise<any>;\n\n    constructor(private el: ElementRef, private validationService: ValidationService) { }\n\n    ngOnChanges(changes: any) {\n        if (this.appApiAction == null || this.appApiAction.then == null) {\n            return;\n        }\n\n        this.el.nativeElement.loading = true;\n\n        this.appApiAction.then((response: any) => {\n            this.el.nativeElement.loading = false;\n        }, (e: any) => {\n            this.el.nativeElement.loading = false;\n            this.validationService.showError(e);\n        });\n    }\n}\n","import { CipherType } from '../enums/cipherType';\nimport { UriMatchType } from '../enums/uriMatchType';\n\nimport { CipherData } from '../models/data/cipherData';\n\nimport { Cipher } from '../models/domain/cipher';\nimport { Field } from '../models/domain/field';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { FieldView } from '../models/view/fieldView';\n\nexport abstract class CipherService {\n    decryptedCipherCache: CipherView[];\n\n    clearCache: () => void;\n    encrypt: (model: CipherView, key?: SymmetricCryptoKey, originalCipher?: Cipher) => Promise<Cipher>;\n    encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n    encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n    get: (id: string) => Promise<Cipher>;\n    getAll: () => Promise<Cipher[]>;\n    getAllDecrypted: () => Promise<CipherView[]>;\n    getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n    getAllDecryptedForUrl: (url: string, includeOtherTypes?: CipherType[],\n        defaultMatch?: UriMatchType) => Promise<CipherView[]>;\n    getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n    getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n    getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n    getNextCipherForUrl: (url: string) => Promise<CipherView>;\n    updateLastUsedIndexForUrl: (url: string) => void;\n    updateLastUsedDate: (id: string) => Promise<void>;\n    updateLastLaunchedDate: (id: string) => Promise<void>;\n    saveNeverDomain: (domain: string) => Promise<void>;\n    saveWithServer: (cipher: Cipher) => Promise<any>;\n    shareWithServer: (cipher: CipherView, organizationId: string, collectionIds: string[]) => Promise<any>;\n    shareManyWithServer: (ciphers: CipherView[], organizationId: string, collectionIds: string[]) => Promise<any>;\n    saveAttachmentWithServer: (cipher: Cipher, unencryptedFile: any, admin?: boolean) => Promise<Cipher>;\n    saveAttachmentRawWithServer: (cipher: Cipher, filename: string, data: ArrayBuffer,\n        admin?: boolean) => Promise<Cipher>;\n    saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n    upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n    replace: (ciphers: { [id: string]: CipherData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n    deleteManyWithServer: (ids: string[]) => Promise<any>;\n    deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n    deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n    sortCiphersByLastUsed: (a: any, b: any) => number;\n    sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n    getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n    softDelete: (id: string | string[]) => Promise<any>;\n    softDeleteWithServer: (id: string) => Promise<any>;\n    softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n    restore: (cipher: { id: string, revisionDate: string; } | { id: string, revisionDate: string; }[]) => Promise<any>;\n    restoreWithServer: (id: string) => Promise<any>;\n    restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","export abstract class BaseResponse {\n    private response: any;\n\n    constructor(response: any) {\n        this.response = response;\n    }\n\n    protected getResponseProperty(propertyName: string, response: any = null, exactName = false): any {\n        if (propertyName == null || propertyName === '') {\n            throw new Error('propertyName must not be null/empty.');\n        }\n        if (response == null && this.response != null) {\n            response = this.response;\n        }\n        if (response == null) {\n            return null;\n        }\n        if (!exactName && response[propertyName] === undefined) {\n            let otherCasePropertyName: string = null;\n            if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n                otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n            } else {\n                otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n            }\n            if (propertyName.length > 1) {\n                otherCasePropertyName += propertyName.slice(1);\n            }\n\n            propertyName = otherCasePropertyName;\n            if (response[propertyName] === undefined) {\n                propertyName = propertyName.toLowerCase();\n            }\n            if (response[propertyName] === undefined) {\n                propertyName = propertyName.toUpperCase();\n            }\n        }\n        return response[propertyName];\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-callout',\n    templateUrl: 'callout.component.html',\n})\nexport class CalloutComponent implements OnInit {\n    @Input() type = 'info';\n    @Input() icon: string;\n    @Input() title: string;\n    @Input() clickable: boolean;\n\n    calloutStyle: string;\n\n    constructor(private i18nService: I18nService) { }\n\n    ngOnInit() {\n        this.calloutStyle = this.type;\n\n        if (this.type === 'warning' || this.type === 'danger') {\n            if (this.type === 'danger') {\n                this.calloutStyle = 'danger';\n            }\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('warning');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-warning';\n            }\n        } else if (this.type === 'error') {\n            this.calloutStyle = 'danger';\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('error');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-bolt';\n            }\n        } else if (this.type === 'tip') {\n            this.calloutStyle = 'success';\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('tip');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-lightbulb-o';\n            }\n        }\n    }\n}\n","<div class=\"callout callout-{{calloutStyle}}\" [ngClass]=\"{'clickable': clickable}\" role=\"alert\"> <h3 class=\"callout-heading\" *ngIf=\"title\"> <i class=\"fa {{icon}}\" *ngIf=\"icon\" aria-hidden=\"true\"></i> {{title}} </h3> <ng-content></ng-content> </div> ","import * as papa from 'papaparse';\n\nimport { LogService } from '../abstractions/log.service';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { LoginUriView } from '../models/view/loginUriView';\n\nimport { Utils } from '../misc/utils';\n\nimport { FieldView } from '../models/view/fieldView';\nimport { FolderView } from '../models/view/folderView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherRepromptType } from '../enums/cipherRepromptType';\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { ConsoleLogService } from '../services/consoleLog.service';\n\nexport abstract class BaseImporter {\n    organizationId: string = null;\n\n    protected logService: LogService = new ConsoleLogService(false);\n\n    protected newLineRegex = /(?:\\r\\n|\\r|\\n)/;\n\n    protected passwordFieldNames = [\n        'password', 'pass word', 'passphrase', 'pass phrase',\n        'pass', 'code', 'code word', 'codeword',\n        'secret', 'secret word', 'personpwd',\n        'key', 'keyword', 'key word', 'keyphrase', 'key phrase',\n        'form_pw', 'wppassword', 'pin', 'pwd', 'pw', 'pword', 'passwd',\n        'p', 'serial', 'serial#', 'license key', 'reg #',\n\n        // Non-English names\n        'passwort',\n    ];\n\n    protected usernameFieldNames = [\n        'user', 'name', 'user name', 'username', 'login name',\n        'email', 'e-mail', 'id', 'userid', 'user id',\n        'login', 'form_loginname', 'wpname', 'mail',\n        'loginid', 'login id', 'log', 'personlogin',\n        'first name', 'last name', 'card#', 'account #',\n        'member', 'member #',\n\n        // Non-English names\n        'nom', 'benutzername',\n    ];\n\n    protected notesFieldNames = [\n        'note', 'notes', 'comment', 'comments', 'memo',\n        'description', 'free form', 'freeform',\n        'free text', 'freetext', 'free',\n\n        // Non-English names\n        'kommentar',\n    ];\n\n    protected uriFieldNames: string[] = [\n        'url', 'hyper link', 'hyperlink', 'link',\n        'host', 'hostname', 'host name', 'server', 'address',\n        'hyper ref', 'href', 'web', 'website', 'web site', 'site',\n        'web-site', 'uri',\n\n        // Non-English names\n        'ort', 'adresse',\n    ];\n\n    protected parseCsvOptions = {\n        encoding: 'UTF-8',\n        skipEmptyLines: false,\n    };\n\n    protected get organization() {\n        return this.organizationId != null;\n    }\n\n    protected parseXml(data: string): Document {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(data, 'application/xml');\n        return doc != null && doc.querySelector('parsererror') == null ? doc : null;\n    }\n\n    protected parseCsv(data: string, header: boolean, options: any = {}): any[] {\n        const parseOptions = Object.assign({ header: header }, this.parseCsvOptions, options);\n        data = this.splitNewLine(data).join('\\n').trim();\n        const result = papa.parse(data, parseOptions);\n        if (result.errors != null && result.errors.length > 0) {\n            result.errors.forEach(e => {\n                if (e.row != null) {\n                    // tslint:disable-next-line\n                    this.logService.warning('Error parsing row ' + e.row + ': ' + e.message);\n                }\n            });\n        }\n        return result.data && result.data.length > 0 ? result.data : null;\n    }\n\n    protected parseSingleRowCsv(rowData: string) {\n        if (this.isNullOrWhitespace(rowData)) {\n            return null;\n        }\n        const parsedRow = this.parseCsv(rowData, false);\n        if (parsedRow != null && parsedRow.length > 0 && parsedRow[0].length > 0) {\n            return parsedRow[0];\n        }\n        return null;\n    }\n\n    protected makeUriArray(uri: string | string[]): LoginUriView[] {\n        if (uri == null) {\n            return null;\n        }\n\n        if (typeof uri === 'string') {\n            const loginUri = new LoginUriView();\n            loginUri.uri = this.fixUri(uri);\n            if (this.isNullOrWhitespace(loginUri.uri)) {\n                return null;\n            }\n            loginUri.match = null;\n            return [loginUri];\n        }\n\n        if (uri.length > 0) {\n            const returnArr: LoginUriView[] = [];\n            uri.forEach(u => {\n                const loginUri = new LoginUriView();\n                loginUri.uri = this.fixUri(u);\n                if (this.isNullOrWhitespace(loginUri.uri)) {\n                    return;\n                }\n                loginUri.match = null;\n                returnArr.push(loginUri);\n            });\n            return returnArr.length === 0 ? null : returnArr;\n        }\n\n        return null;\n    }\n\n    protected fixUri(uri: string) {\n        if (uri == null) {\n            return null;\n        }\n        uri = uri.trim();\n        if (uri.indexOf('://') === -1 && uri.indexOf('.') >= 0) {\n            uri = 'http://' + uri;\n        }\n        if (uri.length > 1000) {\n            return uri.substring(0, 1000);\n        }\n        return uri;\n    }\n\n    protected nameFromUrl(url: string) {\n        const hostname = Utils.getHostname(url);\n        if (this.isNullOrWhitespace(hostname)) {\n            return null;\n        }\n        return hostname.startsWith('www.') ? hostname.replace('www.', '') : hostname;\n    }\n\n    protected isNullOrWhitespace(str: string): boolean {\n        return Utils.isNullOrWhitespace(str);\n    }\n\n    protected getValueOrDefault(str: string, defaultValue: string = null): string {\n        if (this.isNullOrWhitespace(str)) {\n            return defaultValue;\n        }\n        return str;\n    }\n\n    protected splitNewLine(str: string): string[] {\n        return str.split(this.newLineRegex);\n    }\n\n    // ref https://stackoverflow.com/a/5911300\n    protected getCardBrand(cardNum: string) {\n        if (this.isNullOrWhitespace(cardNum)) {\n            return null;\n        }\n\n        // Visa\n        let re = new RegExp('^4');\n        if (cardNum.match(re) != null) {\n            return 'Visa';\n        }\n\n        // Mastercard\n        // Updated for Mastercard 2017 BINs expansion\n        if (/^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/\n            .test(cardNum)) {\n            return 'Mastercard';\n        }\n\n        // AMEX\n        re = new RegExp('^3[47]');\n        if (cardNum.match(re) != null) {\n            return 'Amex';\n        }\n\n        // Discover\n        re = new RegExp('^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)');\n        if (cardNum.match(re) != null) {\n            return 'Discover';\n        }\n\n        // Diners\n        re = new RegExp('^36');\n        if (cardNum.match(re) != null) {\n            return 'Diners Club';\n        }\n\n        // Diners - Carte Blanche\n        re = new RegExp('^30[0-5]');\n        if (cardNum.match(re) != null) {\n            return 'Diners Club';\n        }\n\n        // JCB\n        re = new RegExp('^35(2[89]|[3-8][0-9])');\n        if (cardNum.match(re) != null) {\n            return 'JCB';\n        }\n\n        // Visa Electron\n        re = new RegExp('^(4026|417500|4508|4844|491(3|7))');\n        if (cardNum.match(re) != null) {\n            return 'Visa';\n        }\n\n        return null;\n    }\n\n    protected setCardExpiration(cipher: CipherView, expiration: string): boolean {\n        if (!this.isNullOrWhitespace(expiration)) {\n            expiration = expiration.replace(/\\s/g, '');\n            const parts = expiration.split('/');\n            if (parts.length === 2) {\n                let month: string = null;\n                let year: string = null;\n                if (parts[0].length === 1 || parts[0].length === 2) {\n                    month = parts[0];\n                    if (month.length === 2 && month[0] === '0') {\n                        month = month.substr(1, 1);\n                    }\n                }\n                if (parts[1].length === 2 || parts[1].length === 4) {\n                    year = month.length === 2 ? '20' + parts[1] : parts[1];\n                }\n                if (month != null && year != null) {\n                    cipher.card.expMonth = month;\n                    cipher.card.expYear = year;\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    protected moveFoldersToCollections(result: ImportResult) {\n        result.folderRelationships.forEach(r => result.collectionRelationships.push(r));\n        result.collections = result.folders.map(f => {\n            const collection = new CollectionView();\n            collection.name = f.name;\n            return collection;\n        });\n        result.folderRelationships = [];\n        result.folders = [];\n    }\n\n    protected querySelectorDirectChild(parentEl: Element, query: string) {\n        const els = this.querySelectorAllDirectChild(parentEl, query);\n        return els.length === 0 ? null : els[0];\n    }\n\n    protected querySelectorAllDirectChild(parentEl: Element, query: string) {\n        return Array.from(parentEl.querySelectorAll(query)).filter(el => el.parentNode === parentEl);\n    }\n\n    protected initLoginCipher() {\n        const cipher = new CipherView();\n        cipher.favorite = false;\n        cipher.notes = '';\n        cipher.fields = [];\n        cipher.login = new LoginView();\n        cipher.type = CipherType.Login;\n        return cipher;\n    }\n\n    protected cleanupCipher(cipher: CipherView) {\n        if (cipher == null) {\n            return;\n        }\n        if (cipher.type !== CipherType.Login) {\n            cipher.login = null;\n        }\n        if (this.isNullOrWhitespace(cipher.name)) {\n            cipher.name = '--';\n        }\n        if (this.isNullOrWhitespace(cipher.notes)) {\n            cipher.notes = null;\n        } else {\n            cipher.notes = cipher.notes.trim();\n        }\n        if (cipher.fields != null && cipher.fields.length === 0) {\n            cipher.fields = null;\n        }\n    }\n\n    protected processKvp(cipher: CipherView, key: string, value: string, type: FieldType = FieldType.Text) {\n        if (this.isNullOrWhitespace(value)) {\n            return;\n        }\n        if (this.isNullOrWhitespace(key)) {\n            key = '';\n        }\n        if (value.length > 200 || value.trim().search(this.newLineRegex) > -1) {\n            if (cipher.notes == null) {\n                cipher.notes = '';\n            }\n            cipher.notes += (key + ': ' + this.splitNewLine(value).join('\\n') + '\\n');\n        } else {\n            if (cipher.fields == null) {\n                cipher.fields = [];\n            }\n            const field = new FieldView();\n            field.type = type;\n            field.name = key;\n            field.value = value;\n            cipher.fields.push(field);\n        }\n    }\n\n    protected processFolder(result: ImportResult, folderName: string) {\n        let folderIndex = result.folders.length;\n        const hasFolder = !this.isNullOrWhitespace(folderName);\n        let addFolder = hasFolder;\n\n        if (hasFolder) {\n            for (let i = 0; i < result.folders.length; i++) {\n                if (result.folders[i].name === folderName) {\n                    addFolder = false;\n                    folderIndex = i;\n                    break;\n                }\n            }\n        }\n\n        if (addFolder) {\n            const f = new FolderView();\n            f.name = folderName;\n            result.folders.push(f);\n        }\n        if (hasFolder) {\n            result.folderRelationships.push([result.ciphers.length, folderIndex]);\n        }\n    }\n\n    protected convertToNoteIfNeeded(cipher: CipherView) {\n        if (cipher.type === CipherType.Login && this.isNullOrWhitespace(cipher.login.username) &&\n            this.isNullOrWhitespace(cipher.login.password) &&\n            (cipher.login.uris == null || cipher.login.uris.length === 0)) {\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n        }\n    }\n}\n","import { CipherView } from '../view/cipherView';\nimport { CollectionView } from '../view/collectionView';\nimport { FolderView } from '../view/folderView';\n\nexport class ImportResult {\n    success = false;\n    errorMessage: string;\n    ciphers: CipherView[] = [];\n    folders: FolderView[] = [];\n    folderRelationships: [number, number][] = [];\n    collections: CollectionView[] = [];\n    collectionRelationships: [number, number][] = [];\n}\n","import * as tldjs from 'tldjs';\n\nimport { I18nService } from '../abstractions/i18n.service';\n\n// tslint:disable-next-line\nconst nodeURL = typeof window === 'undefined' ? require('url') : null;\n\nexport class Utils {\n    static inited = false;\n    static isNativeScript = false;\n    static isNode = false;\n    static isBrowser = true;\n    static isMobileBrowser = false;\n    static isAppleMobileBrowser = false;\n    static global: any = null;\n    static tldEndingRegex = /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n    // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n    static regexpEmojiPresentation =  /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n    static init() {\n        if (Utils.inited) {\n            return;\n        }\n\n        Utils.inited = true;\n        Utils.isNode = typeof process !== 'undefined' && (process as any).release != null &&\n            (process as any).release.name === 'node';\n        Utils.isBrowser = typeof window !== 'undefined';\n        Utils.isNativeScript = !Utils.isNode && !Utils.isBrowser;\n        Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n        Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n        Utils.global = Utils.isNativeScript ? global : (Utils.isNode && !Utils.isBrowser ? global : window);\n    }\n\n    static fromB64ToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'base64'));\n        } else {\n            const binaryString = window.atob(str);\n            const bytes = new Uint8Array(binaryString.length);\n            for (let i = 0; i < binaryString.length; i++) {\n                bytes[i] = binaryString.charCodeAt(i);\n            }\n            return bytes;\n        }\n    }\n\n    static fromUrlB64ToArray(str: string): Uint8Array {\n        return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n    }\n\n    static fromHexToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'hex'));\n        } else {\n            const bytes = new Uint8Array(str.length / 2);\n            for (let i = 0; i < str.length; i += 2) {\n                bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n            }\n            return bytes;\n        }\n    }\n\n    static fromUtf8ToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'utf8'));\n        } else {\n            const strUtf8 = unescape(encodeURIComponent(str));\n            const arr = new Uint8Array(strUtf8.length);\n            for (let i = 0; i < strUtf8.length; i++) {\n                arr[i] = strUtf8.charCodeAt(i);\n            }\n            return arr;\n        }\n    }\n\n    static fromByteStringToArray(str: string): Uint8Array {\n        const arr = new Uint8Array(str.length);\n        for (let i = 0; i < str.length; i++) {\n            arr[i] = str.charCodeAt(i);\n        }\n        return arr;\n    }\n\n    static fromBufferToB64(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('base64');\n        } else {\n            let binary = '';\n            const bytes = new Uint8Array(buffer);\n            for (let i = 0; i < bytes.byteLength; i++) {\n                binary += String.fromCharCode(bytes[i]);\n            }\n            return window.btoa(binary);\n        }\n    }\n\n    static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n        return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n    }\n\n    static fromB64toUrlB64(b64Str: string) {\n        return b64Str.replace(/\\+/g, '-')\n            .replace(/\\//g, '_')\n            .replace(/=/g, '');\n    }\n\n    static fromBufferToUtf8(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('utf8');\n        } else {\n            const bytes = new Uint8Array(buffer);\n            const encodedString = String.fromCharCode.apply(null, bytes);\n            return decodeURIComponent(escape(encodedString));\n        }\n    }\n\n    static fromBufferToByteString(buffer: ArrayBuffer): string {\n        return String.fromCharCode.apply(null, new Uint8Array(buffer));\n    }\n\n    // ref: https://stackoverflow.com/a/40031979/1090359\n    static fromBufferToHex(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('hex');\n        } else {\n            const bytes = new Uint8Array(buffer);\n            return Array.prototype.map.call(bytes, (x: number) => ('00' + x.toString(16)).slice(-2)).join('');\n        }\n    }\n\n    static fromUrlB64ToB64(urlB64Str: string): string {\n        let output = urlB64Str.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0:\n                break;\n            case 2:\n                output += '==';\n                break;\n            case 3:\n                output += '=';\n                break;\n            default:\n                throw new Error('Illegal base64url string!');\n        }\n\n        return output;\n    }\n\n    static fromUrlB64ToUtf8(urlB64Str: string): string {\n        return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n    }\n\n    static fromUtf8ToB64(utfStr: string): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(utfStr, 'utf8').toString('base64');\n        } else {\n            return decodeURIComponent(escape(window.btoa(utfStr)));\n        }\n    }\n\n    static fromB64ToUtf8(b64Str: string): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(b64Str, 'base64').toString('utf8');\n        } else {\n            return decodeURIComponent(escape(window.atob(b64Str)));\n        }\n    }\n\n    // ref: http://stackoverflow.com/a/2117523/1090359\n    static newGuid(): string {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n            // tslint:disable-next-line\n            const r = Math.random() * 16 | 0;\n            // tslint:disable-next-line\n            const v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    static isGuid(id: string) {\n        return RegExp(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/, 'i').test(id);\n    }\n\n    static getHostname(uriString: string): string {\n        const url = Utils.getUrl(uriString);\n        try {\n            return url != null && url.hostname !== '' ? url.hostname : null;\n        } catch {\n            return null;\n        }\n    }\n\n    static getHost(uriString: string): string {\n        const url = Utils.getUrl(uriString);\n        try {\n            return url != null && url.host !== '' ? url.host : null;\n        } catch {\n            return null;\n        }\n    }\n\n    static getDomain(uriString: string): string {\n        if (uriString == null) {\n            return null;\n        }\n\n        uriString = uriString.trim();\n        if (uriString === '') {\n            return null;\n        }\n\n        if (uriString.startsWith('data:')) {\n            return null;\n        }\n\n        let httpUrl = uriString.startsWith('http://') || uriString.startsWith('https://');\n        if (!httpUrl && uriString.indexOf('://') < 0 && Utils.tldEndingRegex.test(uriString)) {\n            uriString = 'http://' + uriString;\n            httpUrl = true;\n        }\n\n        if (httpUrl) {\n            try {\n                const url = Utils.getUrlObject(uriString);\n                const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n                if (!validHostname) {\n                    return null;\n                }\n\n                if (url.hostname === 'localhost' || Utils.validIpAddress(url.hostname)) {\n                    return url.hostname;\n                }\n\n                const urlDomain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n                return urlDomain != null ? urlDomain : url.hostname;\n            } catch (e) { }\n        }\n\n        try {\n            const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n            if (domain != null) {\n                return domain;\n            }\n        } catch {\n            return null;\n        }\n\n        return null;\n    }\n\n    static getQueryParams(uriString: string): Map<string, string> {\n        const url = Utils.getUrl(uriString);\n        if (url == null || url.search == null || url.search === '') {\n            return null;\n        }\n        const map = new Map<string, string>();\n        const pairs = (url.search[0] === '?' ? url.search.substr(1) : url.search).split('&');\n        pairs.forEach(pair => {\n            const parts = pair.split('=');\n            if (parts.length < 1) {\n                return;\n            }\n            map.set(decodeURIComponent(parts[0]).toLowerCase(), parts[1] == null ? '' : decodeURIComponent(parts[1]));\n        });\n        return map;\n    }\n\n    static getSortFunction(i18nService: I18nService, prop: string) {\n        return (a: any, b: any) => {\n            if (a[prop] == null && b[prop] != null) {\n                return -1;\n            }\n            if (a[prop] != null && b[prop] == null) {\n                return 1;\n            }\n            if (a[prop] == null && b[prop] == null) {\n                return 0;\n            }\n\n            return i18nService.collator ? i18nService.collator.compare(a[prop], b[prop]) :\n                a[prop].localeCompare(b[prop]);\n        };\n    }\n\n    static isNullOrWhitespace(str: string): boolean {\n        return str == null || typeof str !== 'string' || str.trim() === '';\n    }\n\n    static nameOf<T>(name: string & keyof T) {\n        return name;\n    }\n\n    static assign<T>(target: T, source: Partial<T>): T {\n        return Object.assign(target, source);\n    }\n\n    static getUrl(uriString: string): URL {\n        if (uriString == null) {\n            return null;\n        }\n\n        uriString = uriString.trim();\n        if (uriString === '') {\n            return null;\n        }\n\n        let url = Utils.getUrlObject(uriString);\n        if (url == null) {\n            const hasHttpProtocol = uriString.indexOf('http://') === 0 || uriString.indexOf('https://') === 0;\n            if (!hasHttpProtocol && uriString.indexOf('.') > -1) {\n                url = Utils.getUrlObject('http://' + uriString);\n            }\n        }\n        return url;\n    }\n\n    private static validIpAddress(ipString: string): boolean {\n        // tslint:disable-next-line\n        const ipRegex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n        return ipRegex.test(ipString);\n    }\n\n    private static isMobile(win: Window) {\n        let mobile = false;\n        (a => {\n            // tslint:disable-next-line\n            if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n                mobile = true;\n            }\n        })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n        return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n    }\n\n    private static isAppleMobile(win: Window) {\n        return win.navigator.userAgent.match(/iPhone/i) != null || win.navigator.userAgent.match(/iPad/i) != null;\n    }\n\n    private static getUrlObject(uriString: string): URL {\n        try {\n            if (nodeURL != null) {\n                return nodeURL.URL ? new nodeURL.URL(uriString) : nodeURL.parse(uriString);\n            } else if (typeof URL === 'function') {\n                return new URL(uriString);\n            } else if (window != null) {\n                const hasProtocol = uriString.indexOf('://') > -1;\n                if (!hasProtocol && uriString.indexOf('.') > -1) {\n                    uriString = 'http://' + uriString;\n                } else if (!hasProtocol) {\n                    return null;\n                }\n                const anchor = window.document.createElement('a');\n                anchor.href = uriString;\n                return anchor as any;\n            }\n        } catch (e) { }\n\n        return null;\n    }\n}\n\nUtils.init();\n","import { PolicyData } from '../models/data/policyData';\n\nimport { MasterPasswordPolicyOptions } from '../models/domain/masterPasswordPolicyOptions';\nimport { Policy } from '../models/domain/policy';\nimport { ResetPasswordPolicyOptions } from '../models/domain/resetPasswordPolicyOptions';\n\nimport { PolicyType } from '../enums/policyType';\n\nimport { ListResponse } from '../models/response/listResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\n\nexport abstract class PolicyService {\n    policyCache: Policy[];\n\n    clearCache: () => void;\n    getAll: (type?: PolicyType) => Promise<Policy[]>;\n    replace: (policies: { [id: string]: PolicyData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n    evaluateMasterPassword: (passwordStrength: number, newPassword: string,\n        enforcedPolicyOptions?: MasterPasswordPolicyOptions) => boolean;\n    getResetPasswordPolicyOptions: (policies: Policy[], orgId: string) => [ResetPasswordPolicyOptions, boolean];\n    mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n}\n","import * as zxcvbn from 'zxcvbn';\n\nimport { GeneratedPasswordHistory } from '../models/domain/generatedPasswordHistory';\nimport { PasswordGeneratorPolicyOptions } from '../models/domain/passwordGeneratorPolicyOptions';\n\nexport abstract class PasswordGenerationService {\n    generatePassword: (options: any) => Promise<string>;\n    generatePassphrase: (options: any) => Promise<string>;\n    getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n    enforcePasswordGeneratorPoliciesOnOptions: (options: any) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n    getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n    saveOptions: (options: any) => Promise<any>;\n    getHistory: () => Promise<GeneratedPasswordHistory[]>;\n    addHistory: (password: string) => Promise<any>;\n    clear: () => Promise<any>;\n    passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n    normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","export abstract class StateService {\n    get: <T>(key: string) => Promise<T>;\n    save: (key: string, obj: any) => Promise<any>;\n    remove: (key: string) => Promise<any>;\n    purge: () => Promise<any>;\n}\n","import {\n    Directive,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appStopClick]',\n})\nexport class StopClickDirective {\n    @HostListener('click', ['$event']) onClick($event: MouseEvent) {\n        $event.preventDefault();\n    }\n}\n","export enum CipherType {\n    Login = 1,\n    SecureNote = 2,\n    Card = 3,\n    Identity = 4,\n}\n","export abstract class StorageService {\n    get: <T>(key: string, options?: StorageServiceOptions) => Promise<T>;\n    has: (key: string, options?: StorageServiceOptions) => Promise<boolean>;\n    save: (key: string, obj: any, options?: StorageServiceOptions) => Promise<any>;\n    remove: (key: string, options?: StorageServiceOptions) => Promise<any>;\n}\n\nexport interface StorageServiceOptions {\n    keySuffix: KeySuffixOptions;\n}\n\nexport type KeySuffixOptions = 'auto' | 'biometric';\n","import { CollectionData } from '../models/data/collectionData';\n\nimport { Collection } from '../models/domain/collection';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nexport abstract class CollectionService {\n    decryptedCollectionCache: CollectionView[];\n\n    clearCache: () => void;\n    encrypt: (model: CollectionView) => Promise<Collection>;\n    decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n    get: (id: string) => Promise<Collection>;\n    getAll: () => Promise<Collection[]>;\n    getAllDecrypted: () => Promise<CollectionView[]>;\n    getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n    getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n    upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n    replace: (collections: { [id: string]: CollectionData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    Renderer2,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appInputVerbatim]',\n})\nexport class InputVerbatimDirective {\n    @Input() set appInputVerbatim(condition: boolean | string) {\n        this.disableComplete = condition === '' || condition === true;\n    }\n\n    private disableComplete: boolean;\n\n    constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n    ngOnInit() {\n        if (this.disableComplete && !this.el.nativeElement.hasAttribute('autocomplete')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocomplete', 'off');\n        }\n        if (!this.el.nativeElement.hasAttribute('autocapitalize')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocapitalize', 'none');\n        }\n        if (!this.el.nativeElement.hasAttribute('autocorrect')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocorrect', 'none');\n        }\n        if (!this.el.nativeElement.hasAttribute('spellcheck')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'spellcheck', 'false');\n        }\n        if (!this.el.nativeElement.hasAttribute('inputmode')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'inputmode', 'verbatim');\n        }\n    }\n}\n","import { FolderData } from '../models/data/folderData';\n\nimport { Folder } from '../models/domain/folder';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport abstract class FolderService {\n    decryptedFolderCache: FolderView[];\n\n    clearCache: () => void;\n    encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n    get: (id: string) => Promise<Folder>;\n    getAll: () => Promise<Folder[]>;\n    getAllDecrypted: () => Promise<FolderView[]>;\n    getAllNested: () => Promise<TreeNode<FolderView>[]>;\n    getNested: (id: string) => Promise<TreeNode<FolderView>>;\n    saveWithServer: (folder: Folder) => Promise<any>;\n    upsert: (folder: FolderData | FolderData[]) => Promise<any>;\n    replace: (folders: { [id: string]: FolderData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n}\n","import {\n    Directive,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appStopProp]',\n})\nexport class StopPropDirective {\n    @HostListener('click', ['$event']) onClick($event: MouseEvent) {\n        $event.stopPropagation();\n    }\n}\n","export abstract class EnvironmentService {\n    baseUrl: string;\n    webVaultUrl: string;\n    apiUrl: string;\n    identityUrl: string;\n    iconsUrl: string;\n    notificationsUrl: string;\n    eventsUrl: string;\n    enterpriseUrl: string;\n\n    getWebVaultUrl: () => string;\n    setUrlsFromStorage: () => Promise<void>;\n    setUrls: (urls: any) => Promise<any>;\n}\n","import { TwoFactorProviderType } from '../enums/twoFactorProviderType';\n\nimport { AuthResult } from '../models/domain/authResult';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport abstract class AuthService {\n    email: string;\n    masterPasswordHash: string;\n    code: string;\n    codeVerifier: string;\n    ssoRedirectUrl: string;\n    clientId: string;\n    clientSecret: string;\n    twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string; }>;\n    selectedTwoFactorProviderType: TwoFactorProviderType;\n\n    logIn: (email: string, masterPassword: string) => Promise<AuthResult>;\n    logInSso: (code: string, codeVerifier: string, redirectUrl: string) => Promise<AuthResult>;\n    logInApiKey: (clientId: string, clientSecret: string) => Promise<AuthResult>;\n    logInTwoFactor: (twoFactorProvider: TwoFactorProviderType, twoFactorToken: string,\n        remember?: boolean) => Promise<AuthResult>;\n    logInComplete: (email: string, masterPassword: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean) => Promise<AuthResult>;\n    logInSsoComplete: (code: string, codeVerifier: string, redirectUrl: string,\n        twoFactorProvider: TwoFactorProviderType, twoFactorToken: string, remember?: boolean) => Promise<AuthResult>;\n    logInApiKeyComplete: (clientId: string, clientSecret: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean) => Promise<AuthResult>;\n    logOut: (callback: Function) => void;\n    getSupportedTwoFactorProviders: (win: Window) => any[];\n    getDefaultTwoFactorProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n    makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n    authingWithApiKey: () => boolean;\n    authingWithSso: () => boolean;\n    authingWithPassword: () => boolean;\n}\n","import {\n    SyncCipherNotification,\n    SyncFolderNotification,\n    SyncSendNotification,\n} from '../models/response/notificationResponse';\n\nexport abstract class SyncService {\n    syncInProgress: boolean;\n\n    getLastSync: () => Promise<Date>;\n    setLastSync: (date: Date) => Promise<any>;\n    fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n    syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n    syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n    syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n    syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n    syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n    syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n} from '@angular/core';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive({\n    selector: '[appAutofocus]',\n})\nexport class AutofocusDirective {\n    @Input() set appAutofocus(condition: boolean | string) {\n        this.autofocus = condition === '' || condition === true;\n    }\n\n    private autofocus: boolean;\n\n    constructor(private el: ElementRef) { }\n\n    ngOnInit() {\n        if (!Utils.isMobileBrowser && this.autofocus) {\n            this.el.nativeElement.focus();\n        }\n    }\n}\n","export class ConstantsService {\n    static readonly environmentUrlsKey: string = 'environmentUrls';\n    static readonly disableGaKey: string = 'disableGa';\n    static readonly disableAddLoginNotificationKey: string = 'disableAddLoginNotification';\n    static readonly disableChangedPasswordNotificationKey: string = 'disableChangedPasswordNotification';\n    static readonly disableContextMenuItemKey: string = 'disableContextMenuItem';\n    static readonly disableFaviconKey: string = 'disableFavicon';\n    static readonly disableBadgeCounterKey: string = 'disableBadgeCounter';\n    static readonly disableAutoTotpCopyKey: string = 'disableAutoTotpCopy';\n    static readonly enableAutoFillOnPageLoadKey: string = 'enableAutoFillOnPageLoad';\n    static readonly autoFillOnPageLoadDefaultKey: string = 'autoFillOnPageLoadDefault';\n    static readonly vaultTimeoutKey: string = 'lockOption';\n    static readonly vaultTimeoutActionKey: string = 'vaultTimeoutAction';\n    static readonly lastActiveKey: string = 'lastActive';\n    static readonly neverDomainsKey: string = 'neverDomains';\n    static readonly installedVersionKey: string = 'installedVersion';\n    static readonly localeKey: string = 'locale';\n    static readonly themeKey: string = 'theme';\n    static readonly collapsedGroupingsKey: string = 'collapsedGroupings';\n    static readonly autoConfirmFingerprints: string = 'autoConfirmFingerprints';\n    static readonly dontShowCardsCurrentTab: string = 'dontShowCardsCurrentTab';\n    static readonly dontShowIdentitiesCurrentTab: string = 'dontShowIdentitiesCurrentTab';\n    static readonly defaultUriMatch: string = 'defaultUriMatch';\n    static readonly pinProtectedKey: string = 'pinProtectedKey';\n    static readonly protectedPin: string = 'protectedPin';\n    static readonly clearClipboardKey: string = 'clearClipboardKey';\n    static readonly eventCollectionKey: string = 'eventCollection';\n    static readonly ssoCodeVerifierKey: string = 'ssoCodeVerifier';\n    static readonly ssoStateKey: string = 'ssoState';\n    static readonly biometricUnlockKey: string = 'biometric';\n    static readonly biometricText: string = 'biometricText';\n    static readonly biometricAwaitingAcceptance: string = 'biometricAwaitingAcceptance';\n    static readonly biometricFingerprintValidated: string = 'biometricFingerprintValidated';\n\n    readonly environmentUrlsKey: string = ConstantsService.environmentUrlsKey;\n    readonly disableGaKey: string = ConstantsService.disableGaKey;\n    readonly disableAddLoginNotificationKey: string = ConstantsService.disableAddLoginNotificationKey;\n    readonly disableContextMenuItemKey: string = ConstantsService.disableContextMenuItemKey;\n    readonly disableFaviconKey: string = ConstantsService.disableFaviconKey;\n    readonly disableBadgeCounterKey: string = ConstantsService.disableBadgeCounterKey;\n    readonly disableAutoTotpCopyKey: string = ConstantsService.disableAutoTotpCopyKey;\n    readonly enableAutoFillOnPageLoadKey: string = ConstantsService.enableAutoFillOnPageLoadKey;\n    readonly autoFillOnPageLoadDefaultKey: string = ConstantsService.autoFillOnPageLoadDefaultKey;\n    readonly vaultTimeoutKey: string = ConstantsService.vaultTimeoutKey;\n    readonly vaultTimeoutActionKey: string = ConstantsService.vaultTimeoutActionKey;\n    readonly lastActiveKey: string = ConstantsService.lastActiveKey;\n    readonly neverDomainsKey: string = ConstantsService.neverDomainsKey;\n    readonly installedVersionKey: string = ConstantsService.installedVersionKey;\n    readonly localeKey: string = ConstantsService.localeKey;\n    readonly themeKey: string = ConstantsService.themeKey;\n    readonly collapsedGroupingsKey: string = ConstantsService.collapsedGroupingsKey;\n    readonly autoConfirmFingerprints: string = ConstantsService.autoConfirmFingerprints;\n    readonly dontShowCardsCurrentTab: string = ConstantsService.dontShowCardsCurrentTab;\n    readonly dontShowIdentitiesCurrentTab: string = ConstantsService.dontShowIdentitiesCurrentTab;\n    readonly defaultUriMatch: string = ConstantsService.defaultUriMatch;\n    readonly pinProtectedKey: string = ConstantsService.pinProtectedKey;\n    readonly protectedPin: string = ConstantsService.protectedPin;\n    readonly clearClipboardKey: string = ConstantsService.clearClipboardKey;\n    readonly eventCollectionKey: string = ConstantsService.eventCollectionKey;\n    readonly ssoCodeVerifierKey: string = ConstantsService.ssoCodeVerifierKey;\n    readonly ssoStateKey: string = ConstantsService.ssoStateKey;\n    readonly biometricUnlockKey: string = ConstantsService.biometricUnlockKey;\n    readonly biometricText: string = ConstantsService.biometricText;\n    readonly biometricAwaitingAcceptance: string = ConstantsService.biometricAwaitingAcceptance;\n    readonly biometricFingerprintValidated: string = ConstantsService.biometricFingerprintValidated;\n}\n","import { EventType } from '../enums/eventType';\n\nexport abstract class EventService {\n    collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\n    uploadEvents: () => Promise<any>;\n    clearEvents: () => Promise<any>;\n}\n","import { CipherView } from '../models/view/cipherView';\nimport { SendView } from '../models/view/sendView';\n\nexport abstract class SearchService {\n    indexedEntityId?: string = null;\n    clearIndex: () => void;\n    isSearchable: (query: string) => boolean;\n    indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n    searchCiphers: (query: string,\n        filter?: ((cipher: CipherView) => boolean) | (((cipher: CipherView) => boolean)[]),\n        ciphers?: CipherView[]) => Promise<CipherView[]>;\n    searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n    searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","export class PasswordVerificationRequest {\n    masterPasswordHash: string;\n}\n","import { EncString } from './encString';\n\nimport { View } from '../view/view';\n\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport default class Domain {\n    protected buildDomainModel<D extends Domain>(domain: D, dataObj: any, map: any,\n        alreadyEncrypted: boolean, notEncList: any[] = []) {\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            const objProp = dataObj[(map[prop] || prop)];\n            if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\n                (domain as any)[prop] = objProp ? objProp : null;\n            } else {\n                (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n            }\n        }\n    }\n    protected buildDataModel<D extends Domain>(domain: D, dataObj: any, map: any, notEncStringList: any[] = []) {\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            const objProp = (domain as any)[(map[prop] || prop)];\n            if (notEncStringList.indexOf(prop) > -1) {\n                (dataObj as any)[prop] = objProp != null ? objProp : null;\n            } else {\n                (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n            }\n        }\n    }\n\n    protected async decryptObj<T extends View>(viewModel: T, map: any, orgId: string,\n        key: SymmetricCryptoKey = null): Promise<T> {\n        const promises = [];\n        const self: any = this;\n\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            // tslint:disable-next-line\n            (function (theProp) {\n                const p = Promise.resolve().then(() => {\n                    const mapProp = map[theProp] || theProp;\n                    if (self[mapProp]) {\n                        return self[mapProp].decrypt(orgId, key);\n                    }\n                    return null;\n                }).then((val: any) => {\n                    (viewModel as any)[theProp] = val;\n                });\n                promises.push(p);\n            })(prop);\n        }\n\n        await Promise.all(promises);\n        return viewModel;\n    }\n}\n","import * as jq from 'jquery';\n\nimport {\n    Component,\n    ComponentFactoryResolver,\n    Type,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ModalComponent as BaseModalComponent } from 'jslib-angular/components/modal.component';\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\n\n@Component({\n    selector: 'app-modal',\n    template: `<ng-template #container></ng-template>`,\n})\nexport class ModalComponent extends BaseModalComponent {\n    el: any = null;\n\n    constructor(componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService) {\n        super(componentFactoryResolver, messagingService);\n    }\n\n    ngOnDestroy() { /* Nothing */ }\n\n    show<T>(type: Type<T>, parentContainer: ViewContainerRef, fade: boolean = true,\n        setComponentParameters: (component: T) => void = null): T {\n        this.parentContainer = parentContainer;\n        this.fade = fade;\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory<T>(type);\n        const componentRef = this.container.createComponent<T>(factory);\n        if (setComponentParameters != null) {\n            setComponentParameters(componentRef.instance);\n        }\n\n        const modals = Array.from(document.querySelectorAll('.modal'));\n        if (modals.length > 0) {\n            this.el = jq(modals[0]);\n            this.el.modal('show');\n\n            this.el.on('show.bs.modal', () => {\n                this.onShow.emit();\n                this.messagingService.send('modalShow');\n            });\n            this.el.on('shown.bs.modal', () => {\n                this.onShown.emit();\n                this.messagingService.send('modalShown');\n                if (!Utils.isMobileBrowser) {\n                    this.el.find('*[appAutoFocus]').focus();\n                }\n            });\n            this.el.on('hide.bs.modal', () => {\n                this.onClose.emit();\n                this.messagingService.send('modalClose');\n            });\n            this.el.on('hidden.bs.modal', () => {\n                this.onClosed.emit();\n                this.messagingService.send('modalClosed');\n                if (this.parentContainer != null) {\n                    this.parentContainer.clear();\n                }\n            });\n        }\n\n        return componentRef.instance;\n    }\n\n    close() {\n        if (this.el != null) {\n            this.el.modal('hide');\n        }\n    }\n}\n","import { EncString } from '../models/domain/encString';\n\nexport abstract class VaultTimeoutService {\n    biometricLocked: boolean;\n    everBeenUnlocked: boolean;\n    pinProtectedKey: EncString;\n    isLocked: () => Promise<boolean>;\n    checkVaultTimeout: () => Promise<void>;\n    lock: (allowSoftLock?: boolean) => Promise<void>;\n    logOut: () => Promise<void>;\n    setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n    isPinLockSet: () => Promise<[boolean, boolean]>;\n    isBiometricLockSet: () => Promise<boolean>;\n    clear: () => Promise<any>;\n}\n","import { EncryptionType } from '../../enums/encryptionType';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\n\nimport { Utils } from '../../misc/utils';\n\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class EncString {\n    encryptedString?: string;\n    encryptionType?: EncryptionType;\n    decryptedValue?: string;\n    data?: string;\n    iv?: string;\n    mac?: string;\n\n    constructor(encryptedStringOrType: string | EncryptionType, data?: string, iv?: string, mac?: string) {\n        if (data != null) {\n            // data and header\n            const encType = encryptedStringOrType as EncryptionType;\n\n            if (iv != null) {\n                this.encryptedString = encType + '.' + iv + '|' + data;\n            } else {\n                this.encryptedString = encType + '.' + data;\n            }\n\n            // mac\n            if (mac != null) {\n                this.encryptedString += ('|' + mac);\n            }\n\n            this.encryptionType = encType;\n            this.data = data;\n            this.iv = iv;\n            this.mac = mac;\n\n            return;\n        }\n\n        this.encryptedString = encryptedStringOrType as string;\n        if (!this.encryptedString) {\n            return;\n        }\n\n        const headerPieces = this.encryptedString.split('.');\n        let encPieces: string[] = null;\n\n        if (headerPieces.length === 2) {\n            try {\n                this.encryptionType = parseInt(headerPieces[0], null);\n                encPieces = headerPieces[1].split('|');\n            } catch (e) {\n                return;\n            }\n        } else {\n            encPieces = this.encryptedString.split('|');\n            this.encryptionType = encPieces.length === 3 ? EncryptionType.AesCbc128_HmacSha256_B64 :\n                EncryptionType.AesCbc256_B64;\n        }\n\n        switch (this.encryptionType) {\n            case EncryptionType.AesCbc128_HmacSha256_B64:\n            case EncryptionType.AesCbc256_HmacSha256_B64:\n                if (encPieces.length !== 3) {\n                    return;\n                }\n\n                this.iv = encPieces[0];\n                this.data = encPieces[1];\n                this.mac = encPieces[2];\n                break;\n            case EncryptionType.AesCbc256_B64:\n                if (encPieces.length !== 2) {\n                    return;\n                }\n\n                this.iv = encPieces[0];\n                this.data = encPieces[1];\n                break;\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n                if (encPieces.length !== 1) {\n                    return;\n                }\n\n                this.data = encPieces[0];\n                break;\n            default:\n                return;\n        }\n    }\n\n    async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n        if (this.decryptedValue != null) {\n            return this.decryptedValue;\n        }\n\n        let cryptoService: CryptoService;\n        const containerService = (Utils.global as any).bitwardenContainerService;\n        if (containerService) {\n            cryptoService = containerService.getCryptoService();\n        } else {\n            throw new Error('global bitwardenContainerService not initialized.');\n        }\n\n        try {\n            if (key == null) {\n                key = await cryptoService.getOrgKey(orgId);\n            }\n            this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n        } catch (e) {\n            this.decryptedValue = '[error: cannot decrypt]';\n        }\n        return this.decryptedValue;\n    }\n}\n","import { BreachAccountResponse } from '../models/response/breachAccountResponse';\n\nexport abstract class AuditService {\n    passwordLeaked: (password: string) => Promise<number>;\n    breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { View } from './view';\n\nimport { Card } from '../domain/card';\n\nexport class CardView implements View {\n    cardholderName: string = null;\n    expMonth: string = null;\n    expYear: string = null;\n    code: string = null;\n\n    // tslint:disable\n    private _brand: string = null;\n    private _number: string = null;\n    private _subTitle: string = null;\n    // tslint:enable\n\n    constructor(c?: Card) {\n        // ctor\n    }\n\n    get maskedCode(): string {\n        return this.code != null ? '•'.repeat(this.code.length) : null;\n    }\n\n    get maskedNumber(): string {\n        return this.number != null ? '•'.repeat(this.number.length) : null;\n    }\n\n    get brand(): string {\n        return this._brand;\n    }\n    set brand(value: string) {\n        this._brand = value;\n        this._subTitle = null;\n    }\n\n    get number(): string {\n        return this._number;\n    }\n    set number(value: string) {\n        this._number = value;\n        this._subTitle = null;\n    }\n\n    get subTitle(): string {\n        if (this._subTitle == null) {\n            this._subTitle = this.brand;\n            if (this.number != null && this.number.length >= 4) {\n                if (this._subTitle != null && this._subTitle !== '') {\n                    this._subTitle += ', ';\n                } else {\n                    this._subTitle = '';\n                }\n\n                // Show last 5 on amex, last 4 for all others\n                const count = this.number.length >= 5 && this.number.match(new RegExp('^3[47]')) != null ? 5 : 4;\n                this._subTitle += ('*' + this.number.substr(this.number.length - count));\n            }\n        }\n        return this._subTitle;\n    }\n\n    get expiration(): string {\n        if (!this.expMonth && !this.expYear) {\n            return null;\n        }\n\n        let exp = this.expMonth != null ? ('0' + this.expMonth).slice(-2) : '__';\n        exp += (' / ' + (this.expYear != null ? this.formatYear(this.expYear) : '____'));\n        return exp;\n    }\n\n    private formatYear(year: string): string {\n        return year.length === 2 ? '20' + year : year;\n    }\n}\n","import { DecryptParameters } from '../models/domain/decryptParameters';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport abstract class CryptoFunctionService {\n    pbkdf2: (password: string | ArrayBuffer, salt: string | ArrayBuffer, algorithm: 'sha256' | 'sha512',\n        iterations: number) => Promise<ArrayBuffer>;\n    hkdf: (ikm: ArrayBuffer, salt: string | ArrayBuffer, info: string | ArrayBuffer,\n        outputByteSize: number, algorithm: 'sha256' | 'sha512') => Promise<ArrayBuffer>;\n    hkdfExpand: (prk: ArrayBuffer, info: string | ArrayBuffer, outputByteSize: number,\n        algorithm: 'sha256' | 'sha512') => Promise<ArrayBuffer>;\n    hash: (value: string | ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5') => Promise<ArrayBuffer>;\n    hmac: (value: ArrayBuffer, key: ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512') => Promise<ArrayBuffer>;\n    compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n    hmacFast: (value: ArrayBuffer | string, key: ArrayBuffer | string, algorithm: 'sha1' | 'sha256' | 'sha512') =>\n        Promise<ArrayBuffer | string>;\n    compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n    aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n    aesDecryptFastParameters: (data: string, iv: string, mac: string, key: SymmetricCryptoKey) =>\n        DecryptParameters<ArrayBuffer | string>;\n    aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n    aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n    rsaEncrypt: (data: ArrayBuffer, publicKey: ArrayBuffer, algorithm: 'sha1' | 'sha256') => Promise<ArrayBuffer>;\n    rsaDecrypt: (data: ArrayBuffer, privateKey: ArrayBuffer, algorithm: 'sha1' | 'sha256') => Promise<ArrayBuffer>;\n    rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n    rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n    randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { View } from './view';\n\nimport { SecureNote } from '../domain/secureNote';\n\nexport class SecureNoteView implements View {\n    type: SecureNoteType = null;\n\n    constructor(n?: SecureNote) {\n        if (!n) {\n            return;\n        }\n\n        this.type = n.type;\n    }\n\n    get subTitle(): string {\n        return null;\n    }\n}\n","export enum SecureNoteType {\n    Generic = 0,\n}\n","export abstract class TokenService {\n    token: string;\n    decodedToken: any;\n    refreshToken: string;\n    setTokens: (accessToken: string, refreshToken: string) => Promise<any>;\n    setToken: (token: string) => Promise<any>;\n    getToken: () => Promise<string>;\n    setRefreshToken: (refreshToken: string) => Promise<any>;\n    getRefreshToken: () => Promise<string>;\n    toggleTokens: () => Promise<any>;\n    setTwoFactorToken: (token: string, email: string) => Promise<any>;\n    getTwoFactorToken: (email: string) => Promise<string>;\n    clearTwoFactorToken: (email: string) => Promise<any>;\n    clearToken: () => Promise<any>;\n    decodeToken: () => any;\n    getTokenExpirationDate: () => Date;\n    tokenSecondsRemaining: (offsetSeconds?: number) => number;\n    tokenNeedsRefresh: (minutes?: number) => boolean;\n    getUserId: () => string;\n    getEmail: () => string;\n    getEmailVerified: () => boolean;\n    getName: () => string;\n    getPremium: () => boolean;\n    getIssuer: () => string;\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nconst IconMap: any = {\n    'fa-globe': String.fromCharCode(0xf0ac),\n    'fa-sticky-note-o': String.fromCharCode(0xf24a),\n    'fa-id-card-o': String.fromCharCode(0xf2c3),\n    'fa-credit-card': String.fromCharCode(0xf09d),\n    'fa-android': String.fromCharCode(0xf17b),\n    'fa-apple': String.fromCharCode(0xf179),\n};\n\n@Component({\n    selector: 'app-vault-icon',\n    templateUrl: 'icon.component.html',\n})\nexport class IconComponent implements OnChanges {\n    @Input() cipher: CipherView;\n    icon: string;\n    image: string;\n    fallbackImage: string;\n    imageEnabled: boolean;\n\n    private iconsUrl: string;\n\n    constructor(environmentService: EnvironmentService, protected stateService: StateService) {\n        this.iconsUrl = environmentService.iconsUrl;\n        if (!this.iconsUrl) {\n            if (environmentService.baseUrl) {\n                this.iconsUrl = environmentService.baseUrl + '/icons';\n            } else {\n                this.iconsUrl = 'https://icons.bitwarden.net';\n            }\n        }\n    }\n\n    async ngOnChanges() {\n        this.imageEnabled = !(await this.stateService.get<boolean>(ConstantsService.disableFaviconKey));\n        this.load();\n    }\n\n    get iconCode(): string {\n        return IconMap[this.icon];\n    }\n\n    protected load() {\n        switch (this.cipher.type) {\n            case CipherType.Login:\n                this.icon = 'fa-globe';\n                this.setLoginIcon();\n                break;\n            case CipherType.SecureNote:\n                this.icon = 'fa-sticky-note-o';\n                break;\n            case CipherType.Card:\n                this.icon = 'fa-credit-card';\n                break;\n            case CipherType.Identity:\n                this.icon = 'fa-id-card-o';\n                break;\n            default:\n                break;\n        }\n    }\n\n    private setLoginIcon() {\n        if (this.cipher.login.uri) {\n            let hostnameUri = this.cipher.login.uri;\n            let isWebsite = false;\n\n            if (hostnameUri.indexOf('androidapp://') === 0) {\n                this.icon = 'fa-android';\n                this.image = null;\n            } else if (hostnameUri.indexOf('iosapp://') === 0) {\n                this.icon = 'fa-apple';\n                this.image = null;\n            } else if (this.imageEnabled && hostnameUri.indexOf('://') === -1 && hostnameUri.indexOf('.') > -1) {\n                hostnameUri = 'http://' + hostnameUri;\n                isWebsite = true;\n            } else if (this.imageEnabled) {\n                isWebsite = hostnameUri.indexOf('http') === 0 && hostnameUri.indexOf('.') > -1;\n            }\n\n            if (this.imageEnabled && isWebsite) {\n                try {\n                    this.image = this.iconsUrl + '/' + Utils.getHostname(hostnameUri) + '/icon.png';\n                    this.fallbackImage = 'images/fa-globe.png';\n                } catch (e) { }\n            }\n        } else {\n            this.image = null;\n        }\n    }\n}\n","<div class=\"icon\" aria-hidden=\"true\"> <img [src]=\"image\" appFallbackSrc=\"{{fallbackImage}}\" *ngIf=\"imageEnabled && image\" alt=\"\"/> <i class=\"fa fa-fw fa-lg {{icon}}\" *ngIf=\"!imageEnabled || !image\"></i> </div> ","import { Injectable } from '@angular/core';\n\nimport { BroadcasterService as BaseBroadcasterService } from 'jslib-common/services/broadcaster.service';\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {\n}\n","export enum TwoFactorProviderType {\n    Authenticator = 0,\n    Email = 1,\n    Duo = 2,\n    Yubikey = 3,\n    U2f = 4,\n    Remember = 5,\n    OrganizationDuo = 6,\n    WebAuthn = 7,\n}\n","<img [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" [ngClass]=\"{'rounded-circle': circle}\">","export enum PolicyType {\n    TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n    MasterPassword = 1, // Sets minimum requirements for master password complexity\n    PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n    SingleOrg = 3, // Allows users to only be apart of one organization\n    RequireSso = 4, // Requires users to authenticate with SSO\n    PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n    DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n    SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n    ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n}\n","export abstract class TotpService {\n    getCode: (key: string) => Promise<string>;\n    getTimeInterval: (key: string) => number;\n    isAutoCopyEnabled: () => Promise<boolean>;\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { WebConstants } from '../../services/webConstants';\n\nconst StripeElementStyle = {\n    base: {\n        color: '#333333',\n        fontFamily: '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n            '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: '14px',\n        fontSmoothing: 'antialiased',\n    },\n    invalid: {\n        color: '#333333',\n    },\n};\n\nconst StripeElementClasses = {\n    focus: 'is-focused',\n    empty: 'is-empty',\n    invalid: 'is-invalid',\n};\n\n@Component({\n    selector: 'app-payment',\n    templateUrl: 'payment.component.html',\n})\nexport class PaymentComponent implements OnInit {\n    @Input() showMethods = true;\n    @Input() showOptions = true;\n    @Input() method = PaymentMethodType.Card;\n    @Input() hideBank = false;\n    @Input() hidePaypal = false;\n    @Input() hideCredit = false;\n\n    bank: any = {\n        routing_number: null,\n        account_number: null,\n        account_holder_name: null,\n        account_holder_type: '',\n        currency: 'USD',\n        country: 'US',\n    };\n\n    paymentMethodType = PaymentMethodType;\n\n    private btScript: HTMLScriptElement;\n    private btInstance: any = null;\n    private stripeScript: HTMLScriptElement;\n    private stripe: any = null;\n    private stripeElements: any = null;\n    private stripeCardNumberElement: any = null;\n    private stripeCardExpiryElement: any = null;\n    private stripeCardCvcElement: any = null;\n\n    constructor(private platformUtilsService: PlatformUtilsService, private apiService: ApiService) {\n        this.stripeScript = window.document.createElement('script');\n        this.stripeScript.src = 'https://js.stripe.com/v3/';\n        this.stripeScript.async = true;\n        this.stripeScript.onload = () => {\n            this.stripe = (window as any).Stripe(process.env.ENV === 'production'  ?\n                WebConstants.stripeLiveKey : WebConstants.stripeTestKey);\n            this.stripeElements = this.stripe.elements();\n            this.setStripeElement();\n        };\n        this.btScript = window.document.createElement('script');\n        this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n        this.btScript.async = true;\n    }\n\n    ngOnInit() {\n        if (!this.showOptions) {\n            this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n            this.hideBank = this.method !== PaymentMethodType.BankAccount;\n            this.hideCredit = this.method !== PaymentMethodType.Credit;\n        }\n        window.document.head.appendChild(this.stripeScript);\n        if (!this.hidePaypal) {\n            window.document.head.appendChild(this.btScript);\n        }\n    }\n\n    ngOnDestroy() {\n        window.document.head.removeChild(this.stripeScript);\n        window.setTimeout(() => {\n            Array.from(window.document.querySelectorAll('iframe')).forEach(el => {\n                if (el.src != null && el.src.indexOf('stripe') > -1) {\n                    try {\n                        window.document.body.removeChild(el);\n                    } catch { }\n                }\n            });\n        }, 500);\n        if (!this.hidePaypal) {\n            window.document.head.removeChild(this.btScript);\n            window.setTimeout(() => {\n                Array.from(window.document.head.querySelectorAll('script')).forEach(el => {\n                    if (el.src != null && el.src.indexOf('paypal') > -1) {\n                        try {\n                            window.document.head.removeChild(el);\n                        } catch { }\n                    }\n                });\n                const btStylesheet = window.document.head.querySelector('#braintree-dropin-stylesheet');\n                if (btStylesheet != null) {\n                    try {\n                        window.document.head.removeChild(btStylesheet);\n                    } catch { }\n                }\n            }, 500);\n        }\n    }\n\n    changeMethod() {\n        this.btInstance = null;\n\n        if (this.method === PaymentMethodType.PayPal) {\n            window.setTimeout(() => {\n                (window as any).braintree.dropin.create({\n                    authorization: this.platformUtilsService.isDev() ?\n                        WebConstants.btSandboxKey : WebConstants.btProductionKey,\n                    container: '#bt-dropin-container',\n                    paymentOptionPriority: ['paypal'],\n                    paypal: {\n                        flow: 'vault',\n                        buttonStyle: {\n                            label: 'pay',\n                            size: 'medium',\n                            shape: 'pill',\n                            color: 'blue',\n                        },\n                    },\n                }, (createErr: any, instance: any) => {\n                    if (createErr != null) {\n                        // tslint:disable-next-line\n                        console.error(createErr);\n                        return;\n                    }\n                    this.btInstance = instance;\n                });\n            }, 250);\n        } else {\n            this.setStripeElement();\n        }\n    }\n\n    createPaymentToken(): Promise<[string, PaymentMethodType]> {\n        return new Promise((resolve, reject) => {\n            if (this.method === PaymentMethodType.Credit) {\n                resolve([null, this.method]);\n            } else if (this.method === PaymentMethodType.PayPal) {\n                this.btInstance.requestPaymentMethod().then((payload: any) => {\n                    resolve([payload.nonce, this.method]);\n                }).catch((err: any) => {\n                    reject(err.message);\n                });\n            } else if (this.method === PaymentMethodType.Card || this.method === PaymentMethodType.BankAccount) {\n                if (this.method === PaymentMethodType.Card) {\n                    this.apiService.postSetupPayment().then(clientSecret =>\n                        this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement))\n                        .then((result: any) => {\n                            if (result.error) {\n                                reject(result.error.message);\n                            } else if (result.setupIntent && result.setupIntent.status === 'succeeded') {\n                                resolve([result.setupIntent.payment_method, this.method]);\n                            } else {\n                                reject();\n                            }\n                        });\n                } else {\n                    this.stripe.createToken('bank_account', this.bank).then((result: any) => {\n                        if (result.error) {\n                            reject(result.error.message);\n                        } else if (result.token && result.token.id != null) {\n                            resolve([result.token.id, this.method]);\n                        } else {\n                            reject();\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n    handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n        return new Promise<void>((resolve, reject) => {\n            if (this.showMethods && this.stripeCardNumberElement == null) {\n                reject();\n                return;\n            }\n            const handleCardPayment = () => this.showMethods ?\n                this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement) :\n                this.stripe.handleCardSetup(clientSecret);\n            return handleCardPayment().then(async (result: any) => {\n                if (result.error) {\n                    reject(result.error.message);\n                } else if (result.paymentIntent && result.paymentIntent.status === 'succeeded') {\n                    if (successCallback != null) {\n                        await successCallback();\n                    }\n                    resolve();\n                } else {\n                    reject();\n                }\n            });\n        });\n    }\n\n    private setStripeElement() {\n        window.setTimeout(() => {\n            if (this.showMethods && this.method === PaymentMethodType.Card) {\n                if (this.stripeCardNumberElement == null) {\n                    this.stripeCardNumberElement = this.stripeElements.create('cardNumber', {\n                        style: StripeElementStyle,\n                        classes: StripeElementClasses,\n                        placeholder: '',\n                    });\n                }\n                if (this.stripeCardExpiryElement == null) {\n                    this.stripeCardExpiryElement = this.stripeElements.create('cardExpiry', {\n                        style: StripeElementStyle,\n                        classes: StripeElementClasses,\n                    });\n                }\n                if (this.stripeCardCvcElement == null) {\n                    this.stripeCardCvcElement = this.stripeElements.create('cardCvc', {\n                        style: StripeElementStyle,\n                        classes: StripeElementClasses,\n                        placeholder: '',\n                    });\n                }\n                this.stripeCardNumberElement.mount('#stripe-card-number-element');\n                this.stripeCardExpiryElement.mount('#stripe-card-expiry-element');\n                this.stripeCardCvcElement.mount('#stripe-card-cvc-element');\n            }\n        }, 50);\n    }\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\"> <div class=\"form-check form-check-inline mr-4\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-card\" [value]=\"paymentMethodType.Card\" [(ngModel)]=\"method\" (change)=\"changeMethod()\"> <label class=\"form-check-label\" for=\"method-card\"> <i class=\"fa fa-fw fa-credit-card\" aria-hidden=\"true\"></i> {{'creditCard' | i18n}}</label> </div> <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-bank\" [value]=\"paymentMethodType.BankAccount\" [(ngModel)]=\"method\" (change)=\"changeMethod()\"> <label class=\"form-check-label\" for=\"method-bank\"> <i class=\"fa fa-fw fa-university\" aria-hidden=\"true\"></i> {{'bankAccount' | i18n}}</label> </div> <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-paypal\" [value]=\"paymentMethodType.PayPal\" [(ngModel)]=\"method\" (change)=\"changeMethod()\"> <label class=\"form-check-label\" for=\"method-paypal\"> <i class=\"fa fa-fw fa-paypal\" aria-hidden=\"true\"></i> PayPal</label> </div> <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-credit\" [value]=\"paymentMethodType.Credit\" [(ngModel)]=\"method\" (change)=\"changeMethod()\"> <label class=\"form-check-label\" for=\"method-credit\"> <i class=\"fa fa-fw fa-dollar\" aria-hidden=\"true\"></i> {{'accountCredit' | i18n}}</label> </div> </div> <ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\"> <div class=\"row\"> <div class=\"form-group col-4\"> <label for=\"stripe-card-number-element\">{{'number' | i18n}}</label> <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div> </div> <div class=\"form-group col-8 d-flex align-items-end\"> <img src=\"images/cards.png\" alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\" width=\"323\" height=\"32\"> </div> <div class=\"form-group col-4\"> <label for=\"stripe-card-expiry-element\">{{'expiration' | i18n}}</label> <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div> </div> <div class=\"form-group col-4\"> <div class=\"d-flex\"> <label for=\"stripe-card-cvc-element\"> {{'securityCode' | i18n}} </label> <a href=\"https://www.cvvnumber.com/cvv.html\" tabindex=\"-1\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"ml-auto\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div> </div> </div> </ng-container> <ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\"> <app-callout type=\"warning\" title=\"{{'verifyBankAccount' | i18n}}\"> {{'verifyBankAccountInitialDesc' | i18n}} {{'verifyBankAccountFailureWarning' | i18n}} </app-callout> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"routing_number\">{{'routingNumber' | i18n}}</label> <input id=\"routing_number\" class=\"form-control\" type=\"text\" name=\"routing_number\" [(ngModel)]=\"bank.routing_number\" required appInputVerbatim> </div> <div class=\"form-group col-6\"> <label for=\"account_number\">{{'accountNumber' | i18n}}</label> <input id=\"account_number\" class=\"form-control\" type=\"text\" name=\"account_number\" [(ngModel)]=\"bank.account_number\" required appInputVerbatim> </div> <div class=\"form-group col-6\"> <label for=\"account_holder_name\">{{'accountHolderName' | i18n}}</label> <input id=\"account_holder_name\" class=\"form-control\" type=\"text\" name=\"account_holder_name\" [(ngModel)]=\"bank.account_holder_name\" required> </div> <div class=\"form-group col-6\"> <label for=\"account_holder_type\">{{'bankAccountType' | i18n}}</label> <select id=\"account_holder_type\" class=\"form-control\" name=\"account_holder_type\" [(ngModel)]=\"bank.account_holder_type\" required> <option value=\"\">-- {{'select' | i18n}} --</option> <option value=\"company\">{{'bankAccountTypeCompany' | i18n}}</option> <option value=\"individual\">{{'bankAccountTypeIndividual' | i18n}}</option> </select> </div> </div> </ng-container> <ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\"> <div class=\"mb-3\"> <div id=\"bt-dropin-container\" class=\"mb-1\"></div> <small class=\"text-muted\">{{'paypalClickSubmit' | i18n}}</small> </div> </ng-container> <ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\"> <app-callout type=\"note\"> {{'makeSureEnoughCredit' | i18n}} </app-callout> </ng-container> ","export enum FieldType {\n    Text = 0,\n    Hidden = 1,\n    Boolean = 2,\n}\n","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { Cipher } from '../domain/cipher';\n\nimport { AttachmentView } from './attachmentView';\nimport { CardView } from './cardView';\nimport { FieldView } from './fieldView';\nimport { IdentityView } from './identityView';\nimport { LoginView } from './loginView';\nimport { PasswordHistoryView } from './passwordHistoryView';\nimport { SecureNoteView } from './secureNoteView';\nimport { View } from './view';\n\nexport class CipherView implements View {\n    id: string = null;\n    organizationId: string = null;\n    folderId: string = null;\n    name: string = null;\n    notes: string = null;\n    type: CipherType = null;\n    favorite = false;\n    organizationUseTotp = false;\n    edit = false;\n    viewPassword = true;\n    localData: any;\n    login = new LoginView();\n    identity = new IdentityView();\n    card = new CardView();\n    secureNote = new SecureNoteView();\n    attachments: AttachmentView[] = null;\n    fields: FieldView[] = null;\n    passwordHistory: PasswordHistoryView[] = null;\n    collectionIds: string[] = null;\n    revisionDate: Date = null;\n    deletedDate: Date = null;\n    reprompt: CipherRepromptType = CipherRepromptType.None;\n\n    constructor(c?: Cipher) {\n        if (!c) {\n            return;\n        }\n\n        this.id = c.id;\n        this.organizationId = c.organizationId;\n        this.folderId = c.folderId;\n        this.favorite = c.favorite;\n        this.organizationUseTotp = c.organizationUseTotp;\n        this.edit = c.edit;\n        this.viewPassword = c.viewPassword;\n        this.type = c.type;\n        this.localData = c.localData;\n        this.collectionIds = c.collectionIds;\n        this.revisionDate = c.revisionDate;\n        this.deletedDate = c.deletedDate;\n        // Old locally stored ciphers might have reprompt == null. If so set it to None.\n        this.reprompt = c.reprompt ?? CipherRepromptType.None;\n    }\n\n    get subTitle(): string {\n        switch (this.type) {\n            case CipherType.Login:\n                return this.login.subTitle;\n            case CipherType.SecureNote:\n                return this.secureNote.subTitle;\n            case CipherType.Card:\n                return this.card.subTitle;\n            case CipherType.Identity:\n                return this.identity.subTitle;\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    get hasPasswordHistory(): boolean {\n        return this.passwordHistory && this.passwordHistory.length > 0;\n    }\n\n    get hasAttachments(): boolean {\n        return this.attachments && this.attachments.length > 0;\n    }\n\n    get hasOldAttachments(): boolean {\n        if (this.hasAttachments) {\n            for (let i = 0; i < this.attachments.length; i++) {\n                if (this.attachments[i].key == null) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    get hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    get passwordRevisionDisplayDate(): Date {\n        if (this.type !== CipherType.Login || this.login == null) {\n            return null;\n        } else if (this.login.password == null || this.login.password === '') {\n            return null;\n        }\n        return this.login.passwordRevisionDate;\n    }\n\n    get isDeleted(): boolean {\n        return this.deletedDate != null;\n    }\n}\n","import { View } from './view';\n\nimport { Folder } from '../domain/folder';\nimport { ITreeNodeObject } from '../domain/treeNode';\n\nexport class FolderView implements View, ITreeNodeObject {\n    id: string = null;\n    name: string = null;\n    revisionDate: Date = null;\n\n    constructor(f?: Folder) {\n        if (!f) {\n            return;\n        }\n\n        this.id = f.id;\n        this.revisionDate = f.revisionDate;\n    }\n}\n","import { CollectionData } from '../data/collectionData';\n\nimport { CollectionView } from '../view/collectionView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nexport class Collection extends Domain {\n    id: string;\n    organizationId: string;\n    name: EncString;\n    externalId: string;\n    readOnly: boolean;\n    hidePasswords: boolean;\n\n    constructor(obj?: CollectionData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            organizationId: null,\n            name: null,\n            externalId: null,\n            readOnly: null,\n            hidePasswords: null,\n        }, alreadyEncrypted, ['id', 'organizationId', 'externalId', 'readOnly', 'hidePasswords']);\n    }\n\n    decrypt(): Promise<CollectionView> {\n        return this.decryptObj(new CollectionView(this), {\n            name: null,\n        }, this.organizationId);\n    }\n}\n","export enum OrganizationUserStatusType {\n    Invited = 0,\n    Accepted = 1,\n    Confirmed = 2,\n}\n","import { EventView } from '../models/view/eventView';\n\nexport abstract class ExportService {\n    getExport: (format?: 'csv' | 'json' | 'encrypted_json') => Promise<string>;\n    getOrganizationExport: (organizationId: string, format?: 'csv' | 'json' | 'encrypted_json') => Promise<string>;\n    getEventExport: (events: EventView[]) => Promise<string>;\n    getFileName: (prefix?: string, extension?: string) => string;\n}\n","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { OrganizationTaxInfoUpdateRequest } from 'jslib-common/models/request/organizationTaxInfoUpdateRequest';\nimport { TaxInfoUpdateRequest } from 'jslib-common/models/request/taxInfoUpdateRequest';\nimport { TaxRateResponse } from 'jslib-common/models/response/taxRateResponse';\n\n@Component({\n    selector: 'app-tax-info',\n    templateUrl: 'tax-info.component.html',\n})\nexport class TaxInfoComponent {\n    @Output() onCountryChanged = new EventEmitter();\n\n    loading: boolean = true;\n    organizationId: string;\n    taxInfo: any = {\n        taxId: null,\n        line1: null,\n        line2: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: 'US',\n        includeTaxId: false,\n    };\n\n    taxRates: TaxRateResponse[];\n\n    private pristine: any = {\n        taxId: null,\n        line1: null,\n        line2: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: 'US',\n        includeTaxId: false,\n    };\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            if (this.organizationId) {\n                try {\n                    const taxInfo = await this.apiService.getOrganizationTaxInfo(this.organizationId);\n                    if (taxInfo) {\n                        this.taxInfo.taxId = taxInfo.taxId;\n                        this.taxInfo.state = taxInfo.state;\n                        this.taxInfo.line1 = taxInfo.line1;\n                        this.taxInfo.line2 = taxInfo.line2;\n                        this.taxInfo.city = taxInfo.city;\n                        this.taxInfo.state = taxInfo.state;\n                        this.taxInfo.postalCode = taxInfo.postalCode;\n                        this.taxInfo.country = taxInfo.country || 'US';\n                        this.taxInfo.includeTaxId = this.taxInfo.country !== 'US' && (\n                            !!taxInfo.taxId\n                            || !!taxInfo.line1\n                            || !!taxInfo.line2\n                            || !!taxInfo.city\n                            || !!taxInfo.state);\n                    }\n                } catch { }\n            } else {\n                const taxInfo = await this.apiService.getTaxInfo();\n                if (taxInfo) {\n                    this.taxInfo.postalCode = taxInfo.postalCode;\n                    this.taxInfo.country = taxInfo.country || 'US';\n                }\n            }\n            this.pristine = Object.assign({}, this.taxInfo);\n            // If not the default (US) then trigger onCountryChanged\n            if (this.taxInfo.country !== 'US') {\n                this.onCountryChanged.emit();\n            }\n        });\n\n        const taxRates = await this.apiService.getTaxRates();\n        this.taxRates = taxRates.data;\n        this.loading = false;\n    }\n\n    get taxRate() {\n        if (this.taxRates != null) {\n            const localTaxRate = this.taxRates.find(x =>\n                x.country === this.taxInfo.country &&\n                x.postalCode === this.taxInfo.postalCode\n            );\n            return localTaxRate?.rate ?? null;\n        }\n    }\n\n    getTaxInfoRequest(): TaxInfoUpdateRequest {\n        if (this.organizationId) {\n            const request = new OrganizationTaxInfoUpdateRequest();\n            request.taxId = this.taxInfo.taxId;\n            request.state = this.taxInfo.state;\n            request.line1 = this.taxInfo.line1;\n            request.line2 = this.taxInfo.line2;\n            request.city = this.taxInfo.city;\n            request.state = this.taxInfo.state;\n            request.postalCode = this.taxInfo.postalCode;\n            request.country = this.taxInfo.country;\n            return request;\n        } else {\n            const request = new TaxInfoUpdateRequest();\n            request.postalCode = this.taxInfo.postalCode;\n            request.country = this.taxInfo.country;\n            return request;\n        }\n    }\n\n    submitTaxInfo(): Promise<any> {\n        if (!this.hasChanged()) {\n            return new Promise<void>(resolve => { resolve(); });\n        }\n        const request = this.getTaxInfoRequest();\n        return this.organizationId ? this.apiService.putOrganizationTaxInfo(this.organizationId,\n            request as OrganizationTaxInfoUpdateRequest) : this.apiService.putTaxInfo(request);\n    }\n\n    changeCountry() {\n        if (this.taxInfo.country === 'US') {\n            this.taxInfo.includeTaxId = false;\n            this.taxInfo.taxId = null;\n            this.taxInfo.line1 = null;\n            this.taxInfo.line2 = null;\n            this.taxInfo.city = null;\n            this.taxInfo.state = null;\n        }\n        this.onCountryChanged.emit();\n    }\n\n    private hasChanged(): boolean {\n        for (const key in this.taxInfo) {\n            if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","<div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressCountry\">{{'country' | i18n}}</label> <select id=\"addressCountry\" class=\"form-control\" [(ngModel)]=\"taxInfo.country\" required name=\"addressCountry\" autocomplete=\"country\" (change)=\"changeCountry()\"> <option value=\"\">-- Select --</option> <option value=\"US\">United States</option> <option value=\"CN\">China</option> <option value=\"FR\">France</option> <option value=\"DE\">Germany</option> <option value=\"CA\">Canada</option> <option value=\"GB\">United Kingdom</option> <option value=\"AU\">Australia</option> <option value=\"IN\">India</option> <option value=\"-\" disabled=\"disabled\"></option> <option value=\"AF\">Afghanistan</option> <option value=\"AX\">Åland Islands</option> <option value=\"AL\">Albania</option> <option value=\"DZ\">Algeria</option> <option value=\"AS\">American Samoa</option> <option value=\"AD\">Andorra</option> <option value=\"AO\">Angola</option> <option value=\"AI\">Anguilla</option> <option value=\"AQ\">Antarctica</option> <option value=\"AG\">Antigua and Barbuda</option> <option value=\"AR\">Argentina</option> <option value=\"AM\">Armenia</option> <option value=\"AW\">Aruba</option> <option value=\"AT\">Austria</option> <option value=\"AZ\">Azerbaijan</option> <option value=\"BS\">Bahamas</option> <option value=\"BH\">Bahrain</option> <option value=\"BD\">Bangladesh</option> <option value=\"BB\">Barbados</option> <option value=\"BY\">Belarus</option> <option value=\"BE\">Belgium</option> <option value=\"BZ\">Belize</option> <option value=\"BJ\">Benin</option> <option value=\"BM\">Bermuda</option> <option value=\"BT\">Bhutan</option> <option value=\"BO\">Bolivia, Plurinational State of</option> <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option> <option value=\"BA\">Bosnia and Herzegovina</option> <option value=\"BW\">Botswana</option> <option value=\"BV\">Bouvet Island</option> <option value=\"BR\">Brazil</option> <option value=\"IO\">British Indian Ocean Territory</option> <option value=\"BN\">Brunei Darussalam</option> <option value=\"BG\">Bulgaria</option> <option value=\"BF\">Burkina Faso</option> <option value=\"BI\">Burundi</option> <option value=\"KH\">Cambodia</option> <option value=\"CM\">Cameroon</option> <option value=\"CV\">Cape Verde</option> <option value=\"KY\">Cayman Islands</option> <option value=\"CF\">Central African Republic</option> <option value=\"TD\">Chad</option> <option value=\"CL\">Chile</option> <option value=\"CX\">Christmas Island</option> <option value=\"CC\">Cocos (Keeling) Islands</option> <option value=\"CO\">Colombia</option> <option value=\"KM\">Comoros</option> <option value=\"CG\">Congo</option> <option value=\"CD\">Congo, the Democratic Republic of the</option> <option value=\"CK\">Cook Islands</option> <option value=\"CR\">Costa Rica</option> <option value=\"CI\">Côte d'Ivoire</option> <option value=\"HR\">Croatia</option> <option value=\"CU\">Cuba</option> <option value=\"CW\">Curaçao</option> <option value=\"CY\">Cyprus</option> <option value=\"CZ\">Czech Republic</option> <option value=\"DK\">Denmark</option> <option value=\"DJ\">Djibouti</option> <option value=\"DM\">Dominica</option> <option value=\"DO\">Dominican Republic</option> <option value=\"EC\">Ecuador</option> <option value=\"EG\">Egypt</option> <option value=\"SV\">El Salvador</option> <option value=\"GQ\">Equatorial Guinea</option> <option value=\"ER\">Eritrea</option> <option value=\"EE\">Estonia</option> <option value=\"ET\">Ethiopia</option> <option value=\"FK\">Falkland Islands (Malvinas)</option> <option value=\"FO\">Faroe Islands</option> <option value=\"FJ\">Fiji</option> <option value=\"FI\">Finland</option> <option value=\"GF\">French Guiana</option> <option value=\"PF\">French Polynesia</option> <option value=\"TF\">French Southern Territories</option> <option value=\"GA\">Gabon</option> <option value=\"GM\">Gambia</option> <option value=\"GE\">Georgia</option> <option value=\"GH\">Ghana</option> <option value=\"GI\">Gibraltar</option> <option value=\"GR\">Greece</option> <option value=\"GL\">Greenland</option> <option value=\"GD\">Grenada</option> <option value=\"GP\">Guadeloupe</option> <option value=\"GU\">Guam</option> <option value=\"GT\">Guatemala</option> <option value=\"GG\">Guernsey</option> <option value=\"GN\">Guinea</option> <option value=\"GW\">Guinea-Bissau</option> <option value=\"GY\">Guyana</option> <option value=\"HT\">Haiti</option> <option value=\"HM\">Heard Island and McDonald Islands</option> <option value=\"VA\">Holy See (Vatican City State)</option> <option value=\"HN\">Honduras</option> <option value=\"HK\">Hong Kong</option> <option value=\"HU\">Hungary</option> <option value=\"IS\">Iceland</option> <option value=\"ID\">Indonesia</option> <option value=\"IR\">Iran, Islamic Republic of</option> <option value=\"IQ\">Iraq</option> <option value=\"IE\">Ireland</option> <option value=\"IM\">Isle of Man</option> <option value=\"IL\">Israel</option> <option value=\"IT\">Italy</option> <option value=\"JM\">Jamaica</option> <option value=\"JP\">Japan</option> <option value=\"JE\">Jersey</option> <option value=\"JO\">Jordan</option> <option value=\"KZ\">Kazakhstan</option> <option value=\"KE\">Kenya</option> <option value=\"KI\">Kiribati</option> <option value=\"KP\">Korea, Democratic People's Republic of</option> <option value=\"KR\">Korea, Republic of</option> <option value=\"KW\">Kuwait</option> <option value=\"KG\">Kyrgyzstan</option> <option value=\"LA\">Lao People's Democratic Republic</option> <option value=\"LV\">Latvia</option> <option value=\"LB\">Lebanon</option> <option value=\"LS\">Lesotho</option> <option value=\"LR\">Liberia</option> <option value=\"LY\">Libya</option> <option value=\"LI\">Liechtenstein</option> <option value=\"LT\">Lithuania</option> <option value=\"LU\">Luxembourg</option> <option value=\"MO\">Macao</option> <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option> <option value=\"MG\">Madagascar</option> <option value=\"MW\">Malawi</option> <option value=\"MY\">Malaysia</option> <option value=\"MV\">Maldives</option> <option value=\"ML\">Mali</option> <option value=\"MT\">Malta</option> <option value=\"MH\">Marshall Islands</option> <option value=\"MQ\">Martinique</option> <option value=\"MR\">Mauritania</option> <option value=\"MU\">Mauritius</option> <option value=\"YT\">Mayotte</option> <option value=\"MX\">Mexico</option> <option value=\"FM\">Micronesia, Federated States of</option> <option value=\"MD\">Moldova, Republic of</option> <option value=\"MC\">Monaco</option> <option value=\"MN\">Mongolia</option> <option value=\"ME\">Montenegro</option> <option value=\"MS\">Montserrat</option> <option value=\"MA\">Morocco</option> <option value=\"MZ\">Mozambique</option> <option value=\"MM\">Myanmar</option> <option value=\"NA\">Namibia</option> <option value=\"NR\">Nauru</option> <option value=\"NP\">Nepal</option> <option value=\"NL\">Netherlands</option> <option value=\"NC\">New Caledonia</option> <option value=\"NZ\">New Zealand</option> <option value=\"NI\">Nicaragua</option> <option value=\"NE\">Niger</option> <option value=\"NG\">Nigeria</option> <option value=\"NU\">Niue</option> <option value=\"NF\">Norfolk Island</option> <option value=\"MP\">Northern Mariana Islands</option> <option value=\"NO\">Norway</option> <option value=\"OM\">Oman</option> <option value=\"PK\">Pakistan</option> <option value=\"PW\">Palau</option> <option value=\"PS\">Palestinian Territory, Occupied</option> <option value=\"PA\">Panama</option> <option value=\"PG\">Papua New Guinea</option> <option value=\"PY\">Paraguay</option> <option value=\"PE\">Peru</option> <option value=\"PH\">Philippines</option> <option value=\"PN\">Pitcairn</option> <option value=\"PL\">Poland</option> <option value=\"PT\">Portugal</option> <option value=\"PR\">Puerto Rico</option> <option value=\"QA\">Qatar</option> <option value=\"RE\">Réunion</option> <option value=\"RO\">Romania</option> <option value=\"RU\">Russian Federation</option> <option value=\"RW\">Rwanda</option> <option value=\"BL\">Saint Barthélemy</option> <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option> <option value=\"KN\">Saint Kitts and Nevis</option> <option value=\"LC\">Saint Lucia</option> <option value=\"MF\">Saint Martin (French part)</option> <option value=\"PM\">Saint Pierre and Miquelon</option> <option value=\"VC\">Saint Vincent and the Grenadines</option> <option value=\"WS\">Samoa</option> <option value=\"SM\">San Marino</option> <option value=\"ST\">Sao Tome and Principe</option> <option value=\"SA\">Saudi Arabia</option> <option value=\"SN\">Senegal</option> <option value=\"RS\">Serbia</option> <option value=\"SC\">Seychelles</option> <option value=\"SL\">Sierra Leone</option> <option value=\"SG\">Singapore</option> <option value=\"SX\">Sint Maarten (Dutch part)</option> <option value=\"SK\">Slovakia</option> <option value=\"SI\">Slovenia</option> <option value=\"SB\">Solomon Islands</option> <option value=\"SO\">Somalia</option> <option value=\"ZA\">South Africa</option> <option value=\"GS\">South Georgia and the South Sandwich Islands</option> <option value=\"SS\">South Sudan</option> <option value=\"ES\">Spain</option> <option value=\"LK\">Sri Lanka</option> <option value=\"SD\">Sudan</option> <option value=\"SR\">Suriname</option> <option value=\"SJ\">Svalbard and Jan Mayen</option> <option value=\"SZ\">Swaziland</option> <option value=\"SE\">Sweden</option> <option value=\"CH\">Switzerland</option> <option value=\"SY\">Syrian Arab Republic</option> <option value=\"TW\">Taiwan</option> <option value=\"TJ\">Tajikistan</option> <option value=\"TZ\">Tanzania, United Republic of</option> <option value=\"TH\">Thailand</option> <option value=\"TL\">Timor-Leste</option> <option value=\"TG\">Togo</option> <option value=\"TK\">Tokelau</option> <option value=\"TO\">Tonga</option> <option value=\"TT\">Trinidad and Tobago</option> <option value=\"TN\">Tunisia</option> <option value=\"TR\">Turkey</option> <option value=\"TM\">Turkmenistan</option> <option value=\"TC\">Turks and Caicos Islands</option> <option value=\"TV\">Tuvalu</option> <option value=\"UG\">Uganda</option> <option value=\"UA\">Ukraine</option> <option value=\"AE\">United Arab Emirates</option> <option value=\"UM\">United States Minor Outlying Islands</option> <option value=\"UY\">Uruguay</option> <option value=\"UZ\">Uzbekistan</option> <option value=\"VU\">Vanuatu</option> <option value=\"VE\">Venezuela, Bolivarian Republic of</option> <option value=\"VN\">Viet Nam</option> <option value=\"VG\">Virgin Islands, British</option> <option value=\"VI\">Virgin Islands, U.S.</option> <option value=\"WF\">Wallis and Futuna</option> <option value=\"EH\">Western Sahara</option> <option value=\"YE\">Yemen</option> <option value=\"ZM\">Zambia</option> <option value=\"ZW\">Zimbabwe</option> </select> </div> </div> <div class=\"col-3\"> <div class=\"form-group\"> <label for=\"addressPostalCode\">{{'zipPostalCode' | i18n}}</label> <input id=\"addressPostalCode\" class=\"form-control\" type=\"text\" name=\"addressPostalCode\" [(ngModel)]=\"taxInfo.postalCode\" [required]=\"taxInfo.country === 'US'\" autocomplete=\"postal-code\"> </div> </div> <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\"> <div class=\"form-group form-check\"> <input class=\"form-check-input\" id=\"addressIncludeTaxId\" name=\"addressIncludeTaxId\" type=\"checkbox\" [(ngModel)]=\"taxInfo.includeTaxId\"> <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{'includeVAT' | i18n}}</label> </div> </div> </div> <div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"taxId\">{{'taxIdNumber' | i18n}}</label> <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\"> </div> </div> </div> <div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressLine1\">{{'address1' | i18n}}</label> <input id=\"addressLine1\" class=\"form-control\" type=\"text\" name=\"addressLine1\" [(ngModel)]=\"taxInfo.line1\" autocomplete=\"address-line1\"> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressLine2\">{{'address2' | i18n}}</label> <input id=\"addressLine2\" class=\"form-control\" type=\"text\" name=\"addressLine2\" [(ngModel)]=\"taxInfo.line2\" autocomplete=\"address-line2\"> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressCity\">{{'cityTown' | i18n}}</label> <input id=\"addressCity\" class=\"form-control\" type=\"text\" name=\"addressCity\" [(ngModel)]=\"taxInfo.city\" autocomplete=\"address-level2\"> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressState\">{{'stateProvince' | i18n}}</label> <input id=\"addressState\" class=\"form-control\" type=\"text\" name=\"addressState\" [(ngModel)]=\"taxInfo.state\" autocomplete=\"address-level1\"> </div> </div> </div> ","import { View } from './view';\n\nimport { Identity } from '../domain/identity';\n\nimport { Utils } from '../../misc/utils';\n\nexport class IdentityView implements View {\n    title: string = null;\n    middleName: string = null;\n    address1: string = null;\n    address2: string = null;\n    address3: string = null;\n    city: string = null;\n    state: string = null;\n    postalCode: string = null;\n    country: string = null;\n    company: string = null;\n    email: string = null;\n    phone: string = null;\n    ssn: string = null;\n    username: string = null;\n    passportNumber: string = null;\n    licenseNumber: string = null;\n\n    // tslint:disable\n    private _firstName: string = null;\n    private _lastName: string = null;\n    private _subTitle: string = null;\n    // tslint:enable\n\n    constructor(i?: Identity) {\n        // ctor\n    }\n\n    get firstName(): string {\n        return this._firstName;\n    }\n    set firstName(value: string) {\n        this._firstName = value;\n        this._subTitle = null;\n    }\n\n    get lastName(): string {\n        return this._lastName;\n    }\n    set lastName(value: string) {\n        this._lastName = value;\n        this._subTitle = null;\n    }\n\n    get subTitle(): string {\n        if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n            this._subTitle = '';\n            if (this.firstName != null) {\n                this._subTitle = this.firstName;\n            }\n            if (this.lastName != null) {\n                if (this._subTitle !== '') {\n                    this._subTitle += ' ';\n                }\n                this._subTitle += this.lastName;\n            }\n        }\n\n        return this._subTitle;\n    }\n\n    get fullName(): string {\n        if (this.title != null || this.firstName != null || this.middleName != null || this.lastName != null) {\n            let name = '';\n            if (this.title != null) {\n                name += (this.title + ' ');\n            }\n            if (this.firstName != null) {\n                name += (this.firstName + ' ');\n            }\n            if (this.middleName != null) {\n                name += (this.middleName + ' ');\n            }\n            if (this.lastName != null) {\n                name += this.lastName;\n            }\n            return name.trim();\n        }\n\n        return null;\n    }\n\n    get fullAddress(): string {\n        let address = this.address1;\n        if (!Utils.isNullOrWhitespace(this.address2)) {\n            if (!Utils.isNullOrWhitespace(address)) {\n                address += ', ';\n            }\n            address += this.address2;\n        }\n        if (!Utils.isNullOrWhitespace(this.address3)) {\n            if (!Utils.isNullOrWhitespace(address)) {\n                address += ', ';\n            }\n            address += this.address3;\n        }\n        return address;\n    }\n\n    get fullAddressPart2(): string {\n        if (this.city == null && this.state == null && this.postalCode == null) {\n            return null;\n        }\n        const city = this.city || '-';\n        const state = this.state;\n        const postalCode = this.postalCode || '-';\n        let addressPart2 = city;\n        if (!Utils.isNullOrWhitespace(state)) {\n            addressPart2 += ', ' + state;\n        }\n        addressPart2 += ', ' + postalCode;\n        return addressPart2;\n    }\n}\n","import { LoginUriView } from './loginUriView';\nimport { View } from './view';\n\nimport { Utils } from '../../misc/utils';\nimport { Login } from '../domain/login';\n\nexport class LoginView implements View {\n    username: string = null;\n    password: string = null;\n    passwordRevisionDate?: Date = null;\n    totp: string = null;\n    uris: LoginUriView[] = null;\n    autofillOnPageLoad: boolean = null;\n\n    constructor(l?: Login) {\n        if (!l) {\n            return;\n        }\n\n        this.passwordRevisionDate = l.passwordRevisionDate;\n        this.autofillOnPageLoad = l.autofillOnPageLoad;\n    }\n\n    get uri(): string {\n        return this.hasUris ? this.uris[0].uri : null;\n    }\n\n    get maskedPassword(): string {\n        return this.password != null ? '••••••••' : null;\n    }\n\n    get subTitle(): string {\n        return this.username;\n    }\n\n    get canLaunch(): boolean {\n        return this.hasUris && this.uris.some(u => u.canLaunch);\n    }\n\n    get hasTotp(): boolean {\n        return !Utils.isNullOrWhitespace(this.totp);\n    }\n\n    get launchUri(): string {\n        if (this.hasUris) {\n            const uri = this.uris.find(u => u.canLaunch);\n            if (uri != null) {\n                return uri.launchUri;\n            }\n        }\n        return null;\n    }\n\n    get hasUris(): boolean {\n        return this.uris != null && this.uris.length > 0;\n    }\n}\n","import { SendData } from '../models/data/sendData';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { Send } from '../models/domain/send';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { SendView } from '../models/view/sendView';\n\nexport abstract class SendService {\n    decryptedSendCache: SendView[];\n\n    clearCache: () => void;\n    encrypt: (model: SendView, file: File | ArrayBuffer, password: string, key?: SymmetricCryptoKey) => Promise<[Send, EncArrayBuffer]>;\n    get: (id: string) => Promise<Send>;\n    getAll: () => Promise<Send[]>;\n    getAllDecrypted: () => Promise<SendView[]>;\n    saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n    upsert: (send: SendData | SendData[]) => Promise<any>;\n    replace: (sends: { [id: string]: SendData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n    removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { CollectionDetailsResponse } from '../response/collectionResponse';\n\nexport class CollectionData {\n    id: string;\n    organizationId: string;\n    name: string;\n    externalId: string;\n    readOnly: boolean;\n\n    constructor(response: CollectionDetailsResponse) {\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.name = response.name;\n        this.externalId = response.externalId;\n        this.readOnly = response.readOnly;\n    }\n}\n","import { View } from './view';\n\nimport { Collection } from '../domain/collection';\nimport { ITreeNodeObject } from '../domain/treeNode';\n\nimport { CollectionGroupDetailsResponse } from '../response/collectionResponse';\n\nexport class CollectionView implements View, ITreeNodeObject {\n    id: string = null;\n    organizationId: string = null;\n    name: string = null;\n    externalId: string = null;\n    readOnly: boolean = null;\n    hidePasswords: boolean = null;\n\n    constructor(c?: Collection | CollectionGroupDetailsResponse) {\n        if (!c) {\n            return;\n        }\n\n        this.id = c.id;\n        this.organizationId = c.organizationId;\n        this.externalId = c.externalId;\n        if (c instanceof Collection) {\n            this.readOnly = c.readOnly;\n            this.hidePasswords = c.hidePasswords;\n        }\n    }\n}\n","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { AttachmentData } from './attachmentData';\nimport { CardData } from './cardData';\nimport { FieldData } from './fieldData';\nimport { IdentityData } from './identityData';\nimport { LoginData } from './loginData';\nimport { PasswordHistoryData } from './passwordHistoryData';\nimport { SecureNoteData } from './secureNoteData';\n\nimport { CipherResponse } from '../response/cipherResponse';\n\nexport class CipherData {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    userId: string;\n    edit: boolean;\n    viewPassword: boolean;\n    organizationUseTotp: boolean;\n    favorite: boolean;\n    revisionDate: string;\n    type: CipherType;\n    sizeName: string;\n    name: string;\n    notes: string;\n    login?: LoginData;\n    secureNote?: SecureNoteData;\n    card?: CardData;\n    identity?: IdentityData;\n    fields?: FieldData[];\n    attachments?: AttachmentData[];\n    passwordHistory?: PasswordHistoryData[];\n    collectionIds?: string[];\n    deletedDate: string;\n    reprompt: CipherRepromptType;\n\n    constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\n        if (response == null) {\n            return;\n        }\n\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.folderId = response.folderId;\n        this.userId = userId;\n        this.edit = response.edit;\n        this.viewPassword = response.viewPassword;\n        this.organizationUseTotp = response.organizationUseTotp;\n        this.favorite = response.favorite;\n        this.revisionDate = response.revisionDate;\n        this.type = response.type;\n        this.name = response.name;\n        this.notes = response.notes;\n        this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n        this.deletedDate = response.deletedDate;\n        this.reprompt = response.reprompt;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new LoginData(response.login);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNoteData(response.secureNote);\n                break;\n            case CipherType.Card:\n                this.card = new CardData(response.card);\n                break;\n            case CipherType.Identity:\n                this.identity = new IdentityData(response.identity);\n                break;\n            default:\n                break;\n        }\n\n        if (response.fields != null) {\n            this.fields = response.fields.map(f => new FieldData(f));\n        }\n        if (response.attachments != null) {\n            this.attachments = response.attachments.map(a => new AttachmentData(a));\n        }\n        if (response.passwordHistory != null) {\n            this.passwordHistory = response.passwordHistory.map(ph => new PasswordHistoryData(ph));\n        }\n    }\n}\n","export enum SendType {\n    Text = 0,\n    File = 1,\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-two-factor-verify',\n    templateUrl: 'two-factor-verify.component.html',\n})\nexport class TwoFactorVerifyComponent {\n    @Input() type: TwoFactorProviderType;\n    @Input() organizationId: string;\n    @Output() onAuthed = new EventEmitter<any>();\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    private masterPasswordHash: string;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = this.masterPasswordHash =\n            await this.cryptoService.hashPassword(this.masterPassword, null);\n\n        try {\n            switch (this.type) {\n                case -1:\n                    this.formPromise = this.apiService.getTwoFactorRecover(request);\n                    break;\n                case TwoFactorProviderType.Duo:\n                case TwoFactorProviderType.OrganizationDuo:\n                    if (this.organizationId != null) {\n                        this.formPromise = this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n                    } else {\n                        this.formPromise = this.apiService.getTwoFactorDuo(request);\n                    }\n                    break;\n                case TwoFactorProviderType.Email:\n                    this.formPromise = this.apiService.getTwoFactorEmail(request);\n                    break;\n                case TwoFactorProviderType.WebAuthn:\n                    this.formPromise = this.apiService.getTwoFactorWebAuthn(request);\n                    break;\n                case TwoFactorProviderType.Authenticator:\n                    this.formPromise = this.apiService.getTwoFactorAuthenticator(request);\n                    break;\n                case TwoFactorProviderType.Yubikey:\n                    this.formPromise = this.apiService.getTwoFactorYubiKey(request);\n                    break;\n            }\n\n            const response = await this.formPromise;\n            this.onAuthed.emit({\n                response: response,\n                masterPasswordHash: this.masterPasswordHash,\n            });\n        } catch { }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-body\"> <p>{{'twoStepLoginAuthDesc' | i18n}}</p> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutoFocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'continue' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> ","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { CipherData } from '../data/cipherData';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Attachment } from './attachment';\nimport { Card } from './card';\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { Field } from './field';\nimport { Identity } from './identity';\nimport { Login } from './login';\nimport { Password } from './password';\nimport { SecureNote } from './secureNote';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Cipher extends Domain {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    name: EncString;\n    notes: EncString;\n    type: CipherType;\n    favorite: boolean;\n    organizationUseTotp: boolean;\n    edit: boolean;\n    viewPassword: boolean;\n    revisionDate: Date;\n    localData: any;\n    login: Login;\n    identity: Identity;\n    card: Card;\n    secureNote: SecureNote;\n    attachments: Attachment[];\n    fields: Field[];\n    passwordHistory: Password[];\n    collectionIds: string[];\n    deletedDate: Date;\n    reprompt: CipherRepromptType;\n\n    constructor(obj?: CipherData, alreadyEncrypted: boolean = false, localData: any = null) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            userId: null,\n            organizationId: null,\n            folderId: null,\n            name: null,\n            notes: null,\n        }, alreadyEncrypted, ['id', 'userId', 'organizationId', 'folderId']);\n\n        this.type = obj.type;\n        this.favorite = obj.favorite;\n        this.organizationUseTotp = obj.organizationUseTotp;\n        this.edit = obj.edit;\n        if (obj.viewPassword != null) {\n            this.viewPassword = obj.viewPassword;\n        } else {\n            this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n        }\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n        this.collectionIds = obj.collectionIds;\n        this.localData = localData;\n        this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n        this.reprompt = obj.reprompt;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new Login(obj.login, alreadyEncrypted);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNote(obj.secureNote, alreadyEncrypted);\n                break;\n            case CipherType.Card:\n                this.card = new Card(obj.card, alreadyEncrypted);\n                break;\n            case CipherType.Identity:\n                this.identity = new Identity(obj.identity, alreadyEncrypted);\n                break;\n            default:\n                break;\n        }\n\n        if (obj.attachments != null) {\n            this.attachments = obj.attachments.map(a => new Attachment(a, alreadyEncrypted));\n        } else {\n            this.attachments = null;\n        }\n\n        if (obj.fields != null) {\n            this.fields = obj.fields.map(f => new Field(f, alreadyEncrypted));\n        } else {\n            this.fields = null;\n        }\n\n        if (obj.passwordHistory != null) {\n            this.passwordHistory = obj.passwordHistory.map(ph => new Password(ph, alreadyEncrypted));\n        } else {\n            this.passwordHistory = null;\n        }\n    }\n\n    async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n        const model = new CipherView(this);\n\n        await this.decryptObj(model, {\n            name: null,\n            notes: null,\n        }, this.organizationId, encKey);\n\n        switch (this.type) {\n            case CipherType.Login:\n                model.login = await this.login.decrypt(this.organizationId, encKey);\n                break;\n            case CipherType.SecureNote:\n                model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n                break;\n            case CipherType.Card:\n                model.card = await this.card.decrypt(this.organizationId, encKey);\n                break;\n            case CipherType.Identity:\n                model.identity = await this.identity.decrypt(this.organizationId, encKey);\n                break;\n            default:\n                break;\n        }\n\n        const orgId = this.organizationId;\n\n        if (this.attachments != null && this.attachments.length > 0) {\n            const attachments: any[] = [];\n            await this.attachments.reduce((promise, attachment) => {\n                return promise.then(() => {\n                    return attachment.decrypt(orgId, encKey);\n                }).then(decAttachment => {\n                    attachments.push(decAttachment);\n                });\n            }, Promise.resolve());\n            model.attachments = attachments;\n        }\n\n        if (this.fields != null && this.fields.length > 0) {\n            const fields: any[] = [];\n            await this.fields.reduce((promise, field) => {\n                return promise.then(() => {\n                    return field.decrypt(orgId, encKey);\n                }).then(decField => {\n                    fields.push(decField);\n                });\n            }, Promise.resolve());\n            model.fields = fields;\n        }\n\n        if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n            const passwordHistory: any[] = [];\n            await this.passwordHistory.reduce((promise, ph) => {\n                return promise.then(() => {\n                    return ph.decrypt(orgId, encKey);\n                }).then(decPh => {\n                    passwordHistory.push(decPh);\n                });\n            }, Promise.resolve());\n            model.passwordHistory = passwordHistory;\n        }\n\n        return model;\n    }\n\n    toCipherData(userId: string): CipherData {\n        const c = new CipherData();\n        c.id = this.id;\n        c.organizationId = this.organizationId;\n        c.folderId = this.folderId;\n        c.userId = this.organizationId != null ? userId : null;\n        c.edit = this.edit;\n        c.viewPassword = this.viewPassword;\n        c.organizationUseTotp = this.organizationUseTotp;\n        c.favorite = this.favorite;\n        c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n        c.type = this.type;\n        c.collectionIds = this.collectionIds;\n        c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n        c.reprompt = this.reprompt;\n\n        this.buildDataModel(this, c, {\n            name: null,\n            notes: null,\n        });\n\n        switch (c.type) {\n            case CipherType.Login:\n                c.login = this.login.toLoginData();\n                break;\n            case CipherType.SecureNote:\n                c.secureNote = this.secureNote.toSecureNoteData();\n                break;\n            case CipherType.Card:\n                c.card = this.card.toCardData();\n                break;\n            case CipherType.Identity:\n                c.identity = this.identity.toIdentityData();\n                break;\n            default:\n                break;\n        }\n\n        if (this.fields != null) {\n            c.fields = this.fields.map(f => f.toFieldData());\n        }\n        if (this.attachments != null) {\n            c.attachments = this.attachments.map(a => a.toAttachmentData());\n        }\n        if (this.passwordHistory != null) {\n            c.passwordHistory = this.passwordHistory.map(ph => ph.toPasswordHistoryData());\n        }\n        return c;\n    }\n}\n","export enum CipherRepromptType {\n    None = 0,\n    Password = 1,\n}\n","export abstract class PasswordRepromptService {\n    protectedFields: () => string[];\n    showPasswordPrompt: () => Promise<boolean>;\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-password-strength',\n    templateUrl: 'password-strength.component.html',\n})\nexport class PasswordStrengthComponent implements OnChanges {\n    @Input() score?: number;\n    @Input() showText = false;\n\n    scoreWidth = 0;\n    color = 'bg-danger';\n    text: string;\n\n    constructor(private i18nService: I18nService) { }\n\n    ngOnChanges(): void {\n        this.scoreWidth = this.score == null ? 0 : (this.score + 1) * 20;\n        switch (this.score) {\n            case 4:\n                this.color = 'bg-success';\n                this.text = this.i18nService.t('strong');\n                break;\n            case 3:\n                this.color = 'bg-primary';\n                this.text = this.i18nService.t('good');\n                break;\n            case 2:\n                this.color = 'bg-warning';\n                this.text = this.i18nService.t('weak');\n                break;\n            default:\n                this.color = 'bg-danger';\n                this.text = this.score != null ? this.i18nService.t('weak') : null;\n                break;\n        }\n    }\n}\n","<div class=\"progress\"> <div class=\"progress-bar {{color}}\" role=\"progressbar\" [ngStyle]=\"{width: (scoreWidth + '%')}\" attr.aria-valuenow=\"{{scoreWidth}}\" aria-valuemin=\"0\" aria-valuemax=\"100\"> <ng-container *ngIf=\"showText && text\"> {{text}} </ng-container> </div> </div> ","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\n@Pipe({\n    name: 'search',\n})\nexport class SearchPipe implements PipeTransform {\n    transform(items: any[], searchText: string, prop1?: string, prop2?: string, prop3?: string): any[] {\n        if (items == null || items.length === 0) {\n            return [];\n        }\n\n        if (searchText == null || searchText.length < 2) {\n            return items;\n        }\n\n        searchText = searchText.trim().toLowerCase();\n        return items.filter(i => {\n            if (prop1 != null && i[prop1] != null && i[prop1].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (prop2 != null && i[prop2] != null && i[prop2].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (prop3 != null && i[prop3] != null && i[prop3].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            return false;\n        });\n    }\n}\n","export enum EventType {\n    User_LoggedIn = 1000,\n    User_ChangedPassword = 1001,\n    User_Updated2fa = 1002,\n    User_Disabled2fa = 1003,\n    User_Recovered2fa = 1004,\n    User_FailedLogIn = 1005,\n    User_FailedLogIn2fa = 1006,\n    User_ClientExportedVault = 1007,\n\n    Cipher_Created = 1100,\n    Cipher_Updated = 1101,\n    Cipher_Deleted = 1102,\n    Cipher_AttachmentCreated = 1103,\n    Cipher_AttachmentDeleted = 1104,\n    Cipher_Shared = 1105,\n    Cipher_UpdatedCollections = 1106,\n    Cipher_ClientViewed = 1107,\n    Cipher_ClientToggledPasswordVisible = 1108,\n    Cipher_ClientToggledHiddenFieldVisible = 1109,\n    Cipher_ClientToggledCardCodeVisible = 1110,\n    Cipher_ClientCopiedPassword = 1111,\n    Cipher_ClientCopiedHiddenField = 1112,\n    Cipher_ClientCopiedCardCode = 1113,\n    Cipher_ClientAutofilled = 1114,\n    Cipher_SoftDeleted = 1115,\n    Cipher_Restored = 1116,\n    Cipher_ClientToggledCardNumberVisible = 1117,\n\n    Collection_Created = 1300,\n    Collection_Updated = 1301,\n    Collection_Deleted = 1302,\n\n    Group_Created = 1400,\n    Group_Updated = 1401,\n    Group_Deleted = 1402,\n\n    OrganizationUser_Invited = 1500,\n    OrganizationUser_Confirmed = 1501,\n    OrganizationUser_Updated = 1502,\n    OrganizationUser_Removed = 1503,\n    OrganizationUser_UpdatedGroups = 1504,\n    OrganizationUser_UnlinkedSso = 1505,\n    OrganizationUser_ResetPassword_Enroll = 1506,\n    OrganizationUser_ResetPassword_Withdraw = 1507,\n    OrganizationUser_AdminResetPassword = 1508,\n\n    Organization_Updated = 1600,\n    Organization_PurgedVault = 1601,\n    // Organization_ClientExportedVault = 1602,\n\n    Policy_Updated = 1700,\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { View } from './view';\n\nimport { Field } from '../domain/field';\n\nexport class FieldView implements View {\n    name: string = null;\n    value: string = null;\n    type: FieldType = null;\n    newField: boolean = false; // Marks if the field is new and hasn't been saved\n    showValue: boolean = false;\n\n    constructor(f?: Field) {\n        if (!f) {\n            return;\n        }\n\n        this.type = f.type;\n    }\n\n    get maskedValue(): string {\n        return this.value != null ? '••••••••' : null;\n    }\n}\n","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { Cipher } from '../domain/cipher';\n\nimport { CardApi } from '../api/cardApi';\nimport { FieldApi } from '../api/fieldApi';\nimport { IdentityApi } from '../api/identityApi';\nimport { LoginApi } from '../api/loginApi';\nimport { LoginUriApi } from '../api/loginUriApi';\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nimport { AttachmentRequest } from './attachmentRequest';\nimport { PasswordHistoryRequest } from './passwordHistoryRequest';\n\nexport class CipherRequest {\n    type: CipherType;\n    folderId: string;\n    organizationId: string;\n    name: string;\n    notes: string;\n    favorite: boolean;\n    login: LoginApi;\n    secureNote: SecureNoteApi;\n    card: CardApi;\n    identity: IdentityApi;\n    fields: FieldApi[];\n    passwordHistory: PasswordHistoryRequest[];\n    // Deprecated, remove at some point and rename attachments2 to attachments\n    attachments: { [id: string]: string; };\n    attachments2: { [id: string]: AttachmentRequest; };\n    lastKnownRevisionDate: Date;\n    reprompt: CipherRepromptType;\n\n    constructor(cipher: Cipher) {\n        this.type = cipher.type;\n        this.folderId = cipher.folderId;\n        this.organizationId = cipher.organizationId;\n        this.name = cipher.name ? cipher.name.encryptedString : null;\n        this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n        this.favorite = cipher.favorite;\n        this.lastKnownRevisionDate = cipher.revisionDate;\n        this.reprompt = cipher.reprompt;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new LoginApi();\n                this.login.uris = null;\n                this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n                this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n                this.login.passwordRevisionDate = cipher.login.passwordRevisionDate != null ?\n                    cipher.login.passwordRevisionDate.toISOString() : null;\n                this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n                this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n                if (cipher.login.uris != null) {\n                    this.login.uris = cipher.login.uris.map(u => {\n                        const uri = new LoginUriApi();\n                        uri.uri = u.uri != null ? u.uri.encryptedString : null;\n                        uri.match = u.match != null ? u.match : null;\n                        return uri;\n                    });\n                }\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNoteApi();\n                this.secureNote.type = cipher.secureNote.type;\n                break;\n            case CipherType.Card:\n                this.card = new CardApi();\n                this.card.cardholderName = cipher.card.cardholderName != null ?\n                    cipher.card.cardholderName.encryptedString : null;\n                this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n                this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n                this.card.expMonth = cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n                this.card.expYear = cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n                this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n                break;\n            case CipherType.Identity:\n                this.identity = new IdentityApi();\n                this.identity.title = cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n                this.identity.firstName = cipher.identity.firstName != null ?\n                    cipher.identity.firstName.encryptedString : null;\n                this.identity.middleName = cipher.identity.middleName != null ?\n                    cipher.identity.middleName.encryptedString : null;\n                this.identity.lastName = cipher.identity.lastName != null ?\n                    cipher.identity.lastName.encryptedString : null;\n                this.identity.address1 = cipher.identity.address1 != null ?\n                    cipher.identity.address1.encryptedString : null;\n                this.identity.address2 = cipher.identity.address2 != null ?\n                    cipher.identity.address2.encryptedString : null;\n                this.identity.address3 = cipher.identity.address3 != null ?\n                    cipher.identity.address3.encryptedString : null;\n                this.identity.city = cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n                this.identity.state = cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n                this.identity.postalCode = cipher.identity.postalCode != null ?\n                    cipher.identity.postalCode.encryptedString : null;\n                this.identity.country = cipher.identity.country != null ?\n                    cipher.identity.country.encryptedString : null;\n                this.identity.company = cipher.identity.company != null ?\n                    cipher.identity.company.encryptedString : null;\n                this.identity.email = cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n                this.identity.phone = cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n                this.identity.ssn = cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n                this.identity.username = cipher.identity.username != null ?\n                    cipher.identity.username.encryptedString : null;\n                this.identity.passportNumber = cipher.identity.passportNumber != null ?\n                    cipher.identity.passportNumber.encryptedString : null;\n                this.identity.licenseNumber = cipher.identity.licenseNumber != null ?\n                    cipher.identity.licenseNumber.encryptedString : null;\n                break;\n            default:\n                break;\n        }\n\n        if (cipher.fields != null) {\n            this.fields = cipher.fields.map(f => {\n                const field = new FieldApi();\n                field.type = f.type;\n                field.name = f.name ? f.name.encryptedString : null;\n                field.value = f.value ? f.value.encryptedString : null;\n                return field;\n            });\n        }\n\n        if (cipher.passwordHistory != null) {\n            this.passwordHistory = [];\n            cipher.passwordHistory.forEach(ph => {\n                this.passwordHistory.push({\n                    lastUsedDate: ph.lastUsedDate,\n                    password: ph.password ? ph.password.encryptedString : null,\n                });\n            });\n        }\n\n        if (cipher.attachments != null) {\n            this.attachments = {};\n            this.attachments2 = {};\n            cipher.attachments.forEach(attachment => {\n                const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n                this.attachments[attachment.id] = fileName;\n                const attachmentRequest = new AttachmentRequest();\n                attachmentRequest.fileName = fileName;\n                if (attachment.key != null) {\n                    attachmentRequest.key = attachment.key.encryptedString;\n                }\n                this.attachments2[attachment.id] = attachmentRequest;\n            });\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class ErrorResponse extends BaseResponse {\n    message: string;\n    validationErrors: { [key: string]: string[]; };\n    statusCode: number;\n\n    constructor(response: any, status: number, identityResponse?: boolean) {\n        super(response);\n        let errorModel = null;\n        if (response != null) {\n            const responseErrorModel = this.getResponseProperty('ErrorModel');\n            if (responseErrorModel && identityResponse) {\n                errorModel = responseErrorModel;\n            } else {\n                errorModel = response;\n            }\n        }\n\n        if (errorModel) {\n            this.message = this.getResponseProperty('Message', errorModel);\n            this.validationErrors = this.getResponseProperty('ValidationErrors', errorModel);\n        } else {\n            if (status === 429) {\n                this.message = 'Rate limit exceeded. Try again later.';\n            }\n        }\n        this.statusCode = status;\n    }\n\n    getSingleMessage(): string {\n        if (this.validationErrors == null) {\n            return this.message;\n        }\n        for (const key in this.validationErrors) {\n            if (!this.validationErrors.hasOwnProperty(key)) {\n                continue;\n            }\n            if (this.validationErrors[key].length) {\n                return this.validationErrors[key][0];\n            }\n        }\n        return this.message;\n    }\n\n    getAllMessages(): string[] {\n        const messages: string[] = [];\n        if (this.validationErrors == null) {\n            return messages;\n        }\n        for (const key in this.validationErrors) {\n            if (!this.validationErrors.hasOwnProperty(key)) {\n                continue;\n            }\n            this.validationErrors[key].forEach((item: string) => {\n                let prefix = '';\n                if (key.indexOf('[') > -1 && key.indexOf(']') > -1) {\n                    const lastSep = key.lastIndexOf('.');\n                    prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + ': ';\n                }\n                messages.push(prefix + item);\n            });\n        }\n        return messages;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { ErrorResponse } from 'jslib-common/models/response/errorResponse';\n\n@Injectable()\nexport class ValidationService {\n    constructor(private i18nService: I18nService, private platformUtilsService: PlatformUtilsService) { }\n\n    showError(data: any): string[] {\n        const defaultErrorMessage = this.i18nService.t('unexpectedError');\n        let errors: string[] = [];\n\n        if (data != null && typeof data === 'string') {\n            errors.push(data);\n        } else if (data == null || typeof data !== 'object') {\n            errors.push(defaultErrorMessage);\n        } else if (data.validationErrors != null) {\n            errors = errors.concat((data as ErrorResponse).getAllMessages());\n        } else {\n            errors.push(data.message ? data.message : defaultErrorMessage);\n        }\n\n        if (errors.length === 1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), errors[0]);\n        } else if (errors.length > 1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), errors, {\n                timeout: 5000 * errors.length,\n            });\n        }\n\n        return errors;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport {\n    ActivatedRoute,\n    NavigationEnd,\n    Router,\n} from '@angular/router';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Injectable()\nexport class RouterService {\n    private previousUrl: string = undefined;\n    private currentUrl: string = undefined;\n\n    constructor(private router: Router, private activatedRoute: ActivatedRoute,\n        private titleService: Title, i18nService: I18nService) {\n        this.currentUrl = this.router.url;\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n\n                let title = i18nService.t('pageTitle', 'Bitwarden');\n                let titleId: string = null;\n                let rawTitle: string = null;\n                let child = this.activatedRoute.firstChild;\n                while (child != null) {\n                    if (child.firstChild != null) {\n                        child = child.firstChild;\n                    } else if (child.snapshot.data != null && child.snapshot.data.title != null) {\n                        rawTitle = child.snapshot.data.title;\n                        break;\n                    } else if (child.snapshot.data != null && child.snapshot.data.titleId != null) {\n                        titleId = child.snapshot.data.titleId;\n                        break;\n                    } else {\n                        titleId = null;\n                        rawTitle = null;\n                        break;\n                    }\n                }\n\n                if (titleId != null || rawTitle != null) {\n                    const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n                    if (newTitle != null && newTitle !== '') {\n                        title = (newTitle + ' | ' + title);\n                    }\n                }\n                this.titleService.setTitle(title);\n            }\n        });\n    }\n\n    getPreviousUrl() {\n        return this.previousUrl;\n    }\n\n    setPreviousUrl(url: string) {\n        this.previousUrl = url;\n    }\n}\n","export enum KdfType {\n    PBKDF2_SHA256 = 0,\n}\n","export enum OrganizationUserType {\n    Owner = 0,\n    Admin = 1,\n    User = 2,\n    Manager = 3,\n    Custom = 4,\n}\n","import { Injectable } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\n\nimport { DeviceType } from 'jslib-common/enums/deviceType';\nimport { EventType } from 'jslib-common/enums/eventType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\n\n\n@Injectable()\nexport class EventService {\n    constructor(private i18nService: I18nService, private policyService: PolicyService) { }\n\n    getDefaultDateFilters() {\n        const d = new Date();\n        const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n        d.setDate(d.getDate() - 30);\n        const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n        return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n    }\n\n    formatDateFilters(filterStart: string, filterEnd: string) {\n        const start: Date = new Date(filterStart);\n        const end: Date = new Date(filterEnd + ':59.999');\n        if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n            throw new Error('Invalid date range.');\n        }\n        return [start.toISOString(), end.toISOString()];\n    }\n\n    async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n        const appInfo = this.getAppInfo(ev.deviceType);\n        const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n        return {\n            message: message,\n            humanReadableMessage: humanReadableMessage,\n            appIcon: appInfo[0],\n            appName: appInfo[1],\n        };\n    }\n\n    private async getEventMessage(ev: EventResponse, options: EventOptions) {\n        let msg = '';\n        let humanReadableMsg = '';\n        switch (ev.type) {\n            // User\n            case EventType.User_LoggedIn:\n                msg = humanReadableMsg = this.i18nService.t('loggedIn');\n                break;\n            case EventType.User_ChangedPassword:\n                msg = humanReadableMsg = this.i18nService.t('changedPassword');\n                break;\n            case EventType.User_Updated2fa:\n                msg = humanReadableMsg = this.i18nService.t('enabledUpdated2fa');\n                break;\n            case EventType.User_Disabled2fa:\n                msg = humanReadableMsg = this.i18nService.t('disabled2fa');\n                break;\n            case EventType.User_Recovered2fa:\n                msg = humanReadableMsg = this.i18nService.t('recovered2fa');\n                break;\n            case EventType.User_FailedLogIn:\n                msg = humanReadableMsg = this.i18nService.t('failedLogin');\n                break;\n            case EventType.User_FailedLogIn2fa:\n                msg = humanReadableMsg = this.i18nService.t('failedLogin2fa');\n                break;\n            case EventType.User_ClientExportedVault:\n                msg = humanReadableMsg = this.i18nService.t('exportedVault');\n                break;\n            // Cipher\n            case EventType.Cipher_Created:\n                msg = this.i18nService.t('createdItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('createdItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_Updated:\n                msg = this.i18nService.t('editedItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('editedItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_Deleted:\n                msg = this.i18nService.t('permanentlyDeletedItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('permanentlyDeletedItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_SoftDeleted:\n                msg = this.i18nService.t('deletedItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('deletedItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_Restored:\n                msg = this.i18nService.t('restoredItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('restoredItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_AttachmentCreated:\n                msg = this.i18nService.t('createdAttachmentForItem', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('createdAttachmentForItem', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_AttachmentDeleted:\n                msg = this.i18nService.t('deletedAttachmentForItem', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('deletedAttachmentForItem', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_Shared:\n                msg = this.i18nService.t('movedItemIdToOrg', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('movedItemIdToOrg', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientViewed:\n                msg = this.i18nService.t('viewedItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('viewedItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientToggledPasswordVisible:\n                msg = this.i18nService.t('viewedPasswordItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('viewedPasswordItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientToggledHiddenFieldVisible:\n                msg = this.i18nService.t('viewedHiddenFieldItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('viewedHiddenFieldItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientToggledCardCodeVisible:\n                msg = this.i18nService.t('viewedSecurityCodeItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('viewedSecurityCodeItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientCopiedHiddenField:\n                msg = this.i18nService.t('copiedHiddenFieldItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('copiedHiddenFieldItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientCopiedPassword:\n                msg = this.i18nService.t('copiedPasswordItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('copiedPasswordItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientCopiedCardCode:\n                msg = this.i18nService.t('copiedSecurityCodeItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('copiedSecurityCodeItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientAutofilled:\n                msg = this.i18nService.t('autofilledItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('autofilledItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_UpdatedCollections:\n                msg = this.i18nService.t('editedCollectionsForItem', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('editedCollectionsForItem', this.getShortId(ev.cipherId));\n                break;\n            // Collection\n            case EventType.Collection_Created:\n                msg = this.i18nService.t('createdCollectionId', this.formatCollectionId(ev));\n                humanReadableMsg = this.i18nService.t('createdCollectionId', this.getShortId(ev.collectionId));\n                break;\n            case EventType.Collection_Updated:\n                msg = this.i18nService.t('editedCollectionId', this.formatCollectionId(ev));\n                humanReadableMsg = this.i18nService.t('editedCollectionId', this.getShortId(ev.collectionId));\n                break;\n            case EventType.Collection_Deleted:\n                msg = this.i18nService.t('deletedCollectionId', this.formatCollectionId(ev));\n                humanReadableMsg = this.i18nService.t('deletedCollectionId', this.getShortId(ev.collectionId));\n                break;\n            // Group\n            case EventType.Group_Created:\n                msg = this.i18nService.t('createdGroupId', this.formatGroupId(ev));\n                humanReadableMsg = this.i18nService.t('createdGroupId', this.getShortId(ev.groupId));\n                break;\n            case EventType.Group_Updated:\n                msg = this.i18nService.t('editedGroupId', this.formatGroupId(ev));\n                humanReadableMsg = this.i18nService.t('editedGroupId', this.getShortId(ev.groupId));\n                break;\n            case EventType.Group_Deleted:\n                msg = this.i18nService.t('deletedGroupId', this.formatGroupId(ev));\n                humanReadableMsg = this.i18nService.t('deletedGroupId', this.getShortId(ev.groupId));\n                break;\n            // Org user\n            case EventType.OrganizationUser_Invited:\n                msg = this.i18nService.t('invitedUserId', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('invitedUserId', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_Confirmed:\n                msg = this.i18nService.t('confirmedUserId', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('confirmedUserId', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_Updated:\n                msg = this.i18nService.t('editedUserId', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('editedUserId', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_Removed:\n                msg = this.i18nService.t('removedUserId', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('removedUserId', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_UpdatedGroups:\n                msg = this.i18nService.t('editedGroupsForUser', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('editedGroupsForUser', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_UnlinkedSso:\n                msg = this.i18nService.t('unlinkedSsoUser', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('unlinkedSsoUser', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_ResetPassword_Enroll:\n                msg = this.i18nService.t('eventEnrollPasswordReset', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('eventEnrollPasswordReset', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_ResetPassword_Withdraw:\n                msg = this.i18nService.t('eventWithdrawPasswordReset', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('eventWithdrawPasswordReset', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_AdminResetPassword:\n                msg = this.i18nService.t('eventAdminPasswordReset', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('eventAdminPasswordReset', this.getShortId(ev.organizationUserId));\n                break;\n            // Org\n            case EventType.Organization_Updated:\n                msg = humanReadableMsg = this.i18nService.t('editedOrgSettings');\n                break;\n            case EventType.Organization_PurgedVault:\n                msg = humanReadableMsg = this.i18nService.t('purgedOrganizationVault');\n                break;\n            /*\n            case EventType.Organization_ClientExportedVault:\n                msg = this.i18nService.t('exportedOrganizationVault');\n                break;\n            */\n            // Policies\n            case EventType.Policy_Updated:\n                msg = this.i18nService.t('modifiedPolicyId', this.formatPolicyId(ev));\n\n                const policies = await this.policyService.getAll();\n                const policy = policies.filter(p => p.id === ev.policyId)[0];\n                let p1 = this.getShortId(ev.policyId);\n                if (policy !== null) {\n                    p1 = PolicyType[policy.type];\n                }\n\n                humanReadableMsg = this.i18nService.t('modifiedPolicyId', p1);\n                break;\n\n            default:\n                break;\n        }\n        return {\n            message: msg === '' ? null : msg,\n            humanReadableMessage: humanReadableMsg === '' ? null : humanReadableMsg,\n        };\n    }\n\n    private getAppInfo(deviceType: DeviceType): [string, string] {\n        switch (deviceType) {\n            case DeviceType.Android:\n                return ['fa-android', this.i18nService.t('mobile') + ' - Android'];\n            case DeviceType.iOS:\n                return ['fa-apple', this.i18nService.t('mobile') + ' - iOS'];\n            case DeviceType.UWP:\n                return ['fa-windows', this.i18nService.t('mobile') + ' - Windows'];\n            case DeviceType.ChromeExtension:\n                return ['fa-chrome', this.i18nService.t('extension') + ' - Chrome'];\n            case DeviceType.FirefoxExtension:\n                return ['fa-firefox', this.i18nService.t('extension') + ' - Firefox'];\n            case DeviceType.OperaExtension:\n                return ['fa-opera', this.i18nService.t('extension') + ' - Opera'];\n            case DeviceType.EdgeExtension:\n                return ['fa-edge', this.i18nService.t('extension') + ' - Edge'];\n            case DeviceType.VivaldiExtension:\n                return ['fa-puzzle-piece', this.i18nService.t('extension') + ' - Vivaldi'];\n            case DeviceType.SafariExtension:\n                return ['fa-safari', this.i18nService.t('extension') + ' - Safari'];\n            case DeviceType.WindowsDesktop:\n                return ['fa-windows', this.i18nService.t('desktop') + ' - Windows'];\n            case DeviceType.MacOsDesktop:\n                return ['fa-apple', this.i18nService.t('desktop') + ' - macOS'];\n            case DeviceType.LinuxDesktop:\n                return ['fa-linux', this.i18nService.t('desktop') + ' - Linux'];\n            case DeviceType.ChromeBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Chrome'];\n            case DeviceType.FirefoxBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Firefox'];\n            case DeviceType.OperaBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Opera'];\n            case DeviceType.SafariBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Safari'];\n            case DeviceType.VivaldiBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Vivaldi'];\n            case DeviceType.EdgeBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Edge'];\n            case DeviceType.IEBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - IE'];\n            case DeviceType.UnknownBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - ' + this.i18nService.t('unknown')];\n            default:\n                return ['fa-globe', this.i18nService.t('unknown')];\n        }\n    }\n\n    private formatCipherId(ev: EventResponse, options: EventOptions) {\n        const shortId = this.getShortId(ev.cipherId);\n        if (ev.organizationId == null || !options.cipherInfo) {\n            return '<code>' + shortId + '</code>';\n        }\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/vault?search=' + shortId +\n            '&viewEvents=' + ev.cipherId);\n        return a.outerHTML;\n    }\n\n    private formatGroupId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.groupId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/groups?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatCollectionId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.collectionId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/collections?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatOrgUserId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.organizationUserId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/people?search=' + shortId +\n            '&viewEvents=' + ev.organizationUserId);\n        return a.outerHTML;\n    }\n\n    private formatPolicyId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.policyId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/policies?policyId=' + ev.policyId);\n        return a.outerHTML;\n    }\n\n    private makeAnchor(shortId: string) {\n        const a = document.createElement('a');\n        a.title = this.i18nService.t('view');\n        a.innerHTML = '<code>' + shortId + '</code>';\n        return a;\n    }\n\n    private getShortId(id: string) {\n        return id.substring(0, 8);\n    }\n\n    private toDateTimeLocalString(date: Date) {\n        return date.getFullYear() +\n            '-' + this.pad(date.getMonth() + 1) +\n            '-' + this.pad(date.getDate()) +\n            'T' + this.pad(date.getHours()) +\n            ':' + this.pad(date.getMinutes());\n    }\n\n    private pad(num: number) {\n        const norm = Math.floor(Math.abs(num));\n        return (norm < 10 ? '0' : '') + norm;\n    }\n}\n\nexport class EventInfo {\n    message: string;\n    humanReadableMessage: string;\n    appIcon: string;\n    appName: string;\n}\n\nexport class EventOptions {\n    cipherInfo = true;\n}\n","import { EncryptionType } from '../../enums/encryptionType';\n\nimport { Utils } from '../../misc/utils';\n\nexport class SymmetricCryptoKey {\n    key: ArrayBuffer;\n    encKey?: ArrayBuffer;\n    macKey?: ArrayBuffer;\n    encType: EncryptionType;\n\n    keyB64: string;\n    encKeyB64: string;\n    macKeyB64: string;\n\n    meta: any;\n\n    constructor(key: ArrayBuffer, encType?: EncryptionType) {\n        if (key == null) {\n            throw new Error('Must provide key');\n        }\n\n        if (encType == null) {\n            if (key.byteLength === 32) {\n                encType = EncryptionType.AesCbc256_B64;\n            } else if (key.byteLength === 64) {\n                encType = EncryptionType.AesCbc256_HmacSha256_B64;\n            } else {\n                throw new Error('Unable to determine encType.');\n            }\n        }\n\n        this.key = key;\n        this.encType = encType;\n\n        if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n            this.encKey = key;\n            this.macKey = null;\n        } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n            this.encKey = key.slice(0, 16);\n            this.macKey = key.slice(16, 32);\n        } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n            this.encKey = key.slice(0, 32);\n            this.macKey = key.slice(32, 64);\n        } else {\n            throw new Error('Unsupported encType/key length.');\n        }\n\n        if (this.key != null) {\n            this.keyB64 = Utils.fromBufferToB64(this.key);\n        }\n        if (this.encKey != null) {\n            this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n        }\n        if (this.macKey != null) {\n            this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n        }\n    }\n}\n","export enum PaymentMethodType {\n    Card = 0,\n    BankAccount = 1,\n    PayPal = 2,\n    BitPay = 3,\n    Credit = 4,\n    WireTransfer = 5,\n    AppleInApp = 6,\n    GoogleInApp = 7,\n    Check = 8,\n}\n","import {\n    Directive,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\nimport { TwoFactorProviderRequest } from 'jslib-common/models/request/twoFactorProviderRequest';\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n    @Output() onUpdated = new EventEmitter<boolean>();\n\n    type: TwoFactorProviderType;\n    organizationId: string;\n    twoFactorProviderType = TwoFactorProviderType;\n    enabled = false;\n    authed = false;\n\n    protected masterPasswordHash: string;\n\n    constructor(protected apiService: ApiService, protected i18nService: I18nService,\n        protected toasterService: ToasterService, protected platformUtilsService: PlatformUtilsService) { }\n\n    protected auth(authResponse: any) {\n        this.masterPasswordHash = authResponse.masterPasswordHash;\n        this.authed = true;\n    }\n\n    protected async enable(enableFunction: () => Promise<void>) {\n        try {\n            await enableFunction();\n            this.onUpdated.emit(true);\n        } catch { }\n    }\n\n    protected async disable(promise: Promise<any>) {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('twoStepDisableDesc'),\n            this.i18nService.t('disable'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            const request = new TwoFactorProviderRequest();\n            request.masterPasswordHash = this.masterPasswordHash;\n            request.type = this.type;\n            if (this.organizationId != null) {\n                promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n            } else {\n                promise = this.apiService.putTwoFactorDisable(request);\n            }\n            await promise;\n            this.enabled = false;\n            this.toasterService.popAsync('success', null, this.i18nService.t('twoStepDisabled'));\n            this.onUpdated.emit(false);\n        } catch { }\n    }\n}\n","import {\n    ComponentFactoryResolver,\n    Directive,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { ModalComponent } from '../modal.component';\nimport { AddEditComponent as OrgAddEditComponent } from '../organizations/vault/add-edit.component';\nimport { AddEditComponent } from '../vault/add-edit.component';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Directive()\nexport class CipherReportComponent {\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n\n    loading = false;\n    hasLoaded = false;\n    ciphers: CipherView[] = [];\n    organization: Organization;\n\n    private modal: ModalComponent = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, protected userService: UserService,\n        protected messagingService: MessagingService, public requiresPaid: boolean) { }\n\n    async load() {\n        this.loading = true;\n        await this.setCiphers();\n        this.loading = false;\n        this.hasLoaded = true;\n    }\n\n    selectCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\n        let childComponent: OrgAddEditComponent | AddEditComponent;\n        if (this.organization != null) {\n            childComponent = this.modal.show<OrgAddEditComponent>(OrgAddEditComponent, this.cipherAddEditModalRef);\n            (childComponent as OrgAddEditComponent).organization = this.organization;\n        } else {\n            childComponent = this.modal.show<AddEditComponent>(AddEditComponent, this.cipherAddEditModalRef);\n        }\n\n        childComponent.cipherId = cipher == null ? null : cipher.id;\n        if (this.organization != null) {\n            childComponent.organizationId = this.organization.id;\n        }\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.load();\n        });\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.load();\n        });\n        childComponent.onRestoredCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.load();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n\n    protected async checkAccess(): Promise<boolean> {\n        if (this.organization != null) {\n            // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n            // since all paid plans include useTotp\n            if (this.requiresPaid && !this.organization.useTotp) {\n                this.messagingService.send('upgradeOrganization', { organizationId: this.organization.id });\n                return false;\n            }\n        } else {\n            const accessPremium = await this.userService.canAccessPremium();\n            if (this.requiresPaid && !accessPremium) {\n                this.messagingService.send('premiumRequired');\n                this.loading = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    protected async setCiphers() {\n        this.ciphers = [];\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { View } from './view';\n\nimport { LoginUri } from '../domain/loginUri';\n\nimport { Utils } from '../../misc/utils';\n\nconst CanLaunchWhitelist = [\n    'https://',\n    'http://',\n    'ssh://',\n    'ftp://',\n    'sftp://',\n    'irc://',\n    'vnc://',\n    // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n    'rdp://', // Legacy RDP URI scheme\n    'ms-rd:', // Preferred RDP URI scheme\n    'chrome://',\n    'iosapp://',\n    'androidapp://',\n];\n\nexport class LoginUriView implements View {\n    match: UriMatchType = null;\n\n    // tslint:disable\n    private _uri: string = null;\n    private _domain: string = null;\n    private _hostname: string = null;\n    private _host: string = null;\n    private _canLaunch: boolean = null;\n    // tslint:enable\n\n    constructor(u?: LoginUri) {\n        if (!u) {\n            return;\n        }\n\n        this.match = u.match;\n    }\n\n    get uri(): string {\n        return this._uri;\n    }\n    set uri(value: string) {\n        this._uri = value;\n        this._domain = null;\n        this._canLaunch = null;\n    }\n\n    get domain(): string {\n        if (this._domain == null && this.uri != null) {\n            this._domain = Utils.getDomain(this.uri);\n            if (this._domain === '') {\n                this._domain = null;\n            }\n        }\n\n        return this._domain;\n    }\n\n    get hostname(): string {\n        if (this.match === UriMatchType.RegularExpression) {\n            return null;\n        }\n        if (this._hostname == null && this.uri != null) {\n            this._hostname = Utils.getHostname(this.uri);\n            if (this._hostname === '') {\n                this._hostname = null;\n            }\n        }\n\n        return this._hostname;\n    }\n\n    get host(): string {\n        if (this.match === UriMatchType.RegularExpression) {\n            return null;\n        }\n        if (this._host == null && this.uri != null) {\n            this._host = Utils.getHost(this.uri);\n            if (this._host === '') {\n                this._host = null;\n            }\n        }\n\n        return this._host;\n    }\n\n    get hostnameOrUri(): string {\n        return this.hostname != null ? this.hostname : this.uri;\n    }\n\n    get hostOrUri(): string {\n        return this.host != null ? this.host : this.uri;\n    }\n\n    get isWebsite(): boolean {\n        return this.uri != null && (this.uri.indexOf('http://') === 0 || this.uri.indexOf('https://') === 0 ||\n            (this.uri.indexOf('://') < 0 && Utils.tldEndingRegex.test(this.uri)));\n    }\n\n    get canLaunch(): boolean {\n        if (this._canLaunch != null) {\n            return this._canLaunch;\n        }\n        if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n            const uri = this.launchUri;\n            for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n                if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n                    this._canLaunch = true;\n                    return this._canLaunch;\n                }\n            }\n        }\n        this._canLaunch = false;\n        return this._canLaunch;\n    }\n\n    get launchUri(): string {\n        return this.uri.indexOf('://') < 0 && Utils.tldEndingRegex.test(this.uri) ? ('http://' + this.uri) : this.uri;\n    }\n}\n","export enum UriMatchType {\n    Domain = 0,\n    Host = 1,\n    StartsWith = 2,\n    Exact = 3,\n    RegularExpression = 4,\n    Never = 5,\n}\n","import { Component } from '@angular/core';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\nimport { EventType } from 'jslib-common/enums/eventType';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { AddEditComponent as BaseAddEditComponent } from 'jslib-angular/components/add-edit.component';\nimport { LoginUriView } from 'jslib-common/models/view/loginUriView';\n\n@Component({\n    selector: 'app-vault-add-edit',\n    templateUrl: 'add-edit.component.html',\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n    canAccessPremium: boolean;\n    totpCode: string;\n    totpCodeFormatted: string;\n    totpDash: number;\n    totpSec: number;\n    totpLow: boolean;\n    showRevisionDate = false;\n    hasPasswordHistory = false;\n    viewingPasswordHistory = false;\n    viewOnly = false;\n\n    protected totpInterval: number;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        auditService: AuditService, stateService: StateService,\n        userService: UserService, collectionService: CollectionService,\n        protected totpService: TotpService, protected passwordGenerationService: PasswordGenerationService,\n        protected messagingService: MessagingService, eventService: EventService,\n        protected policyService: PolicyService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\n            userService, collectionService, messagingService, eventService, policyService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        await this.load();\n        this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n        this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n        this.cleanUp();\n\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        if (this.cipher.type === CipherType.Login && this.cipher.login.totp &&\n            (this.cipher.organizationUseTotp || this.canAccessPremium)) {\n            await this.totpUpdateCode();\n            const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n            await this.totpTick(interval);\n\n            this.totpInterval = window.setInterval(async () => {\n                await this.totpTick(interval);\n            }, 1000);\n        }\n    }\n\n    toggleFavorite() {\n        this.cipher.favorite = !this.cipher.favorite;\n    }\n\n    launch(uri: LoginUriView) {\n        if (!uri.canLaunch) {\n            return;\n        }\n\n        this.platformUtilsService.launchUri(uri.launchUri);\n    }\n\n    copy(value: string, typeI18nKey: string, aType: string) {\n        if (value == null) {\n            return;\n        }\n\n        this.platformUtilsService.copyToClipboard(value, { window: window });\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));\n\n        if (this.editMode) {\n            if (typeI18nKey === 'password') {\n                this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n            } else if (typeI18nKey === 'securityCode') {\n                this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n            } else if (aType === 'H_Field') {\n                this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n            }\n        }\n    }\n\n    async generatePassword(): Promise<boolean> {\n        const confirmed = await super.generatePassword();\n        if (confirmed) {\n            const options = (await this.passwordGenerationService.getOptions())[0];\n            this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n        }\n        return confirmed;\n    }\n\n    premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    upgradeOrganization() {\n        this.messagingService.send('upgradeOrganization', { organizationId: this.cipher.organizationId });\n    }\n\n    viewHistory() {\n        this.viewingPasswordHistory = !this.viewingPasswordHistory;\n    }\n\n    protected cleanUp() {\n        if (this.totpInterval) {\n            window.clearInterval(this.totpInterval);\n        }\n    }\n\n    protected async totpUpdateCode() {\n        if (this.cipher == null || this.cipher.type !== CipherType.Login || this.cipher.login.totp == null) {\n            if (this.totpInterval) {\n                window.clearInterval(this.totpInterval);\n            }\n            return;\n        }\n\n        this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n        if (this.totpCode != null) {\n            if (this.totpCode.length > 4) {\n                const half = Math.floor(this.totpCode.length / 2);\n                this.totpCodeFormatted = this.totpCode.substring(0, half) + ' ' + this.totpCode.substring(half);\n            } else {\n                this.totpCodeFormatted = this.totpCode;\n            }\n        } else {\n            this.totpCodeFormatted = null;\n            if (this.totpInterval) {\n                window.clearInterval(this.totpInterval);\n            }\n        }\n    }\n\n    protected allowOwnershipAssignment() {\n        return (!this.editMode || this.cloneMode) && this.ownershipOptions != null\n            && (this.ownershipOptions.length > 1 || !this.allowPersonal);\n    }\n\n    private async totpTick(intervalSeconds: number) {\n        const epoch = Math.round(new Date().getTime() / 1000.0);\n        const mod = epoch % intervalSeconds;\n\n        this.totpSec = intervalSeconds - mod;\n        this.totpDash = +(Math.round((((78.6 / intervalSeconds) * mod) + 'e+2') as any) + 'e-2');\n        this.totpLow = this.totpSec <= 7;\n        if (mod === 0) {\n            await this.totpUpdateCode();\n        }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"cipherAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"cipher\"> <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\"> {{'personalOwnershipPolicyInEffect' | i18n}} </app-callout> <div class=\"row\" *ngIf=\"!editMode && !viewOnly\"> <div class=\"col-6 form-group\"> <label for=\"type\">{{'whatTypeOfItem' | i18n}}</label> <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\" class=\"form-control\" [disabled]=\"cipher.isDeleted\" appAutofocus> <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"cipher.name\" required [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\" *ngIf=\"!organization\"> <label for=\"folder\">{{'folder' | i18n}}</label> <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\" class=\"form-control\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{f.name}}</option> </select> </div> </div> <ng-container *ngIf=\"cipher.type === cipherType.Login\"> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"loginUsername\">{{'username' | i18n}}</label> <div class=\"input-group\"> <input id=\"loginUsername\" class=\"form-control\" type=\"text\" name=\"Login.Username\" [(ngModel)]=\"cipher.login.username\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyUsername' | i18n}}\" (click)=\"copy(cipher.login.username, 'username', 'Username')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"col-6 form-group\"> <div class=\"d-flex\"> <label for=\"loginPassword\">{{'password' | i18n}}</label> <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <a href=\"#\" class=\"d-block mr-2 fa-icon-above-input\" appStopClick appA11yTitle=\"{{'generatePassword' | i18n}}\" (click)=\"generatePassword()\" *ngIf=\"cipher.viewPassword\"> <i class=\"fa fa-lg fa-fw fa-refresh\" aria-hidden=\"true\"></i> </a> <a href=\"#\" class=\"d-block fa-icon-above-input\" #checkPasswordBtn appStopClick appA11yTitle=\"{{'checkPassword' | i18n}}\" (click)=\"checkPassword()\" [appApiAction]=\"checkPasswordPromise\"> <i class=\"fa fa-lg fa-fw fa-check-circle\" [hidden]=\"checkPasswordBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-lg fa-fw fa-spinner fa-spin\" aria-hidden=\"true\" [hidden]=\"!checkPasswordBtn.loading\" title=\"{{'loading' | i18n}}\"></i> </a> </div> </div> <div class=\"input-group\"> <input id=\"loginPassword\" class=\"form-control text-monospace\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"Login.Password\" [(ngModel)]=\"cipher.login.password\" appInputVerbatim autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\" [disabled]=\"!cipher.viewPassword\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyPassword' | i18n}}\" (click)=\"copy(cipher.login.password, 'password', 'Password')\" [disabled]=\"!cipher.viewPassword\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"loginTotp\">{{'authenticatorKeyTotp' | i18n}}</label> <input id=\"loginTotp\" type=\"{{cipher.viewPassword ? 'text' : 'password'}}\" name=\"Login.Totp\" class=\"form-control text-monospace\" [(ngModel)]=\"cipher.login.totp\" appInputVerbatim [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"> </div> <div class=\"col-6 form-group totp d-flex align-items-end\" [ngClass]=\"{'low': totpLow}\"> <div *ngIf=\"!cipher.login.totp || !totpCode\"> <img src=\"images/totp-countdown.png\" title=\"{{'verificationCodeTotp' | i18n}}\" class=\"ml-2\"> <a href=\"#\" appStopClick class=\"badge badge-primary ml-3\" (click)=\"premiumRequired()\" *ngIf=\"!organization && !cipher.organizationId && !canAccessPremium\"> {{'premium' | i18n}} </a> <a href=\"#\" appStopClick class=\"badge badge-primary ml-3\" (click)=\"upgradeOrganization()\" *ngIf=\"(organization && !organization.useTotp) || (!organization && !canAccessPremium && cipher.organizationId && !cipher.organizationUseTotp)\"> {{'upgrade' | i18n}} </a> </div> <div *ngIf=\"cipher.login.totp && totpCode\" class=\"d-flex align-items-center\"> <span class=\"totp-countdown mr-3 ml-2\"> <span class=\"totp-sec\">{{totpSec}}</span> <svg> <g> <circle class=\"totp-circle inner\" r=\"12.6\" cy=\"16\" cx=\"16\" [ngStyle]=\"{'stroke-dashoffset.px': totpDash}\"></circle> <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle> </g> </svg> </span> <span class=\"totp-code mr-2\" title=\"{{'verificationCodeTotp' | i18n}}\">{{totpCodeFormatted}}</span> <button type=\"button\" class=\"btn btn-link\" appA11yTitle=\"{{'copyVerificationCode' | i18n}}\" (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"> <i class=\"fa fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <ng-container *ngIf=\"cipher.login.hasUris\"> <div class=\"row\" *ngFor=\"let u of cipher.login.uris; let i = index; trackBy:trackByFunction\"> <div class=\"col-7 form-group\"> <label for=\"loginUri{{i}}\">{{'uriPosition' | i18n : (i + 1)}}</label> <div class=\"input-group\"> <input class=\"form-control\" id=\"loginUri{{i}}\" type=\"text\" name=\"Login.Uris[{{i}}].Uri\" [(ngModel)]=\"u.uri\" [disabled]=\"cipher.isDeleted || viewOnly\" placeholder=\"{{'ex' | i18n}} https://google.com\" appInputVerbatim> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'launch' | i18n}}\" (click)=\"launch(u)\" [disabled]=\"!u.canLaunch\"> <i class=\"fa fa-lg fa-share\" aria-hidden=\"true\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyUri' | i18n}}\" (click)=\"copy(u.uri, 'uri', 'URI')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"col-5 form-group\"> <div class=\"d-flex\"> <label for=\"loginUriMatch{{i}}\"> {{'matchDetection' | i18n}} </label> <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/uri-match-detection/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"d-flex\"> <select class=\"form-control overflow-hidden\" id=\"loginUriMatch{{i}}\" name=\"Login.Uris[{{i}}].Match\" [(ngModel)]=\"u.match\" (change)=\"loginUriMatchChanged(u)\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{o.name}} </option> </select> <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"removeUri(u)\" appA11yTitle=\"{{'remove' | i18n}}\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </ng-container> <a href=\"#\" appStopClick (click)=\"addUri()\" class=\"d-inline-block mb-3\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-plus-circle fa-fw\" aria-hidden=\"true\"></i> {{'newUri' | i18n}} </a> </ng-container> <ng-container *ngIf=\"cipher.type === cipherType.Card\"> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"cardCardholderName\">{{'cardholderName' | i18n}}</label> <input id=\"cardCardholderName\" class=\"form-control\" type=\"text\" name=\"Card.CardCardholderName\" [(ngModel)]=\"cipher.card.cardholderName\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"cardBrand\">{{'brand' | i18n}}</label> <select id=\"cardBrand\" class=\"form-control\" name=\"Card.Brand\" [(ngModel)]=\"cipher.card.brand\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"cardNumber\">{{'number' | i18n}}</label> <div class=\"input-group\"> <input id=\"cardNumber\" class=\"form-control text-monospace\" type=\"{{showCardNumber ? 'text' : 'password'}}\" name=\"Card.Number\" [(ngModel)]=\"cipher.card.number\" appInputVerbatim autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || viewOnly\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleCardNumber()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showCardNumber, 'fa-eye-slash': showCardNumber}\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyNumber' | i18n}}\" (click)=\"copy(cipher.card.number, 'number', 'Number')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"col form-group\"> <label for=\"cardExpMonth\">{{'expirationMonth' | i18n}}</label> <select id=\"cardExpMonth\" class=\"form-control\" name=\"Card.ExpMonth\" [(ngModel)]=\"cipher.card.expMonth\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> <div class=\"col form-group\"> <label for=\"cardExpYear\">{{'expirationYear' | i18n}}</label> <input id=\"cardExpYear\" class=\"form-control\" type=\"text\" name=\"Card.ExpYear\" [(ngModel)]=\"cipher.card.expYear\" placeholder=\"{{'ex' | i18n}} 2019\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"cardCode\">{{'securityCode' | i18n}}</label> <div class=\"input-group\"> <input id=\"cardCode\" class=\"form-control text-monospace\" type=\"{{showCardCode ? 'text' : 'password'}}\" name=\"Card.Code\" [(ngModel)]=\"cipher.card.code\" appInputVerbatim autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || viewOnly\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleCardCode()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showCardCode, 'fa-eye-slash': showCardCode}\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'securityCode' | i18n}}\" (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </div> </ng-container> <ng-container *ngIf=\"cipher.type === cipherType.Identity\"> <div class=\"row\"> <div class=\"col-4 form-group\"> <label for=\"idTitle\">{{'title' | i18n}}</label> <select id=\"idTitle\" class=\"form-control\" name=\"Identity.Title\" [(ngModel)]=\"cipher.identity.title\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <div class=\"row\"> <div class=\"col-4 form-group\"> <label for=\"idFirstName\">{{'firstName' | i18n}}</label> <input id=\"idFirstName\" class=\"form-control\" type=\"text\" name=\"Identity.FirstName\" [(ngModel)]=\"cipher.identity.firstName\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idMiddleName\">{{'middleName' | i18n}}</label> <input id=\"idMiddleName\" class=\"form-control\" type=\"text\" name=\"Identity.MiddleName\" [(ngModel)]=\"cipher.identity.middleName\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idLastName\">{{'lastName' | i18n}}</label> <input id=\"idLastName\" class=\"form-control\" type=\"text\" name=\"Identity.LastName\" [(ngModel)]=\"cipher.identity.lastName\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-4 form-group\"> <label for=\"idUsername\">{{'username' | i18n}}</label> <input id=\"idUsername\" class=\"form-control\" type=\"text\" name=\"Identity.Username\" [(ngModel)]=\"cipher.identity.username\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idCompany\">{{'company' | i18n}}</label> <input id=\"idCompany\" class=\"form-control\" type=\"text\" name=\"Identity.Company\" [(ngModel)]=\"cipher.identity.company\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-4 form-group\"> <label for=\"idSsn\">{{'ssn' | i18n}}</label> <input id=\"idSsn\" class=\"form-control\" type=\"text\" name=\"Identity.SSN\" [(ngModel)]=\"cipher.identity.ssn\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idPassportNumber\">{{'passportNumber' | i18n}}</label> <input id=\"idPassportNumber\" class=\"form-control\" type=\"text\" name=\"Identity.PassportNumber\" [(ngModel)]=\"cipher.identity.passportNumber\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idLicenseNumber\">{{'licenseNumber' | i18n}}</label> <input id=\"idLicenseNumber\" class=\"form-control\" type=\"text\" name=\"Identity.LicenseNumber\" [(ngModel)]=\"cipher.identity.licenseNumber\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idEmail\">{{'email' | i18n}}</label> <input id=\"idEmail\" class=\"form-control\" type=\"text\" name=\"Identity.Email\" [(ngModel)]=\"cipher.identity.email\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"idPhone\">{{'phone' | i18n}}</label> <input id=\"idPhone\" class=\"form-control\" type=\"text\" name=\"Identity.Phone\" [(ngModel)]=\"cipher.identity.phone\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idAddress1\">{{'address1' | i18n}}</label> <input id=\"idAddress1\" class=\"form-control\" type=\"text\" name=\"Identity.Address1\" [(ngModel)]=\"cipher.identity.address1\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"idAddress2\">{{'address2' | i18n}}</label> <input id=\"idAddress2\" class=\"form-control\" type=\"text\" name=\"Identity.Address2\" [(ngModel)]=\"cipher.identity.address2\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idAddress3\">{{'address3' | i18n}}</label> <input id=\"idAddress3\" class=\"form-control\" type=\"text\" name=\"Identity.Address3\" [(ngModel)]=\"cipher.identity.address3\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"idCity\">{{'cityTown' | i18n}}</label> <input id=\"idCity\" class=\"form-control\" type=\"text\" name=\"Identity.City\" [(ngModel)]=\"cipher.identity.city\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idState\">{{'stateProvince' | i18n}}</label> <input id=\"idState\" class=\"form-control\" type=\"text\" name=\"Identity.State\" [(ngModel)]=\"cipher.identity.state\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"idPostalCode\">{{'zipPostalCode' | i18n}}</label> <input id=\"idPostalCode\" class=\"form-control\" type=\"text\" name=\"Identity.PostalCode\" [(ngModel)]=\"cipher.identity.postalCode\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idCountry\">{{'country' | i18n}}</label> <input id=\"idCountry\" class=\"form-control\" type=\"text\" name=\"Identity.Country\" [(ngModel)]=\"cipher.identity.country\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> </ng-container> <div class=\"form-group\"> <label for=\"notes\">{{'notes' | i18n}}</label> <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"cipher.notes\" [disabled]=\"cipher.isDeleted || viewOnly\" class=\"form-control\"></textarea> </div> <h3 class=\"mt-4\">{{'customFields' | i18n}}</h3> <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\"> <div class=\"row\" cdkDrag *ngFor=\"let f of cipher.fields; let i = index; trackBy:trackByFunction\"> <div class=\"col-5 form-group\"> <div class=\"d-flex\"> <label for=\"fieldName{{i}}\">{{'name' | i18n}}</label> <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/custom-fields/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <input id=\"fieldName{{i}}\" type=\"text\" name=\"Field.Name{{i}}\" [(ngModel)]=\"f.name\" class=\"form-control\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-7 form-group\"> <label for=\"fieldValue{{i}}\">{{'value' | i18n}}</label> <div class=\"d-flex align-items-center\"> <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\"> <input id=\"fieldValue{{i}}\" class=\"form-control\" type=\"text\" name=\"Field.Value{{i}}\" [(ngModel)]=\"f.value\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(f.value, 'value', 'Field')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\"> <input id=\"fieldValue{{i}}\" type=\"{{f.showValue ? 'text' : 'password'}}\" name=\"Field.Value{{i}}\" [(ngModel)]=\"f.value\" class=\"form-control text-monospace\" appInputVerbatim autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleFieldValue(f)\" [disabled]=\"!cipher.viewPassword && !f.newField\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !f.showValue, 'fa-eye-slash': f.showValue}\"> </i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\" [disabled]=\"!cipher.viewPassword && !f.newField\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> <div class=\"flex-fill\"> <input id=\"fieldValue{{i}}\" name=\"Field.Value{{i}}\" type=\"checkbox\" [(ngModel)]=\"f.value\" *ngIf=\"f.type === fieldType.Boolean\" appTrueFalseValue trueValue=\"true\" falseValue=\"false\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"removeField(f)\" appA11yTitle=\"{{'remove' | i18n}}\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i> </button> <button type=\"button\" class=\"btn btn-link text-muted cursor-move\" appA11yTitle=\"{{'dragToSort' | i18n}}\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-bars fa-lg\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </div> <a href=\"#\" appStopClick (click)=\"addField()\" class=\"d-inline-block mb-2\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-plus-circle fa-fw\" aria-hidden=\"true\"></i> {{'newCustomField' | i18n}} </a> <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <div class=\"col-5\"> <label for=\"addFieldType\" class=\"sr-only\">{{'type' | i18n}}</label> <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\"> <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <ng-container *ngIf=\"allowOwnershipAssignment()\"> <h3 class=\"mt-4\">{{'ownership' | i18n}}</h3> <div class=\"row\"> <div class=\"col-5\"> <label for=\"organizationId\">{{'whoOwnsThisItem' | i18n}}</label> <select id=\"organizationId\" class=\"form-control\" name=\"OrganizationId\" [(ngModel)]=\"cipher.organizationId\" (change)=\"organizationChanged()\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> </ng-container> <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\"> <h3 class=\"mt-4\">{{'collections' | i18n}}</h3> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <ng-container *ngIf=\"collections && collections.length\"> <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"c.checked\" id=\"collection-{{i}}\" name=\"Collection[{{i}}].Checked\" [disabled]=\"cipher.isDeleted || viewOnly\"> <label class=\"form-check-label\" for=\"collection-{{i}}\">{{c.name}}</label> </div> </ng-container> </ng-container> <ng-container *ngIf=\"editMode\"> <div class=\"small text-muted mt-4\"> <div> <b class=\"font-weight-semibold\">{{'dateUpdated' | i18n}}:</b> {{cipher.revisionDate | date:'medium'}} </div> <div *ngIf=\"showRevisionDate\"> <b class=\"font-weight-semibold\">{{'datePasswordUpdated' | i18n}}:</b> {{cipher.passwordRevisionDisplayDate | date:'medium'}} </div> <div *ngIf=\"hasPasswordHistory\"> <b class=\"font-weight-semibold\">{{'passwordHistory' | i18n}}:</b> <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{'view' | i18n}}\"> {{cipher.passwordHistory.length}} </a> </div> <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\"> <div *ngFor=\"let ph of cipher.passwordHistory\"> {{ph.lastUsedDate | date:'short'}} - <span class=\"password-wrapper text-monospace ml-2\">{{ph.password}}</span> </div> </div> </div> </ng-container> <ng-container> <h3 class=\"mt-4\">{{'options' | i18n}}</h3> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [ngModel]=\"reprompt\" (change)=\"repromptChanged()\" id=\"passwordPrompt\" name=\"passwordPrompt\" [disabled]=\"cipher.isDeleted || viewOnly\"> <label class=\"form-check-label\" for=\"passwordPrompt\">{{'passwordPrompt' | i18n}}</label> <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/managing-items/#protect-individual-items\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\" *ngIf=\"!viewOnly\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{(cipher?.isDeleted ? 'restore' : 'save') | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{(viewOnly ? 'close' : 'cancel') | i18n}} </button> <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\"> <button *ngIf=\"!organization && !cipher.isDeleted\" type=\"button\" (click)=\"toggleFavorite()\" class=\"btn btn-link\" appA11yTitle=\"{{(cipher.favorite ? 'unfavorite' : 'favorite') | i18n}}\"> <i class=\"fa fa-lg\" [ngClass]=\"{'fa-star': cipher.favorite, 'fa-star-o': !cipher.favorite}\" aria-hidden=\"true\"></i> </button> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{(cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n}}\" *ngIf=\"editMode && !cloneMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import { Importer } from '../importers/importer';\n\nexport interface ImportOption {\n    id: string;\n    name: string;\n}\nexport abstract class ImportService {\n    featuredImportOptions: ImportOption[];\n    regularImportOptions: ImportOption[];\n    getImportOptions: () => ImportOption[];\n    import: (importer: Importer, fileContents: string, organizationId?: string) => Promise<Error>;\n    getImporter: (format: string, organizationId: string) => Importer;\n}\n","import { AttachmentResponse } from './attachmentResponse';\nimport { BaseResponse } from './baseResponse';\nimport { PasswordHistoryResponse } from './passwordHistoryResponse';\n\nimport { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CardApi } from '../api/cardApi';\nimport { FieldApi } from '../api/fieldApi';\nimport { IdentityApi } from '../api/identityApi';\nimport { LoginApi } from '../api/loginApi';\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nexport class CipherResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    type: number;\n    name: string;\n    notes: string;\n    fields: FieldApi[];\n    login: LoginApi;\n    card: CardApi;\n    identity: IdentityApi;\n    secureNote: SecureNoteApi;\n    favorite: boolean;\n    edit: boolean;\n    viewPassword: boolean;\n    organizationUseTotp: boolean;\n    revisionDate: string;\n    attachments: AttachmentResponse[];\n    passwordHistory: PasswordHistoryResponse[];\n    collectionIds: string[];\n    deletedDate: string;\n    reprompt: CipherRepromptType;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.folderId = this.getResponseProperty('FolderId') || null;\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n        this.notes = this.getResponseProperty('Notes');\n        this.favorite = this.getResponseProperty('Favorite') || false;\n        this.edit = !!this.getResponseProperty('Edit');\n        if (this.getResponseProperty('ViewPassword') == null) {\n            this.viewPassword = true;\n        } else {\n            this.viewPassword = this.getResponseProperty('ViewPassword');\n        }\n        this.organizationUseTotp = this.getResponseProperty('OrganizationUseTotp');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n        this.collectionIds = this.getResponseProperty('CollectionIds');\n        this.deletedDate = this.getResponseProperty('DeletedDate');\n\n        const login = this.getResponseProperty('Login');\n        if (login != null) {\n            this.login = new LoginApi(login);\n        }\n\n        const card = this.getResponseProperty('Card');\n        if (card != null) {\n            this.card = new CardApi(card);\n        }\n\n        const identity = this.getResponseProperty('Identity');\n        if (identity != null) {\n            this.identity = new IdentityApi(identity);\n        }\n\n        const secureNote = this.getResponseProperty('SecureNote');\n        if (secureNote != null) {\n            this.secureNote = new SecureNoteApi(secureNote);\n        }\n\n        const fields = this.getResponseProperty('Fields');\n        if (fields != null) {\n            this.fields = fields.map((f: any) => new FieldApi(f));\n        }\n\n        const attachments = this.getResponseProperty('Attachments');\n        if (attachments != null) {\n            this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n        }\n\n        const passwordHistory = this.getResponseProperty('PasswordHistory');\n        if (passwordHistory != null) {\n            this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n        }\n\n        this.reprompt = this.getResponseProperty('Reprompt') || CipherRepromptType.None;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CiphersComponent as BaseCiphersComponent } from 'jslib-angular/components/ciphers.component';\n\nimport { CipherRepromptType } from 'jslib-common/enums/cipherRepromptType';\nimport { CipherType } from 'jslib-common/enums/cipherType';\nimport { EventType } from 'jslib-common/enums/eventType';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nconst MaxCheckedCount = 500;\n\n@Component({\n    selector: 'app-vault-ciphers',\n    templateUrl: 'ciphers.component.html',\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n    @Input() showAddNew = true;\n    @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n    @Output() onShareClicked = new EventEmitter<CipherView>();\n    @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n    @Output() onCloneClicked = new EventEmitter<CipherView>();\n\n    cipherType = CipherType;\n    actionPromise: Promise<any>;\n    userHasPremiumAccess = false;\n\n    constructor(searchService: SearchService, protected toasterService: ToasterService,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected cipherService: CipherService, protected eventService: EventService,\n        protected totpService: TotpService, protected userService: UserService,\n        protected passwordRepromptService: PasswordRepromptService) {\n        super(searchService);\n        this.pageSize = 200;\n    }\n\n    async ngOnInit() {\n        this.userHasPremiumAccess = await this.userService.canAccessPremium();\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    launch(uri: string) {\n        this.platformUtilsService.launchUri(uri);\n    }\n\n    async attachments(c: CipherView) {\n        if (!await this.repromptCipher(c)) {\n            return;\n        }\n        this.onAttachmentsClicked.emit(c);\n    }\n\n    async share(c: CipherView) {\n        if (!await this.repromptCipher(c)) {\n            return;\n        }\n        this.onShareClicked.emit(c);\n    }\n\n    collections(c: CipherView) {\n        this.onCollectionsClicked.emit(c);\n    }\n\n    async clone(c: CipherView) {\n        if (!await this.repromptCipher(c)) {\n            return;\n        }\n        this.onCloneClicked.emit(c);\n    }\n\n    async delete(c: CipherView): Promise<boolean> {\n        if (!await this.repromptCipher(c)) {\n            return;\n        }\n        if (this.actionPromise != null) {\n            return;\n        }\n        const permanent = c.isDeleted;\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t(permanent ? 'permanentlyDeleteItemConfirmation' : 'deleteItemConfirmation'),\n            this.i18nService.t(permanent ? 'permanentlyDeleteItem' : 'deleteItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.deleteCipher(c.id, permanent);\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t(permanent ? 'permanentlyDeletedItem'\n                : 'deletedItem'));\n            this.refresh();\n        } catch { }\n        this.actionPromise = null;\n    }\n\n    async restore(c: CipherView): Promise<boolean> {\n        if (this.actionPromise != null || !c.isDeleted) {\n            return;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('restoreItemConfirmation'),\n            this.i18nService.t('restoreItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.cipherService.restoreWithServer(c.id);\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('restoredItem'));\n            this.refresh();\n        } catch { }\n        this.actionPromise = null;\n    }\n\n    async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n        if (this.passwordRepromptService.protectedFields().includes(aType) && !await this.repromptCipher(cipher)) {\n            return;\n        }\n\n        if (value == null || aType === 'TOTP' && !this.displayTotpCopyButton(cipher)) {\n            return;\n        } else if (value === cipher.login.totp) {\n            value = await this.totpService.getCode(value);\n        }\n\n        if (!cipher.viewPassword) {\n            return;\n        }\n\n        this.platformUtilsService.copyToClipboard(value, { window: window });\n        this.toasterService.popAsync('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));\n\n        if (typeI18nKey === 'password' || typeI18nKey === 'verificationCodeTotp') {\n            this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n        } else if (typeI18nKey === 'securityCode') {\n            this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n        }\n    }\n\n    selectAll(select: boolean) {\n        if (select) {\n            this.selectAll(false);\n        }\n        const selectCount = select && this.ciphers.length > MaxCheckedCount\n            ? MaxCheckedCount\n            : this.ciphers.length;\n        for (let i = 0; i < selectCount; i++) {\n            this.checkCipher(this.ciphers[i], select);\n        }\n    }\n\n    checkCipher(c: CipherView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    getSelected(): CipherView[] {\n        if (this.ciphers == null) {\n            return [];\n        }\n        return this.ciphers.filter(c => !!(c as any).checked);\n    }\n\n    getSelectedIds(): string[] {\n        return this.getSelected().map(c => c.id);\n    }\n\n    displayTotpCopyButton(cipher: CipherView) {\n        return (cipher?.login?.hasTotp ?? false) &&\n            (cipher.organizationUseTotp || this.userHasPremiumAccess);\n    }\n\n    async selectCipher(cipher: CipherView) {\n        if (await this.repromptCipher(cipher)) {\n            super.selectCipher(cipher);\n        }\n    }\n\n    protected deleteCipher(id: string, permanent: boolean) {\n        return permanent ? this.cipherService.deleteWithServer(id) : this.cipherService.softDeleteWithServer(id);\n    }\n\n    protected showFixOldAttachments(c: CipherView) {\n        return c.hasOldAttachments && c.organizationId == null;\n    }\n\n    protected async repromptCipher(c: CipherView) {\n        return c.reprompt === CipherRepromptType.None || await this.passwordRepromptService.showPasswordPrompt();\n    }\n}\n","<ng-container *ngIf=\"(isPaging() ? pagedCiphers : ciphers) as filteredCiphers\"> <table class=\"table table-hover table-list table-ciphers\" *ngIf=\"filteredCiphers.length\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let c of filteredCiphers\"> <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp> </td> <td (click)=\"checkCipher(c)\" class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick appStopProp (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> <ng-container *ngIf=\"showFixOldAttachments(c)\"> <i class=\"fa fa-exclamation-triangle text-warning\" appStopProp title=\"{{'attachmentsNeedFix' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachmentsNeedFix' | i18n}}</span> </ng-container> </ng-container> <br> <small appStopProp>{{c.subTitle}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\"> <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(c, c.login.username, 'username', 'Username')\"> <i class=\"fa fa-fw fa-clone\" aria-hidden=\"true\"></i> {{'copyUsername' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(c, c.login.password, 'password', 'Password')\" *ngIf=\"c.viewPassword\"> <i class=\"fa fa-fw fa-clone\" aria-hidden=\"true\"></i> {{'copyPassword' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\" *ngIf=\"displayTotpCopyButton(c)\"> <i class=\"fa fa-fw fa-clone\" aria-hidden=\"true\"></i> {{'copyVerificationCode' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.login.canLaunch\" (click)=\"launch(c.login.launchUri)\"> <i class=\"fa fa-fw fa-share-square-o\" aria-hidden=\"true\"></i> {{'launch' | i18n}} </a> </ng-container> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"attachments(c)\"> <i class=\"fa fa-fw fa-paperclip\" aria-hidden=\"true\"></i> {{'attachments' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\" (click)=\"clone(c)\"> <i class=\"fa fa-fw fa-files-o\" aria-hidden=\"true\"></i> {{'clone' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"!organization && !c.organizationId && !c.isDeleted\" (click)=\"share(c)\"> <i class=\"fa fa-fw fa-arrow-circle-o-right\" aria-hidden=\"true\"></i> {{'moveToOrganization' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.organizationId && !c.isDeleted\" (click)=\"collections(c)\"> <i class=\"fa fa-fw fa-cubes\" aria-hidden=\"true\"></i> {{'collections' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.organizationId && accessEvents\" (click)=\"events(c)\"> <i class=\"fa fa-fw fa-file-text-o\" aria-hidden=\"true\"></i> {{'eventLogs' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"restore(c)\" *ngIf=\"c.isDeleted\"> <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i> {{'restore' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(c)\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{(c.isDeleted ? 'permanentlyDelete' : 'delete') | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\"> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <p>{{'noItemsInList' | i18n}}</p> <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\"> <i class=\"fa fa-plus fa-fw\"></i>{{'addItem' | i18n}}</button> </ng-container> </div> </ng-container> ","export enum EncryptionType {\n    AesCbc256_B64 = 0,\n    AesCbc128_HmacSha256_B64 = 1,\n    AesCbc256_HmacSha256_B64 = 2,\n    Rsa2048_OaepSha256_B64 = 3,\n    Rsa2048_OaepSha1_B64 = 4,\n    Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n    Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum HashPurpose {\n    ServerAuthorization = 1,\n    LocalAuthorization = 2,\n}\n","export class KeysRequest {\n    publicKey: string;\n    encryptedPrivateKey: string;\n\n    constructor(publicKey: string, encryptedPrivateKey: string) {\n        this.publicKey = publicKey;\n        this.encryptedPrivateKey = encryptedPrivateKey;\n    }\n}\n","import { PolicyResponse } from '../response/policyResponse';\n\nimport { PolicyType } from '../../enums/policyType';\n\nexport class PolicyData {\n    id: string;\n    organizationId: string;\n    type: PolicyType;\n    data: any;\n    enabled: boolean;\n\n    constructor(response: PolicyResponse) {\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.type = response.type;\n        this.data = response.data;\n        this.enabled = response.enabled;\n    }\n}\n","import { HashPurpose } from '../enums/hashPurpose';\nimport { KdfType } from '../enums/kdfType';\nimport { TwoFactorProviderType } from '../enums/twoFactorProviderType';\n\nimport { AuthResult } from '../models/domain/authResult';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { DeviceRequest } from '../models/request/deviceRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\n\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { AppIdService } from '../abstractions/appId.service';\nimport { AuthService as AuthServiceAbstraction } from '../abstractions/auth.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { LogService } from '../abstractions/log.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService } from '../abstractions/user.service';\nimport { VaultTimeoutService } from '../abstractions/vaultTimeout.service';\n\nexport const TwoFactorProviders = {\n    [TwoFactorProviderType.Authenticator]: {\n        type: TwoFactorProviderType.Authenticator,\n        name: null as string,\n        description: null as string,\n        priority: 1,\n        sort: 1,\n        premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n        type: TwoFactorProviderType.Yubikey,\n        name: null as string,\n        description: null as string,\n        priority: 3,\n        sort: 2,\n        premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n        type: TwoFactorProviderType.Duo,\n        name: 'Duo',\n        description: null as string,\n        priority: 2,\n        sort: 3,\n        premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n        type: TwoFactorProviderType.OrganizationDuo,\n        name: 'Duo (Organization)',\n        description: null as string,\n        priority: 10,\n        sort: 4,\n        premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n        type: TwoFactorProviderType.Email,\n        name: null as string,\n        description: null as string,\n        priority: 0,\n        sort: 6,\n        premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n        type: TwoFactorProviderType.WebAuthn,\n        name: null as string,\n        description: null as string,\n        priority: 4,\n        sort: 5,\n        premium: true,\n    },\n};\n\nexport class AuthService implements AuthServiceAbstraction {\n    email: string;\n    masterPasswordHash: string;\n    localMasterPasswordHash: string;\n    code: string;\n    codeVerifier: string;\n    ssoRedirectUrl: string;\n    clientId: string;\n    clientSecret: string;\n    twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string; }>;\n    selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n    private key: SymmetricCryptoKey;\n\n    constructor(private cryptoService: CryptoService, protected apiService: ApiService,\n        private userService: UserService, protected tokenService: TokenService,\n        protected appIdService: AppIdService, private i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, private messagingService: MessagingService,\n        private vaultTimeoutService: VaultTimeoutService, private logService: LogService,\n        private setCryptoKeys = true) {\n    }\n\n    init() {\n        TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t('emailTitle');\n        TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t('emailDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Authenticator].name = this.i18nService.t('authenticatorAppTitle');\n        TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n            this.i18nService.t('authenticatorAppDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t('duoDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n            'Duo (' + this.i18nService.t('organization') + ')';\n        TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n            this.i18nService.t('duoOrganizationDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t('webAuthnTitle');\n        TwoFactorProviders[TwoFactorProviderType.WebAuthn].description = this.i18nService.t('webAuthnDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t('yubiKeyTitle');\n        TwoFactorProviders[TwoFactorProviderType.Yubikey].description = this.i18nService.t('yubiKeyDesc');\n    }\n\n    async logIn(email: string, masterPassword: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        const key = await this.makePreloginKey(masterPassword, email);\n        const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n        const localHashedPassword = await this.cryptoService.hashPassword(masterPassword, key,\n            HashPurpose.LocalAuthorization);\n        return await this.logInHelper(email, hashedPassword, localHashedPassword, null, null, null, null, null,\n            key, null, null, null);\n    }\n\n    async logInSso(code: string, codeVerifier: string, redirectUrl: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, null, code, codeVerifier, redirectUrl, null, null,\n            null, null, null, null);\n    }\n\n    async logInApiKey(clientId: string, clientSecret: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, null, null, null, null, clientId, clientSecret,\n            null, null, null, null);\n    }\n\n    async logInTwoFactor(twoFactorProvider: TwoFactorProviderType, twoFactorToken: string,\n        remember?: boolean): Promise<AuthResult> {\n        return await this.logInHelper(this.email, this.masterPasswordHash, this.localMasterPasswordHash, this.code,\n            this.codeVerifier, this.ssoRedirectUrl, this.clientId, this.clientSecret, this.key, twoFactorProvider,\n            twoFactorToken, remember);\n    }\n\n    async logInComplete(email: string, masterPassword: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        const key = await this.makePreloginKey(masterPassword, email);\n        const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n        const localHashedPassword = await this.cryptoService.hashPassword(masterPassword, key,\n            HashPurpose.LocalAuthorization);\n        return await this.logInHelper(email, hashedPassword, localHashedPassword, null, null, null, null, null, key,\n            twoFactorProvider, twoFactorToken, remember);\n    }\n\n    async logInSsoComplete(code: string, codeVerifier: string, redirectUrl: string,\n        twoFactorProvider: TwoFactorProviderType, twoFactorToken: string, remember?: boolean): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, null, code, codeVerifier, redirectUrl, null,\n            null, null, twoFactorProvider, twoFactorToken, remember);\n    }\n\n    async logInApiKeyComplete(clientId: string, clientSecret: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, null, null, null, null, clientId, clientSecret, null,\n            twoFactorProvider, twoFactorToken, remember);\n    }\n\n    logOut(callback: Function) {\n        callback();\n        this.messagingService.send('loggedOut');\n    }\n\n    getSupportedTwoFactorProviders(win: Window): any[] {\n        const providers: any[] = [];\n        if (this.twoFactorProvidersData == null) {\n            return providers;\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n            this.platformUtilsService.supportsDuo()) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) && this.platformUtilsService.supportsDuo()) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) && this.platformUtilsService.supportsWebAuthn(win)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n        }\n\n        return providers;\n    }\n\n    getDefaultTwoFactorProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n        if (this.twoFactorProvidersData == null) {\n            return null;\n        }\n\n        if (this.selectedTwoFactorProviderType != null &&\n            this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)) {\n            return this.selectedTwoFactorProviderType;\n        }\n\n        let providerType: TwoFactorProviderType = null;\n        let providerPriority = -1;\n        this.twoFactorProvidersData.forEach((value, type) => {\n            const provider = (TwoFactorProviders as any)[type];\n            if (provider != null && provider.priority > providerPriority) {\n                if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n                    return;\n                }\n\n                providerType = type;\n                providerPriority = provider.priority;\n            }\n        });\n\n        return providerType;\n    }\n\n    async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n        email = email.trim().toLowerCase();\n        let kdf: KdfType = null;\n        let kdfIterations: number = null;\n        try {\n            const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n            if (preloginResponse != null) {\n                kdf = preloginResponse.kdf;\n                kdfIterations = preloginResponse.kdfIterations;\n            }\n        } catch (e) {\n            if (e == null || e.statusCode !== 404) {\n                throw e;\n            }\n        }\n        return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    }\n\n    authingWithApiKey(): boolean {\n        return this.clientId != null && this.clientSecret != null;\n    }\n\n    authingWithSso(): boolean {\n        return this.code != null && this.codeVerifier != null && this.ssoRedirectUrl != null;\n    }\n\n    authingWithPassword(): boolean {\n        return this.email != null && this.masterPasswordHash != null;\n    }\n\n    private async logInHelper(email: string, hashedPassword: string, localHashedPassword: string, code: string,\n        codeVerifier: string, redirectUrl: string, clientId: string, clientSecret: string, key: SymmetricCryptoKey,\n        twoFactorProvider?: TwoFactorProviderType, twoFactorToken?: string, remember?: boolean): Promise<AuthResult> {\n        const storedTwoFactorToken = await this.tokenService.getTwoFactorToken(email);\n        const appId = await this.appIdService.getAppId();\n        const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n        let emailPassword: string[] = [];\n        let codeCodeVerifier: string[] = [];\n        let clientIdClientSecret: string[] = [];\n\n        if (email != null && hashedPassword != null) {\n            emailPassword = [email, hashedPassword];\n        } else {\n            emailPassword = null;\n        }\n        if (code != null && codeVerifier != null && redirectUrl != null) {\n            codeCodeVerifier = [code, codeVerifier, redirectUrl];\n        } else {\n            codeCodeVerifier = null;\n        }\n        if (clientId != null && clientSecret != null) {\n            clientIdClientSecret = [clientId, clientSecret];\n        } else {\n            clientIdClientSecret = null;\n        }\n\n        let request: TokenRequest;\n        if (twoFactorToken != null && twoFactorProvider != null) {\n            request = new TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret, twoFactorProvider,\n                twoFactorToken, remember, deviceRequest);\n        } else if (storedTwoFactorToken != null) {\n            request = new TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret, TwoFactorProviderType.Remember,\n                storedTwoFactorToken, false, deviceRequest);\n        } else {\n            request = new TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret, null,\n                null, false, deviceRequest);\n        }\n\n        const response = await this.apiService.postIdentityToken(request);\n\n        this.clearState();\n        const result = new AuthResult();\n        result.twoFactor = !(response as any).accessToken;\n\n        if (result.twoFactor) {\n            // two factor required\n            const twoFactorResponse = response as IdentityTwoFactorResponse;\n            this.email = email;\n            this.masterPasswordHash = hashedPassword;\n            this.localMasterPasswordHash = localHashedPassword;\n            this.code = code;\n            this.codeVerifier = codeVerifier;\n            this.ssoRedirectUrl = redirectUrl;\n            this.clientId = clientId;\n            this.clientSecret = clientSecret;\n            this.key = this.setCryptoKeys ? key : null;\n            this.twoFactorProvidersData = twoFactorResponse.twoFactorProviders2;\n            result.twoFactorProviders = twoFactorResponse.twoFactorProviders2;\n            return result;\n        }\n\n        const tokenResponse = response as IdentityTokenResponse;\n        result.resetMasterPassword = tokenResponse.resetMasterPassword;\n        if (tokenResponse.twoFactorToken != null) {\n            await this.tokenService.setTwoFactorToken(tokenResponse.twoFactorToken, email);\n        }\n\n        await this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken);\n        await this.userService.setInformation(this.tokenService.getUserId(), this.tokenService.getEmail(),\n            tokenResponse.kdf, tokenResponse.kdfIterations);\n        if (this.setCryptoKeys) {\n            if (key != null) {\n                await this.cryptoService.setKey(key);\n            }\n            if (localHashedPassword != null) {\n                await this.cryptoService.setKeyHash(localHashedPassword);\n            }\n\n            // Skip this step during SSO new user flow. No key is returned from server.\n            if (code == null || tokenResponse.key != null) {\n                await this.cryptoService.setEncKey(tokenResponse.key);\n\n                // User doesn't have a key pair yet (old account), let's generate one for them\n                if (tokenResponse.privateKey == null) {\n                    try {\n                        const keyPair = await this.cryptoService.makeKeyPair();\n                        await this.apiService.postAccountKeys(new KeysRequest(keyPair[0], keyPair[1].encryptedString));\n                        tokenResponse.privateKey = keyPair[1].encryptedString;\n                    } catch (e) {\n                        // tslint:disable-next-line\n                        this.logService.error(e);\n                    }\n                }\n\n                await this.cryptoService.setEncPrivateKey(tokenResponse.privateKey);\n            }\n        }\n\n        if (this.vaultTimeoutService != null) {\n            this.vaultTimeoutService.biometricLocked = false;\n        }\n        this.messagingService.send('loggedIn');\n        return result;\n    }\n\n    private clearState(): void {\n        this.key = null;\n        this.email = null;\n        this.masterPasswordHash = null;\n        this.localMasterPasswordHash = null;\n        this.code = null;\n        this.codeVerifier = null;\n        this.ssoRedirectUrl = null;\n        this.clientId = null;\n        this.clientSecret = null;\n        this.twoFactorProvidersData = null;\n        this.selectedTwoFactorProviderType = null;\n    }\n}\n","export class SelectionReadOnlyRequest {\n    id: string;\n    readOnly: boolean;\n    hidePasswords: boolean;\n\n    constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n        this.id = id;\n        this.readOnly = readOnly;\n        this.hidePasswords = hidePasswords;\n    }\n}\n","export enum DeviceType {\n    Android = 0,\n    iOS = 1,\n    ChromeExtension = 2,\n    FirefoxExtension = 3,\n    OperaExtension = 4,\n    EdgeExtension = 5,\n    WindowsDesktop = 6,\n    MacOsDesktop = 7,\n    LinuxDesktop = 8,\n    ChromeBrowser = 9,\n    FirefoxBrowser = 10,\n    OperaBrowser = 11,\n    EdgeBrowser = 12,\n    IEBrowser = 13,\n    UnknownBrowser = 14,\n    AndroidAmazon = 15,\n    UWP = 16,\n    SafariBrowser = 17,\n    VivaldiBrowser = 18,\n    VivaldiExtension = 19,\n    SafariExtension = 20,\n}\n","export abstract class SettingsService {\n    clearCache: () => void;\n    getEquivalentDomains: () => Promise<any>;\n    setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n    clear: (userId: string) => Promise<void>;\n}\n","export enum PlanType {\n    Free = 0,\n    FamiliesAnnually2019 = 1,\n    TeamsMonthly2019 = 2,\n    TeamsAnnually2019 = 3,\n    EnterpriseMonthly2019 = 4,\n    EnterpriseAnnually2019 = 5,\n    Custom = 6,\n    FamiliesAnnually = 7,\n    TeamsMonthly = 8,\n    TeamsAnnually = 9,\n    EnterpriseMonthly = 10,\n    EnterpriseAnnually = 11,\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PaymentComponent } from './payment.component';\nimport { TaxInfoComponent } from './tax-info.component';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { PlanType } from 'jslib-common/enums/planType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { ProductType } from 'jslib-common/enums/productType';\n\nimport { OrganizationCreateRequest } from 'jslib-common/models/request/organizationCreateRequest';\nimport { OrganizationKeysRequest } from 'jslib-common/models/request/organizationKeysRequest';\nimport { OrganizationUpgradeRequest } from 'jslib-common/models/request/organizationUpgradeRequest';\n\nimport { EncString } from 'jslib-common/models/domain';\nimport { PlanResponse } from 'jslib-common/models/response/planResponse';\n\n@Component({\n    selector: 'app-organization-plans',\n    templateUrl: 'organization-plans.component.html',\n})\nexport class OrganizationPlansComponent implements OnInit {\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n    @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n    @Input() organizationId: string;\n    @Input() showFree = true;\n    @Input() showCancel = false;\n    @Input() product: ProductType = ProductType.Free;\n    @Input() plan: PlanType = PlanType.Free;\n    @Output() onSuccess = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    loading: boolean = true;\n    selfHosted: boolean = false;\n    ownedBusiness: boolean = false;\n    premiumAccessAddon: boolean = false;\n    additionalStorage: number = 0;\n    additionalSeats: number = 0;\n    name: string;\n    billingEmail: string;\n    businessName: string;\n    productTypes = ProductType;\n    formPromise: Promise<any>;\n    singleOrgPolicyBlock: boolean = false;\n    freeTrial: boolean = false;\n\n    plans: PlanResponse[];\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        private cryptoService: CryptoService, private router: Router, private syncService: SyncService,\n        private policyService: PolicyService, private userService: UserService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        if (!this.selfHosted) {\n            const plans = await this.apiService.getPlans();\n            this.plans = plans.data;\n            if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n                this.ownedBusiness = true;\n            }\n        }\n        this.loading = false;\n    }\n\n    get createOrganization() {\n        return this.organizationId == null;\n    }\n\n    get selectedPlan() {\n        return this.plans.find(plan => plan.type === this.plan);\n    }\n\n    get selectedPlanInterval() {\n        return this.selectedPlan.isAnnual\n            ? 'year'\n            : 'month';\n    }\n\n    get selectableProducts() {\n        let validPlans = this.plans.filter(plan => plan.type !== PlanType.Custom);\n\n        if (this.ownedBusiness) {\n            validPlans = validPlans.filter(plan => plan.canBeUsedByBusiness);\n        }\n\n        if (!this.showFree) {\n            validPlans = validPlans.filter(plan => plan.product !== ProductType.Free);\n        }\n\n        validPlans = validPlans\n            .filter(plan => !plan.legacyYear\n                && !plan.disabled\n                && (plan.isAnnual || plan.product === this.productTypes.Free));\n\n        return validPlans;\n    }\n\n    get selectablePlans() {\n        return this.plans.filter(plan => !plan.legacyYear && !plan.disabled && plan.product === this.product);\n    }\n\n    additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n        if (!selectedPlan.isAnnual) {\n            return selectedPlan.additionalStoragePricePerGb;\n        }\n        return selectedPlan.additionalStoragePricePerGb / 12;\n    }\n\n    seatPriceMonthly(selectedPlan: PlanResponse) {\n        if (!selectedPlan.isAnnual) {\n            return selectedPlan.seatPrice;\n        }\n        return selectedPlan.seatPrice / 12;\n    }\n\n    additionalStorageTotal(plan: PlanResponse): number {\n        if (!plan.hasAdditionalStorageOption) {\n            return 0;\n        }\n\n        return plan.additionalStoragePricePerGb * Math.abs(this.additionalStorage || 0);\n    }\n\n    seatTotal(plan: PlanResponse): number {\n        if (!plan.hasAdditionalSeatsOption) {\n            return 0;\n        }\n\n        return plan.seatPrice * Math.abs(this.additionalSeats || 0);\n    }\n\n    get subtotal() {\n        let subTotal = this.selectedPlan.basePrice;\n        if (this.selectedPlan.hasAdditionalSeatsOption && this.additionalSeats) {\n            subTotal += this.seatTotal(this.selectedPlan);\n        }\n        if (this.selectedPlan.hasAdditionalStorageOption && this.additionalStorage) {\n            subTotal += this.additionalStorageTotal(this.selectedPlan);\n        }\n        if (this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon) {\n            subTotal += this.selectedPlan.premiumAccessOptionPrice;\n        }\n        return subTotal;\n    }\n\n    get taxCharges() {\n        return this.taxComponent != null && this.taxComponent.taxRate != null ?\n            (this.taxComponent.taxRate / 100) * this.subtotal :\n            0;\n    }\n\n    get total() {\n        return (this.subtotal + this.taxCharges) || 0;\n    }\n\n    changedProduct() {\n        this.plan = this.selectablePlans[0].type;\n        if (!this.selectedPlan.hasPremiumAccessOption) {\n            this.premiumAccessAddon = false;\n        }\n        if (!this.selectedPlan.hasAdditionalStorageOption) {\n            this.additionalStorage = 0;\n        }\n        if (!this.selectedPlan.hasAdditionalSeatsOption) {\n            this.additionalSeats = 0;\n        } else if (!this.additionalSeats && !this.selectedPlan.baseSeats &&\n            this.selectedPlan.hasAdditionalSeatsOption) {\n            this.additionalSeats = 1;\n        }\n        this.freeTrial = this.selectedPlan.trialPeriodDays != null;\n    }\n\n    changedOwnedBusiness() {\n        if (!this.ownedBusiness || this.selectedPlan.canBeUsedByBusiness) {\n            return;\n        }\n        this.product = ProductType.Teams;\n        this.plan = PlanType.TeamsAnnually;\n    }\n\n    changedCountry() {\n        this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== 'US';\n        // Bank Account payments are only available for US customers\n        if (this.paymentComponent.hideBank &&\n            this.paymentComponent.method === PaymentMethodType.BankAccount) {\n            this.paymentComponent.method = PaymentMethodType.Card;\n            this.paymentComponent.changeMethod();\n        }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    async submit() {\n        this.singleOrgPolicyBlock = await this.userHasBlockingSingleOrgPolicy();\n\n        if (this.singleOrgPolicyBlock) {\n            return;\n        }\n\n        try {\n            const doSubmit = async () => {\n                let orgId: string = null;\n                if (this.createOrganization) {\n                    const shareKey = await this.cryptoService.makeShareKey();\n                    const key = shareKey[0].encryptedString;\n                    const collection = await this.cryptoService.encrypt(\n                        this.i18nService.t('defaultCollection'), shareKey[1]);\n                    const collectionCt = collection.encryptedString;\n                    const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n                    if (this.selfHosted) {\n                        orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n                    } else {\n                        orgId = await this.createCloudHosted(key, collectionCt, orgKeys);\n                    }\n\n                    this.toasterService.popAsync('success', this.i18nService.t('organizationCreated'), this.i18nService.t('organizationReadyToGo'));\n                } else {\n                    orgId = await this.updateOrganization(orgId);\n                    this.toasterService.popAsync('success', null, this.i18nService.t('organizationUpgraded'));\n                }\n\n                await this.apiService.refreshIdentityToken();\n                await this.syncService.fullSync(true);\n                this.router.navigate(['/organizations/' + orgId]);\n            };\n\n            this.formPromise = doSubmit();\n            await this.formPromise;\n            this.onSuccess.emit();\n        } catch { }\n    }\n\n    private async userHasBlockingSingleOrgPolicy() {\n        const policies = await this.policyService.getAll(PolicyType.SingleOrg);\n        const orgs = await this.userService.getAllOrganizations();\n\n        const orgsWithSingleOrgPolicy = policies\n            .filter(p => p.enabled && p.type === PolicyType.SingleOrg)\n            .map(p => p.organizationId);\n\n        return orgs.some(org => org.type !== OrganizationUserType.Owner &&\n            org.type !== OrganizationUserType.Admin &&\n            org.status !== OrganizationUserStatusType.Invited &&\n            orgsWithSingleOrgPolicy.includes(org.id));\n    }\n\n    private async updateOrganization(orgId: string) {\n        const request = new OrganizationUpgradeRequest();\n        request.businessName = this.ownedBusiness ? this.businessName : null;\n        request.additionalSeats = this.additionalSeats;\n        request.additionalStorageGb = this.additionalStorage;\n        request.premiumAccessAddon = this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon;\n        request.planType = this.selectedPlan.type;\n        request.billingAddressCountry = this.taxComponent.taxInfo.country;\n        request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n        // Retrieve org info to backfill pub/priv key if necessary\n        const org = await this.userService.getOrganization(this.organizationId);\n        if (!org.hasPublicAndPrivateKeys) {\n            const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n            const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n            request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n        }\n\n        const result = await this.apiService.postOrganizationUpgrade(this.organizationId, request);\n        if (!result.success && result.paymentIntentClientSecret != null) {\n            await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n        }\n        return this.organizationId;\n    }\n\n    private async createCloudHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n        const request = new OrganizationCreateRequest();\n        request.key = key;\n        request.collectionName = collectionCt;\n        request.name = this.name;\n        request.billingEmail = this.billingEmail;\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n        if (this.selectedPlan.type === PlanType.Free) {\n            request.planType = PlanType.Free;\n        } else {\n            const tokenResult = await this.paymentComponent.createPaymentToken();\n\n            request.paymentToken = tokenResult[0];\n            request.paymentMethodType = tokenResult[1];\n            request.businessName = this.ownedBusiness ? this.businessName : null;\n            request.additionalSeats = this.additionalSeats;\n            request.additionalStorageGb = this.additionalStorage;\n            request.premiumAccessAddon = this.selectedPlan.hasPremiumAccessOption &&\n                this.premiumAccessAddon;\n            request.planType = this.selectedPlan.type;\n            request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n            request.billingAddressCountry = this.taxComponent.taxInfo.country;\n            if (this.taxComponent.taxInfo.includeTaxId) {\n                request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n                request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n                request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n                request.billingAddressCity = this.taxComponent.taxInfo.city;\n                request.billingAddressState = this.taxComponent.taxInfo.state;\n            }\n        }\n        const response = await this.apiService.postOrganization(request);\n        return response.id;\n    }\n\n    private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            throw new Error(this.i18nService.t('selectFile'));\n        }\n\n        const fd = new FormData();\n        fd.append('license', files[0]);\n        fd.append('key', key);\n        fd.append('collectionName', collectionCt);\n        const response = await this.apiService.postOrganizationLicense(fd);\n        const orgId = response.id;\n\n        // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n        const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n        await this.apiService.postOrganizationKeys(orgId, request);\n\n        return orgId;\n    }\n}\n","<ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"createOrganization && selfHosted\"> <p>{{'uploadLicenseFileOrg' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"form-group\"> <label for=\"file\">{{'licenseFile' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required> <small class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : 'bitwarden_organization_license.json'}}</small> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> </form> </ng-container> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!loading && !selfHosted && this.plans\"> <h2 class=\"mt-5\">{{'generalInformation' | i18n}}</h2> <div class=\"row\" *ngIf=\"createOrganization\"> <div class=\"form-group col-6\"> <label for=\"name\">{{'organizationName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required> </div> <div class=\"form-group col-6\"> <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label> <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"billingEmail\" required> </div> </div> <div class=\"form-group form-check\"> <input id=\"ownedBusiness\" class=\"form-check-input\" type=\"checkbox\" name=\"OwnedBusiness\" [(ngModel)]=\"ownedBusiness\" (change)=\"changedOwnedBusiness()\"> <label for=\"ownedBusiness\" class=\"form-check-label\">{{'accountOwnedBusiness' | i18n}}</label> </div> <div class=\"row\" *ngIf=\"ownedBusiness\"> <div class=\"form-group col-6\"> <label for=\"businessName\">{{'businessName' | i18n}}</label> <input id=\"businessName\" class=\"form-control\" type=\"text\" name=\"BusinessName\" [(ngModel)]=\"businessName\"> </div> </div> <h2 class=\"mt-5\">{{'chooseYourPlan' | i18n}}</h2> <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"product\" id=\"product{{selectableProduct.product}}\" [value]=\"selectableProduct.product\" [(ngModel)]=\"product\" (change)=\"changedProduct()\"> <label class=\"form-check-label\" for=\"product{{selectableProduct.product}}\"> {{ selectableProduct.nameLocalizationKey | i18n}} <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n : '1'}}</small> <ng-container *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"> <small>• {{'includeAllTeamsFeatures' | i18n}}</small> <small *ngIf=\"selectableProduct.hasSelfHost\">• {{'onPremHostingOptional' | i18n}}</small> <small *ngIf=\"selectableProduct.hasSso\">• {{'includeSsoAuthentication' | i18n}}</small> <small *ngIf=\"selectableProduct.hasPolicies\">• {{'includeEnterprisePolicies' | i18n}}</small> <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\">• {{'xDayFreeTrial' | i18n : selectableProduct.trialPeriodDays }} </small> </ng-container> <ng-template #fullFeatureList> <small *ngIf=\"selectableProduct.product == productTypes.Free\">• {{'limitedUsers' | i18n : selectableProduct.maxUsers }}</small> <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\">• {{'addShareLimitedUsers' | i18n : selectableProduct.maxUsers}}</small> <small *ngIf=\"!selectableProduct.maxUsers\">• {{'addShareUnlimitedUsers' | i18n}}</small> <small *ngIf=\"selectableProduct.maxCollections\">• {{'limitedCollections' | i18n : selectableProduct.maxCollections }}</small> <small *ngIf=\"selectableProduct.maxAdditionalSeats\">• {{'addShareLimitedUsers' | i18n : selectableProduct.maxAdditionalSeats }}</small> <small *ngIf=\"!selectableProduct.maxCollections\">• {{'createUnlimitedCollections' | i18n}}</small> <small *ngIf=\"selectableProduct.baseStorageGb\">• {{'gbEncryptedFileStorage' | i18n : selectableProduct.baseStorageGb + 'GB'}}</small> <small *ngIf=\"selectableProduct.hasGroups\">• {{'controlAccessWithGroups' | i18n}}</small> <small *ngIf=\"selectableProduct.hasApi\">• {{'trackAuditLogs' | i18n}}</small> <small *ngIf=\"selectableProduct.hasDirectory\">• {{'syncUsersFromDirectory' | i18n}}</small> <small *ngIf=\"selectableProduct.hasSelfHost\">• {{'onPremHostingOptional' | i18n}}</small> <small *ngIf=\"selectableProduct.usersGetPremium\">• {{'usersGetPremium' | i18n}}</small> <small *ngIf=\"selectableProduct.product != productTypes.Free\">• {{'priorityCustomerSupport' | i18n}}</small> <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\">• {{'xDayFreeTrial' | i18n : selectableProduct.trialPeriodDays }} </small> </ng-template> <span *ngIf=\"selectableProduct.product != productTypes.Free\"> <ng-container *ngIf=\"selectableProduct.basePrice\"> {{selectableProduct.basePrice / 12 | currency:'$'}} /{{'month' | i18n}}, {{'includesXUsers' | i18n : selectableProduct.baseSeats}} <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\"> {{('additionalUsers' | i18n).toLowerCase()}} {{selectableProduct.seatPrice / 12 | currency:'$'}} /{{'month' | i18n}} </ng-container> </ng-container> </span> <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\"> {{'costPerUser' | i18n : (selectableProduct.seatPrice / 12 | currency:'$')}} /{{'month' | i18n}} </span> <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{'freeForever' | i18n}}</span> </label> </div> <div *ngIf=\"product !== productTypes.Free\"> <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\"> <h2 class=\"mt-5\">{{'users' | i18n}}</h2> <div class=\"row\"> <div class=\"col-6\"> <label for=\"additionalSeats\">{{'userSeats' | i18n}}</label> <input id=\"additionalSeats\" class=\"form-control\" type=\"number\" name=\"AdditionalSeats\" [(ngModel)]=\"additionalSeats\" min=\"1\" max=\"100000\" placeholder=\"{{'userSeatsDesc' | i18n}}\" required> <small class=\"text-muted form-text\">{{'userSeatsHowManyDesc' | i18n}}</small> </div> </div> </ng-container> <h2 class=\"mt-5\">{{'addons' | i18n}}</h2> <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\"> <div class=\"form-group col-6\"> <label for=\"additionalSeats\">{{'additionalUserSeats' | i18n}}</label> <input id=\"additionalSeats\" class=\"form-control\" type=\"number\" name=\"AdditionalSeats\" [(ngModel)]=\"additionalSeats\" min=\"0\" max=\"100000\" placeholder=\"{{'userSeatsDesc' | i18n}}\"> <small class=\"text-muted form-text\">{{'userSeatsAdditionalDesc' | i18n : selectedPlan.baseSeats : (seatPriceMonthly(selectedPlan) | currency:'$')}}</small> </div> </div> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"additionalStorage\">{{'additionalStorageGb' | i18n}}</label> <input id=\"additionalStorage\" class=\"form-control\" type=\"number\" name=\"AdditionalStorageGb\" [(ngModel)]=\"additionalStorage\" min=\"0\" max=\"99\" step=\"1\" placeholder=\"{{'additionalStorageGbDesc' | i18n}}\"> <small class=\"text-muted form-text\">{{'additionalStorageIntervalDesc' | i18n : '1 GB' : (additionalStoragePriceMonthly(selectedPlan) | currency:'$') : ('month' | i18n)}}</small> </div> </div> <div class=\"row\"> <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\"> <div class=\"form-check\"> <input id=\"premiumAccess\" class=\"form-check-input\" type=\"checkbox\" name=\"PremiumAccessAddon\" [(ngModel)]=\"premiumAccessAddon\"> <label for=\"premiumAccess\" class=\"form-check-label bold\">{{'premiumAccess' | i18n}}</label> </div> <small class=\"text-muted form-text\">{{'premiumAccessDesc' | i18n : (3.33 | currency:'$') : ('month' | i18n)}}</small> </div> </div> <h2 class=\"spaced-header\">{{'summary' | i18n}}</h2> <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\"> <input class=\"form-check-input\" type=\"radio\" name=\"BillingInterval\" id=\"interval{{selectablePlan.type}}\" [value]=\"selectablePlan.type\" [(ngModel)]=\"plan\"> <label class=\"form-check-label\" for=\"interval{{selectablePlan.type}}\"> <ng-container *ngIf=\"selectablePlan.isAnnual\"> {{'annually' | i18n}} <small *ngIf=\"selectablePlan.basePrice\"> {{'basePrice' | i18n}}: {{ selectablePlan.basePrice / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}} = {{selectablePlan.basePrice | currency:'$'}} /{{'year' | i18n}} </small> <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\"> <span *ngIf=\"selectablePlan.baseSeats\">{{'additionalUsers' | i18n}}:</span> <span *ngIf=\"!selectablePlan.baseSeats\">{{'users' | i18n}}:</span> {{additionalSeats || 0}} &times; {{selectablePlan.seatPrice / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}} = {{seatTotal(selectablePlan) | currency:'$'}} /{{'year' | i18n}} </small> <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\"> {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} &times; {{selectablePlan.additionalStoragePricePerGb / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}} = {{additionalStorageTotal(selectablePlan) | currency:'$'}} /{{'year' | i18n}} </small> <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\"> {{'premiumAccess' | i18n}}: {{selectablePlan.premiumAccessOptionCost / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}} = {{40 | currency:'$'}} /{{'year' | i18n}} </small> </ng-container> <ng-container *ngIf=\"!selectablePlan.isAnnual\"> {{'monthly' | i18n}} <small *ngIf=\"selectablePlan.basePrice\"> {{'basePrice' | i18n}}: {{selectablePlan.basePrice | currency:'$'}} {{'monthAbbr' | i18n}} = {{selectablePlan.basePrice | currency:'$'}} /{{'month' | i18n}} </small> <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\"> <span *ngIf=\"selectablePlan.baseSeats\">{{'additionalUsers' | i18n}}:</span> <span *ngIf=\"!selectablePlan.baseSeats\">{{'users' | i18n}}:</span> {{additionalSeats || 0}} &times; {{selectablePlan.seatPrice | currency:'$'}} {{'monthAbbr' | i18n}} = {{seatTotal(selectablePlan) | currency:'$'}} /{{'month' | i18n}} </small> <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\"> {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} &times; {{selectablePlan.additionalStoragePricePerGb | currency:'$'}} {{'monthAbbr' | i18n}} = {{additionalStorageTotal(selectablePlan) | currency:'$'}} /{{'month' | i18n}} </small> <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\"> {{'premiumAccess' | i18n}}: {{selectablePlan.premiumAccessOptionCost | currency:'$'}} {{'monthAbbr' | i18n}} = {{40 | currency:'$'}} /{{'month' | i18n}} </small> </ng-container> </label> </div> <hr class=\"my-3\"> <h2 class=\"spaced-header mb-4\">{{ (createOrganization ? 'paymentInformation' : 'billingInformation') | i18n}}</h2> <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment> <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info> <div id=\"price\" class=\"my-4\"> <div class=\"text-muted text-sm\"> {{ 'planPrice' | i18n }}: {{ subtotal | currency: 'USD $' }} <br/> <ng-container> {{ 'estimatedTax' | i18n }}: {{ taxCharges | currency: 'USD $' }} </ng-container> </div> <hr class=\"my-1 col-3 ml-0\"> <p class=\"text-lg\"><strong>{{'total' | i18n}}:</strong> {{total | currency:'USD $'}}/{{selectedPlanInterval | i18n}}</p> </div> <small class=\"text-muted font-italic\" *ngIf=\"freeTrial && createOrganization; else paymentChargedImmediately\"> {{'paymentChargedWithTrial' | i18n : (selectedPlanInterval | i18n) }} </small> <ng-template #paymentChargedImmediately> <small class=\"text-muted font-italic mt-2 d-block\"> {{'paymentCharged' | i18n : (selectedPlanInterval | i18n) }} </small> </ng-template> <ng-container *ngIf=\"!createOrganization\"> <app-payment [showMethods]=\"false\"></app-payment> </ng-container> </div> <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\"> <app-callout [type]=\"'error'\">{{'singleOrgBlockCreateMessage' | i18n}}</app-callout> </div> <div class=\"mt-4\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\"> {{'cancel' | i18n}} </button> </div> </form> ","import { CardData } from '../data/cardData';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nimport { CardView } from '../view/cardView';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Card extends Domain {\n    cardholderName: EncString;\n    brand: EncString;\n    number: EncString;\n    expMonth: EncString;\n    expYear: EncString;\n    code: EncString;\n\n    constructor(obj?: CardData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n        return this.decryptObj(new CardView(this), {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        }, orgId, encKey);\n    }\n\n    toCardData(): CardData {\n        const c = new CardData();\n        this.buildDataModel(this, c, {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        });\n        return c;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldData } from '../data/fieldData';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nimport { FieldView } from '../view/fieldView';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Field extends Domain {\n    name: EncString;\n    value: EncString;\n    type: FieldType;\n\n    constructor(obj?: FieldData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.type = obj.type;\n        this.buildDomainModel(this, obj, {\n            name: null,\n            value: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n        return this.decryptObj(new FieldView(this), {\n            name: null,\n            value: null,\n        }, orgId, encKey);\n    }\n\n    toFieldData(): FieldData {\n        const f = new FieldData();\n        this.buildDataModel(this, f, {\n            name: null,\n            value: null,\n            type: null,\n        }, ['type']);\n        return f;\n    }\n}\n","import { IdentityData } from '../data/identityData';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { IdentityView } from '../view/identityView';\n\nexport class Identity extends Domain {\n    title: EncString;\n    firstName: EncString;\n    middleName: EncString;\n    lastName: EncString;\n    address1: EncString;\n    address2: EncString;\n    address3: EncString;\n    city: EncString;\n    state: EncString;\n    postalCode: EncString;\n    country: EncString;\n    company: EncString;\n    email: EncString;\n    phone: EncString;\n    ssn: EncString;\n    username: EncString;\n    passportNumber: EncString;\n    licenseNumber: EncString;\n\n    constructor(obj?: IdentityData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n        return this.decryptObj(new IdentityView(this), {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        }, orgId, encKey);\n    }\n\n    toIdentityData(): IdentityData {\n        const i = new IdentityData();\n        this.buildDataModel(this, i, {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        });\n        return i;\n    }\n}\n","import { LoginUri } from './loginUri';\n\nimport { LoginData } from '../data/loginData';\n\nimport { LoginView } from '../view/loginView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Login extends Domain {\n    uris: LoginUri[];\n    username: EncString;\n    password: EncString;\n    passwordRevisionDate?: Date;\n    totp: EncString;\n    autofillOnPageLoad: boolean;\n\n    constructor(obj?: LoginData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.passwordRevisionDate = obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n        this.autofillOnPageLoad = obj.autofillOnPageLoad;\n        this.buildDomainModel(this, obj, {\n            username: null,\n            password: null,\n            totp: null,\n        }, alreadyEncrypted, []);\n\n        if (obj.uris) {\n            this.uris = [];\n            obj.uris.forEach(u => {\n                this.uris.push(new LoginUri(u, alreadyEncrypted));\n            });\n        }\n    }\n\n    async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n        const view = await this.decryptObj(new LoginView(this), {\n            username: null,\n            password: null,\n            totp: null,\n        }, orgId, encKey);\n\n        if (this.uris != null) {\n            view.uris = [];\n            for (let i = 0; i < this.uris.length; i++) {\n                const uri = await this.uris[i].decrypt(orgId, encKey);\n                view.uris.push(uri);\n            }\n        }\n\n        return view;\n    }\n\n    toLoginData(): LoginData {\n        const l = new LoginData();\n        l.passwordRevisionDate = this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n        l.autofillOnPageLoad = this.autofillOnPageLoad;\n        this.buildDataModel(this, l, {\n            username: null,\n            password: null,\n            totp: null,\n        });\n\n        if (this.uris != null && this.uris.length > 0) {\n            l.uris = [];\n            this.uris.forEach(u => {\n                l.uris.push(u.toLoginUriData());\n            });\n        }\n\n        return l;\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriData } from '../data/loginUriData';\n\nimport { LoginUriView } from '../view/loginUriView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class LoginUri extends Domain {\n    uri: EncString;\n    match: UriMatchType;\n\n    constructor(obj?: LoginUriData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.match = obj.match;\n        this.buildDomainModel(this, obj, {\n            uri: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n        return this.decryptObj(new LoginUriView(this), {\n            uri: null,\n        }, orgId, encKey);\n    }\n\n    toLoginUriData(): LoginUriData {\n        const u = new LoginUriData();\n        this.buildDataModel(this, u, {\n            uri: null,\n        }, ['match']);\n        return u;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteData } from '../data/secureNoteData';\n\nimport Domain from './domainBase';\n\nimport { SecureNoteView } from '../view/secureNoteView';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class SecureNote extends Domain {\n    type: SecureNoteType;\n\n    constructor(obj?: SecureNoteData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.type = obj.type;\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n        return Promise.resolve(new SecureNoteView(this));\n    }\n\n    toSecureNoteData(): SecureNoteData {\n        const n = new SecureNoteData();\n        n.type = this.type;\n        return n;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostListener,\n    Input,\n    Renderer2,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NgControl,\n    NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n    selector: 'input[type=checkbox][appTrueFalseValue]',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TrueFalseValueDirective),\n            multi: true,\n        },\n    ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n    @Input() trueValue = true;\n    @Input() falseValue = false;\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) { }\n\n    @HostListener('change', ['$event'])\n    onHostChange(ev: any) {\n        this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n    }\n\n    writeValue(obj: any): void {\n        if (obj === this.trueValue) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', true);\n        } else {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', false);\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn: any): void { /* nothing */ }\n\n    setDisabledState?(isDisabled: boolean): void { /* nothing */ }\n\n    private propagateChange = (_: any) => { /* nothing */ };\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n    id: string;\n    readOnly: boolean;\n    hidePasswords: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.readOnly = this.getResponseProperty('ReadOnly');\n        this.hidePasswords = this.getResponseProperty('HidePasswords');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { ProfileOrganizationResponse } from './profileOrganizationResponse';\n\nexport class ProfileResponse extends BaseResponse {\n    id: string;\n    name: string;\n    email: string;\n    emailVerified: boolean;\n    masterPasswordHint: string;\n    premium: boolean;\n    culture: string;\n    twoFactorEnabled: boolean;\n    key: string;\n    privateKey: string;\n    securityStamp: string;\n    organizations: ProfileOrganizationResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.emailVerified = this.getResponseProperty('EmailVerified');\n        this.masterPasswordHint = this.getResponseProperty('MasterPasswordHint');\n        this.premium = this.getResponseProperty('Premium');\n        this.culture = this.getResponseProperty('Culture');\n        this.twoFactorEnabled = this.getResponseProperty('TwoFactorEnabled');\n        this.key = this.getResponseProperty('Key');\n        this.privateKey = this.getResponseProperty('PrivateKey');\n        this.securityStamp = this.getResponseProperty('SecurityStamp');\n\n        const organizations = this.getResponseProperty('Organizations');\n        if (organizations != null) {\n            this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { GroupingsComponent as BaseGroupingsComponent } from 'jslib-angular/components/groupings.component';\n\n@Component({\n    selector: 'app-vault-groupings',\n    templateUrl: 'groupings.component.html',\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n    @Output() onSearchTextChanged = new EventEmitter<string>();\n\n    searchText: string = '';\n    searchPlaceholder: string = null;\n\n    constructor(collectionService: CollectionService, folderService: FolderService,\n        storageService: StorageService, userService: UserService) {\n        super(collectionService, folderService, storageService, userService);\n    }\n\n    searchTextChanged() {\n        this.onSearchTextChanged.emit(this.searchText);\n    }\n}\n","<div class=\"card vault-filters\"> <div class=\"card-header d-flex\"> {{'filters' | i18n}} <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/searching-vault/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"card-body\"> <input type=\"search\" placeholder=\"{{searchPlaceholder || ('searchVault' | i18n)}}\" id=\"search\" class=\"form-control\" [(ngModel)]=\"searchText\" (input)=\"searchTextChanged()\" autocomplete=\"off\" appAutofocus> <ul class=\"fa-ul card-ul\"> <li [ngClass]=\"{active: selectedAll}\"> <a href=\"#\" appStopClick (click)=\"selectAll()\"> <i class=\"fa-li fa fa-fw fa-th\"></i>{{'allItems' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedFavorites}\" *ngIf=\"showFavorites\"> <a href=\"#\" appStopClick (click)=\"selectFavorites()\"> <i class=\"fa-li fa fa-fw fa-star\"></i>{{'favorites' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedTrash}\" *ngIf=\"showTrash\"> <a href=\"#\" appStopClick (click)=\"selectTrash()\"> <i class=\"fa-li fa fa-fw fa-trash-o\"></i>{{'trash' | i18n}} </a> </li> </ul> <h3>{{'types' | i18n}}</h3> <ul class=\"fa-ul card-ul\"> <li [ngClass]=\"{active: selectedType === cipherType.Login}\"> <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Login)\"> <i class=\"fa-li fa fa-fw fa-globe\"></i>{{'typeLogin' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedType === cipherType.Card}\"> <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Card)\"> <i class=\"fa-li fa fa-fw fa-credit-card\"></i>{{'typeCard' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedType === cipherType.Identity}\"> <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Identity)\"> <i class=\"fa-li fa fa-fw fa-id-card-o\"></i>{{'typeIdentity' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedType === cipherType.SecureNote}\"> <a href=\"#\" appStopClick (click)=\"selectType(cipherType.SecureNote)\"> <i class=\"fa-li fa fa-fw fa-sticky-note-o\"></i>{{'typeSecureNote' | i18n}} </a> </li> </ul> <p *ngIf=\"!loaded\" class=\"text-muted\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"loaded\"> <ng-container *ngIf=\"showFolders\"> <h3 class=\"d-flex\"> {{'folders' | i18n}} <a href=\"#\" class=\"text-muted ml-auto\" appStopClick (click)=\"addFolder()\" appA11yTitle=\"{{'addFolder' | i18n}}\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> </a> </h3> <ul class=\"fa-ul card-ul\"> <ng-template #recursiveFolders let-folders> <li *ngFor=\"let f of folders\" [ngClass]=\"{active: selectedFolder && f.node.id === selectedFolderId}\"> <div class=\"d-flex\"> <i *ngIf=\"f.children.length\" class=\"fa-li fa\" title=\"{{'toggleCollapse' | i18n}}\" [ngClass]=\"{'fa-caret-right': isCollapsed(f.node), 'fa-caret-down': !isCollapsed(f.node)}\" (click)=\"collapse(f.node)\"></i> <a href=\"#\" class=\"text-break\" appStopClick (click)=\"selectFolder(f.node)\"> <i *ngIf=\"f.children.length === 0\" class=\"fa-li fa fa-folder-o\" aria-hidden=\"true\"></i>{{f.node.name}} </a> <a href=\"#\" class=\"text-muted ml-auto show-active\" appStopClick (click)=\"editFolder(f.node)\" appA11yTitle=\"{{'editFolder' | i18n}}\" *ngIf=\"f.node.id\"> <i class=\"fa fa-pencil fa-fw\" aria-hidden=\"true\"></i> </a> </div> <ul class=\"fa-ul card-ul carets\" *ngIf=\"f.children.length && !isCollapsed(f.node)\"> <ng-container *ngTemplateOutlet=\"recursiveFolders; context:{ $implicit: f.children }\"> </ng-container> </ul> </li> </ng-template> <ng-container *ngTemplateOutlet=\"recursiveFolders; context:{ $implicit: nestedFolders }\"> </ng-container> </ul> </ng-container> <ng-container *ngIf=\"showCollections && collections && collections.length\"> <h3>{{'collections' | i18n}}</h3> <ul class=\"fa-ul card-ul\"> <ng-template #recursiveCollections let-collections> <li *ngFor=\"let c of collections\" [ngClass]=\"{active: c.node.id === selectedCollectionId}\"> <i *ngIf=\"c.children.length\" class=\"fa-li fa\" title=\"{{'toggleCollapse' | i18n}}\" [ngClass]=\"{'fa-caret-right': isCollapsed(c.node), 'fa-caret-down': !isCollapsed(c.node)}\" (click)=\"collapse(c.node)\"></i> <a href=\"#\" class=\"text-break\" appStopClick (click)=\"selectCollection(c.node)\"> <i *ngIf=\"c.children.length === 0\" class=\"fa-li fa fa-cube\" aria-hidden=\"true\"></i>{{c.node.name}} </a> <ul class=\"fa-ul card-ul carets\" *ngIf=\"c.children.length && !isCollapsed(c.node)\"> <ng-container *ngTemplateOutlet=\"recursiveCollections; context:{ $implicit: c.children }\"> </ng-container> </ul> </li> </ng-template> <ng-container *ngTemplateOutlet=\"recursiveCollections; context:{ $implicit: nestedCollections }\"> </ng-container> </ul> </ng-container> </ng-container> </div> </div> ","import { OrganizationData } from '../data/organizationData';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\n\nexport class Organization {\n    id: string;\n    name: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useBusinessPortal: boolean;\n    useSso: boolean;\n    useResetPassword: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    ssoBound: boolean;\n    identifier: string;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n    userId: string;\n    hasPublicAndPrivateKeys: boolean;\n\n    constructor(obj?: OrganizationData) {\n        if (obj == null) {\n            return;\n        }\n\n        this.id = obj.id;\n        this.name = obj.name;\n        this.status = obj.status;\n        this.type = obj.type;\n        this.enabled = obj.enabled;\n        this.usePolicies = obj.usePolicies;\n        this.useGroups = obj.useGroups;\n        this.useDirectory = obj.useDirectory;\n        this.useEvents = obj.useEvents;\n        this.useTotp = obj.useTotp;\n        this.use2fa = obj.use2fa;\n        this.useApi = obj.useApi;\n        this.useBusinessPortal = obj.useBusinessPortal;\n        this.useSso = obj.useSso;\n        this.useResetPassword = obj.useResetPassword;\n        this.selfHost = obj.selfHost;\n        this.usersGetPremium = obj.usersGetPremium;\n        this.seats = obj.seats;\n        this.maxCollections = obj.maxCollections;\n        this.maxStorageGb = obj.maxStorageGb;\n        this.ssoBound = obj.ssoBound;\n        this.identifier = obj.identifier;\n        this.permissions = obj.permissions;\n        this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n        this.userId = obj.userId;\n        this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    }\n\n    get canAccess() {\n        if (this.type === OrganizationUserType.Owner) {\n            return true;\n        }\n        return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n    }\n\n    get isManager() {\n        return this.type === OrganizationUserType.Manager || this.type === OrganizationUserType.Owner ||\n            this.type === OrganizationUserType.Admin;\n    }\n\n    get isAdmin() {\n        return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n    }\n\n    get isOwner() {\n        return this.type === OrganizationUserType.Owner;\n    }\n\n    get canAccessBusinessPortal() {\n        return this.isAdmin || this.permissions.accessBusinessPortal;\n    }\n\n    get canAccessEventLogs() {\n        return this.isAdmin || this.permissions.accessEventLogs;\n    }\n\n    get canAccessImportExport() {\n        return this.isAdmin || this.permissions.accessImportExport;\n    }\n\n    get canAccessReports() {\n        return this.isAdmin || this.permissions.accessReports;\n    }\n\n    get canManageAllCollections() {\n        return this.isAdmin || this.permissions.manageAllCollections;\n    }\n\n    get canManageAssignedCollections() {\n        return this.isManager || this.permissions.manageAssignedCollections;\n    }\n\n    get canManageGroups() {\n        return this.isAdmin || this.permissions.manageGroups;\n    }\n\n    get canManageSso() {\n        return this.isAdmin || this.permissions.manageSso;\n    }\n\n    get canManagePolicies() {\n        return this.isAdmin || this.permissions.managePolicies;\n    }\n\n    get canManageUsers() {\n        return this.isAdmin || this.permissions.manageUsers;\n    }\n\n    get canManageUsersPassword() {\n        return this.isAdmin || this.permissions.manageResetPassword;\n    }\n}\n","import { View } from './view';\n\nimport { SendFile } from '../domain/sendFile';\n\nexport class SendFileView implements View {\n    id: string = null;\n    size: string = null;\n    sizeName: string = null;\n    fileName: string = null;\n\n    constructor(f?: SendFile) {\n        if (!f) {\n            return;\n        }\n\n        this.id = f.id;\n        this.size = f.size;\n        this.sizeName = f.sizeName;\n    }\n\n    get fileSize(): number {\n        try {\n            if (this.size != null) {\n                return parseInt(this.size, null);\n            }\n        } catch { }\n        return 0;\n    }\n}\n","import { View } from './view';\n\nimport { SendText } from '../domain/sendText';\n\nexport class SendTextView implements View {\n    text: string = null;\n    hidden: boolean;\n\n    constructor(t?: SendText) {\n        if (!t) {\n            return;\n        }\n\n        this.hidden = t.hidden;\n    }\n\n    get maskedText(): string {\n        return this.text != null ? '••••••••' : null;\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { Policy } from 'jslib-common/models/domain/policy';\n\nimport { OrganizationUserResetPasswordEnrollmentRequest } from 'jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\n@Component({\n    selector: 'app-organizations',\n    templateUrl: 'organizations.component.html',\n})\nexport class OrganizationsComponent implements OnInit {\n    @Input() vault = false;\n\n    organizations: Organization[];\n    policies: Policy[];\n    loaded: boolean = false;\n    actionPromise: Promise<any>;\n\n    constructor(private userService: UserService, private platformUtilsService: PlatformUtilsService,\n        private i18nService: I18nService, private apiService: ApiService,\n        private toasterService: ToasterService, private syncService: SyncService,\n        private cryptoService: CryptoService, private policyService: PolicyService) { }\n\n    async ngOnInit() {\n        if (!this.vault) {\n            await this.syncService.fullSync(true);\n            await this.load();\n        }\n    }\n\n    async load() {\n        const orgs = await this.userService.getAllOrganizations();\n        orgs.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.organizations = orgs;\n        this.policies = await this.policyService.getAll(PolicyType.ResetPassword);\n        this.loaded = true;\n    }\n\n    allowEnrollmentChanges(org: Organization): boolean {\n        if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n            const policy = this.policies.find(p => p.organizationId === org.id);\n            if (policy != null && policy.enabled) {\n                return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n            }\n        }\n\n        return false;\n    }\n\n    showEnrolledStatus(org: Organization): boolean {\n        return org.useResetPassword && org.resetPasswordEnrolled && this.policies.some(p => p.organizationId === org.id && p.enabled);\n    }\n\n    async unlinkSso(org: Organization) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            'Are you sure you want to unlink SSO for this organization?', org.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, 'Unlinked SSO');\n            await this.load();\n        } catch { }\n    }\n\n    async leave(org: Organization) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('leaveOrganizationConfirmation'), org.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.apiService.postLeaveOrganization(org.id).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('leftOrganization'));\n            await this.load();\n        } catch { }\n    }\n\n    async toggleResetPasswordEnrollment(org: Organization) {\n        // Set variables\n        let keyString: string = null;\n        let toastStringRef = 'withdrawPasswordResetSuccess';\n\n        // Enrolling\n        if (!org.resetPasswordEnrolled) {\n            // Alert user about enrollment\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('resetPasswordEnrollmentWarning'), null,\n                this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n            if (!confirmed) {\n                return;\n            }\n\n            // Retrieve Public Key\n            this.actionPromise = this.apiService.getOrganizationKeys(org.id)\n                .then(async response => {\n                    if (response == null) {\n                        throw new Error(this.i18nService.t('resetPasswordOrgKeysError'));\n                    }\n\n                    const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n                    // RSA Encrypt user's encKey.key with organization public key\n                    const encKey = await this.cryptoService.getEncKey();\n                    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n                    keyString = encryptedKey.encryptedString;\n                    toastStringRef = 'enrollPasswordResetSuccess';\n\n                    // Create request and execute enrollment\n                    const request = new OrganizationUserResetPasswordEnrollmentRequest();\n                    request.resetPasswordKey = keyString;\n                    return this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n                })\n                .then(() => {\n                    return this.syncService.fullSync(true);\n                });\n        } else {\n            // Withdrawal\n            const request = new OrganizationUserResetPasswordEnrollmentRequest();\n            request.resetPasswordKey = keyString;\n            this.actionPromise = this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request)\n                .then(() => {\n                    return this.syncService.fullSync(true);\n                });\n        }\n\n        try {\n            await this.actionPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t(toastStringRef));\n            await this.load();\n        } catch { }\n    }\n}\n","<ng-container *ngIf=\"vault\"> <p *ngIf=\"!loaded\" class=\"text-muted\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"loaded\"> <ul class=\"fa-ul card-ul carets\" *ngIf=\"organizations && organizations.length\"> <li *ngFor=\"let o of organizations\"> <a [routerLink]=\"['/organizations', o.id]\" class=\"text-body\"> <i class=\"fa-li fa fa-caret-right\" aria-hidden=\"true\"></i> {{o.name}} <ng-container *ngIf=\"!o.enabled\"> <i class=\"fa fa-exclamation-triangle text-danger\" title=\"{{'organizationIsDisabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'organizationIsDisabled' | i18n}}</span> </ng-container> </a> </li> </ul> <p *ngIf=\"!organizations || !organizations.length\">{{'noOrganizationsList' | i18n}}</p> </ng-container> <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-block btn-outline-primary\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newOrganization' | i18n}} </a> </ng-container> <ng-container *ngIf=\"!vault\"> <div class=\"page-header d-flex\"> <h1> {{'organizations' | i18n}} <small [appApiAction]=\"actionPromise\" #action> <ng-container *ngIf=\"action.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </small> </h1> <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-sm btn-outline-primary ml-auto\" *ngIf=\"!loaded || (organizations && organizations.length)\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newOrganization' | i18n}} </a> </div> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <ng-container *ngIf=\"!organizations || !organizations.length\"> <p>{{'noOrganizationsList' | i18n}}</p> <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-outline-primary\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newOrganization' | i18n}} </a> </ng-container> <table class=\"table table-hover table-list\" *ngIf=\"organizations && organizations.length\"> <tbody> <tr *ngFor=\"let o of organizations\"> <td width=\"30\"> <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" [routerLink]=\"['/organizations', o.id]\">{{o.name}}</a> <ng-container *ngIf=\"!o.enabled\"> <i class=\"fa fa-exclamation-triangle text-danger\" title=\"{{'organizationIsDisabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'organizationIsDisabled' | i18n}}</span> </ng-container> <ng-container *ngIf=\"showEnrolledStatus(o)\"> <i class=\"fa fa-key\" appStopProp title=\"{{'enrolledPasswordReset' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'enrolledPasswordReset' | i18n}}</span> </ng-container> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a *ngIf=\"allowEnrollmentChanges(o) && !o.resetPasswordEnrolled\" class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleResetPasswordEnrollment(o)\"> <i class=\"fa fa-fw fa-key\" aria-hidden=\"true\"></i> {{'enrollPasswordReset' | i18n}} </a> <a *ngIf=\"allowEnrollmentChanges(o) && o.resetPasswordEnrolled\" class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleResetPasswordEnrollment(o)\"> <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i> {{'withdrawPasswordReset' | i18n}} </a> <ng-container *ngIf=\"o.useSso && o.identifier\"> <a *ngIf=\"o.ssoBound; else linkSso\" class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"unlinkSso(o)\"> <i class=\"fa fa-fw fa-chain-broken\" aria-hidden=\"true\"></i> {{'unlinkSso' | i18n}} </a> <ng-template #linkSso> <app-link-sso [organization]=\"o\"> </app-link-sso> </ng-template> </ng-container> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"leave(o)\"> <i class=\"fa fa-fw fa-sign-out\" aria-hidden=\"true\"></i> {{'leave' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </ng-container> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\n\n@Component({\n    selector: 'app-navbar',\n    templateUrl: 'navbar.component.html',\n})\nexport class NavbarComponent implements OnInit {\n    selfHosted = false;\n    name: string;\n    email: string;\n\n    constructor(private messagingService: MessagingService, private platformUtilsService: PlatformUtilsService,\n        private tokenService: TokenService) {\n        this.selfHosted = this.platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.name = await this.tokenService.getName();\n        this.email = await this.tokenService.getEmail();\n        if (this.name == null || this.name.trim() === '') {\n            this.name = this.email;\n        }\n    }\n\n    lock() {\n        this.messagingService.send('lockVault');\n    }\n\n    logOut() {\n        this.messagingService.send('logout');\n    }\n}\n","<nav class=\"navbar navbar-expand navbar-dark bg-primary\" [ngClass]=\"{'bg-secondary-alt': selfHosted}\"> <div class=\"container\"> <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{'pageTitle' | i18n : 'Bitwarden'}}\"> <i class=\"fa fa-shield\" aria-hidden=\"true\"></i> </a> <div class=\"collapse navbar-collapse\"> <ul class=\"navbar-nav\"> <li class=\"nav-item\" routerLinkActive=\"active\"> <a class=\"nav-link\" routerLink=\"/vault\">{{'myVault' | i18n}}</a> </li> <li class=\"nav-item\" routerLinkActive=\"active\"> <a class=\"nav-link\" routerLink=\"/sends\">{{'send' | i18n}}</a> </li> <li class=\"nav-item\" routerLinkActive=\"active\"> <a class=\"nav-link\" routerLink=\"/tools\">{{'tools' | i18n}}</a> </li> <li class=\"nav-item\" routerLinkActive=\"active\"> <a class=\"nav-link\" routerLink=\"/settings\">{{'settings' | i18n}}</a> </li> </ul> </div> <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\"> <li class=\"nav-item dropdown\"> <a class=\"nav-item nav-link dropdown-toggle\" href=\"#\" id=\"nav-profile\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"fa fa-user-circle fa-lg\" aria-hidden=\"true\"></i> </a> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"nav-profile\"> <div class=\"dropdown-item-text d-flex align-items-center\" *ngIf=\"name\" appStopProp> <app-avatar [data]=\"name\" [email]=\"email\" size=\"25\" fontSize=\"14\" [circle]=\"true\"></app-avatar> <div class=\"ml-2 overflow-hidden\"> <span>{{'loggedInAs' | i18n}}</span> <small class=\"text-muted\">{{name}}</small> </div> </div> <div class=\"dropdown-divider\"></div> <a class=\"dropdown-item\" href=\"#\" routerLink=\"/settings/account\"> <i class=\"fa fa-fw fa-user\" aria-hidden=\"true\"></i> {{'myAccount' | i18n}} </a> <a class=\"dropdown-item\" href=\"https://help.bitwarden.com\" target=\"_blank\" rel=\"noopener\"> <i class=\"fa fa-fw fa-question-circle\" aria-hidden=\"true\"></i> {{'getHelp' | i18n}} </a> <a class=\"dropdown-item\" href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\"> <i class=\"fa fa-fw fa-download\" aria-hidden=\"true\"></i> {{'getApps' | i18n}} </a> <div class=\"dropdown-divider\"></div> <button type=\"button\" class=\"dropdown-item\" (click)=\"lock()\"> <i class=\"fa fa-fw fa-lock\" aria-hidden=\"true\"></i> {{'lockNow' | i18n}} </button> <button type=\"button\" class=\"dropdown-item\" (click)=\"logOut()\"> <i class=\"fa fa-fw fa-sign-out\" aria-hidden=\"true\"></i> {{'logOut' | i18n}} </button> </div> </li> </ul> </div> </nav> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: 'footer.component.html',\n})\nexport class FooterComponent implements OnInit {\n    version: string;\n    year: string = '2015';\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.year = new Date().getFullYear().toString();\n        this.version = await this.platformUtilsService.getApplicationVersion();\n    }\n}\n","<div class=\"container footer text-muted\"> <div class=\"row\"> <div class=\"col\"> &copy; {{year}}, Bitwarden Inc. </div> <div class=\"col text-center\"></div> <div class=\"col text-right\"> {{'versionNumber' | i18n : version}} </div> </div> </div> ","export class OrganizationUserResetPasswordEnrollmentRequest {\n    resetPasswordKey: string;\n}\n","import { PolicyData } from '../data/policyData';\n\nimport Domain from './domainBase';\n\nimport { PolicyType } from '../../enums/policyType';\n\nexport class Policy extends Domain {\n    id: string;\n    organizationId: string;\n    type: PolicyType;\n    data: any;\n    enabled: boolean;\n\n    constructor(obj?: PolicyData) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.id = obj.id;\n        this.organizationId = obj.organizationId;\n        this.type = obj.type;\n        this.data = obj.data;\n        this.enabled = obj.enabled;\n    }\n}\n","import { Directive, OnInit } from '@angular/core';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { KdfType } from 'jslib-common/enums/kdfType';\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n    masterPassword: string;\n    masterPasswordRetype: string;\n    formPromise: Promise<any>;\n    masterPasswordScore: number;\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n    protected email: string;\n    protected kdf: KdfType;\n    protected kdfIterations: number;\n\n    private masterPasswordStrengthTimeout: any;\n\n    constructor(protected i18nService: I18nService, protected cryptoService: CryptoService,\n        protected messagingService: MessagingService, protected userService: UserService,\n        protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected policyService: PolicyService) { }\n\n    async ngOnInit() {\n        this.email = await this.userService.getEmail();\n        this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    }\n\n    getPasswordScoreAlertDisplay() {\n        if (this.enforcedPolicyOptions == null) {\n            return '';\n        }\n\n        let str: string;\n        switch (this.enforcedPolicyOptions.minComplexity) {\n            case 4:\n                str = this.i18nService.t('strong');\n                break;\n            case 3:\n                str = this.i18nService.t('good');\n                break;\n            default:\n                str = this.i18nService.t('weak');\n                break;\n        }\n        return str + ' (' + this.enforcedPolicyOptions.minComplexity + ')';\n    }\n\n    async submit() {\n        if (!await this.strongPassword()) {\n            return;\n        }\n\n        if (!await this.setupSubmitActions()) {\n            return;\n        }\n\n        const email = await this.userService.getEmail();\n        if (this.kdf == null) {\n            this.kdf = await this.userService.getKdf();\n        }\n        if (this.kdfIterations == null) {\n            this.kdfIterations = await this.userService.getKdfIterations();\n        }\n        const key = await this.cryptoService.makeKey(this.masterPassword, email.trim().toLowerCase(),\n            this.kdf, this.kdfIterations);\n        const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n        let encKey: [SymmetricCryptoKey, EncString] = null;\n        const existingEncKey = await this.cryptoService.getEncKey();\n        if (existingEncKey == null) {\n            encKey = await this.cryptoService.makeEncKey(key);\n        } else {\n            encKey = await this.cryptoService.remakeEncKey(key);\n        }\n\n        await this.performSubmitActions(masterPasswordHash, key, encKey);\n    }\n\n    async setupSubmitActions(): Promise<boolean> {\n        // Override in sub-class\n        // Can be used for additional validation and/or other processes the should occur before changing passwords\n        return true;\n    }\n\n    async performSubmitActions(masterPasswordHash: string, key: SymmetricCryptoKey,\n        encKey: [SymmetricCryptoKey, EncString]) {\n        // Override in sub-class\n    }\n\n    async strongPassword(): Promise<boolean> {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return false;\n        }\n        if (this.masterPassword.length < 8) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return false;\n        }\n        if (this.masterPassword !== this.masterPasswordRetype) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassDoesntMatch'));\n            return false;\n        }\n\n        const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n            this.getPasswordStrengthUserInput());\n\n        if (this.enforcedPolicyOptions != null &&\n            !this.policyService.evaluateMasterPassword(\n                strengthResult.score,\n                this.masterPassword,\n                this.enforcedPolicyOptions)) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));\n            return false;\n        }\n\n        if (strengthResult != null && strengthResult.score < 3) {\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\n                'warning');\n            if (!result) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    updatePasswordStrength() {\n        if (this.masterPasswordStrengthTimeout != null) {\n            clearTimeout(this.masterPasswordStrengthTimeout);\n        }\n        this.masterPasswordStrengthTimeout = setTimeout(() => {\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n                this.getPasswordStrengthUserInput());\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n        }, 300);\n    }\n\n    async logOut() {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'),\n            this.i18nService.t('logOut'), this.i18nService.t('logOut'), this.i18nService.t('cancel'));\n        if (confirmed) {\n            this.messagingService.send('logout');\n        }\n    }\n\n    private getPasswordStrengthUserInput() {\n        let userInput: string[] = [];\n        const atPosition = this.email.indexOf('@');\n        if (atPosition > -1) {\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\n        }\n        return userInput;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { SelectionReadOnlyRequest } from 'jslib-common/models/request/selectionReadOnlyRequest';\nimport { OrganizationUserUserDetailsResponse } from 'jslib-common/models/response/organizationUserResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-entity-users',\n    templateUrl: 'entity-users.component.html',\n})\nexport class EntityUsersComponent implements OnInit {\n    @Input() entity: 'group' | 'collection';\n    @Input() entityId: string;\n    @Input() entityName: string;\n    @Input() organizationId: string;\n    @Output() onEditedUsers = new EventEmitter();\n\n    organizationUserType = OrganizationUserType;\n    organizationUserStatusType = OrganizationUserStatusType;\n\n    showSelected = false;\n    loading = true;\n    formPromise: Promise<any>;\n    selectedCount = 0;\n    searchText: string;\n\n    private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        await this.loadUsers();\n        this.loading = false;\n    }\n\n    get users() {\n        if (this.showSelected) {\n            return this.allUsers.filter(u => (u as any).checked);\n        } else {\n            return this.allUsers;\n        }\n    }\n\n    async loadUsers() {\n        const users = await this.apiService.getOrganizationUsers(this.organizationId);\n        this.allUsers = users.data.map(r => r).sort(Utils.getSortFunction(this.i18nService, 'email'));\n        if (this.entity === 'group') {\n            const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n            if (response != null && users.data.length > 0) {\n                response.forEach(s => {\n                    const user = users.data.filter(u => u.id === s);\n                    if (user != null && user.length > 0) {\n                        (user[0] as any).checked = true;\n                    }\n                });\n            }\n        } else if (this.entity === 'collection') {\n            const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n            if (response != null && users.data.length > 0) {\n                response.forEach(s => {\n                    const user = users.data.filter(u => !u.accessAll && u.id === s.id);\n                    if (user != null && user.length > 0) {\n                        (user[0] as any).checked = true;\n                        (user[0] as any).readOnly = s.readOnly;\n                        (user[0] as any).hidePasswords = s.hidePasswords;\n                    }\n                });\n            }\n        }\n\n        this.allUsers.forEach(u => {\n            if (this.entity === 'collection' && u.accessAll) {\n                (u as any).checked = true;\n            }\n            if ((u as any).checked) {\n                this.selectedCount++;\n            }\n        });\n    }\n\n    check(u: OrganizationUserUserDetailsResponse) {\n        if (this.entity === 'collection' && u.accessAll) {\n            return;\n        }\n        (u as any).checked = !(u as any).checked;\n        this.selectedChanged(u);\n    }\n\n    selectedChanged(u: OrganizationUserUserDetailsResponse) {\n        if ((u as any).checked) {\n            this.selectedCount++;\n        } else {\n            if (this.entity === 'collection') {\n                (u as any).readOnly = false;\n                (u as any).hidePasswords = false;\n            }\n            this.selectedCount--;\n        }\n    }\n\n    filterSelected(showSelected: boolean) {\n        this.showSelected = showSelected;\n    }\n\n    async submit() {\n        try {\n            if (this.entity === 'group') {\n                const selections = this.users.filter(u => (u as any).checked).map(u => u.id);\n                this.formPromise = this.apiService.putGroupUsers(this.organizationId, this.entityId, selections);\n            } else {\n                const selections = this.users.filter(u => (u as any).checked && !u.accessAll)\n                    .map(u => new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords));\n                this.formPromise = this.apiService.putCollectionUsers(this.organizationId, this.entityId, selections);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedUsers'));\n            this.onEditedUsers.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAccessTitle\"> {{'userAccess' | i18n}} <small>{{entityName}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading || !users\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading && users && (users | search:searchText:'name':'email':'id') as searchedUsers\"> <div class=\"d-flex\"> <div class=\"mr-3\"> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" name=\"SearchText\" [(ngModel)]=\"searchText\"> </div> <div class=\"btn-group btn-group-sm\" role=\"group\"> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: !showSelected}\" (click)=\"filterSelected(false)\"> {{'all' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: showSelected}\" (click)=\"filterSelected(true)\"> {{'selected' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"selectedCount\">{{selectedCount}}</span> </button> </div> </div> <ng-container *ngIf=\"!searchedUsers.length\"> <hr> {{'noUsersInList' | i18n}} </ng-container> <ng-container *ngIf=\"searchedUsers.length\"> <table class=\"table table-hover table-list mb-0\"> <thead> <tr> <th>&nbsp;</th> <th>&nbsp;</th> <th>{{'name' | i18n}}</th> <th *ngIf=\"entity === 'collection'\">&nbsp;</th> <th>{{'userType' | i18n}}</th> <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">{{'hidePasswords' | i18n}}</th> <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">{{'readOnly' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let u of searchedUsers\"> <td class=\"table-list-checkbox\" (click)=\"check(u)\"> <input type=\"checkbox\" [(ngModel)]=\"u.checked\" name=\"{{u.id.substr(0,8)}}_Checked\" [disabled]=\"entity === 'collection' && u.accessAll\" (change)=\"selectedChanged(u)\" appStopProp> </td> <td width=\"30\" (click)=\"check(u)\"> <app-avatar [data]=\"u.name || u.email\" [email]=\"u.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{u.email}} <span class=\"badge badge-secondary\" *ngIf=\"u.status === organizationUserStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"u.status === organizationUserStatusType.Accepted\">{{'accepted' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small> </td> <td *ngIf=\"entity === 'collection'\"> <ng-container *ngIf=\"u.accessAll\"> <i class=\"fa fa-th\" title=\"{{'userAccessAllItems' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'userAccessAllItems' | i18n}}</span> </ng-container> </td> <td> <span *ngIf=\"u.type === organizationUserType.Owner\">{{'owner' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.Admin\">{{'admin' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.Manager\">{{'manager' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.User\">{{'user' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.Custom\">{{'custom' | i18n}}</span> </td> <td class=\"text-center\" *ngIf=\"entity === 'collection'\"> <input type=\"checkbox\" [(ngModel)]=\"u.hidePasswords\" name=\"{{u.id.substr(0,8)}}_HidePasswords\" [disabled]=\"u.accessAll || !u.checked\"> </td> <td class=\"text-center\" *ngIf=\"entity === 'collection'\"> <input type=\"checkbox\" [(ngModel)]=\"u.readOnly\" name=\"{{u.id.substr(0,8)}}_ReadOnly\" [disabled]=\"u.accessAll || !u.checked\"> </td> </tr> </tbody> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import { KeysRequest } from './keysRequest';\n\nexport class OrganizationKeysRequest extends KeysRequest {\n    constructor(publicKey: string, encryptedPrivateKey: string) {\n        super(publicKey, encryptedPrivateKey);\n    }\n}\n","export class OrganizationUserBulkRequest {\n    ids: string[];\n\n    constructor(ids: string[]) {\n        this.ids = ids == null ? [] : ids;\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { EventService } from '../../services/event.service';\n\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\n\n@Component({\n    selector: 'app-entity-events',\n    templateUrl: 'entity-events.component.html',\n})\nexport class EntityEventsComponent implements OnInit {\n    @Input() name: string;\n    @Input() entity: 'user' | 'cipher';\n    @Input() entityId: string;\n    @Input() organizationId: string;\n    @Input() showUser = false;\n\n    loading = true;\n    loaded = false;\n    events: any[];\n    start: string;\n    end: string;\n    continuationToken: string;\n    refreshPromise: Promise<any>;\n    morePromise: Promise<any>;\n\n    private orgUsersUserIdMap = new Map<string, any>();\n    private orgUsersIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private eventService: EventService, private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        const defaultDates = this.eventService.getDefaultDateFilters();\n        this.start = defaultDates[0];\n        this.end = defaultDates[1];\n        await this.load();\n    }\n\n    async load() {\n        if (this.showUser) {\n            const response = await this.apiService.getOrganizationUsers(this.organizationId);\n            response.data.forEach(u => {\n                const name = u.name == null || u.name.trim() === '' ? u.email : u.name;\n                this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n                this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n            });\n        }\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    async loadEvents(clearExisting: boolean) {\n        if (this.refreshPromise != null || this.morePromise != null) {\n            return;\n        }\n\n        let dates: string[] = null;\n        try {\n            dates = this.eventService.formatDateFilters(this.start, this.end);\n        } catch (e) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidDateRange'));\n            return;\n        }\n\n        this.loading = true;\n        let response: ListResponse<EventResponse>;\n        try {\n            let promise: Promise<any>;\n            if (this.entity === 'user') {\n                promise = this.apiService.getEventsOrganizationUser(this.organizationId, this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            } else {\n                promise = this.apiService.getEventsCipher(this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            }\n            if (clearExisting) {\n                this.refreshPromise = promise;\n            } else {\n                this.morePromise = promise;\n            }\n            response = await promise;\n        } catch { }\n\n        this.continuationToken = response.continuationToken;\n        const events = await Promise.all(response.data.map(async r => {\n            const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n            const eventInfo = await this.eventService.getEventInfo(r);\n            const user = this.showUser && userId != null && this.orgUsersUserIdMap.has(userId) ?\n                this.orgUsersUserIdMap.get(userId) : null;\n            return {\n                message: eventInfo.message,\n                appIcon: eventInfo.appIcon,\n                appName: eventInfo.appName,\n                userId: userId,\n                userName: user != null ? user.name : this.showUser ? this.i18nService.t('unknown') : null,\n                userEmail: user != null ? user.email : this.showUser ? '' : null,\n                date: r.date,\n                ip: r.ipAddress,\n                type: r.type,\n            };\n        }));\n\n        if (!clearExisting && this.events != null && this.events.length > 0) {\n            this.events = this.events.concat(events);\n        } else {\n            this.events = events;\n        }\n\n        this.loading = false;\n        this.morePromise = null;\n        this.refreshPromise = null;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"eventLogsTitle\"> {{'eventLogs' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"loaded\"> <div class=\"d-flex\"> <div class=\"form-inline\"> <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\" placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\"> <span class=\"mx-2\">-</span> <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\" placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\"> </div> <button #refreshBtn [appApiAction]=\"refreshPromise\" type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"loadEvents(true)\" [disabled]=\"loaded && refreshBtn.loading\"> <i class=\"fa fa-refresh fa-fw\" [ngClass]=\"{'fa-spin': loaded && refreshBtn.loading}\" aria-hidden=\"true\"></i> {{'refresh' | i18n}} </button> </div> <hr> <div *ngIf=\"!events || !events.length\"> {{'noEventsInList' | i18n}} </div> <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\"> <thead> <tr> <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th> <th class=\"border-top-0\" width=\"40\"> <span class=\"sr-only\">{{'device' | i18n}}</span> </th> <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{'user' | i18n}}</th> <th class=\"border-top-0\">{{'event' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let e of events\"> <td>{{e.date | date:'medium'}}</td> <td> <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{e.appName}}, {{e.ip}}</span> </td> <td *ngIf=\"showUser\"> <span appA11yTitle=\"{{e.userEmail}}\">{{e.userName}}</span> </td> <td [innerHTML]=\"e.message\"></td> </tr> </tbody> </table> <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\" (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'loadMore' | i18n}}</span> </button> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","import { BaseResponse } from '../response/baseResponse';\n\nexport class PermissionsApi extends BaseResponse {\n    accessBusinessPortal: boolean;\n    accessEventLogs: boolean;\n    accessImportExport: boolean;\n    accessReports: boolean;\n    manageAllCollections: boolean;\n    manageAssignedCollections: boolean;\n    manageCiphers: boolean;\n    manageGroups: boolean;\n    manageSso: boolean;\n    managePolicies: boolean;\n    manageUsers: boolean;\n    manageResetPassword: boolean;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return this;\n        }\n        this.accessBusinessPortal = this.getResponseProperty('AccessBusinessPortal');\n        this.accessEventLogs = this.getResponseProperty('AccessEventLogs');\n        this.accessImportExport = this.getResponseProperty('AccessImportExport');\n        this.accessReports = this.getResponseProperty('AccessReports');\n        this.manageAllCollections = this.getResponseProperty('ManageAllCollections');\n        this.manageAssignedCollections = this.getResponseProperty('ManageAssignedCollections');\n        this.manageCiphers = this.getResponseProperty('ManageCiphers');\n        this.manageGroups = this.getResponseProperty('ManageGroups');\n        this.manageSso = this.getResponseProperty('ManageSso');\n        this.managePolicies = this.getResponseProperty('ManagePolicies');\n        this.manageUsers = this.getResponseProperty('ManageUsers');\n        this.manageResetPassword = this.getResponseProperty('ManageResetPassword');\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\nimport { ApiKeyResponse } from 'jslib-common/models/response/apiKeyResponse';\n\n@Component({\n    selector: 'app-api-key',\n    templateUrl: 'api-key.component.html',\n})\nexport class ApiKeyComponent {\n    keyType: string;\n    isRotation: boolean;\n    postKey: (entityId: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    entityId: string;\n    scope: string;\n    grantType: string;\n    apiKeyTitle: string;\n    apiKeyWarning: string;\n    apiKeyDescription: string;\n\n    masterPassword: string;\n    formPromise: Promise<ApiKeyResponse>;\n    clientId: string;\n    clientSecret: string;\n\n    constructor(private i18nService: I18nService, private toasterService: ToasterService,\n        private cryptoService: CryptoService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.postKey(this.entityId, request);\n            const response = await this.formPromise;\n            this.clientSecret = response.apiKey;\n            this.clientId = `${this.keyType}.${this.entityId}`;\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"apiKeyTitle\">{{apiKeyTitle | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{apiKeyDescription | i18n}}</p> <ng-container *ngIf=\"!clientSecret\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> </ng-container> <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{apiKeyWarning | i18n}}</app-callout> <app-callout type=\"info\" title=\"{{'oauth2ClientCredentials' | i18n}}\" icon=\"fa-key\" *ngIf=\"clientSecret\"> <p class=\"mb-1\"> <strong>client_id:</strong><br> <code>{{clientId}}</code> </p> <p class=\"mb-1\"> <strong>client_secret:</strong><br> <code>{{clientSecret}}</code> </p> <p class=\"mb-1\"> <strong>scope:</strong><br> <code>{{scope}}</code> </p> <p class=\"mb-0\"> <strong>grant_type:</strong><br> <code>{{grantType}}</code> </p> </app-callout> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\" *ngIf=\"!clientSecret\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{(isRotation ? 'rotateApiKey' : 'viewApiKey') | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    Input,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-purge-vault',\n    templateUrl: 'purge-vault.component.html',\n})\nexport class PurgeVaultComponent {\n    @Input() organizationId?: string = null;\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private router: Router) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.postPurgeCiphers(request, this.organizationId);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('vaultPurged'));\n            if (this.organizationId != null) {\n                this.router.navigate(['organizations', this.organizationId, 'vault']);\n            } else {\n                this.router.navigate(['vault']);\n            }\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"purgeVaultTitle\">{{'purgeVault' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{(organizationId ? 'purgeOrgVaultDesc' : 'purgeVaultDesc') | i18n}}</p> <app-callout type=\"warning\">{{'purgeVaultWarning' | i18n}}</app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'purgeVault' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { BillingResponse } from 'jslib-common/models/response/billingResponse';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\nimport { TransactionType } from 'jslib-common/enums/transactionType';\nimport { VerifyBankRequest } from 'jslib-common/models/request/verifyBankRequest';\n\n@Component({\n    selector: 'app-user-billing',\n    templateUrl: 'user-billing.component.html',\n})\nexport class UserBillingComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    showAdjustPayment = false;\n    showAddCredit = false;\n    billing: BillingResponse;\n    paymentMethodType = PaymentMethodType;\n    transactionType = TransactionType;\n    organizationId: string;\n    verifyAmount1: number;\n    verifyAmount2: number;\n\n    verifyBankPromise: Promise<any>;\n\n    constructor(protected apiService: ApiService, protected i18nService: I18nService,\n        protected toasterService: ToasterService, protected platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        await this.load();\n        this.firstLoaded = true;\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n        this.loading = true;\n        if (this.organizationId != null) {\n            this.billing = await this.apiService.getOrganizationBilling(this.organizationId);\n        } else {\n            this.billing = await this.apiService.getUserBilling();\n        }\n        this.loading = false;\n    }\n\n    async verifyBank() {\n        if (this.loading) {\n            return;\n        }\n\n        try {\n            const request = new VerifyBankRequest();\n            request.amount1 = this.verifyAmount1;\n            request.amount2 = this.verifyAmount2;\n            this.verifyBankPromise = this.apiService.postOrganizationVerifyBank(this.organizationId, request);\n            await this.verifyBankPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('verifiedBankAccount'));\n            this.load();\n        } catch { }\n    }\n\n    addCredit() {\n        if (this.paymentSourceInApp) {\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\n                this.i18nService.t('addCredit'), null, null, 'warning');\n            return;\n        }\n        this.showAddCredit = true;\n    }\n\n    closeAddCredit(load: boolean) {\n        this.showAddCredit = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    changePayment() {\n        if (this.paymentSourceInApp) {\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\n                this.i18nService.t('changePaymentMethod'), null, null, 'warning');\n            return;\n        }\n        this.showAdjustPayment = true;\n    }\n\n    closePayment(load: boolean) {\n        this.showAdjustPayment = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get isCreditBalance() {\n        return this.billing == null || this.billing.balance <= 0;\n    }\n\n    get creditOrBalance() {\n        return Math.abs(this.billing != null ? this.billing.balance : 0);\n    }\n\n    get paymentSource() {\n        return this.billing != null ? this.billing.paymentSource : null;\n    }\n\n    get paymentSourceInApp() {\n        return this.paymentSource != null &&\n            (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n                this.paymentSource.type === PaymentMethodType.GoogleInApp);\n    }\n\n    get invoices() {\n        return this.billing != null ? this.billing.invoices : null;\n    }\n\n    get transactions() {\n        return this.billing != null ? this.billing.transactions : null;\n    }\n}\n","<div class=\"page-header d-flex\"> <h1> {{'billing' | i18n}} </h1> <button (click)=\"load()\" class=\"btn btn-sm btn-outline-primary ml-auto\" *ngIf=\"firstLoaded\" [disabled]=\"loading\"> <i class=\"fa fa-refresh fa-fw\" [ngClass]=\"{'fa-spin': loading}\" aria-hidden=\"true\"></i> {{'refresh' | i18n}} </button> </div> <ng-container *ngIf=\"!firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"billing\"> <h2>{{(isCreditBalance ? 'accountCredit' : 'accountBalance') | i18n}}</h2> <p class=\"text-lg\"><strong>{{creditOrBalance | currency:'$'}}</strong></p> <p>{{'creditAppliedDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\"> {{'addCredit' | i18n}} </button> <app-add-credit [organizationId]=\"organizationId\" (onAdded)=\"closeAddCredit(true)\" (onCanceled)=\"closeAddCredit(false)\" *ngIf=\"showAddCredit\"> </app-add-credit> <h2 class=\"spaced-header\">{{'paymentMethod' | i18n}}</h2> <p *ngIf=\"!paymentSource\">{{'noPaymentMethod' | i18n}}</p> <ng-container *ngIf=\"paymentSource\"> <app-callout type=\"warning\" title=\"{{'verifyBankAccount' | i18n}}\" *ngIf=\"paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\"> <p>{{'verifyBankAccountDesc' | i18n}} {{'verifyBankAccountFailureWarning' | i18n}}</p> <form #verifyForm class=\"form-inline\" (ngSubmit)=\"verifyBank()\" [appApiAction]=\"verifyBankPromise\" ngNativeValidate> <label class=\"sr-only\" for=\"verifyAmount1\">{{'amount' | i18n : '1'}}</label> <div class=\"input-group mr-2\"> <div class=\"input-group-prepend\"> <div class=\"input-group-text\">$0.</div> </div> <input type=\"number\" class=\"form-control\" id=\"verifyAmount1\" placeholder=\"xx\" name=\"Amount1\" [(ngModel)]=\"verifyAmount1\" min=\"1\" max=\"99\" step=\"1\" required> </div> <label class=\"sr-only\" for=\"verifyAmount2\">{{'amount' | i18n : '2'}}</label> <div class=\"input-group mr-2\"> <div class=\"input-group-prepend\"> <div class=\"input-group-text\">$0.</div> </div> <input type=\"number\" class=\"form-control\" id=\"verifyAmount2\" placeholder=\"xx\" name=\"Amount2\" [(ngModel)]=\"verifyAmount2\" min=\"1\" max=\"99\" step=\"1\" required> </div> <button type=\"submit\" class=\"btn btn-outline-primary btn-submit\" [disabled]=\"verifyForm.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'verifyBankAccount' | i18n}}</span> </button> </form> </app-callout> <p> <i class=\"fa fa-fw\" [ngClass]=\"{'fa-credit-card': paymentSource.type === paymentMethodType.Card,\n                    'fa-university': paymentSource.type === paymentMethodType.BankAccount,\n                    'fa-money': paymentSource.type === paymentMethodType.Check,\n                    'fa-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n                    'fa-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n                    'fa-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp}\"></i> <span *ngIf=\"paymentSourceInApp\">{{'inAppPurchase' | i18n}}</span> {{paymentSource.description}} </p> </ng-container> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\"> {{(paymentSource ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}} </button> <app-adjust-payment [currentType]=\"paymentSource != null ? paymentSource.type : null\" [organizationId]=\"organizationId\" (onAdjusted)=\"closePayment(true)\" (onCanceled)=\"closePayment(false)\" *ngIf=\"showAdjustPayment\"> </app-adjust-payment> <h2 class=\"spaced-header\">{{'invoices' | i18n}}</h2> <p *ngIf=\"!invoices || !invoices.length\">{{'noInvoices' | i18n}}</p> <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\"> <tbody> <tr *ngFor=\"let i of invoices\"> <td>{{i.date | date:'mediumDate'}}</td> <td> <a href=\"{{i.pdfUrl}}\" target=\"_blank\" rel=\"noopener\" class=\"mr-2\" appA11yTitle=\"{{'downloadInvoice' | i18n}}\"> <i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i></a> <a href=\"{{i.url}}\" target=\"_blank\" rel=\"noopener\" title=\"{{'viewInvoice' | i18n}}\"> {{'invoiceNumber' | i18n : i.number}}</a> </td> <td>{{i.amount | currency:'$'}}</td> <td> <span *ngIf=\"i.paid\"> <i class=\"fa fa-check text-success\" aria-hidden=\"true\"></i> {{'paid' | i18n}} </span> <span *ngIf=\"!i.paid\"> <i class=\"fa fa-exclamation-circle text-muted\" aria-hidden=\"true\"></i> {{'unpaid' | i18n}} </span> </td> </tr> </tbody> </table> <h2 class=\"spaced-header\">{{'transactions' | i18n}}</h2> <p *ngIf=\"!transactions || !transactions.length\">{{'noTransactions' | i18n}}</p> <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\"> <tbody> <tr *ngFor=\"let t of transactions\"> <td>{{t.createdDate | date:'mediumDate'}}</td> <td> <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\"> {{'chargeNoun' | i18n}} </span> <span *ngIf=\"t.type === transactionType.Refund\">{{'refundNoun' | i18n}}</span> </td> <td> <i class=\"fa fa-fw\" *ngIf=\"t.paymentMethodType\" aria-hidden=\"true\" [ngClass]=\"{\n                            'fa-credit-card': t.paymentMethodType === paymentMethodType.Card,\n                            'fa-university': t.paymentMethodType === paymentMethodType.BankAccount ||\n                                t.paymentMethodType === paymentMethodType.WireTransfer,\n                            'fa-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n                            'fa-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n                        }\"></i> {{t.details}} </td> <td [ngClass]=\"{'text-strike': t.refunded}\" title=\"{{(t.refunded ? 'refunded' : '') | i18n}}\"> {{t.amount | currency:'$'}}</td> </tr> </tbody> </table> <small class=\"text-muted\">* {{'chargesStatement' | i18n : 'BITWARDEN'}}</small> </ng-container> ","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\n\nimport { BitPayInvoiceRequest } from 'jslib-common/models/request/bitPayInvoiceRequest';\n\nimport { WebConstants } from '../../services/webConstants';\n\n@Component({\n    selector: 'app-add-credit',\n    templateUrl: 'add-credit.component.html',\n})\nexport class AddCreditComponent implements OnInit {\n    @Input() creditAmount: string;\n    @Input() showOptions = true;\n    @Input() method = PaymentMethodType.PayPal;\n    @Input() organizationId: string;\n    @Output() onAdded = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    @ViewChild('ppButtonForm', { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n    paymentMethodType = PaymentMethodType;\n    ppButtonFormAction = WebConstants.paypal.buttonActionProduction;\n    ppButtonBusinessId = WebConstants.paypal.businessIdProduction;\n    ppButtonCustomField: string;\n    ppLoading = false;\n    subject: string;\n    returnUrl: string;\n    formPromise: Promise<any>;\n\n    private userId: string;\n    private name: string;\n    private email: string;\n\n    constructor(private userService: UserService, private apiService: ApiService,\n        private platformUtilsService: PlatformUtilsService) {\n        if (platformUtilsService.isDev()) {\n            this.ppButtonFormAction = WebConstants.paypal.buttonActionSandbox;\n            this.ppButtonBusinessId = WebConstants.paypal.businessIdSandbox;\n        }\n    }\n\n    async ngOnInit() {\n        if (this.organizationId != null) {\n            if (this.creditAmount == null) {\n                this.creditAmount = '20.00';\n            }\n            this.ppButtonCustomField = 'organization_id:' + this.organizationId;\n            const org = await this.userService.getOrganization(this.organizationId);\n            if (org != null) {\n                this.subject = org.name;\n                this.name = org.name;\n            }\n        } else {\n            if (this.creditAmount == null) {\n                this.creditAmount = '10.00';\n            }\n            this.userId = await this.userService.getUserId();\n            this.subject = await this.userService.getEmail();\n            this.email = this.subject;\n            this.ppButtonCustomField = 'user_id:' + this.userId;\n        }\n        this.ppButtonCustomField += ',account_credit:1';\n        this.returnUrl = window.location.href;\n    }\n\n    async submit() {\n        if (this.creditAmount == null || this.creditAmount === '') {\n            return;\n        }\n\n        if (this.method === PaymentMethodType.PayPal) {\n            this.ppButtonFormRef.nativeElement.submit();\n            this.ppLoading = true;\n            return;\n        }\n        if (this.method === PaymentMethodType.BitPay) {\n            try {\n                const req = new BitPayInvoiceRequest();\n                req.email = this.email;\n                req.name = this.name;\n                req.credit = true;\n                req.amount = this.creditAmountNumber;\n                req.organizationId = this.organizationId;\n                req.userId = this.userId;\n                req.returnUrl = this.returnUrl;\n                this.formPromise = this.apiService.postBitPayInvoice(req);\n                const bitPayUrl: string = await this.formPromise;\n                this.platformUtilsService.launchUri(bitPayUrl);\n            } catch { }\n            return;\n        }\n        try {\n            this.onAdded.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    formatAmount() {\n        try {\n            if (this.creditAmount != null && this.creditAmount !== '') {\n                const floatAmount = Math.abs(parseFloat(this.creditAmount));\n                if (floatAmount > 0) {\n                    this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n                        .toFixed(2).toString();\n                    return;\n                }\n            }\n        } catch { }\n        this.creditAmount = '';\n    }\n\n    get creditAmountNumber(): number {\n        if (this.creditAmount != null && this.creditAmount !== '') {\n            try {\n                return parseFloat(this.creditAmount);\n            } catch { }\n        }\n        return null;\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{'addCredit' | i18n}}</h3> <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\"> <div class=\"form-check form-check-inline\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"credit-method-paypal\" [value]=\"paymentMethodType.PayPal\" [(ngModel)]=\"method\"> <label class=\"form-check-label\" for=\"credit-method-paypal\"> <i class=\"fa fa-fw fa-paypal\" aria-hidden=\"true\"></i> PayPal</label> </div> <div class=\"form-check form-check-inline\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"credit-method-bitcoin\" [value]=\"paymentMethodType.BitPay\" [(ngModel)]=\"method\"> <label class=\"form-check-label\" for=\"credit-method-bitcoin\"> <i class=\"fa fa-fw fa-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label> </div> </div> <div class=\"form-group\"> <div class=\"row\"> <div class=\"col-4\"> <label for=\"creditAmount\">{{'amount' | i18n}}</label> <div class=\"input-group\"> <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div> <input id=\"creditAmount\" class=\"form-control\" type=\"text\" name=\"CreditAmount\" [(ngModel)]=\"creditAmount\" (blur)=\"formatAmount()\" required> </div> </div> </div> <small class=\"form-text text-muted\">{{'creditDelayed' | i18n}}</small> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> </div> </form> <form #ppButtonForm action=\"{{ppButtonFormAction}}\" method=\"post\" target=\"_top\"> <input type=\"hidden\" name=\"cmd\" value=\"_xclick\"> <input type=\"hidden\" name=\"business\" value=\"{{ppButtonBusinessId}}\"> <input type=\"hidden\" name=\"button_subtype\" value=\"services\"> <input type=\"hidden\" name=\"no_note\" value=\"1\"> <input type=\"hidden\" name=\"no_shipping\" value=\"1\"> <input type=\"hidden\" name=\"rm\" value=\"1\"> <input type=\"hidden\" name=\"return\" value=\"{{returnUrl}}\"> <input type=\"hidden\" name=\"cancel_return\" value=\"{{returnUrl}}\"> <input type=\"hidden\" name=\"currency_code\" value=\"USD\"> <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\"> <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\"> <input type=\"hidden\" name=\"amount\" value=\"{{creditAmount}}\"> <input type=\"hidden\" name=\"custom\" value=\"{{ppButtonCustomField}}\"> <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\"> <input type=\"hidden\" name=\"item_number\" value=\"{{subject}}\"> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PaymentRequest } from 'jslib-common/models/request/paymentRequest';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\n\nimport { PaymentComponent } from './payment.component';\nimport { TaxInfoComponent } from './tax-info.component';\n\n@Component({\n    selector: 'app-adjust-payment',\n    templateUrl: 'adjust-payment.component.html',\n})\nexport class AdjustPaymentComponent {\n    @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n    @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n    @Input() currentType?: PaymentMethodType;\n    @Input() organizationId: string;\n    @Output() onAdjusted = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    paymentMethodType = PaymentMethodType;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async submit() {\n        try {\n            const request = new PaymentRequest();\n            this.formPromise = this.paymentComponent.createPaymentToken().then(result => {\n                request.paymentToken = result[0];\n                request.paymentMethodType = result[1];\n                request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n                request.country = this.taxInfoComponent.taxInfo.country;\n                if (this.organizationId == null) {\n                    return this.apiService.postAccountPayment(request);\n                } else {\n                    request.taxId = this.taxInfoComponent.taxInfo.taxId;\n                    request.state = this.taxInfoComponent.taxInfo.state;\n                    request.line1 = this.taxInfoComponent.taxInfo.line1;\n                    request.line2 = this.taxInfoComponent.taxInfo.line2;\n                    request.city = this.taxInfoComponent.taxInfo.city;\n                    request.state = this.taxInfoComponent.taxInfo.state;\n                    return this.apiService.postOrganizationPayment(this.organizationId, request);\n                }\n            });\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedPaymentMethod'));\n            this.onAdjusted.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    changeCountry() {\n        if (this.taxInfoComponent.taxInfo.country === 'US') {\n            this.paymentComponent.hideBank = !this.organizationId;\n        } else {\n            this.paymentComponent.hideBank = true;\n            if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n                this.paymentComponent.method = PaymentMethodType.Card;\n                this.paymentComponent.changeMethod();\n            }\n        }\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{(currentType != null ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}}</h3> <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment> <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> </div> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-update-license',\n    templateUrl: 'update-license.component.html',\n})\nexport class UpdateLicenseComponent {\n    @Input() organizationId: string;\n    @Output() onUpdated = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async submit() {\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        try {\n            const fd = new FormData();\n            fd.append('license', files[0]);\n\n            let updatePromise: Promise<any> = null;\n            if (this.organizationId == null) {\n                updatePromise = this.apiService.postAccountLicense(fd);\n            } else {\n                updatePromise = this.apiService.postOrganizationLicenseUpdate(this.organizationId, fd);\n            }\n\n            this.formPromise = updatePromise.then(() => {\n                return this.apiService.refreshIdentityToken();\n            });\n\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedLicense'));\n            this.onUpdated.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"form-group\"> <label for=\"file\" class=\"sr-only\">{{'licenseFile' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required> <small class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : (!organizationId ? 'bitwarden_premium_license.json' : 'bitwarden_organization_license.json')}}</small> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> </form> ","export enum ProductType {\n    Free = 0,\n    Families = 1,\n    Teams = 2,\n    Enterprise = 3,\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { StorageRequest } from 'jslib-common/models/request/storageRequest';\n\nimport { PaymentResponse } from 'jslib-common/models/response/paymentResponse';\n\nimport { PaymentComponent } from './payment.component';\n\n@Component({\n    selector: 'app-adjust-storage',\n    templateUrl: 'adjust-storage.component.html',\n})\nexport class AdjustStorageComponent {\n    @Input() storageGbPrice = 0;\n    @Input() add = true;\n    @Input() organizationId: string;\n    @Input() interval = 'year';\n    @Output() onAdjusted = new EventEmitter<number>();\n    @Output() onCanceled = new EventEmitter();\n\n    @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n    storageAdjustment = 0;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private router: Router,\n        private activatedRoute: ActivatedRoute) { }\n\n    async submit() {\n        try {\n            const request = new StorageRequest();\n            request.storageGbAdjustment = this.storageAdjustment;\n            if (!this.add) {\n                request.storageGbAdjustment *= -1;\n            }\n\n            let paymentFailed = false;\n            const action = async () => {\n                let response: Promise<PaymentResponse>;\n                if (this.organizationId == null) {\n                    response = this.formPromise = this.apiService.postAccountStorage(request);\n                } else {\n                    response = this.formPromise = this.apiService.postOrganizationStorage(this.organizationId, request);\n                }\n                const result = await response;\n                if (result != null && result.paymentIntentClientSecret != null) {\n                    try {\n                        await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n                    } catch {\n                        paymentFailed = true;\n                    }\n                }\n            };\n            this.formPromise = action();\n            await this.formPromise;\n            this.onAdjusted.emit(this.storageAdjustment);\n            if (paymentFailed) {\n                this.toasterService.popAsync({\n                    body: this.i18nService.t('couldNotChargeCardPayInvoice'),\n                    type: 'warning',\n                    timeout: 10000,\n                });\n                this.router.navigate(['../billing'], { relativeTo: this.activatedRoute });\n            } else {\n                this.toasterService.popAsync('success', null,\n                    this.i18nService.t('adjustedStorage', request.storageGbAdjustment.toString()));\n            }\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    get adjustedStorageTotal(): number {\n        return this.storageGbPrice * this.storageAdjustment;\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{(add ? 'addStorage' : 'removeStorage') | i18n}}</h3> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"storageAdjustment\">{{(add ? 'gbStorageAdd' : 'gbStorageRemove') | i18n}}</label> <input id=\"storageAdjustment\" class=\"form-control\" type=\"number\" name=\"StroageGbAdjustment\" [(ngModel)]=\"storageAdjustment\" min=\"0\" max=\"99\" step=\"1\" required> </div> </div> <div *ngIf=\"add\" class=\"mb-3\"> <strong>{{'total' | i18n}}:</strong> {{storageAdjustment || 0}} GB &times; {{storageGbPrice | currency:'$'}} = {{adjustedStorageTotal | currency:'$'}} /{{interval | i18n}} </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> <small class=\"d-block text-muted mt-3\"> {{(add ? 'storageAddNote' : 'storageRemoveNote') | i18n}} </small> </div> </form> <app-payment [showMethods]=\"false\"></app-payment> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\nimport { UpdateTwoFactorDuoRequest } from 'jslib-common/models/request/updateTwoFactorDuoRequest';\nimport { TwoFactorDuoResponse } from 'jslib-common/models/response/twoFactorDuoResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-duo',\n    templateUrl: 'two-factor-duo.component.html',\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Duo;\n    ikey: string;\n    skey: string;\n    host: string;\n    formPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorDuoRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.integrationKey = this.ikey;\n        request.secretKey = this.skey;\n        request.host = this.host;\n\n        return super.enable(async () => {\n            if (this.organizationId != null) {\n                this.formPromise = this.apiService.putTwoFactorOrganizationDuo(this.organizationId, request);\n            } else {\n                this.formPromise = this.apiService.putTwoFactorDuo(request);\n            }\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private processResponse(response: TwoFactorDuoResponse) {\n        this.ikey = response.integrationKey;\n        this.skey = response.secretKey;\n        this.host = response.host;\n        this.enabled = response.enabled;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\"> <div class=\"modal-dialog\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" title=\"2faDuoTitle\"> {{'twoStepLogin' | i18n}} <small>Duo</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\" autocomplete=\"off\"> <div class=\"modal-body\"> <ng-container *ngIf=\"enabled\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\"> {{'twoStepLoginProviderEnabled' | i18n}} </app-callout> <img src=\"images/2.png\" class=\"float-right ml-3\" alt=\"\"> <strong>{{'twoFactorDuoIntegrationKey' | i18n}}:</strong> {{ikey}} <br> <strong>{{'twoFactorDuoSecretKey' | i18n}}:</strong> {{skey}} <br> <strong>{{'twoFactorDuoApiHostname' | i18n}}:</strong> {{host}} </ng-container> <ng-container *ngIf=\"!enabled\"> <img src=\"images/2.png\" class=\"float-right ml-3\" alt=\"\"> <p>{{'twoFactorDuoDesc' | i18n}}</p> <div class=\"form-group\"> <label for=\"ikey\">{{'twoFactorDuoIntegrationKey' | i18n}}</label> <input id=\"ikey\" type=\"text\" name=\"IntegrationKey\" class=\"form-control\" [(ngModel)]=\"ikey\" required appInputVerbatim> </div> <div class=\"form-group\"> <label for=\"skey\">{{'twoFactorDuoSecretKey' | i18n}}</label> <input id=\"skey\" type=\"password\" name=\"SecretKey\" class=\"form-control\" [(ngModel)]=\"skey\" required appInputVerbatim autocomplete=\"new-password\"> </div> <div class=\"form-group\"> <label for=\"host\">{{'twoFactorDuoApiHostname' | i18n}}</label> <input id=\"host\" type=\"text\" name=\"Host\" class=\"form-control\" [(ngModel)]=\"host\" placeholder=\"{{'ex' | i18n}} api-xxxxxxxx.duosecurity.com\" required appInputVerbatim> </div> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span> <span *ngIf=\"enabled\">{{'disable' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    Type,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { TwoFactorProviders } from 'jslib-common/services/auth.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { TwoFactorAuthenticatorComponent } from './two-factor-authenticator.component';\nimport { TwoFactorDuoComponent } from './two-factor-duo.component';\nimport { TwoFactorEmailComponent } from './two-factor-email.component';\nimport { TwoFactorRecoveryComponent } from './two-factor-recovery.component';\nimport { TwoFactorWebAuthnComponent } from './two-factor-webauthn.component';\nimport { TwoFactorYubiKeyComponent } from './two-factor-yubikey.component';\n\n@Component({\n    selector: 'app-two-factor-setup',\n    templateUrl: 'two-factor-setup.component.html',\n})\nexport class TwoFactorSetupComponent implements OnInit {\n    @ViewChild('recoveryTemplate', { read: ViewContainerRef, static: true }) recoveryModalRef: ViewContainerRef;\n    @ViewChild('authenticatorTemplate', { read: ViewContainerRef, static: true }) authenticatorModalRef: ViewContainerRef;\n    @ViewChild('yubikeyTemplate', { read: ViewContainerRef, static: true }) yubikeyModalRef: ViewContainerRef;\n    @ViewChild('duoTemplate', { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n    @ViewChild('emailTemplate', { read: ViewContainerRef, static: true }) emailModalRef: ViewContainerRef;\n    @ViewChild('webAuthnTemplate', { read: ViewContainerRef, static: true }) webAuthnModalRef: ViewContainerRef;\n\n    organizationId: string;\n    providers: any[] = [];\n    canAccessPremium: boolean;\n    showPolicyWarning = false;\n    loading = true;\n\n    private modal: ModalComponent = null;\n\n    constructor(protected apiService: ApiService, protected userService: UserService,\n        protected componentFactoryResolver: ComponentFactoryResolver, protected messagingService: MessagingService,\n        protected policyService: PolicyService) { }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n\n        for (const key in TwoFactorProviders) {\n            if (!TwoFactorProviders.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const p = (TwoFactorProviders as any)[key];\n            if (this.filterProvider(p.type)) {\n                continue;\n            }\n\n            this.providers.push({\n                type: p.type,\n                name: p.name,\n                description: p.description,\n                enabled: false,\n                premium: p.premium,\n                sort: p.sort,\n            });\n        }\n\n        this.providers.sort((a: any, b: any) => a.sort - b.sort);\n        await this.load();\n    }\n\n    async load() {\n        this.loading = true;\n        const providerList = await this.getTwoFactorProviders();\n        providerList.data.forEach(p => {\n            this.providers.forEach(p2 => {\n                if (p.type === p2.type) {\n                    p2.enabled = p.enabled;\n                }\n            });\n        });\n        this.evaluatePolicies();\n        this.loading = false;\n    }\n\n    manage(type: TwoFactorProviderType) {\n        switch (type) {\n            case TwoFactorProviderType.Authenticator:\n                const authComp = this.openModal(this.authenticatorModalRef, TwoFactorAuthenticatorComponent);\n                authComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n                });\n                break;\n            case TwoFactorProviderType.Yubikey:\n                const yubiComp = this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n                yubiComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n                });\n                break;\n            case TwoFactorProviderType.Duo:\n                const duoComp = this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n                duoComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Duo);\n                });\n                break;\n            case TwoFactorProviderType.Email:\n                const emailComp = this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n                emailComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Email);\n                });\n                break;\n            case TwoFactorProviderType.WebAuthn:\n                const webAuthnComp = this.openModal(this.webAuthnModalRef, TwoFactorWebAuthnComponent);\n                webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    recoveryCode() {\n        this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n    }\n\n    async premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    protected getTwoFactorProviders() {\n        return this.apiService.getTwoFactorProviders();\n    }\n\n    protected filterProvider(type: TwoFactorProviderType) {\n        return type === TwoFactorProviderType.OrganizationDuo;\n    }\n\n    protected openModal<T>(ref: ViewContainerRef, type: Type<T>): T {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = ref.createComponent(factory).instance;\n        const childComponent = this.modal.show<T>(type, ref);\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n        return childComponent;\n    }\n\n    protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n        if (!enabled && this.modal != null) {\n            this.modal.close();\n        }\n        this.providers.forEach(p => {\n            if (p.type === type) {\n                p.enabled = enabled;\n            }\n        });\n        this.evaluatePolicies();\n    }\n\n    private async evaluatePolicies() {\n        if (this.organizationId == null && this.providers.filter(p => p.enabled).length === 1) {\n            const policies = await this.policyService.getAll(PolicyType.TwoFactorAuthentication);\n            this.showPolicyWarning = policies != null && policies.some(p => p.enabled);\n        } else {\n            this.showPolicyWarning = false;\n        }\n    }\n}\n","<div class=\"page-header\"> <h1>{{'twoStepLogin' | i18n}}</h1> </div> <p *ngIf=\"!organizationId\">{{'twoStepLoginDesc' | i18n}}</p> <p *ngIf=\"organizationId\">{{'twoStepLoginOrganizationDesc' | i18n}}</p> <app-callout type=\"warning\" *ngIf=\"!organizationId\"> <p>{{'twoStepLoginRecoveryWarning' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"recoveryCode()\">{{'viewRecoveryCode' | i18n}}</button> </app-callout> <h2 [ngClass]=\"{'mt-5':!organizationId}\"> {{'providers' | i18n}} <small *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin fa-fw text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h2> <app-callout type=\"warning\" *ngIf=\"showPolicyWarning\"> {{'twoStepLoginPolicyUserWarning' | i18n}} </app-callout> <ul class=\"list-group list-group-2fa\"> <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\"> <div class=\"logo-2fa d-flex justify-content-center\"> <img [src]=\"'images/two-factor/' + p.type + '.png'\" alt=\"\"> </div> <div class=\"mx-4\"> <h3 class=\"mb-0\"> {{p.name}} <ng-container *ngIf=\"p.enabled\"> <i class=\"fa fa-check text-success fa-fw\" title=\"{{'enabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'enabled' | i18n}}</span> </ng-container> <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium && p.premium\" (click)=\"premiumRequired()\"> {{'premium' | i18n}} </a> </h3> {{p.description}} </div> <div class=\"ml-auto\"> <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\" [disabled]=\"!canAccessPremium && p.premium\" (click)=\"manage(p.type)\"> {{'manage' | i18n}} </button> </div> </li> </ul> <ng-template #authenticatorTemplate></ng-template> <ng-template #recoveryTemplate></ng-template> <ng-template #duoTemplate></ng-template> <ng-template #emailTemplate></ng-template> <ng-template #yubikeyTemplate></ng-template> <ng-template #webAuthnTemplate></ng-template> ","import { Component } from '@angular/core';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { ExportComponent as BaseExportComponent } from 'jslib-angular/components/export.component';\n\n@Component({\n    selector: 'app-export',\n    templateUrl: 'export.component.html',\n})\nexport class ExportComponent extends BaseExportComponent {\n    organizationId: string;\n\n    constructor(cryptoService: CryptoService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, exportService: ExportService,\n        eventService: EventService) {\n        super(cryptoService, i18nService, platformUtilsService, exportService, eventService, window);\n    }\n\n    protected saved() {\n        super.saved();\n        this.masterPassword = null;\n        this.platformUtilsService.showToast('success', null, this.i18nService.t('exportSuccess'));\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" ngNativeValidate [appApiAction]=\"formPromise\"> <div class=\"page-header\"> <h1>{{'exportVault' | i18n}}</h1> </div> <p>{{'exportMasterPassword' | i18n}}</p> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"format\">{{'fileFormat' | i18n}}</label> <select class=\"form-control\" id=\"format\" name=\"Format\" [(ngModel)]=\"format\"> <option value=\"json\">.json</option> <option value=\"csv\">.csv</option> <option value=\"encrypted_json\">.json (Encrypted)</option> </select> </div> </div> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPassword\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appInputVerbatim> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'exportVault' | i18n}}</span> </button> </form> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-exposed-passwords-report',\n    templateUrl: 'exposed-passwords-report.component.html',\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n    exposedPasswordMap = new Map<string, number>();\n\n    constructor(protected cipherService: CipherService, protected auditService: AuditService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    ngOnInit() {\n        this.checkAccess();\n    }\n\n    async load() {\n        if (await this.checkAccess()) {\n            super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const exposedPasswordCiphers: CipherView[] = [];\n        const promises: Promise<void>[] = [];\n        allCiphers.forEach(c => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '' || c.isDeleted) {\n                return;\n            }\n            const promise = this.auditService.passwordLeaked(c.login.password).then(exposedCount => {\n                if (exposedCount > 0) {\n                    exposedPasswordCiphers.push(c);\n                    this.exposedPasswordMap.set(c.id, exposedCount);\n                }\n            });\n            promises.push(promise);\n        });\n        await Promise.all(promises);\n        this.ciphers = exposedPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    protected canManageCipher(c: CipherView): boolean {\n        // this will only ever be false from the org view;\n        return true;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'exposedPasswordsReport' | i18n}}</h1> </div> <p>{{'exposedPasswordsReportDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-primary btn-submit\" [disabled]=\"loading\" (click)=\"load()\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'checkExposedPasswords' | i18n}}</span> </button> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noExposedPasswords' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'exposedPasswordsFound' | i18n}}\"> {{'exposedPasswordsFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <ng-container *ngIf=\"!organization || canManageCipher(c) ; else cantManage\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> </ng-container> <ng-template #cantManage> <span>{{c.name}}</span> </ng-template> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"text-right\"> <span class=\"badge badge-warning\"> {{'exposedXTimes' | i18n : (exposedPasswordMap.get(c.id) | number)}} </span> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherData } from 'jslib-common/models/data/cipherData';\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherCreateRequest } from 'jslib-common/models/request/cipherCreateRequest';\nimport { CipherRequest } from 'jslib-common/models/request/cipherRequest';\n\nimport { AddEditComponent as BaseAddEditComponent } from '../../vault/add-edit.component';\n\n@Component({\n    selector: 'app-org-vault-add-edit',\n    templateUrl: '../../vault/add-edit.component.html',\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n    organization: Organization;\n    originalCipher: Cipher = null;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        auditService: AuditService, stateService: StateService,\n        userService: UserService, collectionService: CollectionService,\n        totpService: TotpService, passwordGenerationService: PasswordGenerationService,\n        private apiService: ApiService, messagingService: MessagingService,\n        eventService: EventService, policyService: PolicyService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\n            userService, collectionService, totpService, passwordGenerationService, messagingService,\n            eventService, policyService);\n    }\n\n    protected allowOwnershipAssignment() {\n        if (this.ownershipOptions != null && (this.ownershipOptions.length > 1 || !this.allowPersonal)) {\n            if (this.organization != null) {\n                return this.cloneMode && this.organization.canManageAllCollections;\n            } else {\n                return !this.editMode || this.cloneMode;\n            }\n        }\n        return false;\n    }\n\n    protected loadCollections() {\n        if (!this.organization.canManageAllCollections) {\n            return super.loadCollections();\n        }\n        return Promise.resolve(this.collections);\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.canManageAllCollections) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        const data = new CipherData(response);\n        this.originalCipher = new Cipher(data);\n        return new Cipher(data);\n    }\n\n    protected encryptCipher() {\n        if (!this.organization.canManageAllCollections) {\n            return super.encryptCipher();\n        }\n        return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n    }\n\n    protected async saveCipher(cipher: Cipher) {\n        if (!this.organization.canManageAllCollections || cipher.organizationId == null) {\n            return super.saveCipher(cipher);\n        }\n        if (this.editMode && !this.cloneMode) {\n            const request = new CipherRequest(cipher);\n            return this.apiService.putCipherAdmin(this.cipherId, request);\n        } else {\n            const request = new CipherCreateRequest(cipher);\n            return this.apiService.postCipherAdmin(request);\n        }\n    }\n\n    protected async deleteCipher() {\n        if (!this.organization.canManageAllCollections) {\n            return super.deleteCipher();\n        }\n        return this.cipher.isDeleted ? this.apiService.deleteCipherAdmin(this.cipherId)\n            : this.apiService.putDeleteCipherAdmin(this.cipherId);\n    }\n}\n","import { AttachmentResponse } from '../response/attachmentResponse';\n\nexport class AttachmentData {\n    id: string;\n    url: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(response?: AttachmentResponse) {\n        if (response == null) {\n            return;\n        }\n        this.id = response.id;\n        this.url = response.url;\n        this.fileName = response.fileName;\n        this.key = response.key;\n        this.size = response.size;\n        this.sizeName = response.sizeName;\n    }\n}\n","import { CardApi } from '../api/cardApi';\n\nexport class CardData {\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(data?: CardApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.cardholderName = data.cardholderName;\n        this.brand = data.brand;\n        this.number = data.number;\n        this.expMonth = data.expMonth;\n        this.expYear = data.expYear;\n        this.code = data.code;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldApi } from '../api/fieldApi';\n\nexport class FieldData {\n    type: FieldType;\n    name: string;\n    value: string;\n\n    constructor(response?: FieldApi) {\n        if (response == null) {\n            return;\n        }\n        this.type = response.type;\n        this.name = response.name;\n        this.value = response.value;\n    }\n}\n","import { IdentityApi } from '../api/identityApi';\n\nexport class IdentityData {\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(data?: IdentityApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.title = data.title;\n        this.firstName = data.firstName;\n        this.middleName = data.middleName;\n        this.lastName = data.lastName;\n        this.address1 = data.address1;\n        this.address2 = data.address2;\n        this.address3 = data.address3;\n        this.city = data.city;\n        this.state = data.state;\n        this.postalCode = data.postalCode;\n        this.country = data.country;\n        this.company = data.company;\n        this.email = data.email;\n        this.phone = data.phone;\n        this.ssn = data.ssn;\n        this.username = data.username;\n        this.passportNumber = data.passportNumber;\n        this.licenseNumber = data.licenseNumber;\n    }\n}\n","import { LoginApi } from '../api/loginApi';\n\nimport { LoginUriData } from './loginUriData';\n\nexport class LoginData {\n    uris: LoginUriData[];\n    username: string;\n    password: string;\n    passwordRevisionDate: string;\n    totp: string;\n    autofillOnPageLoad: boolean;\n\n    constructor(data?: LoginApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.username = data.username;\n        this.password = data.password;\n        this.passwordRevisionDate = data.passwordRevisionDate;\n        this.totp = data.totp;\n        this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n        if (data.uris) {\n            this.uris = data.uris.map(u => new LoginUriData(u));\n        }\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriApi } from '../api/loginUriApi';\n\nexport class LoginUriData {\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(data?: LoginUriApi) {\n        if (data == null) {\n            return;\n        }\n        this.uri = data.uri;\n        this.match = data.match;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nexport class SecureNoteData {\n    type: SecureNoteType;\n\n    constructor(data?: SecureNoteApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.type = data.type;\n    }\n}\n","import { AttachmentData } from '../data/attachmentData';\n\nimport { AttachmentView } from '../view/attachmentView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\n\nimport { Utils } from '../../misc/utils';\n\nexport class Attachment extends Domain {\n    id: string;\n    url: string;\n    size: string;\n    sizeName: string;\n    key: EncString;\n    fileName: EncString;\n\n    constructor(obj?: AttachmentData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.size = obj.size;\n        this.buildDomainModel(this, obj, {\n            id: null,\n            url: null,\n            sizeName: null,\n            fileName: null,\n            key: null,\n        }, alreadyEncrypted, ['id', 'url', 'sizeName']);\n    }\n\n    async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n        const view = await this.decryptObj(new AttachmentView(this), {\n            fileName: null,\n        }, orgId, encKey);\n\n        if (this.key != null) {\n            let cryptoService: CryptoService;\n            const containerService = (Utils.global as any).bitwardenContainerService;\n            if (containerService) {\n                cryptoService = containerService.getCryptoService();\n            } else {\n                throw new Error('global bitwardenContainerService not initialized.');\n            }\n\n            try {\n                const orgKey = await cryptoService.getOrgKey(orgId);\n                const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n                view.key = new SymmetricCryptoKey(decValue);\n            } catch (e) {\n                // TODO: error?\n            }\n        }\n\n        return view;\n    }\n\n    toAttachmentData(): AttachmentData {\n        const a = new AttachmentData();\n        a.size = this.size;\n        this.buildDataModel(this, a, {\n            id: null,\n            url: null,\n            sizeName: null,\n            fileName: null,\n            key: null,\n        }, ['id', 'url', 'sizeName']);\n        return a;\n    }\n}\n","import { View } from './view';\n\nimport { Password } from '../domain/password';\n\nexport class PasswordHistoryView implements View {\n    password: string = null;\n    lastUsedDate: Date = null;\n\n    constructor(ph?: Password) {\n        if (!ph) {\n            return;\n        }\n\n        this.lastUsedDate = ph.lastUsedDate;\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { ImportOption, ImportService } from 'jslib-common/abstractions/import.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport Swal, { SweetAlertIcon } from 'sweetalert2';\n\n@Component({\n    selector: 'app-import',\n    templateUrl: 'import.component.html',\n})\nexport class ImportComponent implements OnInit {\n    featuredImportOptions: ImportOption[];\n    importOptions: ImportOption[];\n    format: string = null;\n    fileContents: string;\n    formPromise: Promise<Error>;\n    loading: boolean = false;\n\n    protected organizationId: string = null;\n    protected successNavigate: any[] = ['vault'];\n\n    constructor(protected i18nService: I18nService, protected toasterService: ToasterService,\n        protected importService: ImportService, protected router: Router,\n        protected platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.setImportOptions();\n        this.importOptions.sort((a, b) => {\n            if (a.name == null && b.name != null) {\n                return -1;\n            }\n            if (a.name != null && b.name == null) {\n                return 1;\n            }\n            if (a.name == null && b.name == null) {\n                return 0;\n            }\n\n            return this.i18nService.collator ? this.i18nService.collator.compare(a.name, b.name) :\n                a.name.localeCompare(b.name);\n        });\n    }\n\n    async submit() {\n        this.loading = true;\n\n        const importer = this.importService.getImporter(this.format, this.organizationId);\n        if (importer === null) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFormat'));\n            this.loading = false;\n            return;\n        }\n\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if ((files == null || files.length === 0) && (this.fileContents == null || this.fileContents === '')) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            this.loading = false;\n            return;\n        }\n\n        let fileContents = this.fileContents;\n        if (files != null && files.length > 0) {\n            try {\n                const content = await this.getFileContents(files[0]);\n                if (content != null) {\n                    fileContents = content;\n                }\n            } catch { }\n        }\n\n        if (fileContents == null || fileContents === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            this.loading = false;\n            return;\n        }\n\n        try {\n            this.formPromise = this.importService.import(importer, fileContents, this.organizationId);\n            const error = await this.formPromise;\n            if (error != null) {\n                this.error(error);\n                this.loading = false;\n                return;\n            }\n            this.toasterService.popAsync('success', null, this.i18nService.t('importSuccess'));\n            this.router.navigate(this.successNavigate);\n        } catch { }\n\n        this.loading = false;\n    }\n\n    getFormatInstructionTitle() {\n        if (this.format == null) {\n            return null;\n        }\n\n        const results = this.featuredImportOptions.concat(this.importOptions).filter(o => o.id === this.format);\n        if (results.length > 0) {\n            return this.i18nService.t('instructionsFor', results[0].name);\n        }\n        return null;\n    }\n\n    protected setImportOptions() {\n        this.featuredImportOptions = [{\n            id: null,\n            name: '-- ' + this.i18nService.t('select') + ' --',\n        }, ...this.importService.featuredImportOptions];\n        this.importOptions = this.importService.regularImportOptions;\n    }\n\n    private async error(error: Error) {\n        await Swal.fire({\n            heightAuto: false,\n            buttonsStyling: false,\n            icon: 'error' as SweetAlertIcon,\n            iconHtml: `<i class=\"swal-custom-icon fa fa-bolt text-danger\"></i>`,\n            input: 'textarea',\n            inputValue: error.message,\n            inputAttributes: {\n                'readonly': 'true',\n            },\n            titleText: this.i18nService.t('importError'),\n            text: this.i18nService.t('importErrorDesc'),\n            showConfirmButton: true,\n            confirmButtonText: this.i18nService.t('ok'),\n            onOpen: popupEl => {\n                popupEl.querySelector('.swal2-textarea').scrollTo(0, 0);\n             },\n        });\n    }\n\n    private getFileContents(file: File): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsText(file, 'utf-8');\n            reader.onload = evt => {\n                if (this.format === 'lastpasscsv' && file.type === 'text/html') {\n                    const parser = new DOMParser();\n                    const doc = parser.parseFromString((evt.target as any).result, 'text/html');\n                    const pre = doc.querySelector('pre');\n                    if (pre != null) {\n                        resolve(pre.textContent);\n                        return;\n                    }\n                    reject();\n                    return;\n                }\n\n                resolve((evt.target as any).result);\n            };\n            reader.onerror = () => {\n                reject();\n            };\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'importData' | i18n}}</h1> </div> <form #form (ngSubmit)=\"submit()\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"type\">1. {{'selectFormat' | i18n}}</label> <select id=\"type\" name=\"Format\" [(ngModel)]=\"format\" class=\"form-control\" required> <option *ngFor=\"let o of featuredImportOptions\" [ngValue]=\"o.id\">{{o.name}}</option> <ng-container *ngIf=\"importOptions && importOptions.length\"> <option value=\"-\" disabled=\"disabled\"></option> <option *ngFor=\"let o of importOptions\" [ngValue]=\"o.id\">{{o.name}}</option> </ng-container> </select> </div> </div> </div> <app-callout type=\"info\" title=\"{{getFormatInstructionTitle()}}\" *ngIf=\"format\"> <ng-container *ngIf=\"format === 'bitwardencsv' || format === 'bitwardenjson'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/export-your-data/\"> https://help.bitwarden.com/article/export-your-data/</a> </ng-container> <ng-container *ngIf=\"format === 'lastpasscsv'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-lastpass/\"> https://help.bitwarden.com/article/import-from-lastpass/</a> </ng-container> <ng-container *ngIf=\"format === 'keepassxcsv'\"> Using the KeePassX desktop application, navigate to \"Database\" &rarr; \"Export to CSV file\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'aviracsv'\"> In the Avira web vault, go to \"Settings\" &rarr; \"My Data\" &rarr; \"Export data\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'blurcsv'\"> In the Blur web vault, click your username at the top and go to \"Settings\" &rarr; \"Export Data\", then click \"Export CSV\" for your \"Accounts\". </ng-container> <ng-container *ngIf=\"format === 'safeincloudxml'\"> Using the SaveInCloud desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As XML\" and save the XML file. </ng-container> <ng-container *ngIf=\"format === 'padlockcsv'\"> Using the Padlock desktop application, click the hamburger icon in the top left corner and navigate to \"Settings\" &rarr; \"Export\" button and save the file \"As CSV\". </ng-container> <ng-container *ngIf=\"format === 'keepass2xml'\"> Using the KeePass 2 desktop application, navigate to \"File\" &rarr; \"Export\" and select the \"KeePass XML (2.x)\" option. </ng-container> <ng-container *ngIf=\"format === 'upmcsv'\"> Using the Universal Password Manager desktop application, navigate to \"Database\" &rarr; \"Export\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'saferpasscsv'\"> Using the SaferPass browser extension, click the hamburger icon in the top left corner and navigate to \"Settings\". Click the \"Export accounts\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'meldiumcsv'\"> Using the Meldium web vault, navigate to \"Settings\". Locate the \"Export data\" function and click \"Show me my data\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'keepercsv'\"> Log into the Keeper web vault (keepersecurity.com/vault). Navigate to \"Backup\" (top right) and find the \"Export to .csv File\" option. Click \"Export Now\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'chromecsv' || format === 'operacsv' || format === 'vivaldicsv'\"> <span *ngIf=\"format !== 'chromecsv'\"> The process is exactly the same as importing from Google Chrome. </span> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-chrome/\"> https://help.bitwarden.com/article/import-from-chrome/</a> </ng-container> <ng-container *ngIf=\"format === 'firefoxcsv'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/article/import-from-firefox/\"> https://bitwarden.com/help/article/import-from-firefox/</a>. </ng-container> <ng-container *ngIf=\"format === '1password1pif' || format === '1passwordwincsv' || format === '1passwordmaccsv'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-1password/\"> https://help.bitwarden.com/article/import-from-1password/</a>. </ng-container> <ng-container *ngIf=\"format === 'passworddragonxml'\"> Using the Password Dragon desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"To XML\". In the dialog that pops up select \"All Rows\" and check all fields. Click the \"Export\" button and save the XML file. </ng-container> <ng-container *ngIf=\"format === 'enpasscsv'\"> Using the Enpass desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As CSV\". Select \"OK\" to the warning alert and save the CSV file. Note that the importer only supports files exported while Enpass is set to the English language, so adjust your settings accordingly. </ng-container> <ng-container *ngIf=\"format === 'enpassjson'\"> Using the Enpass 6 desktop application, click the menu button and navigate to \"File\" &rarr; \"Export\". Select the \".json\" file format option and save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'pwsafexml'\"> Using the Password Safe desktop application, navigate to \"File\" &rarr; \"Export To\" &rarr; \"XML format...\" and save the XML file. </ng-container> <ng-container *ngIf=\"format === 'dashlanejson'\"> Using the Dashlane desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"Unsecured archive (readable) in JSON format\" and save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'msecurecsv'\"> Using the mSecure desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"CSV File...\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'stickypasswordxml'\"> Using the Sticky Password desktop application, navigate to \"Menu\" (top right) &rarr; \"Export\" &rarr; \"Export all\". Select the unencrypted format XML option and save the XML file. </ng-container> <ng-container *ngIf=\"format === 'truekeycsv'\"> Using the True Key desktop application, click the gear icon (top right) and then navigate to \"App Settings\". Click the \"Export\" button, enter your password and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'clipperzhtml'\"> Log into the Clipperz web application (clipperz.is/app). Click the hamburger menu icon in the top right to expand the navigation bar. Navigate to \"Data\" &rarr; \"Export\". Click the \"download HTML+JSON\" button to save the HTML file. </ng-container> <ng-container *ngIf=\"format === 'roboformcsv'\"> Using the RoboForm Editor desktop application, navigate to \"RoboForm\" (top left) &rarr; \"Options\" &rarr; \"Account &amp; Data\" and click the \"Export\" button. Select all of your data, change the \"Format\" to \"CSV file\" and then click the \"Export\" button to save the CSV file. Note: RoboForm only allows you to export Logins. Other items will not be exported. </ng-container> <ng-container *ngIf=\"format === 'passboltcsv'\"> Log into the Passbolt web vault and navigate to the \"Passwords\" listing. Select all of the passwords you would like to export and click the \"Export\" button at the top of the listing. Choose the \"csv (lastpass)\" export format and click the \"Export\" button. </ng-container> <ng-container *ngIf=\"format === 'ascendocsv'\"> Using the Ascendo DataVault desktop application, navigate to \"Tools\" &rarr; \"Export\". In the dialog that pops up, select the \"All Items (DVX, CSV)\" option. Click the \"Ok\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passwordbossjson'\"> Using the Password Boss desktop application, navigate to \"File\" &rarr; \"Export data\" &rarr; \"Password Boss JSON - not encrypted\" and save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'zohovaultcsv'\"> Log into the Zoho web vault (vault.zoho.com). Navigate to \"Tools\" &rarr; \"Export Secrets\". Select \"All Secrets\" and click the \"Zoho Vault Format CSV\" button. Highlight and copy the data from the textarea. Open a text editor like Notepad and paste the data. Save the data from the text editor as <code>zoho_export.csv</code>. </ng-container> <ng-container *ngIf=\"format === 'splashidcsv'\"> Using the SplashID Safe desktop application, click on the SplashID blue lock logo in the top right corner. Navigate to \"Export\" &rarr; \"Export as CSV\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passkeepcsv'\"> Using the PassKeep mobile app, navigate to \"Backup/Restore\". Locate the \"CSV Backup/Restore\" section and click \"Backup to CSV\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'gnomejson'\"> Make sure you have python-keyring and python-gnomekeyring installed. Save the <a target=\"_blank\" rel=\"noopener\" href=\"https://bit.ly/2GpOMTg\">GNOME Keyring Import/Export</a> python script to your desktop as <code>pw_helper.py</code>. Open terminal and run <code>chmod +rx Desktop/pw_helper.py</code> and then <code>python Desktop/pw_helper.py export Desktop/my_passwords.json</code>. Then upload the resulting <code>my_passwords.json</code> file here to Bitwarden. </ng-container> <ng-container *ngIf=\"format === 'passwordagentcsv'\"> Using the Password Agent desktop application navigate to \"File\" &rarr; \"Export\", select the \"Fields to export\" button and check all of the fields, change the \"Output format\" to \"CSV\", and then click the \"Start\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passpackcsv'\"> Log into the Passpack website vault and navigate to \"Settings\" &rarr; \"Export\", then click the \"Download\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passmanjson'\"> Open your Passman vault and click on \"Settings\" in the bottom left corner. In the \"Settings\" window switch to the \"Export credentials\" tab and choose \"JSON\" as the export type. Enter your vault's passphrase and click the \"Export\" button to save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'avastcsv'\"> Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export data\". Select the \"Export\" button for the \"Export to CSV file\" option to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'avastjson'\"> Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export data\". Select the \"Export\" button for the \"Export to JSON file\" option to save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'fsecurefsk'\"> Open the F-Secure KEY desktop application and navigate to \"Settings\" &rarr; \"Export Passwords\". Select the \"Export\" button, enter your master password, and save the FSK file. </ng-container> <ng-container *ngIf=\"format === 'kasperskytxt'\"> Open the Kaspersky Password Manager desktop application and navigate to \"Settings\" &rarr; \"Import/Export\". Locate the \"Export to text file\" section and select the \"Export\" button to save the TXT file. </ng-container> <ng-container *ngIf=\"format === 'remembearcsv'\"> Open the RememBear desktop application and navigate to \"Settings\" &rarr; \"Account\" &rarr; \"Export\". Enter your master password and select the \"Export Anyway\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passwordwallettxt'\"> Open the PasswordWallet desktop application and navigate to \"File\" &rarr; \"Export\" &rarr; \"Visible entries to text file\". Enter your password and select the \"Ok\" button to save the TXT file. </ng-container> <ng-container *ngIf=\"format === 'mykicsv'\"> Open the Myki desktop browser extension and navigate to \"Advanced\" &rarr; \"Export Accounts\" and then scan the QR code with your mobile device. Various CSV files will then be saved to your computer's downloads folder. </ng-container> <ng-container *ngIf=\"format === 'securesafecsv'\"> Export your SecureSafe password safe to a CSV file with a comma delimiter. </ng-container> <ng-container *ngIf=\"format === 'logmeoncecsv'\"> Open the LogMeOnce browser extension, then navigate to \"Open Menu\" &rarr; \"Export To\" and select \"CSV File\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'blackberrycsv'\"> Open the BlackBerry Password Keeper application, then navigate to \"Settings\" &rarr; \"Import/Export\". Select \"Export Passwords\" and follow the instructions on screen to save the unencrypted CSV file. </ng-container> <ng-container *ngIf=\"format === 'buttercupcsv'\"> Open the Buttercup desktop application and unlock your vault. Right click on your vault's icon and select \"Export\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'codebookcsv'\"> Open the Codebook desktop application and log in. Navigate to \"File\" &rarr; \"Export all\", then click \"Yes\" on the dialog and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'encryptrcsv'\"> Open the newest version of the Encryptr desktop application and allow all of your data to sync. Once syncing of your data is complete, the download icon in the top right corner will turn pink. Click the download icon and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'yoticsv'\"> From the Yoti browser extension, click on \"Settings\", then \"Export Saved Logins\" and save the CSV file. </ng-container> </app-callout> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"file\">2. {{'selectImportFile' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\"> </div> </div> </div> <div class=\"form-group\"> <label for=\"fileContents\">{{'orCopyPasteFileContents' | i18n}}</label> <textarea id=\"fileContents\" class=\"form-control\" name=\"FileContents\" [(ngModel)]=\"fileContents\"></textarea> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'importData' | i18n}}</span> </button> </form> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-inactive-two-factor-report',\n    templateUrl: 'inactive-two-factor-report.component.html',\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n    services = new Map<string, string>();\n    cipherDocs = new Map<string, string>();\n\n    constructor(protected cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        try {\n            await this.load2fa();\n        } catch { }\n        if (this.services.size > 0) {\n            const allCiphers = await this.getAllCiphers();\n            const inactive2faCiphers: CipherView[] = [];\n            const promises: Promise<void>[] = [];\n            const docs = new Map<string, string>();\n            allCiphers.forEach(c => {\n                if (c.type !== CipherType.Login || (c.login.totp != null && c.login.totp !== '') || !c.login.hasUris ||\n                    c.isDeleted) {\n                    return;\n                }\n                for (let i = 0; i < c.login.uris.length; i++) {\n                    const u = c.login.uris[i];\n                    if (u.uri != null && u.uri !== '') {\n                        const hostname = Utils.getHostname(u.uri);\n                        if (hostname != null && this.services.has(hostname)) {\n                            if (this.services.get(hostname) != null) {\n                                docs.set(c.id, this.services.get(hostname));\n                            }\n                            inactive2faCiphers.push(c);\n                            break;\n                        }\n                    }\n                }\n            });\n            await Promise.all(promises);\n            this.ciphers = inactive2faCiphers;\n            this.cipherDocs = docs;\n        }\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    private async load2fa() {\n        if (this.services.size > 0) {\n            return;\n        }\n        const response = await fetch(new Request('https://2fa.directory/api/v2/totp.json'));\n        if (response.status !== 200) {\n            throw new Error();\n        }\n        const responseJson = await response.json();\n        for (const categoryName in responseJson) {\n            if (responseJson.hasOwnProperty(categoryName)) {\n                const category = responseJson[categoryName];\n                for (const serviceName in category) {\n                    if (category.hasOwnProperty(serviceName)) {\n                        const service = category[serviceName];\n                        if (service.url != null) {\n                            const hostname = Utils.getHostname(service.url);\n                            if (hostname != null) {\n                                this.services.set(hostname, service.doc);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","<div class=\"page-header\"> <h1> {{'inactive2faReport' | i18n}} <small *ngIf=\"hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <p>{{'inactive2faReportDesc' | i18n}}</p> <div *ngIf=\"!hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noInactive2fa' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'inactive2faFound' | i18n}}\"> {{'inactive2faFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"text-right\"> <a class=\"badge badge-primary\" href=\"{{cipherDocs.get(c.id)}}\" target=\"_blank\" rel=\"noopener\" *ngIf=\"cipherDocs.has(c.id)\"> {{'instructions' | i18n}}</a> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-reused-passwords-report',\n    templateUrl: 'reused-passwords-report.component.html',\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n    passwordUseMap: Map<string, number>;\n\n    constructor(protected cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const ciphersWithPasswords: CipherView[] = [];\n        this.passwordUseMap = new Map<string, number>();\n        allCiphers.forEach(c => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '' || c.isDeleted) {\n                return;\n            }\n            ciphersWithPasswords.push(c);\n            if (this.passwordUseMap.has(c.login.password)) {\n                this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n            } else {\n                this.passwordUseMap.set(c.login.password, 1);\n            }\n        });\n        const reusedPasswordCiphers = ciphersWithPasswords.filter(c =>\n            this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1);\n        this.ciphers = reusedPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    protected canManageCipher(c: CipherView): boolean {\n        // this will only ever be false from an organization view\n        return true;\n    }\n}\n","<div class=\"page-header\"> <h1> {{'reusedPasswordsReport' | i18n}} <small *ngIf=\"hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <p>{{'reusedPasswordsReportDesc' | i18n}}</p> <div *ngIf=\"!hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noReusedPasswords' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'reusedPasswordsFound' | i18n}}\"> {{'reusedPasswordsFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <ng-container *ngIf=\"!organization || canManageCipher(c) ; else cantManage\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> </ng-container> <ng-template #cantManage> <span>{{c.name}}</span> </ng-template> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"text-right\"> <span class=\"badge badge-warning\"> {{'reusedXTimes' | i18n : passwordUseMap.get(c.login.password)}} </span> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-unsecured-websites-report',\n    templateUrl: 'unsecured-websites-report.component.html',\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n    constructor(protected cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const unsecuredCiphers = allCiphers.filter(c => {\n            if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n                return false;\n            }\n            return c.login.uris.some(u => u.uri != null && u.uri.indexOf('http://') === 0);\n        });\n        this.ciphers = unsecuredCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n}\n","<div class=\"page-header\"> <h1> {{'unsecuredWebsitesReport' | i18n}} <small *ngIf=\"hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <p>{{'unsecuredWebsitesReportDesc' | i18n}}</p> <div *ngIf=\"!hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noUnsecuredWebsites' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'unsecuredWebsitesFound' | i18n}}\"> {{'unsecuredWebsitesFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-weak-passwords-report',\n    templateUrl: 'weak-passwords-report.component.html',\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n\n    passwordStrengthMap = new Map<string, [string, string]>();\n\n    private passwordStrengthCache = new Map<string, number>();\n\n    constructor(protected cipherService: CipherService, protected passwordGenerationService: PasswordGenerationService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const weakPasswordCiphers: CipherView[] = [];\n        const isUserNameNotEmpty = (c: CipherView): boolean => {\n            return c.login.username != null && c.login.username.trim() !== '';\n        };\n        const getCacheKey = (c: CipherView): string => {\n            return c.login.password + '_____' + (isUserNameNotEmpty(c) ? c.login.username : '');\n        };\n\n        allCiphers.forEach(c => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '' || c.isDeleted) {\n                return;\n            }\n            const hasUserName = isUserNameNotEmpty(c);\n            const cacheKey = getCacheKey(c);\n            if (!this.passwordStrengthCache.has(cacheKey)) {\n                let userInput: string[] = [];\n                if (hasUserName) {\n                    const atPosition = c.login.username.indexOf('@');\n                    if (atPosition > -1) {\n                        userInput = userInput.concat(\n                            c.login.username.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/))\n                            .filter(i => i.length >= 3);\n                    } else {\n                        userInput = c.login.username.trim().toLowerCase().split(/[^A-Za-z0-9]/)\n                            .filter(i => i.length >= 3);\n                    }\n                }\n                const result = this.passwordGenerationService.passwordStrength(c.login.password,\n                    userInput.length > 0 ? userInput : null);\n                this.passwordStrengthCache.set(cacheKey, result.score);\n            }\n            const score = this.passwordStrengthCache.get(cacheKey);\n            if (score != null && score <= 2) {\n                this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n                weakPasswordCiphers.push(c);\n            }\n        });\n        weakPasswordCiphers.sort((a, b) => {\n            return this.passwordStrengthCache.get(getCacheKey(a)) -\n                this.passwordStrengthCache.get(getCacheKey(b));\n        });\n        this.ciphers = weakPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    protected canManageCipher(c: CipherView): boolean {\n        // this will only ever be false from the org view;\n        return true;\n    }\n\n    private scoreKey(score: number): [string, string] {\n        switch (score) {\n            case 4:\n                return ['strong', 'success'];\n            case 3:\n                return ['good', 'primary'];\n            case 2:\n                return ['weak', 'warning'];\n            default:\n                return ['veryWeak', 'danger'];\n        }\n    }\n}\n","<div class=\"page-header\"> <h1> {{'weakPasswordsReport' | i18n}} <small *ngIf=\"hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <p>{{'weakPasswordsReportDesc' | i18n}}</p> <div *ngIf=\"!hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noWeakPasswords' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'weakPasswordsFound' | i18n}}\"> {{'weakPasswordsFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <ng-container *ngIf=\"!organization || canManageCipher(c) ; else cantManage\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> </ng-container> <ng-template #cantManage> <span>{{c.name}}</span> </ng-template> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"text-right\"> <span class=\"badge badge-{{passwordStrengthMap.get(c.id)[1]}}\"> {{passwordStrengthMap.get(c.id)[0] | i18n}} </span> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { AttachmentView } from 'jslib-common/models/view/attachmentView';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from 'jslib-angular/components/attachments.component';\n\n@Component({\n    selector: 'app-vault-attachments',\n    templateUrl: 'attachments.component.html',\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n    viewOnly = false;\n\n    constructor(cipherService: CipherService, i18nService: I18nService,\n        cryptoService: CryptoService, userService: UserService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService) {\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService, apiService, window);\n    }\n\n    protected async reupload(attachment: AttachmentView) {\n        if (this.showFixOldAttachments(attachment)) {\n            await this.reuploadCipherAttachment(attachment, false);\n        }\n    }\n\n    protected showFixOldAttachments(attachment: AttachmentView) {\n        return attachment.key == null && this.cipher.organizationId == null;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"attachmentsTitle\"> {{'attachments' | i18n}} <small *ngIf=\"cipher\">{{cipher.name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\"> <tbody> <tr *ngFor=\"let a of cipher.attachments\"> <td class=\"table-list-icon\"> <i class=\"fa fa-fw fa-lg fa-file-o\" *ngIf=\"!a.downloading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-lg fa-fw fa-spin\" *ngIf=\"a.downloading\" aria-hidden=\"true\"></i> </td> <td class=\"wrap\"> <div class=\"d-flex\"> <a href=\"#\" appStopClick (click)=\"download(a)\">{{a.fileName}}</a> <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\"> <a href=\"https://help.bitwarden.com/article/attachments/#fixing-old-attachments\" target=\"_blank\" rel=\"noopener\"> <i class=\"fa fa-exclamation-triangle text-warning\" title=\"{{'attachmentFixDesc' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachmentFixDesc' | i18n}}</span></a> <button type=\"button\" class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\" (click)=\"reupload(a)\" #reuploadBtn [appApiAction]=\"reuploadPromises[a.id]\" [disabled]=\"reuploadBtn.loading\">{{'fix' | i18n}}</button> </div> </div> <small>{{a.sizeName}}</small> </td> <td class=\"table-list-options\" *ngIf=\"!viewOnly\"> <button class=\"btn btn-outline-danger\" type=\"button\" appStopClick appA11yTitle=\"{{'delete' | i18n}}\" (click)=\"delete(a)\" #deleteBtn [appApiAction]=\"deletePromises[a.id]\" [disabled]=\"deleteBtn.loading\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </td> </tr> </tbody> </table> <div *ngIf=\"!viewOnly\"> <h3>{{'newAttachment' | i18n}}</h3> <label for=\"file\" class=\"sr-only\">{{'file' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required> <small class=\"form-text text-muted\">{{'maxFileSize' | i18n}}</small> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\" *ngIf=\"!viewOnly\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import { BaseResponse } from './baseResponse';\n\nexport class AttachmentResponse extends BaseResponse {\n    id: string;\n    url: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.url = this.getResponseProperty('Url');\n        this.fileName = this.getResponseProperty('FileName');\n        this.key = this.getResponseProperty('Key');\n        this.size = this.getResponseProperty('Size');\n        this.sizeName = this.getResponseProperty('SizeName');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class CollectionResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    name: string;\n    externalId: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.name = this.getResponseProperty('Name');\n        this.externalId = this.getResponseProperty('ExternalId');\n    }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n    readOnly: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.readOnly = this.getResponseProperty('ReadOnly') || false;\n    }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n    groups: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const groups = this.getResponseProperty('Groups');\n        if (groups != null) {\n            this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { GlobalDomainResponse } from './globalDomainResponse';\n\nexport class DomainsResponse extends BaseResponse {\n    equivalentDomains: string[][];\n    globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.equivalentDomains = this.getResponseProperty('EquivalentDomains');\n        const globalEquivalentDomains = this.getResponseProperty('GlobalEquivalentDomains');\n        if (globalEquivalentDomains != null) {\n            this.globalEquivalentDomains = globalEquivalentDomains.map((d: any) => new GlobalDomainResponse(d));\n        } else {\n            this.globalEquivalentDomains = [];\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class FolderResponse extends BaseResponse {\n    id: string;\n    name: string;\n    revisionDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { SendType } from '../../enums/sendType';\n\nimport { SendFileApi } from '../api/sendFileApi';\nimport { SendTextApi } from '../api/sendTextApi';\n\nexport class SendResponse extends BaseResponse {\n    id: string;\n    accessId: string;\n    type: SendType;\n    name: string;\n    notes: string;\n    file: SendFileApi;\n    text: SendTextApi;\n    key: string;\n    maxAccessCount?: number;\n    accessCount: number;\n    revisionDate: string;\n    expirationDate: string;\n    deletionDate: string;\n    password: string;\n    disable: boolean;\n    hideEmail: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.accessId = this.getResponseProperty('AccessId');\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n        this.notes = this.getResponseProperty('Notes');\n        this.key = this.getResponseProperty('Key');\n        this.maxAccessCount = this.getResponseProperty('MaxAccessCount');\n        this.accessCount = this.getResponseProperty('AccessCount');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n        this.expirationDate = this.getResponseProperty('ExpirationDate');\n        this.deletionDate = this.getResponseProperty('DeletionDate');\n        this.password = this.getResponseProperty('Password');\n        this.disable = this.getResponseProperty('Disabled') || false;\n        this.hideEmail = this.getResponseProperty('HideEmail') || false;\n\n        const text = this.getResponseProperty('Text');\n        if (text != null) {\n            this.text = new SendTextApi(text);\n        }\n\n        const file = this.getResponseProperty('File');\n        if (file != null) {\n            this.file = new SendFileApi(file);\n        }\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class SendFileApi extends BaseResponse {\n    id: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.id = this.getResponseProperty('Id');\n        this.fileName = this.getResponseProperty('FileName');\n        this.key = this.getResponseProperty('Key');\n        this.size = this.getResponseProperty('Size');\n        this.sizeName = this.getResponseProperty('SizeName');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class SendTextApi extends BaseResponse {\n    text: string;\n    hidden: boolean;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.text = this.getResponseProperty('Text');\n        this.hidden = this.getResponseProperty('Hidden') || false;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CiphersComponent as BaseCiphersComponent } from '../../vault/ciphers.component';\n\n@Component({\n    selector: 'app-org-vault-ciphers',\n    templateUrl: '../../vault/ciphers.component.html',\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n    @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n    organization: Organization;\n    accessEvents = false;\n\n    protected allCiphers: CipherView[] = [];\n\n    constructor(searchService: SearchService, toasterService: ToasterService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, cipherService: CipherService,\n        private apiService: ApiService, eventService: EventService, totpService: TotpService,\n        userService: UserService, passwordRepromptService: PasswordRepromptService) {\n        super(searchService, toasterService, i18nService, platformUtilsService, cipherService,\n            eventService, totpService, userService, passwordRepromptService);\n    }\n\n    async load(filter: (cipher: CipherView) => boolean = null) {\n        if (this.organization.canManageAllCollections) {\n            this.accessEvents = this.organization.useEvents;\n            this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n        } else {\n            this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(c => c.organizationId === this.organization.id);\n        }\n        await this.searchService.indexCiphers(this.organization.id, this.allCiphers);\n        await this.applyFilter(filter);\n        this.loaded = true;\n    }\n\n    async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n        if (this.organization.canManageAllCollections) {\n            await super.applyFilter(filter);\n        } else {\n            const f = (c: CipherView) => c.organizationId === this.organization.id && (filter == null || filter(c));\n            await super.applyFilter(f);\n        }\n    }\n\n    async search(timeout: number = null) {\n        await super.search(timeout, this.allCiphers);\n    }\n    events(c: CipherView) {\n        this.onEventsClicked.emit(c);\n    }\n\n    protected deleteCipher(id: string) {\n        if (!this.organization.canManageAllCollections) {\n            return super.deleteCipher(id, this.deleted);\n        }\n        return this.deleted ? this.apiService.deleteCipherAdmin(id) : this.apiService.putDeleteCipherAdmin(id);\n    }\n\n    protected showFixOldAttachments(c: CipherView) {\n        return this.organization.canManageAllCollections && c.hasOldAttachments;\n    }\n}\n","import {\n    Component,\n    OnDestroy,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { CollectionsComponent as BaseCollectionsComponent } from 'jslib-angular/components/collections.component';\n\n@Component({\n    selector: 'app-vault-collections',\n    templateUrl: 'collections.component.html',\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, cipherService: CipherService) {\n        super(collectionService, platformUtilsService, i18nService, cipherService);\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach(c => this.check(c, select));\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"collectionsTitle\"> {{'collections' | i18n}} <small *ngIf=\"cipher\">{{cipher.name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'collectionsDesc' | i18n}}</p> <div class=\"d-flex\"> <h3>{{'collections' | i18n}}</h3> <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </div> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <tbody> <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\"> <td class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td> {{c.name}} </td> </tr> </tbody> </table> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CollectionData } from 'jslib-common/models/data/collectionData';\nimport { Collection } from 'jslib-common/models/domain/collection';\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CollectionDetailsResponse } from 'jslib-common/models/response/collectionResponse';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { GroupingsComponent as BaseGroupingsComponent } from '../../vault/groupings.component';\n\n@Component({\n    selector: 'app-org-vault-groupings',\n    templateUrl: '../../vault/groupings.component.html',\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n    organization: Organization;\n\n    constructor(collectionService: CollectionService, folderService: FolderService,\n        storageService: StorageService, userService: UserService,\n        private apiService: ApiService, private i18nService: I18nService) {\n        super(collectionService, folderService, storageService, userService);\n    }\n\n    async loadCollections() {\n        if (!this.organization.canManageAllCollections) {\n            await super.loadCollections(this.organization.id);\n            return;\n        }\n\n        const collections = await this.apiService.getCollections(this.organization.id);\n        if (collections != null && collections.data != null && collections.data.length) {\n            const collectionDomains = collections.data.map(r =>\n                new Collection(new CollectionData(r as CollectionDetailsResponse)));\n            this.collections = await this.collectionService.decryptMany(collectionDomains);\n        } else {\n            this.collections = [];\n        }\n\n        const unassignedCollection = new CollectionView();\n        unassignedCollection.name = this.i18nService.t('unassigned');\n        unassignedCollection.id = 'unassigned';\n        unassignedCollection.organizationId = this.organization.id;\n        unassignedCollection.readOnly = true;\n        this.collections.push(unassignedCollection);\n        this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n    }\n\n    collapse(grouping: CollectionView) {\n        super.collapse(grouping, 'org_');\n    }\n\n    isCollapsed(grouping: CollectionView) {\n        return super.isCollapsed(grouping, 'org_');\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    Input,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { CipherRepromptType } from 'jslib-common/enums/cipherRepromptType';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { BulkDeleteComponent } from './bulk-delete.component';\nimport { BulkMoveComponent } from './bulk-move.component';\nimport { BulkRestoreComponent } from './bulk-restore.component';\nimport { BulkShareComponent } from './bulk-share.component';\nimport { CiphersComponent } from './ciphers.component';\n\n@Component({\n    selector: 'app-vault-bulk-actions',\n    templateUrl: 'bulk-actions.component.html',\n})\nexport class BulkActionsComponent {\n    @Input() ciphersComponent: CiphersComponent;\n    @Input() modal: ModalComponent;\n    @Input() deleted: boolean;\n    @Input() organization: Organization;\n\n    @ViewChild('bulkDeleteTemplate', { read: ViewContainerRef, static: true }) bulkDeleteModalRef: ViewContainerRef;\n    @ViewChild('bulkRestoreTemplate', { read: ViewContainerRef, static: true }) bulkRestoreModalRef: ViewContainerRef;\n    @ViewChild('bulkMoveTemplate', { read: ViewContainerRef, static: true }) bulkMoveModalRef: ViewContainerRef;\n    @ViewChild('bulkShareTemplate', { read: ViewContainerRef, static: true }) bulkShareModalRef: ViewContainerRef;\n\n    constructor(private toasterService: ToasterService,\n        private i18nService: I18nService,\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private passwordRepromptService: PasswordRepromptService) { }\n\n    async bulkDelete() {\n        if (!await this.promptPassword()) {\n            return;\n        }\n\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkDeleteModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkDeleteComponent>(BulkDeleteComponent, this.bulkDeleteModalRef);\n\n        childComponent.permanent = this.deleted;\n        childComponent.cipherIds = selectedIds;\n        childComponent.organization = this.organization;\n        childComponent.onDeleted.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async bulkRestore() {\n        if (!await this.promptPassword()) {\n            return;\n        }\n\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkRestoreModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkRestoreComponent>(BulkRestoreComponent, this.bulkRestoreModalRef);\n\n        childComponent.cipherIds = selectedIds;\n        childComponent.onRestored.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async bulkShare() {\n        if (!await this.promptPassword()) {\n            return;\n        }\n\n        const selectedCiphers = this.ciphersComponent.getSelected();\n        if (selectedCiphers.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkShareModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkShareComponent>(BulkShareComponent, this.bulkShareModalRef);\n\n        childComponent.ciphers = selectedCiphers;\n        childComponent.onShared.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    async bulkMove() {\n        if (!await this.promptPassword()) {\n            return;\n        }\n\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkMoveModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkMoveComponent>(BulkMoveComponent, this.bulkMoveModalRef);\n\n        childComponent.cipherIds = selectedIds;\n        childComponent.onMoved.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    selectAll(select: boolean) {\n        this.ciphersComponent.selectAll(select);\n    }\n\n    private async promptPassword() {\n        const selectedCiphers = this.ciphersComponent.getSelected();\n        const notProtected = !selectedCiphers.find(cipher => cipher.reprompt !== CipherRepromptType.None);\n\n        return notProtected || await this.passwordRepromptService.showPasswordPrompt();\n    }\n}\n","<div class=\"dropdown mr-2\" appListDropdown> <button class=\"btn btn-sm btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"bulkActionsButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\"> <button class=\"dropdown-item\" appStopClick (click)=\"bulkMove()\" *ngIf=\"!deleted && !organization\"> <i class=\"fa fa-fw fa-share\" aria-hidden=\"true\"></i> {{'moveSelected' | i18n}} </button> <button class=\"dropdown-item\" appStopClick (click)=\"bulkShare()\" *ngIf=\"!deleted && !organization\"> <i class=\"fa fa-fw fa-arrow-circle-o-right\" aria-hidden=\"true\"></i> {{'moveSelectedToOrg' | i18n}} </button> <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\"> <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i> {{'restoreSelected' | i18n}} </button> <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{(deleted ? 'permanentlyDeleteSelected' : 'deleteSelected') | i18n}} </button> <div class=\"dropdown-divider\"></div> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\"> <i class=\"fa fa-fw fa-check-square-o\" aria-hidden=\"true\"></i> {{'selectAll' | i18n}} </button> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\"> <i class=\"fa fa-fw fa-minus-square-o\" aria-hidden=\"true\"></i> {{'unselectAll' | i18n}} </button> </div> </div> <ng-template #bulkDeleteTemplate></ng-template> <ng-template #bulkRestoreTemplate></ng-template> <ng-template #bulkMoveTemplate></ng-template> <ng-template #bulkShareTemplate></ng-template> ","import Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { SendFileData } from '../data/sendFileData';\n\nimport { SendFileView } from '../view/sendFileView';\n\nexport class SendFile extends Domain {\n    id: string;\n    size: string;\n    sizeName: string;\n    fileName: EncString;\n\n    constructor(obj?: SendFileData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.size = obj.size;\n        this.buildDomainModel(this, obj, {\n            id: null,\n            sizeName: null,\n            fileName: null,\n        }, alreadyEncrypted, ['id', 'sizeName']);\n    }\n\n    async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n        const view = await this.decryptObj(new SendFileView(this), {\n            fileName: null,\n        }, null, key);\n        return view;\n    }\n}\n","import Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { SendTextData } from '../data/sendTextData';\n\nimport { SendTextView } from '../view/sendTextView';\n\nexport class SendText extends Domain {\n    text: EncString;\n    hidden: boolean;\n\n    constructor(obj?: SendTextData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.hidden = obj.hidden;\n        this.buildDomainModel(this, obj, {\n            text: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n        return this.decryptObj(new SendTextView(this), {\n            text: null,\n        }, null, key);\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherWithIdRequest extends CipherRequest {\n    id: string;\n\n    constructor(cipher: Cipher) {\n        super(cipher);\n        this.id = cipher.id;\n    }\n}\n","import { Folder } from '../domain/folder';\n\nexport class FolderRequest {\n    name: string;\n\n    constructor(folder: Folder) {\n        this.name = folder.name ? folder.name.encryptedString : null;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Directive({\n    selector: '[appSelectCopy]',\n})\nexport class SelectCopyDirective {\n    constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) { }\n\n    @HostListener('copy') onCopy() {\n        if (window == null) {\n            return;\n        }\n        let copyText = '';\n        const selection = window.getSelection();\n        for (let i = 0; i < selection.rangeCount; i++) {\n            const range = selection.getRangeAt(i);\n            const text = range.toString();\n\n            // The selection should only contain one line of text. In some cases however, the\n            // selection contains newlines and space characters from the indentation of following\n            // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n            // that aren't part of the password, the selection has to be trimmed.\n            let stringEndPos = text.length;\n            const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n            if (newLinePos > -1) {\n                const otherPart = text.substr(newLinePos).trim();\n                if (otherPart === '') {\n                    stringEndPos = newLinePos;\n                }\n            }\n            copyText += text.substring(0, stringEndPos);\n        }\n        this.platformUtilsService.copyToClipboard(copyText, { window: window });\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\nimport { Utils } from 'jslib-common/misc/utils';\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: 'colorPassword' })\nexport class ColorPasswordPipe implements PipeTransform {\n    transform(password: string) {\n        // Convert to an array to handle cases that stings have special characters, ie: emoji.\n        const passwordArray = Array.from(password);\n        let colorizedPassword = '';\n        for (let i = 0; i < passwordArray.length; i++) {\n            let character = passwordArray[i];\n            let isSpecial = false;\n            // Sanitize HTML first.\n            switch (character) {\n                case '&':\n                    character = '&amp;';\n                    isSpecial = true;\n                    break;\n                case '<':\n                    character = '&lt;';\n                    isSpecial = true;\n                    break;\n                case '>':\n                    character = '&gt;';\n                    isSpecial = true;\n                    break;\n                case ' ':\n                    character = '&nbsp;';\n                    isSpecial = true;\n                    break;\n                default:\n                    break;\n            }\n            let type = 'letter';\n            if (character.match(Utils.regexpEmojiPresentation)) {\n                type = 'emoji';\n            } else if (isSpecial || character.match(/[^\\w ]/)) {\n                type = 'special';\n            } else if (character.match(/\\d/)) {\n                type = 'number';\n            }\n            colorizedPassword += '<span class=\"password-' + type + '\">' + character + '</span>';\n        }\n        return colorizedPassword;\n    }\n}\n","import { FolderResponse } from '../response/folderResponse';\n\nexport class FolderData {\n    id: string;\n    userId: string;\n    name: string;\n    revisionDate: string;\n\n    constructor(response: FolderResponse, userId: string) {\n        this.userId = userId;\n        this.name = response.name;\n        this.id = response.id;\n        this.revisionDate = response.revisionDate;\n    }\n}\n","import { FolderData } from '../data/folderData';\n\nimport { FolderView } from '../view/folderView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nexport class Folder extends Domain {\n    id: string;\n    name: EncString;\n    revisionDate: Date;\n\n    constructor(obj?: FolderData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            name: null,\n        }, alreadyEncrypted, ['id']);\n\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    }\n\n    decrypt(): Promise<FolderView> {\n        return this.decryptObj(new FolderView(this), {\n            name: null,\n        }, null);\n    }\n}\n","import { EnvironmentService } from './environment.service';\n\nexport abstract class NotificationsService {\n    init: (environmentService: EnvironmentService) => Promise<void>;\n    updateConnection: (sync?: boolean) => Promise<void>;\n    reconnectFromActivity: () => Promise<void>;\n    disconnectFromInactivity: () => Promise<void>;\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 418;","import {\n    Component,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-frontend-layout',\n    templateUrl: 'frontend-layout.component.html',\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n    version: string;\n    year: string = '2015';\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.year = new Date().getFullYear().toString();\n        this.version = await this.platformUtilsService.getApplicationVersion();\n        document.body.classList.add('layout_frontend');\n    }\n\n    ngOnDestroy() {\n        document.body.classList.remove('layout_frontend');\n    }\n}\n","<router-outlet></router-outlet> <div class=\"container my-5 text-muted text-center\"> &copy; {{year}}, Bitwarden Inc. <br> {{'versionNumber' | i18n : version}} </div> ","import {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nconst BroadcasterSubscriptionId = 'OrganizationLayoutComponent';\n\n@Component({\n    selector: 'app-organization-layout',\n    templateUrl: 'organization-layout.component.html',\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n    organization: Organization;\n    businessTokenPromise: Promise<any>;\n    private organizationId: string;\n    private businessUrl: string;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private broadcasterService: BroadcasterService, private ngZone: NgZone,\n        private apiService: ApiService, private platformUtilsService: PlatformUtilsService,\n        private environmentService: EnvironmentService) { }\n\n    ngOnInit() {\n        this.businessUrl = 'https://portal.bitwarden.com';\n        if (this.environmentService.enterpriseUrl != null) {\n            this.businessUrl = this.environmentService.enterpriseUrl;\n        } else if (this.environmentService.baseUrl != null) {\n            this.businessUrl = this.environmentService.baseUrl + '/portal';\n        }\n\n        document.body.classList.remove('layout_frontend');\n        this.route.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n        });\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'updatedOrgLicense':\n                        await this.load();\n                        break;\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async load() {\n        this.organization = await this.userService.getOrganization(this.organizationId);\n    }\n\n    async goToBusinessPortal() {\n        if (this.businessTokenPromise != null) {\n            return;\n        }\n        try {\n            this.businessTokenPromise = this.apiService.getEnterprisePortalSignInToken();\n            const token = await this.businessTokenPromise;\n            if (token != null) {\n                const userId = await this.userService.getUserId();\n                this.platformUtilsService.launchUri(this.businessUrl + '/login?userId=' + userId +\n                    '&token=' + (window as any).encodeURIComponent(token) + '&organizationId=' + this.organization.id);\n            }\n        } catch { }\n        this.businessTokenPromise = null;\n    }\n\n    get showMenuBar() {\n        return this.showManageTab || this.showToolsTab || this.organization.isOwner;\n    }\n\n    get showManageTab(): boolean {\n        return this.organization.canManageUsers ||\n            this.organization.canManageAssignedCollections ||\n            this.organization.canManageAllCollections ||\n            this.organization.canManageGroups ||\n            this.organization.canManagePolicies ||\n            this.organization.canAccessEventLogs;\n    }\n\n    get showToolsTab(): boolean {\n        return this.organization.canAccessImportExport || this.organization.canAccessReports;\n    }\n\n    get showBusinessPortalButton(): boolean {\n        return this.organization.useBusinessPortal && this.organization.canAccessBusinessPortal;\n    }\n\n    get toolsRoute(): string {\n        return this.organization.canAccessImportExport ?\n            'tools/import' :\n            'tools/exposed-passwords-report';\n    }\n\n    get manageRoute(): string {\n        let route: string;\n        switch (true) {\n            case this.organization.canManageUsers:\n                route = 'manage/people';\n                break;\n            case this.organization.canManageAssignedCollections || this.organization.canManageAllCollections:\n                route = 'manage/collections';\n                break;\n            case this.organization.canManageGroups:\n                route = 'manage/groups';\n                break;\n            case this.organization.canManagePolicies:\n                route = 'manage/policies';\n                break;\n            case this.organization.canAccessEventLogs:\n                route = 'manage/events';\n                break;\n        }\n        return route;\n    }\n}\n","<app-navbar></app-navbar> <div class=\"org-nav\" *ngIf=\"organization\"> <div class=\"container d-flex\"> <div class=\"d-flex flex-column\"> <div class=\"my-auto d-flex align-items-center pl-1\"> <app-avatar [data]=\"organization.name\" size=\"45\" [circle]=\"true\"></app-avatar> <div class=\"org-name ml-3\"> <span>{{organization.name}}</span> <small class=\"text-muted\">{{'organization' | i18n}}</small> </div> <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!organization.enabled\"> <div class=\"card-body py-2\"> <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> {{'organizationIsDisabled' | i18n}} </div> </div> </div> <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\"> <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"vault\" routerLinkActive=\"active\"> <i class=\"fa fa-lock\" aria-hidden=\"true\"></i> {{'vault' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"showManageTab\"> <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\"> <i class=\"fa fa-sliders\" aria-hidden=\"true\"></i> {{'manage' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"showToolsTab\"> <a class=\"nav-link\" [routerLink]=\"toolsRoute\" routerLinkActive=\"active\"> <i class=\"fa fa-wrench\" aria-hidden=\"true\"></i> {{'tools' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"organization.isOwner\"> <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\"> <i class=\"fa fa-cogs\" aria-hidden=\"true\"></i> {{'settings' | i18n}} </a> </li> </ul> </div> <div class=\"ml-auto d-flex align-items-center\"> <button class=\"btn btn-primary\" (click)=\"goToBusinessPortal()\" #businessBtn [appApiAction]=\"businessTokenPromise\" *ngIf=\"showBusinessPortalButton\"> <i class=\"fa fa-bank fa-fw\" [hidden]=\"businessBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-fw\" [hidden]=\"!businessBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'businessPortal' | i18n}} → </button> </div> </div> </div> <router-outlet></router-outlet> <app-footer></app-footer> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\n@Component({\n    selector: 'app-user-layout',\n    templateUrl: 'user-layout.component.html',\n})\nexport class UserLayoutComponent implements OnInit {\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n    }\n}\n","<app-navbar></app-navbar> <router-outlet></router-outlet> <app-footer></app-footer> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { EmergencyAccessAcceptRequest } from 'jslib-common/models/request/emergencyAccessAcceptRequest';\nimport { BaseAcceptComponent } from '../common/base.accept.component';\n\n@Component({\n    selector: 'app-accept-emergency',\n    templateUrl: 'accept-emergency.component.html',\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n\n    name: string;\n\n    protected requiredParameters: string[] = ['id', 'name', 'email', 'token'];\n    protected failedShortMessage = 'emergencyInviteAcceptFailedShort';\n    protected failedMessage = 'emergencyInviteAcceptFailed';\n\n    constructor(router: Router, toasterService: ToasterService,\n        i18nService: I18nService, route: ActivatedRoute,\n        private apiService: ApiService, userService: UserService,\n        stateService: StateService) {\n        super(router, toasterService, i18nService, route, userService, stateService);\n    }\n\n    async authedHandler(qParams: any): Promise<void> {\n        const request = new EmergencyAccessAcceptRequest();\n        request.token = qParams.token;\n        this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n        await this.actionPromise;\n        const toast: Toast = {\n            type: 'success',\n            title: this.i18nService.t('inviteAccepted'),\n            body: this.i18nService.t('emergencyInviteAcceptedDesc'),\n            timeout: 10000,\n        };\n        this.toasterService.popAsync(toast);\n        this.router.navigate(['/vault']);\n    }\n\n    async unauthedHandler(qParams: any): Promise<void> {\n        this.name = qParams.name;\n        if (this.name != null) {\n            // Fix URL encoding of space issue with Angular\n            this.name = this.name.replace(/\\+/g, ' ');\n        }\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\"> <div> <img src=\"images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> <div class=\"container\" *ngIf=\"!loading && !authed\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'emergencyAccess' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <p class=\"text-center\"> {{name}} </p> <p>{{'acceptEmergencyAccess' | i18n}}</p> <hr> <div class=\"d-flex\"> <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\"> {{'logIn' | i18n}} </a> <a routerLink=\"/register\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block ml-2 mt-0\"> {{'createAccount' | i18n}} </a> </div> </div> </div> </div> </div> </div> ","import {\n    Directive,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n    loading = true;\n    authed = false;\n    email: string;\n    actionPromise: Promise<any>;\n\n    protected requiredParameters: string[] = [];\n    protected failedShortMessage = 'inviteAcceptFailedShort';\n    protected failedMessage = 'inviteAcceptFailed';\n\n    constructor(protected router: Router, protected toasterService: ToasterService,\n        protected i18nService: I18nService, protected route: ActivatedRoute,\n        protected userService: UserService, protected stateService: StateService) { }\n\n    abstract authedHandler(qParams: any): Promise<void>;\n    abstract unauthedHandler(qParams: any): Promise<void>;\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async qParams => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            await this.stateService.remove('loginRedirect');\n\n            let error = this.requiredParameters.some(e => qParams?.[e] == null || qParams[e] === '');\n            let errorMessage: string = null;\n            if (!error) {\n                this.authed = await this.userService.isAuthenticated();\n\n                if (this.authed) {\n                    try {\n                        await this.authedHandler(qParams);\n                    } catch (e) {\n                        error = true;\n                        errorMessage = e.message;\n                    }\n                } else {\n                    await this.stateService.save('loginRedirect', {\n                        route: this.getRedirectRoute(),\n                        qParams: qParams,\n                    });\n\n                    this.email = qParams.email;\n                    await this.unauthedHandler(qParams);\n                }\n            }\n\n            if (error) {\n                const toast: Toast = {\n                    type: 'error',\n                    title: null,\n                    body: errorMessage != null ? this.i18nService.t(this.failedShortMessage, errorMessage) :\n                        this.i18nService.t(this.failedMessage),\n                    timeout: 10000,\n                };\n                this.toasterService.popAsync(toast);\n                this.router.navigate(['/']);\n            }\n\n            this.loading = false;\n        });\n    }\n\n    getRedirectRoute() {\n        const urlTree = this.router.parseUrl(this.router.url);\n        urlTree.queryParams = {};\n        return urlTree.toString();\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { OrganizationUserAcceptRequest } from 'jslib-common/models/request/organizationUserAcceptRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from 'jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest';\n\nimport { Utils } from 'jslib-common/misc/utils';\nimport { Policy } from 'jslib-common/models/domain/policy';\nimport { BaseAcceptComponent } from '../common/base.accept.component';\n\n@Component({\n    selector: 'app-accept-organization',\n    templateUrl: 'accept-organization.component.html',\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n    orgName: string;\n\n    protected requiredParameters: string[] = ['organizationId', 'organizationUserId', 'token'];\n\n    constructor(router: Router, toasterService: ToasterService,\n        i18nService: I18nService, route: ActivatedRoute,\n        private apiService: ApiService, userService: UserService,\n        stateService: StateService, private cryptoService: CryptoService,\n        private policyService: PolicyService) {\n        super(router, toasterService, i18nService, route, userService, stateService);\n    }\n\n    async authedHandler(qParams: any): Promise<void> {\n        const request = new OrganizationUserAcceptRequest();\n        request.token = qParams.token;\n        if (await this.performResetPasswordAutoEnroll(qParams)) {\n            this.actionPromise = this.apiService.postOrganizationUserAccept(qParams.organizationId,\n                qParams.organizationUserId, request).then(() => {\n                    // Retrieve Public Key\n                    return this.apiService.getOrganizationKeys(qParams.organizationId);\n                }).then(async response => {\n                    if (response == null) {\n                        throw new Error(this.i18nService.t('resetPasswordOrgKeysError'));\n                    }\n\n                    const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n                    // RSA Encrypt user's encKey.key with organization public key\n                    const encKey = await this.cryptoService.getEncKey();\n                    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n                    // Create request and execute enrollment\n                    const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n                    resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n                    // Get User Id\n                    const userId = await this.userService.getUserId();\n\n                    return this.apiService.putOrganizationUserResetPasswordEnrollment(qParams.organizationId, userId, resetRequest);\n                });\n        } else {\n            this.actionPromise = this.apiService.postOrganizationUserAccept(qParams.organizationId,\n                qParams.organizationUserId, request);\n        }\n\n        await this.actionPromise;\n        const toast: Toast = {\n            type: 'success',\n            title: this.i18nService.t('inviteAccepted'),\n            body: this.i18nService.t('inviteAcceptedDesc'),\n            timeout: 10000,\n        };\n        this.toasterService.popAsync(toast);\n\n        await this.stateService.remove('orgInvitation');\n        this.router.navigate(['/vault']);\n    }\n\n    async unauthedHandler(qParams: any): Promise<void> {\n        this.orgName = qParams.organizationName;\n        if (this.orgName != null) {\n            // Fix URL encoding of space issue with Angular\n            this.orgName = this.orgName.replace(/\\+/g, ' ');\n        }\n        await this.stateService.save('orgInvitation', qParams);\n    }\n\n    private async performResetPasswordAutoEnroll(qParams: any): Promise<boolean> {\n        let policyList: Policy[] = null;\n        try {\n            const policies = await this.apiService.getPoliciesByToken(qParams.organizationId, qParams.token,\n                qParams.email, qParams.organizationUserId);\n            policyList = this.policyService.mapPoliciesFromToken(policies);\n        } catch { }\n\n        if (policyList != null) {\n            const result = this.policyService.getResetPasswordPolicyOptions(policyList, qParams.organizationId);\n            // Return true if policy enabled and auto-enroll enabled\n            return result[1] && result[0].autoEnrollEnabled;\n        }\n\n        return false;\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\"> <div> <img src=\"images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> <div class=\"container\" *ngIf=\"!loading && !authed\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'joinOrganization' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <p class=\"text-center\"> {{orgName}} <strong class=\"d-block mt-2\">{{email}}</strong> </p> <p>{{'joinOrganizationDesc' | i18n}}</p> <hr> <div class=\"d-flex\"> <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\"> {{'logIn' | i18n}} </a> <a routerLink=\"/register\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block ml-2 mt-0\"> {{'createAccount' | i18n}} </a> </div> </div> </div> </div> </div> </div> ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { HintComponent as BaseHintComponent } from 'jslib-angular/components/hint.component';\n\n@Component({\n    selector: 'app-hint',\n    templateUrl: 'hint.component.html',\n})\nexport class HintComponent extends BaseHintComponent {\n    constructor(router: Router, i18nService: I18nService,\n        apiService: ApiService, platformUtilsService: PlatformUtilsService) {\n        super(router, i18nService, apiService, platformUtilsService);\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'passwordHint' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required appAutofocus inputmode=\"email\" appInputVerbatim=\"false\"> <small class=\"form-text text-muted\">{{'enterEmailToGetHint' | i18n}}</small> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span [hidden]=\"form.loading\">{{'submit' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\nimport { RouterService } from '../services/router.service';\n\nimport { LockComponent as BaseLockComponent } from 'jslib-angular/components/lock.component';\n\n@Component({\n    selector: 'app-lock',\n    templateUrl: 'lock.component.html',\n})\nexport class LockComponent extends BaseLockComponent {\n    constructor(router: Router, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, messagingService: MessagingService,\n        userService: UserService, cryptoService: CryptoService,\n        storageService: StorageService, vaultTimeoutService: VaultTimeoutService,\n        environmentService: EnvironmentService, private routerService: RouterService,\n        stateService: StateService, apiService: ApiService) {\n        super(router, i18nService, platformUtilsService, messagingService, userService, cryptoService,\n            storageService, vaultTimeoutService, environmentService, stateService, apiService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        this.onSuccessfulSubmit = () => {\n            const previousUrl = this.routerService.getPreviousUrl();\n            if (previousUrl !== '/' && previousUrl.indexOf('lock') === -1) {\n                this.successRoute = previousUrl;\n            }\n            this.router.navigate([this.successRoute]);\n        };\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"text-center mb-4\"> <i class=\"fa fa-lock fa-4x text-muted\" aria-hidden=\"true\"></i> </p> <p class=\"lead text-center mx-4 mb-4\">{{'yourVaultIsLocked' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPassword\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> <small class=\"text-muted form-text\"> {{'loggedInAsEmailOn' | i18n : email : webVaultHostname}} </small> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span> <i class=\"fa fa-unlock-alt\" aria-hidden=\"true\"></i> {{'unlock' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\" (click)=\"logOut()\"> {{'logOut' | i18n}} </button> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { LoginComponent as BaseLoginComponent } from 'jslib-angular/components/login.component';\n\nimport { Policy } from 'jslib-common/models/domain/policy';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: 'login.component.html',\n})\nexport class LoginComponent extends BaseLoginComponent {\n\n    showResetPasswordAutoEnrollWarning = false;\n\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, private route: ActivatedRoute,\n        storageService: StorageService, stateService: StateService,\n        platformUtilsService: PlatformUtilsService, environmentService: EnvironmentService,\n        passwordGenerationService: PasswordGenerationService, cryptoFunctionService: CryptoFunctionService,\n        private apiService: ApiService, private policyService: PolicyService) {\n        super(authService, router,\n            platformUtilsService, i18nService,\n            stateService, environmentService,\n            passwordGenerationService, cryptoFunctionService,\n            storageService);\n        this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    }\n\n    async ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.email != null && qParams.email.indexOf('@') > -1) {\n                this.email = qParams.email;\n            }\n            if (qParams.premium != null) {\n                this.stateService.save('loginRedirect', { route: '/settings/premium' });\n            } else if (qParams.org != null) {\n                this.stateService.save('loginRedirect',\n                    { route: '/settings/create-organization', qParams: { plan: qParams.org } });\n            }\n            await super.ngOnInit();\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n\n        const invite = await this.stateService.get<any>('orgInvitation');\n        if (invite != null) {\n            let policyList: Policy[] = null;\n            try {\n                const policies = await this.apiService.getPoliciesByToken(invite.organizationId, invite.token,\n                    invite.email, invite.organizationUserId);\n                policyList = this.policyService.mapPoliciesFromToken(policies);\n            } catch { }\n\n            if (policyList != null) {\n                const result = this.policyService.getResetPasswordPolicyOptions(policyList, invite.organizationId);\n                // Set to true if policy enabled and auto-enroll enabled\n                this.showResetPasswordAutoEnrollWarning = result[1] && result[0].autoEnrollEnabled;\n            }\n        }\n    }\n\n    async goAfterLogIn() {\n        const loginRedirect = await this.stateService.get<any>('loginRedirect');\n        if (loginRedirect != null) {\n            this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n            await this.stateService.remove('loginRedirect');\n        } else {\n            this.router.navigate([this.successRoute]);\n        }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <img src=\"images/logo-dark@2x.png\" class=\"logo mb-2\" alt=\"Bitwarden\"> <p class=\"lead text-center mx-4 mb-4\">{{'loginOrCreateNewAccount' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <app-callout type=\"warning\" title=\"{{'resetPasswordPolicyAutoEnroll' | i18n}}\" *ngIf=\"showResetPasswordAutoEnrollWarning\"> {{'resetPasswordAutoEnrollInviteWarning' | i18n}} </app-callout> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required inputmode=\"email\" appInputVerbatim=\"false\"> </div> <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPassword\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPassword\" required appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> <small class=\"form-text\"> <a routerLink=\"/hint\">{{'getMasterPasswordHint' | i18n}}</a> </small> </div> <div class=\"form-check\"> <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberEmail\" name=\"RememberEmail\" [(ngModel)]=\"rememberEmail\"> <label class=\"form-check-label\" for=\"rememberEmail\">{{'rememberEmail' | i18n}}</label> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span> <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'logIn' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/register\" [queryParams]=\"{email: email}\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> {{'createAccount' | i18n}} </a> </div> <div class=\"d-flex\"> <a routerLink=\"/sso\" class=\"btn btn-outline-secondary btn-block mt-2\"> <i class=\"fa fa-bank\" aria-hidden=\"true\"></i> {{'enterpriseSingleSignOn' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { DeleteRecoverRequest } from 'jslib-common/models/request/deleteRecoverRequest';\n\n@Component({\n    selector: 'app-recover-delete',\n    templateUrl: 'recover-delete.component.html',\n})\nexport class RecoverDeleteComponent {\n    email: string;\n    formPromise: Promise<any>;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private toasterService: ToasterService, private i18nService: I18nService) {\n    }\n\n    async submit() {\n        try {\n            const request = new DeleteRecoverRequest();\n            request.email = this.email.trim().toLowerCase();\n            this.formPromise = this.apiService.postAccountRecoverDelete(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('deleteRecoverEmailSent'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'deleteAccount' | i18n}}</p> <div class=\"card\"> <div class=\"card-body\"> <p>{{'deleteRecoverDesc' | i18n}}</p> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required appAutofocus inputmode=\"email\" appInputVerbatim=\"false\"> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span>{{'submit' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { TwoFactorRecoveryRequest } from 'jslib-common/models/request/twoFactorRecoveryRequest';\n\n@Component({\n    selector: 'app-recover-two-factor',\n    templateUrl: 'recover-two-factor.component.html',\n})\nexport class RecoverTwoFactorComponent {\n    email: string;\n    masterPassword: string;\n    recoveryCode: string;\n    formPromise: Promise<any>;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private cryptoService: CryptoService, private authService: AuthService) { }\n\n    async submit() {\n        try {\n            const request = new TwoFactorRecoveryRequest();\n            request.recoveryCode = this.recoveryCode.replace(/\\s/g, '').toLowerCase();\n            request.email = this.email.trim().toLowerCase();\n            const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n            this.formPromise = this.apiService.postTwoFactorRecover(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('twoStepRecoverDisabled'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'recoverAccountTwoStep' | i18n}}</p> <div class=\"card\"> <div class=\"card-body\"> <p>{{'recoverAccountTwoStepDesc' | i18n}} <a href=\"https://help.bitwarden.com/article/lost-two-step-device/\" target=\"_blank\" rel=\"noopener\">{{'learnMore' | i18n}}</a> </p> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required appAutofocus inputmode=\"email\" appInputVerbatim=\"false\"> </div> <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPassword\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appInputVerbatim> </div> <div class=\"form-group\"> <label for=\"recoveryCode\">{{'recoveryCodeTitle' | i18n}}</label> <input id=\"recoveryCode\" class=\"text-monospace form-control\" type=\"text\" name=\"RecoveryCode\" [(ngModel)]=\"recoveryCode\" required appInputVerbatim> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span>{{'submit' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\n\nimport { RegisterComponent as BaseRegisterComponent } from 'jslib-angular/components/register.component';\n\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\nimport { Policy } from 'jslib-common/models/domain/policy';\n\nimport { PolicyData } from 'jslib-common/models/data/policyData';\nimport { ReferenceEventRequest } from 'jslib-common/models/request/referenceEventRequest';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: 'register.component.html',\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n    showCreateOrgMessage = false;\n    layout = '';\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n    private policies: Policy[];\n\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, cryptoService: CryptoService,\n        apiService: ApiService, private route: ActivatedRoute,\n        stateService: StateService, platformUtilsService: PlatformUtilsService,\n        passwordGenerationService: PasswordGenerationService, private policyService: PolicyService) {\n        super(authService, router, i18nService, cryptoService, apiService, stateService, platformUtilsService,\n            passwordGenerationService);\n    }\n\n    getPasswordScoreAlertDisplay() {\n        if (this.enforcedPolicyOptions == null) {\n            return '';\n        }\n\n        let str: string;\n        switch (this.enforcedPolicyOptions.minComplexity) {\n            case 4:\n                str = this.i18nService.t('strong');\n                break;\n            case 3:\n                str = this.i18nService.t('good');\n                break;\n            default:\n                str = this.i18nService.t('weak');\n                break;\n        }\n        return str + ' (' + this.enforcedPolicyOptions.minComplexity + ')';\n    }\n\n    async ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(qParams => {\n            this.referenceData = new ReferenceEventRequest();\n            if (qParams.email != null && qParams.email.indexOf('@') > -1) {\n                this.email = qParams.email;\n            }\n            if (qParams.premium != null) {\n                this.stateService.save('loginRedirect', { route: '/settings/premium' });\n            } else if (qParams.org != null) {\n                this.showCreateOrgMessage = true;\n                this.referenceData.flow = qParams.org;\n                this.stateService.save('loginRedirect',\n                    { route: '/settings/create-organization', qParams: { plan: qParams.org } });\n            }\n            if (qParams.layout != null) {\n                this.layout = this.referenceData.layout = qParams.layout;\n            }\n            if (qParams.reference != null) {\n                this.referenceData.id = qParams.reference;\n            } else {\n                this.referenceData.id = ('; ' + document.cookie).split('; reference=').pop().split(';').shift();\n            }\n            if (this.referenceData.id === '') {\n                this.referenceData.id = null;\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n        const invite = await this.stateService.get<any>('orgInvitation');\n        if (invite != null) {\n            try {\n                const policies = await this.apiService.getPoliciesByToken(invite.organizationId, invite.token,\n                    invite.email, invite.organizationUserId);\n                if (policies.data != null) {\n                    const policiesData = policies.data.map(p => new PolicyData(p));\n                    this.policies = policiesData.map(p => new Policy(p));\n                }\n            } catch { }\n        }\n\n        if (this.policies != null) {\n            this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(this.policies);\n        }\n    }\n\n    async submit() {\n        if (this.enforcedPolicyOptions != null &&\n            !this.policyService.evaluateMasterPassword(this.masterPasswordScore, this.masterPassword,\n                this.enforcedPolicyOptions)) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));\n            return;\n        }\n\n        await super.submit();\n    }\n}\n","<div class=\"layout\" [ngClass]=\"['layout', layout]\"> <header class=\"header\" *ngIf=\"layout === 'enterprise2'\"> <div class=\"container\"> <div class=\"row\"> <div class=\"col-7\"> <img alt=\"Bitwarden\" class=\"logo mb-2\" src=\"images/logo-horizontal-white.png\"> </div> </div> </div> </header> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row\"> <div class=\"col-7\" *ngIf=\"layout\"> <div class=\"mt-5\"> <div *ngIf=\"layout === 'enterprise2'\"> <h2>Companies globally trust Bitwarden for password management.</h2> <p>Start your 7-day free trial!</p> <p class=\"highlight\">Quickly deploy your <b>organization</b></p> <p>Use Bitwarden across all platforms</p> <p>Collaborate and share securely</p> <figure> <figcaption> <cite> <img src=\"images/wired-logo.png\" alt=\"Wired\"> </cite> </figcaption> <blockquote> \"Bitwarden has become a popular choice among open-source software advocates. After using it for a few months, I can see why.\" - February 2020 </blockquote> </figure> </div> <div *ngIf=\"layout === 'enterprise3'\"> <p>Enterprise 3 layout</p> </div> <div *ngIf=\"layout === 'enterprise4'\"> <p>Enterprise 4 layout</p> </div> </div> </div> <div [ngClass]=\"{'col-5': layout, 'col-12': !layout}\"> <div class=\"row justify-content-md-center mt-5\"> <div [ngClass]=\"{'col-5': !layout, 'col-12': layout}\"> <p class=\"lead text-center mb-4\" *ngIf=\"!layout\">{{'createAccount' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <app-callout title=\"{{'createOrganizationStep1' | i18n}}\" type=\"info\" icon=\"fa-thumb-tack\" *ngIf=\"showCreateOrgMessage\"> {{'createOrganizationCreatePersonalAccount' | i18n}} </app-callout> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required [appAutofocus]=\"email === ''\" inputmode=\"email\" appInputVerbatim=\"false\"> <small class=\"form-text text-muted\">{{'emailAddressDesc' | i18n}}</small> </div> <div class=\"form-group\"> <label for=\"name\">{{'yourName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" [appAutofocus]=\"email !== ''\"> <small class=\"form-text text-muted\">{{'yourNameDesc' | i18n}}</small> </div> <div class=\"form-group\"> <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\"> {{'masterPasswordPolicyInEffect' | i18n}} <ul class=\"mb-0\"> <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\"> {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}} </li> <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\"> {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}} </li> <li *ngIf=\"enforcedPolicyOptions?.requireUpper\"> {{'policyInEffectUppercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireLower\"> {{'policyInEffectLowercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\"> {{'policyInEffectNumbers' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\"> {{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li> </ul> </app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <div class=\"w-100\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPassword\" class=\"text-monospace form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> <div> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(false)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <div class=\"progress-bar invisible\"></div> </div> </div> <small class=\"form-text text-muted\">{{'masterPassDesc' | i18n}}</small> </div> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'reTypeMasterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPasswordRetype\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordRetype\" class=\"text-monospace form-control\" [(ngModel)]=\"confirmMasterPassword\" required appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(true)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> <div class=\"form-group\"> <label for=\"hint\">{{'masterPassHint' | i18n}}</label> <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\"> <small class=\"form-text text-muted\">{{'masterPassHintDesc' | i18n}}</small> </div> <div class=\"form-group\" *ngIf=\"showTerms\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"acceptPolicies\" [(ngModel)]=\"acceptPolicies\" name=\"AcceptPolicies\"> <label class=\"form-check-label small text-muted\" for=\"acceptPolicies\"> {{'acceptPolicies' | i18n}}<br> <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{'termsOfService' | i18n}}</a>, <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{'privacyPolicy' | i18n}}</a> </label> </div> </div> <hr> <div class=\"d-flex mb-2\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span>{{'submit' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </div> </div> </form> </div> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport {\n    SetPasswordComponent as BaseSetPasswordComponent,\n} from 'jslib-angular/components/set-password.component';\n\n@Component({\n    selector: 'app-set-password',\n    templateUrl: 'set-password.component.html',\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n    constructor(apiService: ApiService, i18nService: I18nService,\n        cryptoService: CryptoService, messagingService: MessagingService,\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService, router: Router,\n        syncService: SyncService, route: ActivatedRoute) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService, router, apiService, syncService, route);\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'setMasterPassword' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body text-center\" *ngIf=\"syncLoading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <div class=\"card-body\" *ngIf=\"!syncLoading\"> <app-callout type=\"info\">{{'ssoCompleteRegistration' | i18n}}</app-callout> <div class=\"form-group\"> <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\"> {{'masterPasswordPolicyInEffect' | i18n}} <ul class=\"mb-0\"> <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\"> {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}} </li> <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\"> {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}} </li> <li *ngIf=\"enforcedPolicyOptions?.requireUpper\"> {{'policyInEffectUppercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireLower\"> {{'policyInEffectLowercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\"> {{'policyInEffectNumbers' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\"> {{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li> </ul> </app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <div class=\"w-100\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordHash\" class=\"text-monospace form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> <div> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(false)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <div class=\"progress-bar invisible\"></div> </div> </div> <small class=\"form-text text-muted\">{{'masterPassDesc' | i18n}}</small> </div> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'reTypeMasterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPasswordRetype\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordRetype\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(true)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> <div class=\"form-group\"> <label for=\"hint\">{{'masterPassHint' | i18n}}</label> <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\"> <small class=\"form-text text-muted\">{{'masterPassHintDesc' | i18n}}</small> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\" (click)=\"logOut()\"> {{'logOut' | i18n}} </button> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { SsoComponent as BaseSsoComponent } from 'jslib-angular/components/sso.component';\n\nconst IdentifierStorageKey = 'ssoOrgIdentifier';\n\n@Component({\n    selector: 'app-sso',\n    templateUrl: 'sso.component.html',\n})\nexport class SsoComponent extends BaseSsoComponent {\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, route: ActivatedRoute,\n        storageService: StorageService, stateService: StateService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService,\n        cryptoFunctionService: CryptoFunctionService,\n        passwordGenerationService: PasswordGenerationService) {\n        super(authService, router, i18nService, route, storageService, stateService, platformUtilsService,\n            apiService, cryptoFunctionService, passwordGenerationService);\n        this.redirectUri = window.location.origin + '/sso-connector.html';\n        this.clientId = 'web';\n    }\n\n    async ngOnInit() {\n        super.ngOnInit();\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.identifier != null) {\n                this.identifier = qParams.identifier;\n            } else {\n                const storedIdentifier = await this.storageService.get<string>(IdentifierStorageKey);\n                if (storedIdentifier != null) {\n                    this.identifier = storedIdentifier;\n                }\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n\n    async submit() {\n        await this.storageService.save(IdentifierStorageKey, this.identifier);\n        if (this.clientId === 'browser') {\n            document.cookie = `ssoHandOffMessage=${this.i18nService.t('ssoHandOff')};SameSite=strict`;\n        }\n        super.submit();\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" class=\"container\" [appApiAction]=\"initiateSsoFormPromise\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <img src=\"images/logo-dark@2x.png\" class=\"logo mb-2\" alt=\"Bitwarden\"> <div class=\"card d-block mt-4\"> <div class=\"card-body\" *ngIf=\"loggingIn\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <div class=\"card-body\" *ngIf=\"!loggingIn\"> <p>{{'ssoLogInWithOrgIdentifier' | i18n}}</p> <div class=\"form-group\"> <label for=\"identifier\">{{'organizationIdentifier' | i18n}}</label> <input id=\"identifier\" class=\"form-control\" type=\"text\" name=\"Identifier\" [(ngModel)]=\"identifier\" required appAutofocus> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span> <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'logIn' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Directive } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { AuthResult } from 'jslib-common/models/domain/authResult';\n\n@Directive()\nexport class SsoComponent {\n    identifier: string;\n    loggingIn = false;\n\n    formPromise: Promise<AuthResult>;\n    initiateSsoFormPromise: Promise<any>;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n    onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n    onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n\n    protected twoFactorRoute = '2fa';\n    protected successRoute = 'lock';\n    protected changePasswordRoute = 'set-password';\n    protected clientId: string;\n    protected redirectUri: string;\n    protected state: string;\n    protected codeChallenge: string;\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected route: ActivatedRoute,\n        protected storageService: StorageService, protected stateService: StateService,\n        protected platformUtilsService: PlatformUtilsService, protected apiService: ApiService,\n        protected cryptoFunctionService: CryptoFunctionService,\n        protected passwordGenerationService: PasswordGenerationService) { }\n\n    async ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.code != null && qParams.state != null) {\n                const codeVerifier = await this.storageService.get<string>(ConstantsService.ssoCodeVerifierKey);\n                const state = await this.storageService.get<string>(ConstantsService.ssoStateKey);\n                await this.storageService.remove(ConstantsService.ssoCodeVerifierKey);\n                await this.storageService.remove(ConstantsService.ssoStateKey);\n                if (qParams.code != null && codeVerifier != null && state != null && this.checkState(state, qParams.state)) {\n                    await this.logIn(qParams.code, codeVerifier, this.getOrgIdentiferFromState(qParams.state));\n                }\n            } else if (qParams.clientId != null && qParams.redirectUri != null && qParams.state != null &&\n                qParams.codeChallenge != null) {\n                this.redirectUri = qParams.redirectUri;\n                this.state = qParams.state;\n                this.codeChallenge = qParams.codeChallenge;\n                this.clientId = qParams.clientId;\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n\n    async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n        this.initiateSsoFormPromise = this.preValidate();\n        if (await this.initiateSsoFormPromise) {\n            const authorizeUrl = await this.buildAuthorizeUrl(returnUri, includeUserIdentifier);\n            this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n        }\n    }\n\n    async preValidate(): Promise<boolean> {\n        if (this.identifier == null || this.identifier === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('ssoValidationFailed'),\n                this.i18nService.t('ssoIdentifierRequired'));\n            return false;\n        }\n        return await this.apiService.preValidateSso(this.identifier);\n    }\n\n    protected async buildAuthorizeUrl(returnUri?: string, includeUserIdentifier?: boolean): Promise<string> {\n        let codeChallenge = this.codeChallenge;\n        let state = this.state;\n\n        const passwordOptions: any = {\n            type: 'password',\n            length: 64,\n            uppercase: true,\n            lowercase: true,\n            numbers: true,\n            special: false,\n        };\n\n        if (codeChallenge == null) {\n            const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n            const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, 'sha256');\n            codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n            await this.storageService.save(ConstantsService.ssoCodeVerifierKey, codeVerifier);\n        }\n\n        if (state == null) {\n            state = await this.passwordGenerationService.generatePassword(passwordOptions);\n            if (returnUri) {\n                state += `_returnUri='${returnUri}'`;\n            }\n        }\n\n        // Add Organization Identifier to state\n        state += `_identifier=${this.identifier}`;\n\n        // Save state (regardless of new or existing)\n        await this.storageService.save(ConstantsService.ssoStateKey, state);\n\n        let authorizeUrl = this.apiService.identityBaseUrl + '/connect/authorize?' +\n            'client_id=' + this.clientId + '&redirect_uri=' + encodeURIComponent(this.redirectUri) + '&' +\n            'response_type=code&scope=api offline_access&' +\n            'state=' + state + '&code_challenge=' + codeChallenge + '&' +\n            'code_challenge_method=S256&response_mode=query&' +\n            'domain_hint=' + encodeURIComponent(this.identifier);\n\n        if (includeUserIdentifier) {\n            const userIdentifier = await this.apiService.getSsoUserIdentifier();\n            authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n        }\n\n        return authorizeUrl;\n    }\n\n    private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n        this.loggingIn = true;\n        try {\n            this.formPromise = this.authService.logInSso(code, codeVerifier, this.redirectUri);\n            const response = await this.formPromise;\n            if (response.twoFactor) {\n                if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n                    this.onSuccessfulLoginTwoFactorNavigate();\n                } else {\n                    this.router.navigate([this.twoFactorRoute], {\n                        queryParams: {\n                            identifier: orgIdFromState,\n                            sso: 'true',\n                        },\n                    });\n                }\n            } else if (response.resetMasterPassword) {\n                if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n                    this.onSuccessfulLoginChangePasswordNavigate();\n                } else {\n                    this.router.navigate([this.changePasswordRoute], {\n                        queryParams: {\n                            identifier: orgIdFromState,\n                        },\n                    });\n                }\n            } else {\n                const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n                await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n                if (this.onSuccessfulLogin != null) {\n                    this.onSuccessfulLogin();\n                }\n                if (this.onSuccessfulLoginNavigate != null) {\n                    this.onSuccessfulLoginNavigate();\n                } else {\n                    this.router.navigate([this.successRoute]);\n                }\n            }\n        } catch { }\n        this.loggingIn = false;\n    }\n\n    private getOrgIdentiferFromState(state: string): string {\n        if (state === null || state === undefined) {\n            return null;\n        }\n\n        const stateSplit = state.split('_identifier=');\n        return stateSplit.length > 1 ? stateSplit[1] : null;\n    }\n\n    private checkState(state: string, checkState: string): boolean {\n        if (state === null || state === undefined) {\n            return false;\n        }\n        if (checkState === null || checkState === undefined) {\n            return false;\n        }\n\n        const stateSplit = state.split('_identifier=');\n        const checkStateSplit = checkState.split('_identifier=');\n        return stateSplit[0] === checkStateSplit[0];\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { TwoFactorOptionsComponent } from './two-factor-options.component';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from 'jslib-angular/components/two-factor.component';\n\n@Component({\n    selector: 'app-two-factor',\n    templateUrl: 'two-factor.component.html',\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n    @ViewChild('twoFactorOptions', { read: ViewContainerRef, static: true }) twoFactorOptionsModal: ViewContainerRef;\n\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, apiService: ApiService,\n        platformUtilsService: PlatformUtilsService, stateService: StateService,\n        environmentService: EnvironmentService, private componentFactoryResolver: ComponentFactoryResolver,\n        storageService: StorageService, route: ActivatedRoute) {\n        super(authService, router, i18nService, apiService, platformUtilsService, window, environmentService,\n            stateService, storageService, route);\n        this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    }\n\n    anotherMethod() {\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        const modal = this.twoFactorOptionsModal.createComponent(factory).instance;\n        const childComponent = modal.show<TwoFactorOptionsComponent>(TwoFactorOptionsComponent,\n            this.twoFactorOptionsModal);\n\n        childComponent.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n            modal.close();\n            this.selectedProviderType = provider;\n            await this.init();\n        });\n        childComponent.onRecoverSelected.subscribe(() => {\n            modal.close();\n        });\n    }\n\n    async goAfterLogIn() {\n        const loginRedirect = await this.stateService.get<any>('loginRedirect');\n        if (loginRedirect != null) {\n            this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n            await this.stateService.remove('loginRedirect');\n        } else {\n            this.router.navigate([this.successRoute], {\n                queryParams: {\n                    identifier: this.identifier,\n                },\n            });\n        }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate autocomplete=\"off\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\" [ngClass]=\"{'col-9': selectedProviderType === providerType.Duo || selectedProviderType === providerType.OrganizationDuo}\"> <p class=\"lead text-center mb-4\">{{title}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <ng-container *ngIf=\"selectedProviderType === providerType.Email || selectedProviderType === providerType.Authenticator\"> <p *ngIf=\"selectedProviderType === providerType.Authenticator\"> {{'enterVerificationCodeApp' | i18n}}</p> <p *ngIf=\"selectedProviderType === providerType.Email\"> {{'enterVerificationCodeEmail' | i18n : twoFactorEmail}} </p> <div class=\"form-group\"> <label for=\"code\" class=\"sr-only\">{{'verificationCode' | i18n}}</label> <input id=\"code\" type=\"text\" name=\"Code\" class=\"form-control\" [(ngModel)]=\"token\" required appAutofocus inputmode=\"tel\" appInputVerbatim> <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\"> <a href=\"#\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\" *ngIf=\"selectedProviderType === providerType.Email\"> {{'sendVerificationCodeEmailAgain' | i18n}} </a> </small> </div> </ng-container> <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\"> <p class=\"text-center\">{{'insertYubiKey' | i18n}}</p> <img src=\"images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\"> <div class=\"form-group\"> <label for=\"code\" class=\"sr-only\">{{'verificationCode' | i18n}}</label> <input id=\"code\" type=\"password\" name=\"Code\" class=\"form-control\" [(ngModel)]=\"token\" required appAutofocus appInputVerbatim autocomplete=\"new-password\"> </div> </ng-container> <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\"> <div id=\"web-authn-frame\" class=\"mb-3\"> <iframe id=\"webauthn_iframe\"></iframe> </div> </ng-container> <ng-container *ngIf=\"selectedProviderType === providerType.Duo ||\n                        selectedProviderType === providerType.OrganizationDuo\"> <div id=\"duo-frame\" class=\"mb-3\"> <iframe id=\"duo_iframe\"></iframe> </div> </ng-container> <i class=\"fa fa-spinner text-muted fa-spin pull-right\" title=\"{{'loading' | i18n}}\" *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\" aria-hidden=\"true\"></i> <div class=\"form-check\" *ngIf=\"selectedProviderType != null\"> <input id=\"remember\" type=\"checkbox\" name=\"Remember\" class=\"form-check-input\" [(ngModel)]=\"remember\"> <label for=\"remember\" class=\"form-check-label\">{{'rememberMe' | i18n}}</label> </div> <ng-container *ngIf=\"selectedProviderType == null\"> <p>{{'noTwoStepProviders' | i18n}}</p> <p>{{'noTwoStepProviders2' | i18n}}</p> </ng-container> <hr> <div class=\"d-flex mb-3\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\" *ngIf=\"selectedProviderType != null && selectedProviderType !== providerType.Duo && \n                        selectedProviderType !== providerType.OrganizationDuo && selectedProviderType !== providerType.WebAuthn\"> <span> <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'continue' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> <div class=\"text-center\"> <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{'useAnotherTwoStepMethod' | i18n}}</a> </div> </div> </div> </div> </div> </form> <ng-template #twoFactorOptions></ng-template> ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport {\n    TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent,\n} from 'jslib-angular/components/two-factor-options.component';\n\n@Component({\n    selector: 'app-two-factor-options',\n    templateUrl: 'two-factor-options.component.html',\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService) {\n        super(authService, router, i18nService, platformUtilsService, window);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{'twoStepOptions' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"list-group list-group-flush\"> <a href=\"#\" appStopClick *ngFor=\"let p of providers\" (click)=\"choose(p)\" class=\"list-group-item list-group-item-action\"> <img [src]=\"'images/two-factor/' + p.type + '.png'\" alt=\"\" class=\"pull-right\"> <h3>{{p.name}}</h3> {{p.description}} </a> <a href=\"#\" appStopClick class=\"list-group-item list-group-item-action\" (click)=\"recover()\"> <h3>{{'recoveryCodeTitle' | i18n}}</h3> {{'recoveryCodeDesc' | i18n}} </a> </div> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class TwoFactorEmailRequest extends PasswordVerificationRequest {\n    email: string;\n\n    constructor(email: string, masterPasswordHash: string) {\n        super();\n        this.masterPasswordHash = masterPasswordHash;\n        this.email = email;\n    }\n}\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class AuthResult {\n    twoFactor: boolean = false;\n    resetMasterPassword: boolean = false;\n    twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string; }> = null;\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { VerifyEmailRequest } from 'jslib-common/models/request/verifyEmailRequest';\n\n@Component({\n    selector: 'app-verify-email-token',\n    templateUrl: 'verify-email-token.component.html',\n})\nexport class VerifyEmailTokenComponent implements OnInit {\n    constructor(private router: Router, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute,\n        private apiService: ApiService, private userService: UserService) { }\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async qParams => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            if (qParams.userId != null && qParams.token != null) {\n                try {\n                    await this.apiService.postAccountVerifyEmailToken(\n                        new VerifyEmailRequest(qParams.userId, qParams.token));\n                    const authed = await this.userService.isAuthenticated();\n                    if (authed) {\n                        await this.apiService.refreshIdentityToken();\n                    }\n                    this.toasterService.popAsync('success', null, this.i18nService.t('emailVerified'));\n                    this.router.navigate(['/']);\n                    return;\n                } catch { }\n            }\n            this.toasterService.popAsync('error', null, this.i18nService.t('emailVerifiedFailed'));\n            this.router.navigate(['/']);\n        });\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\"> <div> <img src=\"images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { VerifyDeleteRecoverRequest } from 'jslib-common/models/request/verifyDeleteRecoverRequest';\n\n@Component({\n    selector: 'app-verify-recover-delete',\n    templateUrl: 'verify-recover-delete.component.html',\n})\nexport class VerifyRecoverDeleteComponent implements OnInit {\n    email: string;\n    formPromise: Promise<any>;\n\n    private userId: string;\n    private token: string;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async qParams => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n                this.userId = qParams.userId;\n                this.token = qParams.token;\n                this.email = qParams.email;\n            } else {\n                this.router.navigate(['/']);\n            }\n        });\n    }\n\n    async submit() {\n        try {\n            const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n            this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('accountDeleted'),\n                this.i18nService.t('accountDeletedDesc'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'deleteAccount' | i18n}}</p> <div class=\"card\"> <div class=\"card-body\"> <app-callout type=\"warning\">{{'deleteAccountWarning' | i18n}}</app-callout> <p class=\"text-center\"> <strong>{{email}}</strong> </p> <p>{{'deleteRecoverConfirmDesc' | i18n}}</p> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-danger btn-block btn-submit\" [disabled]=\"form.loading\"> <span>{{'deleteAccount' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CollectionData } from 'jslib-common/models/data/collectionData';\nimport { Collection } from 'jslib-common/models/domain/collection';\nimport {\n    CollectionDetailsResponse,\n    CollectionResponse,\n} from 'jslib-common/models/response/collectionResponse';\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { ModalComponent } from '../../modal.component';\nimport { CollectionAddEditComponent } from './collection-add-edit.component';\nimport { EntityUsersComponent } from './entity-users.component';\n\n@Component({\n    selector: 'app-org-manage-collections',\n    templateUrl: 'collections.component.html',\n})\nexport class CollectionsComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('usersTemplate', { read: ViewContainerRef, static: true }) usersModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    collections: CollectionView[];\n    pagedCollections: CollectionView[];\n    searchText: string;\n\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private pagedCollectionsCount = 0;\n    private modal: ModalComponent = null;\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private collectionService: CollectionService, private componentFactoryResolver: ComponentFactoryResolver,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private userService: UserService,\n        private searchService: SearchService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                this.searchText = qParams.search;\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const organization = await this.userService.getOrganization(this.organizationId);\n        let response: ListResponse<CollectionResponse>;\n        if (organization.canManageAllCollections) {\n            response = await this.apiService.getCollections(this.organizationId);\n        } else {\n            response = await this.apiService.getUserCollections();\n        }\n        const collections = response.data.filter(c => c.organizationId === this.organizationId).map(r =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n        this.resetPaging();\n        this.loading = false;\n    }\n\n    loadMore() {\n        if (!this.collections || this.collections.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedCollections.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n            pagedSize = this.pagedCollectionsCount;\n        }\n        if (this.collections.length > pagedLength) {\n            this.pagedCollections =\n                this.pagedCollections.concat(this.collections.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedCollectionsCount = this.pagedCollections.length;\n        this.didScroll = this.pagedCollections.length > this.pageSize;\n    }\n\n    edit(collection: CollectionView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<CollectionAddEditComponent>(\n            CollectionAddEditComponent, this.addEditModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.collectionId = collection != null ? collection.id : null;\n        childComponent.onSavedCollection.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeletedCollection.subscribe(() => {\n            this.modal.close();\n            this.removeCollection(collection);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    add() {\n        this.edit(null);\n    }\n\n    async delete(collection: CollectionView) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteCollectionConfirmation'), collection.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteCollection(this.organizationId, collection.id);\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedCollectionId', collection.name));\n            this.removeCollection(collection);\n        } catch { }\n    }\n\n    users(collection: CollectionView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.usersModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityUsersComponent>(\n            EntityUsersComponent, this.usersModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.entity = 'collection';\n        childComponent.entityId = collection.id;\n        childComponent.entityName = collection.name;\n\n        childComponent.onEditedUsers.subscribe(() => {\n            this.load();\n            this.modal.close();\n        });\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async resetPaging() {\n        this.pagedCollections = [];\n        this.loadMore();\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.collections && this.collections.length > this.pageSize;\n    }\n\n    private removeCollection(collection: CollectionView) {\n        const index = this.collections.indexOf(collection);\n        if (index > -1) {\n            this.collections.splice(index, 1);\n            this.resetPaging();\n        }\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'collections' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newCollection' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (isPaging() ? pagedCollections : collections | search:searchText:'name':'id') as searchedCollections\"> <p *ngIf=\"!searchedCollections.length\">{{'noCollectionsInList' | i18n}}</p> <table class=\"table table-hover table-list\" *ngIf=\"searchedCollections.length\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let c of searchedCollections\"> <td> <a href=\"#\" appStopClick (click)=\"edit(c)\">{{c.name}}</a> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(c)\"> <i class=\"fa fa-fw fa-users\" aria-hidden=\"true\"></i> {{'users' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(c)\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{'delete' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> <ng-template #addEdit></ng-template> <ng-template #usersTemplate></ng-template> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\nimport { CollectionRequest } from 'jslib-common/models/request/collectionRequest';\nimport { SelectionReadOnlyRequest } from 'jslib-common/models/request/selectionReadOnlyRequest';\nimport { GroupResponse } from 'jslib-common/models/response/groupResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-collection-add-edit',\n    templateUrl: 'collection-add-edit.component.html',\n})\nexport class CollectionAddEditComponent implements OnInit {\n    @Input() collectionId: string;\n    @Input() organizationId: string;\n    @Output() onSavedCollection = new EventEmitter();\n    @Output() onDeletedCollection = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    accessGroups: boolean = false;\n    title: string;\n    name: string;\n    externalId: string;\n    groups: GroupResponse[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    private orgKey: SymmetricCryptoKey;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private platformUtilsService: PlatformUtilsService,\n        private cryptoService: CryptoService, private userService: UserService) { }\n\n    async ngOnInit() {\n        const organization = await this.userService.getOrganization(this.organizationId);\n        this.accessGroups = organization.useGroups;\n        this.editMode = this.loading = this.collectionId != null;\n        if (this.accessGroups) {\n            const groupsResponse = await this.apiService.getGroups(this.organizationId);\n            this.groups = groupsResponse.data.map(r => r).sort(Utils.getSortFunction(this.i18nService, 'name'));\n        }\n        this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editCollection');\n            try {\n                const collection = await this.apiService.getCollectionDetails(this.organizationId, this.collectionId);\n                this.name = await this.cryptoService.decryptToUtf8(new EncString(collection.name), this.orgKey);\n                this.externalId = collection.externalId;\n                if (collection.groups != null && this.groups.length > 0) {\n                    collection.groups.forEach(s => {\n                        const group = this.groups.filter(g => !g.accessAll && g.id === s.id);\n                        if (group != null && group.length > 0) {\n                            (group[0] as any).checked = true;\n                            (group[0] as any).readOnly = s.readOnly;\n                            (group[0] as any).hidePasswords = s.hidePasswords;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('addCollection');\n        }\n\n        this.groups.forEach(g => {\n            if (g.accessAll) {\n                (g as any).checked = true;\n            }\n        });\n\n        this.loading = false;\n    }\n\n    check(g: GroupResponse, select?: boolean) {\n        if (g.accessAll) {\n            return;\n        }\n        (g as any).checked = select == null ? !(g as any).checked : select;\n        if (!(g as any).checked) {\n            (g as any).readOnly = false;\n            (g as any).hidePasswords = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.groups.forEach(g => this.check(g, select));\n    }\n\n    async submit() {\n        if (this.orgKey == null) {\n            throw new Error('No encryption key for this organization.');\n        }\n\n        const request = new CollectionRequest();\n        request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n        request.externalId = this.externalId;\n        request.groups = this.groups.filter(g => (g as any).checked && !g.accessAll)\n            .map(g => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords));\n\n        try {\n            if (this.editMode) {\n                this.formPromise = this.apiService.putCollection(this.organizationId, this.collectionId, request);\n            } else {\n                this.formPromise = this.apiService.postCollection(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedCollectionId' : 'createdCollectionId', this.name));\n            this.onSavedCollection.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteCollectionConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n            await this.deletePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedCollectionId', this.name));\n            this.onDeletedCollection.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"collectionAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <div class=\"form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required appAutofocus> </div> <div class=\"form-group\"> <label for=\"externalId\">{{'externalId' | i18n}}</label> <input id=\"externalId\" class=\"form-control\" type=\"text\" name=\"ExternalId\" [(ngModel)]=\"externalId\"> <small class=\"form-text text-muted\">{{'externalIdDesc' | i18n}}</small> </div> <ng-container *ngIf=\"accessGroups\"> <h3 class=\"mt-4 d-flex mb-0\"> {{'groupAccess' | i18n}} <div class=\"ml-auto\" *ngIf=\"groups && groups.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </h3> <div *ngIf=\"!groups || !groups.length\"> {{'noGroupsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\"> <thead> <tr> <th>&nbsp;</th> <th>{{'name' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let g of groups; let i = index\"> <td class=\"table-list-checkbox\" (click)=\"check(g)\"> <input type=\"checkbox\" [(ngModel)]=\"g.checked\" name=\"Groups[{{i}}].Checked\" [disabled]=\"g.accessAll\" appStopProp> </td> <td (click)=\"check(g)\"> {{g.name}} <ng-container *ngIf=\"g.accessAll\"> <i class=\"fa fa-th text-muted fa-fw\" title=\"{{'groupAccessAllItems' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'groupAccessAllItems' | i18n}}</span> </ng-container> </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"g.hidePasswords\" name=\"Groups[{{i}}].HidePasswords\" [disabled]=\"!g.checked || g.accessAll\"> </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"g.readOnly\" name=\"Groups[{{i}}].ReadOnly\" [disabled]=\"!g.checked || g.accessAll\"> </td> </tr> </tbody> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import { Collection } from '../domain/collection';\n\nimport { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class CollectionRequest {\n    name: string;\n    externalId: string;\n    groups: SelectionReadOnlyRequest[] = [];\n\n    constructor(collection?: Collection) {\n        if (collection == null) {\n            return;\n        }\n        this.name = collection.name ? collection.name.encryptedString : null;\n        this.externalId = collection.externalId;\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\nimport { EventView } from 'jslib-common/models/view/eventView';\n\nimport { EventService } from '../../services/event.service';\n\n@Component({\n    selector: 'app-org-events',\n    templateUrl: 'events.component.html',\n})\nexport class EventsComponent implements OnInit {\n    loading = true;\n    loaded = false;\n    organizationId: string;\n    events: EventView[];\n    start: string;\n    end: string;\n    dirtyDates: boolean = true;\n    continuationToken: string;\n    refreshPromise: Promise<any>;\n    exportPromise: Promise<any>;\n    morePromise: Promise<any>;\n\n    private orgUsersUserIdMap = new Map<string, any>();\n    private orgUsersIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute, private eventService: EventService,\n        private i18nService: I18nService, private toasterService: ToasterService, private userService: UserService,\n        private exportService: ExportService, private platformUtilsService: PlatformUtilsService,\n        private router: Router) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (organization == null || !organization.useEvents) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n            const defaultDates = this.eventService.getDefaultDateFilters();\n            this.start = defaultDates[0];\n            this.end = defaultDates[1];\n            await this.load();\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getOrganizationUsers(this.organizationId);\n        response.data.forEach(u => {\n            const name = u.name == null || u.name.trim() === '' ? u.email : u.name;\n            this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n            this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n        });\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    async exportEvents() {\n        if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n            return;\n        }\n\n        this.loading = true;\n\n        const dates = this.parseDates();\n        if (dates == null) {\n            return;\n        }\n\n        try {\n            this.exportPromise = this.export(dates[0], dates[1]);\n\n            await this.exportPromise;\n        } catch { }\n\n        this.exportPromise = null;\n        this.loading = false;\n    }\n\n    async loadEvents(clearExisting: boolean) {\n        if (this.appApiPromiseUnfulfilled()) {\n            return;\n        }\n\n        const dates = this.parseDates();\n        if (dates == null) {\n            return;\n        }\n\n        this.loading = true;\n        let events: EventView[] = [];\n        try {\n            const promise = this.loadAndParseEvents(dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            if (clearExisting) {\n                this.refreshPromise = promise;\n            } else {\n                this.morePromise = promise;\n            }\n            const result = await promise;\n            this.continuationToken = result.continuationToken;\n            events = result.events;\n        } catch { }\n\n        if (!clearExisting && this.events != null && this.events.length > 0) {\n            this.events = this.events.concat(events);\n        } else {\n            this.events = events;\n        }\n\n        this.dirtyDates = false;\n        this.loading = false;\n        this.morePromise = null;\n        this.refreshPromise = null;\n    }\n\n    private async export(start: string, end: string) {\n        let continuationToken = this.continuationToken;\n        let events = [].concat(this.events);\n\n        while (continuationToken != null) {\n            const result = await this.loadAndParseEvents(start, end, continuationToken);\n            continuationToken = result.continuationToken;\n            events = events.concat(result.events);\n        }\n\n        const data = await this.exportService.getEventExport(events);\n        const fileName = this.exportService.getFileName('org-events', 'csv');\n        this.platformUtilsService.saveFile(window, data, { type: 'text/plain' }, fileName);\n    }\n\n    private async loadAndParseEvents(startDate: string, endDate: string, continuationToken: string) {\n        const response = await this.apiService.getEventsOrganization(this.organizationId, startDate, endDate,\n            continuationToken);\n\n        const events = await Promise.all(response.data.map(async r => {\n            const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n            const eventInfo = await this.eventService.getEventInfo(r);\n            const user = userId != null && this.orgUsersUserIdMap.has(userId) ?\n                this.orgUsersUserIdMap.get(userId) : null;\n            return new EventView({\n                message: eventInfo.message,\n                humanReadableMessage: eventInfo.humanReadableMessage,\n                appIcon: eventInfo.appIcon,\n                appName: eventInfo.appName,\n                userId: userId,\n                userName: user != null ? user.name : this.i18nService.t('unknown'),\n                userEmail: user != null ? user.email : '',\n                date: r.date,\n                ip: r.ipAddress,\n                type: r.type,\n            });\n        }));\n        return { continuationToken: response.continuationToken, events: events };\n    }\n\n    private parseDates() {\n        let dates: string[] = null;\n        try {\n            dates = this.eventService.formatDateFilters(this.start, this.end);\n        } catch (e) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidDateRange'));\n            return null;\n        }\n        return dates;\n    }\n\n    private appApiPromiseUnfulfilled() {\n        return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'eventLogs' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div class=\"form-inline\"> <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\" placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\" (change)=\"dirtyDates = true\"> <span class=\"mx-2\">-</span> <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\" placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\" (change)=\"dirtyDates = true\"> </div> <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\"> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"loadEvents(true)\" [disabled]=\"loaded && refreshForm.loading\"> <i class=\"fa fa-refresh fa-fw\" aria-hidden=\"true\" [ngClass]=\"{'fa-spin': loaded && refreshForm.loading}\"></i> {{'refresh' | i18n}} </button> </form> <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\"> <button type=\"button\" class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\" [ngClass]=\"{loading:exportForm.loading}\" (click)=\"exportEvents()\" [disabled]=\"loaded && exportForm.loading || dirtyDates\"> <i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\"></i> <span>{{'export' | i18n}}</span> </button> </form> </div> </div> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <p *ngIf=\"!events || !events.length\">{{'noEventsInList' | i18n}}</p> <table class=\"table table-hover\" *ngIf=\"events && events.length\"> <thead> <tr> <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th> <th class=\"border-top-0\" width=\"40\"> <span class=\"sr-only\">{{'device' | i18n}}</span> </th> <th class=\"border-top-0\" width=\"150\">{{'user' | i18n}}</th> <th class=\"border-top-0\">{{'event' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let e of events\"> <td>{{e.date | date:'medium'}}</td> <td> <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{e.appName}}, {{e.ip}}</span> </td> <td> <span title=\"{{e.userEmail}}\">{{e.userName}}</span> </td> <td [innerHTML]=\"e.message\"></td> </tr> </tbody> </table> <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\" (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'loadMore' | i18n}}</span> </button> </ng-container> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { GroupResponse } from 'jslib-common/models/response/groupResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { ModalComponent } from '../../modal.component';\nimport { EntityUsersComponent } from './entity-users.component';\nimport { GroupAddEditComponent } from './group-add-edit.component';\n\n@Component({\n    selector: 'app-org-groups',\n    templateUrl: 'groups.component.html',\n})\nexport class GroupsComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('usersTemplate', { read: ViewContainerRef, static: true }) usersModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    groups: GroupResponse[];\n    pagedGroups: GroupResponse[];\n    searchText: string;\n\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private pagedGroupsCount = 0;\n    private modal: ModalComponent = null;\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private toasterService: ToasterService, private platformUtilsService: PlatformUtilsService,\n        private userService: UserService, private router: Router,\n        private searchService: SearchService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (organization == null || !organization.useGroups) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n            await this.load();\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                this.searchText = qParams.search;\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getGroups(this.organizationId);\n        const groups = response.data != null && response.data.length > 0 ? response.data : [];\n        groups.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.groups = groups;\n        this.resetPaging();\n        this.loading = false;\n    }\n\n    loadMore() {\n        if (!this.groups || this.groups.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedGroups.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n            pagedSize = this.pagedGroupsCount;\n        }\n        if (this.groups.length > pagedLength) {\n            this.pagedGroups = this.pagedGroups.concat(this.groups.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedGroupsCount = this.pagedGroups.length;\n        this.didScroll = this.pagedGroups.length > this.pageSize;\n    }\n\n    edit(group: GroupResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<GroupAddEditComponent>(\n            GroupAddEditComponent, this.addEditModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.groupId = group != null ? group.id : null;\n        childComponent.onSavedGroup.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeletedGroup.subscribe(() => {\n            this.modal.close();\n            this.removeGroup(group);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    add() {\n        this.edit(null);\n    }\n\n    async delete(group: GroupResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteGroupConfirmation'), group.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteGroup(this.organizationId, group.id);\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedGroupId', group.name));\n            this.removeGroup(group);\n        } catch { }\n    }\n\n    users(group: GroupResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.usersModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityUsersComponent>(\n            EntityUsersComponent, this.usersModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.entity = 'group';\n        childComponent.entityId = group.id;\n        childComponent.entityName = group.name;\n\n        childComponent.onEditedUsers.subscribe(() => {\n            this.modal.close();\n        });\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async resetPaging() {\n        this.pagedGroups = [];\n        this.loadMore();\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.groups && this.groups.length > this.pageSize;\n    }\n\n    private removeGroup(group: GroupResponse) {\n        const index = this.groups.indexOf(group);\n        if (index > -1) {\n            this.groups.splice(index, 1);\n            this.resetPaging();\n        }\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'groups' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newGroup' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (isPaging() ? pagedGroups : groups | search:searchText:'name':'id') as searchedGroups\"> <p *ngIf=\"!searchedGroups.length\">{{'noGroupsInList' | i18n}}</p> <table class=\"table table-hover table-list\" *ngIf=\"searchedGroups.length\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let g of searchedGroups\"> <td> <a href=\"#\" appStopClick (click)=\"edit(g)\">{{g.name}}</a> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\"> <i class=\"fa fa-fw fa-users\" aria-hidden=\"true\"></i> {{'users' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{'delete' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> <ng-template #addEdit></ng-template> <ng-template #usersTemplate></ng-template> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CollectionData } from 'jslib-common/models/data/collectionData';\nimport { Collection } from 'jslib-common/models/domain/collection';\nimport { GroupRequest } from 'jslib-common/models/request/groupRequest';\nimport { SelectionReadOnlyRequest } from 'jslib-common/models/request/selectionReadOnlyRequest';\nimport { CollectionDetailsResponse } from 'jslib-common/models/response/collectionResponse';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\n@Component({\n    selector: 'app-group-add-edit',\n    templateUrl: 'group-add-edit.component.html',\n})\nexport class GroupAddEditComponent implements OnInit {\n    @Input() groupId: string;\n    @Input() organizationId: string;\n    @Output() onSavedGroup = new EventEmitter();\n    @Output() onDeletedGroup = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    name: string;\n    externalId: string;\n    access: 'all' | 'selected' = 'selected';\n    collections: CollectionView[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private collectionService: CollectionService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.groupId != null;\n        await this.loadCollections();\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editGroup');\n            try {\n                const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n                this.access = group.accessAll ? 'all' : 'selected';\n                this.name = group.name;\n                this.externalId = group.externalId;\n                if (group.collections != null && this.collections != null) {\n                    group.collections.forEach(s => {\n                        const collection = this.collections.filter(c => c.id === s.id);\n                        if (collection != null && collection.length > 0) {\n                            (collection[0] as any).checked = true;\n                            collection[0].readOnly = s.readOnly;\n                            collection[0].hidePasswords = s.hidePasswords;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('addGroup');\n        }\n\n        this.loading = false;\n    }\n\n    async loadCollections() {\n        const response = await this.apiService.getCollections(this.organizationId);\n        const collections = response.data.map(r =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n        if (!(c as any).checked) {\n            c.readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach(c => this.check(c, select));\n    }\n\n    async submit() {\n        const request = new GroupRequest();\n        request.name = this.name;\n        request.externalId = this.externalId;\n        request.accessAll = this.access === 'all';\n        if (!request.accessAll) {\n            request.collections = this.collections.filter(c => (c as any).checked)\n                .map(c => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n        }\n\n        try {\n            if (this.editMode) {\n                this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n            } else {\n                this.formPromise = this.apiService.postGroup(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedGroupId' : 'createdGroupId', this.name));\n            this.onSavedGroup.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteGroupConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n            await this.deletePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedGroupId', this.name));\n            this.onDeletedGroup.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"groupAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <div class=\"form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required> </div> <div class=\"form-group\"> <label for=\"externalId\">{{'externalId' | i18n}}</label> <input id=\"externalId\" class=\"form-control\" type=\"text\" name=\"ExternalId\" [(ngModel)]=\"externalId\"> <small class=\"form-text text-muted\">{{'externalIdDesc' | i18n}}</small> </div> <h3 class=\"mt-4 d-flex\"> <div class=\"mb-2\"> {{'accessControl' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/user-types-access-control/#access-control\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </h3> <div class=\"form-group\" [ngClass]=\"{'mb-0': access !== 'selected'}\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessAll\" value=\"all\" [(ngModel)]=\"access\"> <label class=\"form-check-label\" for=\"accessAll\"> {{'groupAccessAllItems' | i18n}} </label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessSelected\" value=\"selected\" [(ngModel)]=\"access\"> <label class=\"form-check-label\" for=\"accessSelected\"> {{'groupAccessSelectedCollections' | i18n}} </label> </div> </div> <ng-container *ngIf=\"access === 'selected'\"> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <thead> <tr> <th>&nbsp;</th> <th>{{'name' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let c of collections; let i = index\"> <td class=\"table-list-checkbox\" (click)=\"check(c)\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td (click)=\"check(c)\"> {{c.name}} </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"c.hidePasswords\" name=\"Collection[{{i}}].HidePasswords\" [disabled]=\"!c.checked\"> </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"c.readOnly\" name=\"Collection[{{i}}].ReadOnly\" [disabled]=\"!c.checked\"> </td> </tr> </tbody> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" aria-hidden=\"true\" title=\"{{'loading' | i18n}}\"></i> </button> </div> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\n@Component({\n    selector: 'app-org-manage',\n    templateUrl: 'manage.component.html',\n})\nexport class ManageComponent implements OnInit {\n    organization: Organization;\n    accessPolicies = false;\n    accessGroups = false;\n    accessEvents = false;\n\n    constructor(private route: ActivatedRoute, private userService: UserService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.accessPolicies = this.organization.usePolicies;\n            this.accessEvents = this.organization.useEvents;\n            this.accessGroups = this.organization.useGroups;\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\" *ngIf=\"organization\"> <div class=\"card-header\">{{'manage' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"people\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canManageUsers\"> {{'people' | i18n}} </a> <a routerLink=\"collections\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canManageAssignedCollections || organization.canManageAllCollections\"> {{'collections' | i18n}} </a> <a routerLink=\"groups\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canManageGroups && accessGroups\"> {{'groups' | i18n}} </a> <a routerLink=\"policies\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canManagePolicies && accessPolicies\"> {{'policies' | i18n}} </a> <a routerLink=\"events\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canAccessEventLogs && accessEvents\"> {{'eventLogs' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ValidationService } from 'jslib-angular/services/validation.service';\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { OrganizationKeysRequest } from 'jslib-common/models/request/organizationKeysRequest';\nimport { OrganizationUserBulkRequest } from 'jslib-common/models/request/organizationUserBulkRequest';\nimport { OrganizationUserConfirmRequest } from 'jslib-common/models/request/organizationUserConfirmRequest';\n\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\nimport { OrganizationUserBulkResponse } from 'jslib-common/models/response/organizationUserBulkResponse';\nimport { OrganizationUserUserDetailsResponse } from 'jslib-common/models/response/organizationUserResponse';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { SearchPipe } from 'jslib-angular/pipes/search.pipe';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { ModalComponent } from '../../modal.component';\nimport { BulkConfirmComponent } from './bulk/bulk-confirm.component';\nimport { BulkRemoveComponent } from './bulk/bulk-remove.component';\nimport { BulkStatusComponent } from './bulk/bulk-status.component';\nimport { EntityEventsComponent } from './entity-events.component';\nimport { ResetPasswordComponent } from './reset-password.component';\nimport { UserAddEditComponent } from './user-add-edit.component';\nimport { UserConfirmComponent } from './user-confirm.component';\nimport { UserGroupsComponent } from './user-groups.component';\n\nconst MaxCheckedCount = 500;\n\n@Component({\n    selector: 'app-org-people',\n    templateUrl: 'people.component.html',\n})\nexport class PeopleComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('groupsTemplate', { read: ViewContainerRef, static: true }) groupsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef, static: true }) eventsModalRef: ViewContainerRef;\n    @ViewChild('confirmTemplate', { read: ViewContainerRef, static: true }) confirmModalRef: ViewContainerRef;\n    @ViewChild('resetPasswordTemplate', { read: ViewContainerRef, static: true }) resetPasswordModalRef: ViewContainerRef;\n    @ViewChild('bulkStatusTemplate', { read: ViewContainerRef, static: true }) bulkStatusModalRef: ViewContainerRef;\n    @ViewChild('bulkConfirmTemplate', { read: ViewContainerRef, static: true }) bulkConfirmModalRef: ViewContainerRef;\n    @ViewChild('bulkRemoveTemplate', { read: ViewContainerRef, static: true }) bulkRemoveModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    users: OrganizationUserUserDetailsResponse[];\n    pagedUsers: OrganizationUserUserDetailsResponse[];\n    searchText: string;\n    status: OrganizationUserStatusType = null;\n    statusMap = new Map<OrganizationUserStatusType, OrganizationUserUserDetailsResponse[]>();\n    organizationUserType = OrganizationUserType;\n    organizationUserStatusType = OrganizationUserStatusType;\n    actionPromise: Promise<any>;\n    accessEvents = false;\n    accessGroups = false;\n    canResetPassword = false; // User permission (admin/custom)\n    orgUseResetPassword = false; // Org plan ability\n    orgHasKeys = false; // Org public/private keys\n    orgResetPasswordPolicyEnabled = false;\n    callingUserType: OrganizationUserType = null;\n\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private pagedUsersCount = 0;\n    private modal: ModalComponent = null;\n    private allUsers: OrganizationUserUserDetailsResponse[];\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private platformUtilsService: PlatformUtilsService, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private userService: UserService, private router: Router,\n        private storageService: StorageService, private searchService: SearchService,\n        private validationService: ValidationService, private policyService: PolicyService,\n        private searchPipe: SearchPipe, private syncService: SyncService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (!organization.canManageUsers) {\n                this.router.navigate(['../collections'], { relativeTo: this.route });\n                return;\n            }\n            this.accessEvents = organization.useEvents;\n            this.accessGroups = organization.useGroups;\n            this.canResetPassword = organization.canManageUsersPassword;\n            this.orgUseResetPassword = organization.useResetPassword;\n            this.callingUserType = organization.type;\n            this.orgHasKeys = organization.hasPublicAndPrivateKeys;\n\n            // Backfill pub/priv key if necessary\n            if (this.canResetPassword && !this.orgHasKeys) {\n                const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n                const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n                const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n                const response = await this.apiService.postOrganizationKeys(this.organizationId, request);\n                if (response != null) {\n                    this.orgHasKeys = response.publicKey != null && response.privateKey != null;\n                    await this.syncService.fullSync(true); // Replace oganizations with new data\n                } else {\n                    throw new Error(this.i18nService.t('resetPasswordOrgKeysError'));\n                }\n            }\n\n            await this.load();\n\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                this.searchText = qParams.search;\n                if (qParams.viewEvents != null) {\n                    const user = this.users.filter(u => u.id === qParams.viewEvents);\n                    if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n                        this.events(user[0]);\n                    }\n                }\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getOrganizationUsers(this.organizationId);\n        this.statusMap.clear();\n        this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n        this.allUsers.sort(Utils.getSortFunction(this.i18nService, 'email'));\n        this.allUsers.forEach(u => {\n            if (!this.statusMap.has(u.status)) {\n                this.statusMap.set(u.status, [u]);\n            } else {\n                this.statusMap.get(u.status).push(u);\n            }\n        });\n        this.filter(this.status);\n        const policies = await this.policyService.getAll(PolicyType.ResetPassword);\n        this.orgResetPasswordPolicyEnabled = policies.some(p => p.organizationId === this.organizationId && p.enabled);\n        this.loading = false;\n    }\n\n    allowResetPassword(orgUser: OrganizationUserUserDetailsResponse): boolean {\n        // Hierarchy check\n        let callingUserHasPermission = false;\n\n        switch (this.callingUserType) {\n            case OrganizationUserType.Owner:\n                callingUserHasPermission = true;\n                break;\n            case OrganizationUserType.Admin:\n                callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner;\n                break;\n            case OrganizationUserType.Custom:\n                callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner\n                    && orgUser.type !== OrganizationUserType.Admin;\n                break;\n        }\n\n        // Final\n        return this.canResetPassword && callingUserHasPermission && this.orgUseResetPassword && this.orgHasKeys\n            && orgUser.resetPasswordEnrolled && this.orgResetPasswordPolicyEnabled\n            && orgUser.status === OrganizationUserStatusType.Confirmed;\n    }\n\n    showEnrolledStatus(orgUser: OrganizationUserUserDetailsResponse): boolean {\n        return this.orgUseResetPassword && orgUser.resetPasswordEnrolled && this.orgResetPasswordPolicyEnabled;\n    }\n\n    filter(status: OrganizationUserStatusType) {\n        this.status = status;\n        if (this.status != null) {\n            this.users = this.statusMap.get(this.status);\n        } else {\n            this.users = this.allUsers;\n        }\n        // Reset checkbox selecton\n        this.selectAll(false);\n        this.resetPaging();\n    }\n\n    loadMore() {\n        if (!this.users || this.users.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedUsers.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n            pagedSize = this.pagedUsersCount;\n        }\n        if (this.users.length > pagedLength) {\n            this.pagedUsers = this.pagedUsers.concat(this.users.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedUsersCount = this.pagedUsers.length;\n        this.didScroll = this.pagedUsers.length > this.pageSize;\n    }\n\n    get allCount() {\n        return this.allUsers != null ? this.allUsers.length : 0;\n    }\n\n    get invitedCount() {\n        return this.statusMap.has(OrganizationUserStatusType.Invited) ?\n            this.statusMap.get(OrganizationUserStatusType.Invited).length : 0;\n    }\n\n    get acceptedCount() {\n        return this.statusMap.has(OrganizationUserStatusType.Accepted) ?\n            this.statusMap.get(OrganizationUserStatusType.Accepted).length : 0;\n    }\n\n    get confirmedCount() {\n        return this.statusMap.has(OrganizationUserStatusType.Confirmed) ?\n            this.statusMap.get(OrganizationUserStatusType.Confirmed).length : 0;\n    }\n\n    get showConfirmUsers(): boolean {\n        return this.allUsers != null && this.statusMap != null && this.allUsers.length > 1 &&\n            this.confirmedCount > 0 && this.confirmedCount < 3 && this.acceptedCount > 0;\n    }\n\n    get showBulkConfirmUsers(): boolean {\n        return this.acceptedCount > 0;\n    }\n\n    edit(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<UserAddEditComponent>(\n            UserAddEditComponent, this.addEditModalRef);\n\n        childComponent.name = user != null ? user.name || user.email : null;\n        childComponent.organizationId = this.organizationId;\n        childComponent.organizationUserId = user != null ? user.id : null;\n        childComponent.onSavedUser.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeletedUser.subscribe(() => {\n            this.modal.close();\n            this.removeUser(user);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    invite() {\n        this.edit(null);\n    }\n\n    groups(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.groupsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<UserGroupsComponent>(\n            UserGroupsComponent, this.groupsModalRef);\n\n        childComponent.name = user != null ? user.name || user.email : null;\n        childComponent.organizationId = this.organizationId;\n        childComponent.organizationUserId = user != null ? user.id : null;\n        childComponent.onSavedUser.subscribe(() => {\n            this.modal.close();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async remove(user: OrganizationUserUserDetailsResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), user.name || user.email,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        this.actionPromise = this.apiService.deleteOrganizationUser(this.organizationId, user.id);\n        try {\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', user.name || user.email));\n            this.removeUser(user);\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async reinvite(user: OrganizationUserUserDetailsResponse) {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        this.actionPromise = this.apiService.postOrganizationUserReinvite(this.organizationId, user.id);\n        try {\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenReinvited', user.name || user.email));\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async bulkRemove() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkRemoveModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show(BulkRemoveComponent, this.bulkRemoveModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.users = this.getCheckedUsers();\n\n        this.modal.onClosed.subscribe(async () => {\n            await this.load();\n            this.modal = null;\n        });\n    }\n\n    async bulkReinvite() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const users = this.getCheckedUsers();\n        const filteredUsers = users.filter(u => u.status === OrganizationUserStatusType.Invited);\n\n        if (filteredUsers.length <= 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('noSelectedUsersApplicable'));\n            return;\n        }\n\n\n        try {\n            const request = new OrganizationUserBulkRequest(filteredUsers.map(user => user.id));\n            const response = this.apiService.postManyOrganizationUserReinvite(this.organizationId, request);\n            this.showBulkStatus(users, filteredUsers, response, this.i18nService.t('bulkReinviteMessage'));\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async bulkConfirm() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkConfirmModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show(BulkConfirmComponent, this.bulkConfirmModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.users = this.getCheckedUsers();\n\n        this.modal.onClosed.subscribe(async () => {\n            await this.load();\n            this.modal = null;\n        });\n    }\n\n    async confirm(user: OrganizationUserUserDetailsResponse) {\n        function updateUser(self: PeopleComponent) {\n            user.status = OrganizationUserStatusType.Confirmed;\n            const mapIndex = self.statusMap.get(OrganizationUserStatusType.Accepted).indexOf(user);\n            if (mapIndex > -1) {\n                self.statusMap.get(OrganizationUserStatusType.Accepted).splice(mapIndex, 1);\n                self.statusMap.get(OrganizationUserStatusType.Confirmed).push(user);\n            }\n        }\n\n        const confirmUser = async (publicKey: Uint8Array) => {\n            try {\n                this.actionPromise = this.doConfirmation(user, publicKey);\n                await this.actionPromise;\n                updateUser(this);\n                this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', user.name || user.email));\n            } catch (e) {\n                this.validationService.showError(e);\n                throw e;\n            } finally {\n                this.actionPromise = null;\n            }\n        };\n\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const autoConfirm = await this.storageService.get<boolean>(ConstantsService.autoConfirmFingerprints);\n        if (autoConfirm == null || !autoConfirm) {\n            if (this.modal != null) {\n                this.modal.close();\n            }\n\n            const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n            this.modal = this.confirmModalRef.createComponent(factory).instance;\n            const childComponent = this.modal.show<UserConfirmComponent>(\n                UserConfirmComponent, this.confirmModalRef);\n\n            childComponent.name = user != null ? user.name || user.email : null;\n            childComponent.organizationId = this.organizationId;\n            childComponent.organizationUserId = user != null ? user.id : null;\n            childComponent.userId = user != null ? user.userId : null;\n            childComponent.onConfirmedUser.subscribe(async (publicKey: Uint8Array) => {\n                try {\n                    await confirmUser(publicKey);\n                    this.modal.close();\n                } catch (e) {\n                    // tslint:disable-next-line\n                    console.error('Handled exception:', e);\n                }\n            });\n\n            this.modal.onClosed.subscribe(() => {\n                this.modal = null;\n            });\n            return;\n        }\n\n        try {\n            const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n            const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n            try {\n                // tslint:disable-next-line\n                console.log('User\\'s fingerprint: ' +\n                    (await this.cryptoService.getFingerprint(user.userId, publicKey.buffer)).join('-'));\n            } catch { }\n            await confirmUser(publicKey);\n        } catch (e) {\n            // tslint:disable-next-line\n            console.error('Handled exception:', e);\n        }\n    }\n\n    async events(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.eventsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityEventsComponent>(\n            EntityEventsComponent, this.eventsModalRef);\n\n        childComponent.name = user.name || user.email;\n        childComponent.organizationId = this.organizationId;\n        childComponent.entityId = user.id;\n        childComponent.showUser = false;\n        childComponent.entity = 'user';\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async resetPaging() {\n        this.pagedUsers = [];\n        this.loadMore();\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.users && this.users.length > this.pageSize;\n    }\n\n    async resetPassword(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.resetPasswordModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ResetPasswordComponent>(\n            ResetPasswordComponent, this.resetPasswordModalRef);\n\n        childComponent.name = user != null ? user.name || user.email : null;\n        childComponent.email = user != null ? user.email : null;\n        childComponent.organizationId = this.organizationId;\n        childComponent.id = user != null ? user.id : null;\n\n        childComponent.onPasswordReset.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    checkUser(user: OrganizationUserUserDetailsResponse, select?: boolean) {\n        (user as any).checked = select == null ? !(user as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        if (select) {\n            this.selectAll(false);\n        }\n\n        const filteredUsers = this.searchPipe.transform(this.users, this.searchText, 'name', 'email', 'id');\n\n        const selectCount = select && filteredUsers.length > MaxCheckedCount\n            ? MaxCheckedCount\n            : filteredUsers.length;\n        for (let i = 0; i < selectCount; i++) {\n            this.checkUser(filteredUsers[i], select);\n        }\n    }\n\n    private async showBulkStatus(users: OrganizationUserUserDetailsResponse[], filteredUsers: OrganizationUserUserDetailsResponse[],\n        request: Promise<ListResponse<OrganizationUserBulkResponse>>, successfullMessage: string) {\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkStatusModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkStatusComponent>(\n            BulkStatusComponent, this.bulkStatusModalRef);\n\n        childComponent.loading = true;\n\n        // Workaround to handle closing the modal shortly after it has been opened\n        let close = false;\n        this.modal.onShown.subscribe(() => {\n            if (close) {\n                this.modal.close();\n            }\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        try {\n            const response = await request;\n\n            if (this.modal) {\n                const keyedErrors: any = response.data.filter(r => r.error !== '').reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n                const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n                childComponent.users = users.map(user => {\n                    let message = keyedErrors[user.id] ?? successfullMessage;\n                    if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n                        message = this.i18nService.t('bulkFilteredMessage');\n                    }\n\n                    return {\n                        user: user,\n                        error: keyedErrors.hasOwnProperty(user.id),\n                        message: message,\n                    };\n                });\n                childComponent.loading = false;\n            }\n        } catch {\n            close = true;\n            if (this.modal) {\n                this.modal.close();\n            }\n        }\n    }\n\n    private async doConfirmation(user: OrganizationUserUserDetailsResponse, publicKey: Uint8Array) {\n        const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n        const request = new OrganizationUserConfirmRequest();\n        request.key = key.encryptedString;\n        await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n    }\n\n    private removeUser(user: OrganizationUserUserDetailsResponse) {\n        let index = this.users.indexOf(user);\n        if (index > -1) {\n            this.users.splice(index, 1);\n            this.resetPaging();\n        }\n        if (this.statusMap.has(OrganizationUserStatusType.Accepted)) {\n            index = this.statusMap.get(OrganizationUserStatusType.Accepted).indexOf(user);\n            if (index > -1) {\n                this.statusMap.get(OrganizationUserStatusType.Accepted).splice(index, 1);\n            }\n        }\n        if (this.statusMap.has(OrganizationUserStatusType.Invited)) {\n            index = this.statusMap.get(OrganizationUserStatusType.Invited).indexOf(user);\n            if (index > -1) {\n                this.statusMap.get(OrganizationUserStatusType.Invited).splice(index, 1);\n            }\n        }\n        if (this.statusMap.has(OrganizationUserStatusType.Confirmed)) {\n            index = this.statusMap.get(OrganizationUserStatusType.Confirmed).indexOf(user);\n            if (index > -1) {\n                this.statusMap.get(OrganizationUserStatusType.Confirmed).splice(index, 1);\n            }\n        }\n    }\n\n    private getCheckedUsers() {\n        return this.users.filter(u => (u as any).checked);\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'people' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div class=\"btn-group btn-group-sm\" role=\"group\"> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == null}\" (click)=\"filter(null)\"> {{'all' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"allCount\">{{allCount}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == organizationUserStatusType.Invited}\" (click)=\"filter(organizationUserStatusType.Invited)\"> {{'invited' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"invitedCount\">{{invitedCount}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == organizationUserStatusType.Accepted}\" (click)=\"filter(organizationUserStatusType.Accepted)\"> {{'accepted' | i18n}} <span class=\"badge badge-pill badge-warning\" *ngIf=\"acceptedCount\">{{acceptedCount}}</span> </button> </div> <div class=\"ml-3\"> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <div class=\"dropdown ml-3\" appListDropdown> <button class=\"btn btn-sm btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"bulkActionsButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\"> <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'reinviteSelected' | i18n}} </button> <button class=\"dropdown-item text-success\" appStopClick (click)=\"bulkConfirm()\" *ngIf=\"showBulkConfirmUsers\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirmSelected' | i18n}} </button> <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </button> <div class=\"dropdown-divider\"></div> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\"> <i class=\"fa fa-fw fa-check-square-o\" aria-hidden=\"true\"></i> {{'selectAll' | i18n}} </button> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\"> <i class=\"fa fa-fw fa-minus-square-o\" aria-hidden=\"true\"></i> {{'unselectAll' | i18n}} </button> </div> </div> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'inviteUser' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (isPaging() ? pagedUsers : users | search:searchText:'name':'email':'id') as searchedUsers\"> <p *ngIf=\"!searchedUsers.length\">{{'noUsersInList' | i18n}}</p> <ng-container *ngIf=\"searchedUsers.length\"> <app-callout type=\"info\" title=\"{{'confirmUsers' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"showConfirmUsers\"> {{'usersNeedConfirmed' | i18n}} </app-callout> <table class=\"table table-hover table-list\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let u of searchedUsers\"> <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp> </td> <td width=\"30\"> <app-avatar [data]=\"u.name || u.email\" [email]=\"u.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" appStopClick (click)=\"edit(u)\">{{u.email}}</a> <span class=\"badge badge-secondary\" *ngIf=\"u.status === organizationUserStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"u.status === organizationUserStatusType.Accepted\">{{'accepted' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small> </td> <td> <ng-container *ngIf=\"u.twoFactorEnabled\"> <i class=\"fa fa-lock\" title=\"{{'userUsingTwoStep' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'userUsingTwoStep' | i18n}}</span> </ng-container> <ng-container *ngIf=\"showEnrolledStatus(u)\"> <i class=\"fa fa-key\" title=\"{{'enrolledPasswordReset' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'enrolledPasswordReset' | i18n}}</span> </ng-container> </td> <td> <span *ngIf=\"u.type === organizationUserType.Owner\">{{'owner' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.Admin\">{{'admin' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.Manager\">{{'manager' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.User\">{{'user' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.Custom\">{{'custom' | i18n}}</span> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"reinvite(u)\" *ngIf=\"u.status === organizationUserStatusType.Invited\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'resendInvitation' | i18n}} </a> <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"confirm(u)\" *ngIf=\"u.status === organizationUserStatusType.Accepted\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirm' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"groups(u)\" *ngIf=\"accessGroups\"> <i class=\"fa fa-fw fa-sitemap\" aria-hidden=\"true\"></i> {{'groups' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"events(u)\" *ngIf=\"accessEvents && u.status === organizationUserStatusType.Confirmed\"> <i class=\"fa fa-fw fa-file-text-o\" aria-hidden=\"true\"></i> {{'eventLogs' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"resetPassword(u)\" *ngIf=\"allowResetPassword(u)\"> <i class=\"fa fa-fw fa-key\" aria-hidden=\"true\"></i> {{'resetPassword' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </ng-container> <ng-template #addEdit></ng-template> <ng-template #groupsTemplate></ng-template> <ng-template #eventsTemplate></ng-template> <ng-template #confirmTemplate></ng-template> <ng-template #resetPasswordTemplate></ng-template> <ng-template #bulkStatusTemplate></ng-template> <ng-template #bulkConfirmTemplate></ng-template> <ng-template #bulkRemoveTemplate></ng-template> ","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { OrganizationUserBulkConfirmRequest } from 'jslib-common/models/request/organizationUserBulkConfirmRequest';\nimport { OrganizationUserBulkRequest } from 'jslib-common/models/request/organizationUserBulkRequest';\n\nimport { OrganizationUserUserDetailsResponse } from 'jslib-common/models/response/organizationUserResponse';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-bulk-confirm',\n    templateUrl: 'bulk-confirm.component.html',\n})\nexport class BulkConfirmComponent implements OnInit {\n\n    @Input() organizationId: string;\n    @Input() users: OrganizationUserUserDetailsResponse[];\n\n    excludedUsers: OrganizationUserUserDetailsResponse[];\n    filteredUsers: OrganizationUserUserDetailsResponse[];\n    publicKeys: Map<string, Uint8Array> = new Map();\n    fingerprints: Map<string, string> = new Map();\n    statuses: Map<string, string> = new Map();\n\n    loading: boolean = true;\n    done: boolean = false;\n    error: string;\n\n    constructor(private cryptoService: CryptoService, private apiService: ApiService,\n      private i18nService: I18nService) { }\n\n    async ngOnInit() {\n        this.excludedUsers = this.users.filter(user => user.status !== OrganizationUserStatusType.Accepted);\n        this.filteredUsers = this.users.filter(user => user.status === OrganizationUserStatusType.Accepted);\n\n        if (this.filteredUsers.length <= 0) {\n            this.done = true;\n        }\n\n        const request = new OrganizationUserBulkRequest(this.filteredUsers.map(user => user.id));\n        const response = await this.apiService.postOrganizationUsersPublicKey(this.organizationId, request);\n\n        for (const entry of response.data) {\n            const publicKey = Utils.fromB64ToArray(entry.key);\n            const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n            if (fingerprint != null) {\n                this.publicKeys.set(entry.id, publicKey);\n                this.fingerprints.set(entry.id, fingerprint.join('-'));\n            }\n        }\n\n        this.loading = false;\n    }\n\n    async submit() {\n        this.loading = true;\n        try {\n            const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n            const userIdsWithKeys: any[] = [];\n            for (const user of this.filteredUsers) {\n                const publicKey = this.publicKeys.get(user.id);\n                if (publicKey == null) {\n                    continue;\n                }\n                const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n                userIdsWithKeys.push({\n                    id: user.id,\n                    key: key.encryptedString,\n                });\n            }\n            const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n            const response = await this.apiService.postOrganizationUserBulkConfirm(this.organizationId, request);\n\n            response.data.forEach(entry => {\n                const error = entry.error !== '' ? entry.error : this.i18nService.t('bulkConfirmMessage');\n                this.statuses.set(entry.id, error);\n            });\n\n            this.done = true;\n        } catch (e) {\n            this.error = e.message;\n        }\n        this.loading = false;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"bulkTitle\"> {{'confirmUsers' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"card-body text-center\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\"> {{'noSelectedUsersApplicable' | i18n}} </app-callout> <app-callout type=\"error\" *ngIf=\"error\"> {{error}} </app-callout> <ng-container *ngIf=\"!loading && !done\"> <p> {{'fingerprintEnsureIntegrityVerify' | i18n}} <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}}</a> </p> <table class=\"table table-hover table-list\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> <th>{{'fingerprint' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let user of filteredUsers\"> <td width=\"30\"> <app-avatar [data]=\"user.name || user.email\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> <td> {{fingerprints.get(user.id)}} </td> </tr> <tr *ngFor=\"let user of excludedUsers\"> <td width=\"30\"> <app-avatar [data]=\"user.name || user.email\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> <td> {{'bulkFilteredMessage' | i18n}} </td> </tr> </table> </ng-container> <ng-container *ngIf=\"!loading && done\"> <table class=\"table table-hover table-list\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> <th>{{'status' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let user of filteredUsers\"> <td width=\"30\"> <app-avatar [data]=\"user.name || user.email\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> <td *ngIf=\"statuses.has(user.id)\"> {{statuses.get(user.id)}} </td> <td *ngIf=\"!statuses.has(user.id)\"> {{'bulkFilteredMessage' | i18n}} </td> </tr> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" *ngIf=\"!done\" [disabled]=\"loading\" (click)=\"submit()\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'confirm' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","import {\n    Component,\n    Input,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { OrganizationUserBulkRequest } from 'jslib-common/models/request/organizationUserBulkRequest';\n\nimport { OrganizationUserUserDetailsResponse } from 'jslib-common/models/response/organizationUserResponse';\n\n@Component({\n    selector: 'app-bulk-remove',\n    templateUrl: 'bulk-remove.component.html',\n})\nexport class BulkRemoveComponent {\n\n    @Input() organizationId: string;\n    @Input() users: OrganizationUserUserDetailsResponse[];\n\n    statuses: Map<string, string> = new Map();\n\n    loading: boolean = false;\n    done: boolean = false;\n    error: string;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService) { }\n\n    async submit() {\n        this.loading = true;\n        try {\n            const request = new OrganizationUserBulkRequest(this.users.map(user => user.id));\n            const response = await this.apiService.deleteManyOrganizationUsers(this.organizationId, request);\n\n            response.data.forEach(entry => {\n                const error = entry.error !== '' ? entry.error : this.i18nService.t('bulkRemovedMessage');\n                this.statuses.set(entry.id, error);\n            });\n            this.done = true;\n        } catch (e) {\n            this.error = e.message;\n        }\n\n        this.loading = false;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"bulkTitle\"> {{'removeUsers' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"card-body text-center\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <app-callout type=\"danger\" *ngIf=\"users.length <= 0\"> {{'noSelectedUsersApplicable' | i18n}} </app-callout> <app-callout type=\"error\" *ngIf=\"error\"> {{error}} </app-callout> <ng-container *ngIf=\"!loading && !done\"> <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\"> {{'removeUsersWarning' | i18n}} </app-callout> <table class=\"table table-hover table-list\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let user of users\"> <td width=\"30\"> <app-avatar [data]=\"user.name || user.email\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> </tr> </table> </ng-container> <ng-container *ngIf=\"!loading && done\"> <table class=\"table table-hover table-list\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> <th>{{'status' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let user of users\"> <td width=\"30\"> <app-avatar [data]=\"user.name || user.email\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> <td *ngIf=\"statuses.has(user.id)\"> {{statuses.get(user.id)}} </td> <td *ngIf=\"!statuses.has(user.id)\"> {{'bulkFilteredMessage' | i18n}} </td> </tr> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" *ngIf=\"!done && users.length > 0\" [disabled]=\"loading\" (click)=\"submit()\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'removeUsers' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { OrganizationUserUserDetailsResponse } from 'jslib-common/models/response/organizationUserResponse';\n\ntype BulkStatusEntry = {\n    user: OrganizationUserUserDetailsResponse,\n    error: boolean,\n    message: string,\n};\n\n@Component({\n    selector: 'app-bulk-status',\n    templateUrl: 'bulk-status.component.html',\n})\nexport class BulkStatusComponent {\n\n    users: BulkStatusEntry[];\n    loading: boolean = false;\n\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"bulkTitle\"> {{'bulkConfirmStatus' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"card-body text-center\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <table class=\"table table-hover table-list\" *ngIf=\"!loading\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> <th>{{'status' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let item of users\"> <td width=\"30\"> <app-avatar [data]=\"item.user.name || item.user.email\" [email]=\"item.user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{item.user.email}} <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{item.user.name}}</small> </td> <td class=\"text-danger\" *ngIf=\"item.error\"> {{item.message}} </td> <td *ngIf=\"!item.error\"> {{item.message}} </td> </tr> </table> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\nimport { OrganizationUserResetPasswordRequest } from 'jslib-common/models/request/organizationUserResetPasswordRequest';\n\n@Component({\n    selector: 'app-reset-password',\n    templateUrl: 'reset-password.component.html',\n})\nexport class ResetPasswordComponent implements OnInit {\n    @Input() name: string;\n    @Input() email: string;\n    @Input() id: string;\n    @Input() organizationId: string;\n    @Output() onPasswordReset = new EventEmitter();\n\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n    newPassword: string = null;\n    showPassword: boolean = false;\n    masterPasswordScore: number;\n    formPromise: Promise<any>;\n    private newPasswordStrengthTimeout: any;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private passwordGenerationService: PasswordGenerationService,\n        private policyService: PolicyService, private cryptoService: CryptoService) { }\n\n    async ngOnInit() {\n        // Get Enforced Policy Options\n        this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    }\n\n    get loggedOutWarningName() {\n        return this.name != null ? this.name : this.i18nService.t('thisUser');\n    }\n\n    getPasswordScoreAlertDisplay() {\n        if (this.enforcedPolicyOptions == null) {\n            return '';\n        }\n\n        let str: string;\n        switch (this.enforcedPolicyOptions.minComplexity) {\n            case 4:\n                str = this.i18nService.t('strong');\n                break;\n            case 3:\n                str = this.i18nService.t('good');\n                break;\n            default:\n                str = this.i18nService.t('weak');\n                break;\n        }\n        return str + ' (' + this.enforcedPolicyOptions.minComplexity + ')';\n    }\n\n    async generatePassword() {\n        const options = (await this.passwordGenerationService.getOptions())[0];\n        this.newPassword = await this.passwordGenerationService.generatePassword(options);\n        this.updatePasswordStrength();\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('newPassword').focus();\n    }\n\n    copy(value: string) {\n        if (value == null) {\n            return;\n        }\n\n        this.platformUtilsService.copyToClipboard(value, { window: window });\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n\n    async submit() {\n        // Validation\n        if (this.newPassword == null || this.newPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return false;\n        }\n\n        if (this.newPassword.length < 8) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return false;\n        }\n\n        if (this.enforcedPolicyOptions != null &&\n            !this.policyService.evaluateMasterPassword(this.masterPasswordScore, this.newPassword,\n                this.enforcedPolicyOptions)) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));\n            return;\n        }\n\n        if (this.masterPasswordScore < 3) {\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\n                'warning');\n            if (!result) {\n                return false;\n            }\n        }\n\n        // Get user Information (kdf type, kdf iterations, resetPasswordKey, private key) and change password\n        try {\n            this.formPromise = this.apiService.getOrganizationUserResetPasswordDetails(this.organizationId, this.id)\n                .then(async response => {\n                    if (response == null) {\n                        throw new Error(this.i18nService.t('resetPasswordDetailsError'));\n                    }\n\n                    const kdfType = response.kdf;\n                    const kdfIterations = response.kdfIterations;\n                    const resetPasswordKey = response.resetPasswordKey;\n                    const encryptedPrivateKey = response.encryptedPrivateKey;\n\n                    // Decrypt Organization's encrypted Private Key with org key\n                    const orgSymKey = await this.cryptoService.getOrgKey(this.organizationId);\n                    const decPrivateKey = await this.cryptoService.decryptToBytes(new EncString(encryptedPrivateKey), orgSymKey);\n\n                    // Decrypt User's Reset Password Key to get EncKey\n                    const decValue = await this.cryptoService.rsaDecrypt(resetPasswordKey, decPrivateKey);\n                    const userEncKey = new SymmetricCryptoKey(decValue);\n\n                    // Create new key and hash new password\n                    const newKey = await this.cryptoService.makeKey(this.newPassword, this.email.trim().toLowerCase(),\n                        kdfType, kdfIterations);\n                    const newPasswordHash = await this.cryptoService.hashPassword(this.newPassword, newKey);\n\n                    // Create new encKey for the User\n                    const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n                    // Create request\n                    const request = new OrganizationUserResetPasswordRequest();\n                    request.key = newEncKey[1].encryptedString;\n                    request.newMasterPasswordHash = newPasswordHash;\n\n                    // Change user's password\n                    return this.apiService.putOrganizationUserResetPassword(this.organizationId, this.id, request);\n                });\n\n            await this.formPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('resetPasswordSuccess'));\n            this.onPasswordReset.emit();\n        } catch { }\n    }\n\n    updatePasswordStrength() {\n        if (this.newPasswordStrengthTimeout != null) {\n            clearTimeout(this.newPasswordStrengthTimeout);\n        }\n        this.newPasswordStrengthTimeout = setTimeout(() => {\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.newPassword,\n                this.getPasswordStrengthUserInput());\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n        }, 300);\n    }\n\n    private getPasswordStrengthUserInput() {\n        let userInput: string[] = [];\n        const atPosition = this.email.indexOf('@');\n        if (atPosition > -1) {\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\n        }\n        if (this.name != null && this.name !== '') {\n            userInput = userInput.concat(this.name.trim().toLowerCase().split(' '));\n        }\n        return userInput;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"resetPasswordTitle\"> <div class=\"modal-dialog\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"resetPasswordTitle\"> {{'resetPassword' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <app-callout type=\"warning\">{{'resetPasswordLoggedOutWarning' | i18n: loggedOutWarningName}} </app-callout> <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\"> {{'resetPasswordMasterPasswordPolicyInEffect' | i18n}} <ul class=\"mb-0\"> <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\"> {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}} </li> <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\"> {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}} </li> <li *ngIf=\"enforcedPolicyOptions?.requireUpper\"> {{'policyInEffectUppercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireLower\"> {{'policyInEffectLowercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\"> {{'policyInEffectNumbers' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\"> {{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li> </ul> </app-callout> <div class=\"row\"> <div class=\"col form-group\"> <div class=\"d-flex\"> <label for=\"newPassword\">{{'newPassword' | i18n}}</label> <div class=\"ml-auto d-flex\"> <a href=\"#\" class=\"d-block mr-2 fa-icon-above-input\" appStopClick appA11yTitle=\"{{'generatePassword' | i18n}}\" (click)=\"generatePassword()\"> <i class=\"fa fa-lg fa-fw fa-refresh\" aria-hidden=\"true\"></i> </a> </div> </div> <div class=\"input-group mb-1\"> <input id=\"newPassword\" class=\"form-control text-monospace\" appAutofocus type=\"{{showPassword ? 'text' : 'password'}}\" name=\"NewPassword\" [(ngModel)]=\"newPassword\" required appInputVerbatim autocomplete=\"new-password\" (input)=\"updatePasswordStrength()\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyPassword' | i18n}}\" (click)=\"copy(newPassword)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CollectionData } from 'jslib-common/models/data/collectionData';\nimport { Collection } from 'jslib-common/models/domain/collection';\nimport { OrganizationUserInviteRequest } from 'jslib-common/models/request/organizationUserInviteRequest';\nimport { OrganizationUserUpdateRequest } from 'jslib-common/models/request/organizationUserUpdateRequest';\nimport { SelectionReadOnlyRequest } from 'jslib-common/models/request/selectionReadOnlyRequest';\nimport { CollectionDetailsResponse } from 'jslib-common/models/response/collectionResponse';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { PermissionsApi } from 'jslib-common/models/api/permissionsApi';\n\n@Component({\n    selector: 'app-user-add-edit',\n    templateUrl: 'user-add-edit.component.html',\n})\nexport class UserAddEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Output() onSavedUser = new EventEmitter();\n    @Output() onDeletedUser = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    emails: string;\n    type: OrganizationUserType = OrganizationUserType.User;\n    permissions = new PermissionsApi();\n    showCustom = false;\n    access: 'all' | 'selected' = 'selected';\n    collections: CollectionView[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    organizationUserType = OrganizationUserType;\n\n    get customUserTypeSelected(): boolean {\n        return this.type === OrganizationUserType.Custom;\n    }\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private collectionService: CollectionService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.organizationUserId != null;\n        await this.loadCollections();\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editUser');\n            try {\n                const user = await this.apiService.getOrganizationUser(this.organizationId, this.organizationUserId);\n                this.access = user.accessAll ? 'all' : 'selected';\n                this.type = user.type;\n                if (user.type === OrganizationUserType.Custom) {\n                    this.permissions = user.permissions;\n                }\n                if (user.collections != null && this.collections != null) {\n                    user.collections.forEach(s => {\n                        const collection = this.collections.filter(c => c.id === s.id);\n                        if (collection != null && collection.length > 0) {\n                            (collection[0] as any).checked = true;\n                            collection[0].readOnly = s.readOnly;\n                            collection[0].hidePasswords = s.hidePasswords;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('inviteUser');\n        }\n\n        this.loading = false;\n    }\n\n    async loadCollections() {\n        const response = await this.apiService.getCollections(this.organizationId);\n        const collections = response.data.map(r =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n        if (!(c as any).checked) {\n            c.readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach(c => this.check(c, select));\n    }\n\n    setRequestPermissions(p: PermissionsApi, clearPermissions: boolean) {\n        p.accessBusinessPortal = clearPermissions ?\n            false :\n            this.permissions.accessBusinessPortal;\n        p.accessEventLogs = this.permissions.accessEventLogs = clearPermissions ?\n            false :\n            this.permissions.accessEventLogs;\n        p.accessImportExport = clearPermissions ?\n            false :\n            this.permissions.accessImportExport;\n        p.accessReports = clearPermissions ?\n            false :\n            this.permissions.accessReports;\n        p.manageAllCollections = clearPermissions ?\n            false :\n            this.permissions.manageAllCollections;\n        p.manageAssignedCollections = clearPermissions ?\n            false :\n            this.permissions.manageAssignedCollections;\n        p.manageGroups = clearPermissions ?\n            false :\n            this.permissions.manageGroups;\n        p.manageSso = clearPermissions ?\n            false :\n            this.permissions.manageSso;\n        p.managePolicies = clearPermissions ?\n            false :\n            this.permissions.managePolicies;\n        p.manageUsers = clearPermissions ?\n            false :\n            this.permissions.manageUsers;\n        p.manageResetPassword = clearPermissions ?\n            false :\n            this.permissions.manageResetPassword;\n        return p;\n    }\n\n    handleDependentPermissions() {\n        // Manage Password Reset must have Manage Users enabled\n        if (this.permissions.manageResetPassword && !this.permissions.manageUsers) {\n            this.permissions.manageUsers = true;\n            (document.getElementById('manageUsers') as HTMLInputElement).checked = true;\n            this.platformUtilsService.showToast('info', null, this.i18nService.t('resetPasswordManageUsers'));\n        }\n    }\n\n    async submit() {\n        let collections: SelectionReadOnlyRequest[] = null;\n        if (this.access !== 'all') {\n            collections = this.collections.filter(c => (c as any).checked)\n                .map(c => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n        }\n\n        try {\n            if (this.editMode) {\n                const request = new OrganizationUserUpdateRequest();\n                request.accessAll = this.access === 'all';\n                request.type = this.type;\n                request.collections = collections;\n                request.permissions = this.setRequestPermissions(request.permissions ?? new PermissionsApi(), request.type !== OrganizationUserType.Custom);\n                this.formPromise = this.apiService.putOrganizationUser(this.organizationId, this.organizationUserId,\n                    request);\n            } else {\n                const request = new OrganizationUserInviteRequest();\n                request.emails = this.emails.trim().split(/\\s*,\\s*/);\n                request.accessAll = this.access === 'all';\n                request.type = this.type;\n                request.permissions = this.setRequestPermissions(request.permissions ?? new PermissionsApi(), request.type !== OrganizationUserType.Custom);\n                request.collections = collections;\n                this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedUserId' : 'invitedUsers', this.name));\n            this.onSavedUser.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteOrganizationUser(this.organizationId, this.organizationUserId);\n            await this.deletePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.name));\n            this.onDeletedUser.emit();\n        } catch { }\n    }\n\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAddEditTitle\"> {{title}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <ng-container *ngIf=\"!editMode\"> <p>{{'inviteUserDesc' | i18n}}</p> <div class=\"form-group mb-4\"> <label for=\"emails\">{{'email' | i18n}}</label> <input id=\"emails\" class=\"form-control\" type=\"text\" name=\"Emails\" [(ngModel)]=\"emails\" required appAutoFocus> <small class=\"text-muted\">{{'inviteMultipleEmailDesc' | i18n : '20'}}</small> </div> </ng-container> <h3> {{'userType' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/user-types-access-control/#user-types\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </h3> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeUser\" [value]=\"organizationUserType.User\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeUser\"> {{'user' | i18n}} <small>{{'userDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeManager\" [value]=\"organizationUserType.Manager\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeManager\"> {{'manager' | i18n}} <small>{{'managerDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeAdmin\" [value]=\"organizationUserType.Admin\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeAdmin\"> {{'admin' | i18n}} <small>{{'adminDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeOwner\" [value]=\"organizationUserType.Owner\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeOwner\"> {{'owner' | i18n}} <small>{{'ownerDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeCustom\" [value]=\"organizationUserType.Custom\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeCustom\"> {{'custom' | i18n}} <small>{{'customDesc' | i18n}}</small> </label> </div> <ng-container *ngIf=\"customUserTypeSelected\"> <h3 class=\"mt-4 d-flex\"> {{'permissions' | i18n}} </h3> <div class=\"row\"> <div class=\"col-6\"> <div class=\"mb-3\"> <label class=\"font-weight-bold mb-0\">Manager Permissions</label> <hr class=\"my-0 mr-2\"/> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageAssignedCollections\" id=\"manageAssignedCollections\" [(ngModel)]=\"permissions.manageAssignedCollections\"> <label class=\"form-check-label font-weight-normal\" for=\"manageAssignedCollections\"> {{'manageAssignedCollections' | i18n}} </label> </div> </div> </div> </div> <div class=\"col-6\"> <div class=\"mb-3\"> <label class=\"font-weight-bold mb-0\">Admin Permissions</label> <hr class=\"my-0 mr-2\"/> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"accessBusinessPortal\" id=\"accessBusinessPortal\" [(ngModel)]=\"permissions.accessBusinessPortal\"> <label class=\"form-check-label font-weight-normal\" for=\"accessBusinessPortal\"> {{'accessBusinessPortal' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"accessEventLogs\" id=\"accessEventLogs\" [(ngModel)]=\"permissions.accessEventLogs\"> <label class=\"form-check-label font-weight-normal\" for=\"accessEventLogs\"> {{'accessEventLogs' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"accessImportExport\" id=\"accessImportExport\" [(ngModel)]=\"permissions.accessImportExport\"> <label class=\"form-check-label font-weight-normal\" for=\"accessImportExport\"> {{'accessImportExport' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"accessReports\" id=\"accessReports\" [(ngModel)]=\"permissions.accessReports\"> <label class=\"form-check-label font-weight-normal\" for=\"accessReports\"> {{'accessReports' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageAllCollections\" id=\"manageAllCollections\" [(ngModel)]=\"permissions.manageAllCollections\"> <label class=\"form-check-label font-weight-normal\" for=\"manageAllCollections\"> {{'manageAllCollections' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageGroups\" id=\"manageGroups\" [(ngModel)]=\"permissions.manageGroups\"> <label class=\"form-check-label font-weight-normal\" for=\"manageGroups\"> {{'manageGroups' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageSso\" id=\"managePolicies\" [(ngModel)]=\"permissions.manageSso\"> <label class=\"form-check-label font-weight-normal\" for=\"manageSso\"> {{'manageSso' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"managePolicies\" id=\"managePolicies\" [(ngModel)]=\"permissions.managePolicies\"> <label class=\"form-check-label font-weight-normal\" for=\"managePolicies\"> {{'managePolicies' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageUsers\" id=\"manageUsers\" [(ngModel)]=\"permissions.manageUsers\" (change)=\"handleDependentPermissions()\"> <label class=\"form-check-label font-weight-normal\" for=\"manageUsers\"> {{'manageUsers' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageResetPassword\" id=\"manageResetPassword\" [(ngModel)]=\"permissions.manageResetPassword\" (change)=\"handleDependentPermissions()\"> <label class=\"form-check-label font-weight-normal\" for=\"manageResetPassword\"> {{'manageResetPassword' | i18n}} </label> </div> </div> </div> </div> </div> </ng-container> <h3 class=\"mt-4 d-flex\"> <div class=\"mb-3\"> {{'accessControl' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/user-types-access-control/#access-control\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </h3> <div class=\"form-group\" [ngClass]=\"{'mb-0': access !== 'selected'}\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessAll\" value=\"all\" [(ngModel)]=\"access\"> <label class=\"form-check-label\" for=\"accessAll\"> {{'userAccessAllItems' | i18n}} </label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessSelected\" value=\"selected\" [(ngModel)]=\"access\"> <label class=\"form-check-label\" for=\"accessSelected\"> {{'userAccessSelectedCollections' | i18n}} </label> </div> </div> <ng-container *ngIf=\"access === 'selected'\"> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <thead> <tr> <th>&nbsp;</th> <th>{{'name' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let c of collections; let i = index\"> <td class=\"table-list-checkbox\" (click)=\"check(c)\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td (click)=\"check(c)\"> {{c.name}} </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"c.hidePasswords\" name=\"Collection[{{i}}].HidePasswords\" [disabled]=\"!c.checked\"> </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"c.readOnly\" name=\"Collection[{{i}}].ReadOnly\" [disabled]=\"!c.checked\"> </td> </tr> </tbody> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-user-confirm',\n    templateUrl: 'user-confirm.component.html',\n})\nexport class UserConfirmComponent implements OnInit {\n    @Input() name: string;\n    @Input() userId: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Output() onConfirmedUser = new EventEmitter();\n\n    dontAskAgain = false;\n    loading = true;\n    fingerprint: string;\n\n    private publicKey: Uint8Array = null;\n\n    constructor(private apiService: ApiService, private cryptoService: CryptoService,\n        private storageService: StorageService) { }\n\n    async ngOnInit() {\n        try {\n            const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n            if (publicKeyResponse != null) {\n                this.publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n                const fingerprint = await this.cryptoService.getFingerprint(this.userId, this.publicKey.buffer);\n                if (fingerprint != null) {\n                    this.fingerprint = fingerprint.join('-');\n                }\n            }\n        } catch { }\n        this.loading = false;\n    }\n\n    async submit() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.dontAskAgain) {\n            await this.storageService.save(ConstantsService.autoConfirmFingerprints, true);\n        }\n\n        this.onConfirmedUser.emit(this.publicKey);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"confirmUserTitle\"> {{'confirmUser' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p> {{'fingerprintEnsureIntegrityVerify' | i18n}} <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}}</a> </p> <p><code>{{fingerprint}}</code></p> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"dontAskAgain\" name=\"DontAskAgain\" [(ngModel)]=\"dontAskAgain\"> <label class=\"form-check-label\" for=\"dontAskAgain\"> {{'dontAskFingerprintAgain' | i18n}} </label> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'confirm' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { OrganizationUserUpdateGroupsRequest } from 'jslib-common/models/request/organizationUserUpdateGroupsRequest';\nimport { GroupResponse } from 'jslib-common/models/response/groupResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-user-groups',\n    templateUrl: 'user-groups.component.html',\n})\nexport class UserGroupsComponent implements OnInit {\n    @Input() name: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Output() onSavedUser = new EventEmitter();\n\n    loading = true;\n    groups: GroupResponse[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        const groupsResponse = await this.apiService.getGroups(this.organizationId);\n        const groups = groupsResponse.data.map(r => r);\n        groups.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.groups = groups;\n\n        try {\n            const userGroups = await this.apiService.getOrganizationUserGroups(\n                this.organizationId, this.organizationUserId);\n            if (userGroups != null && this.groups != null) {\n                userGroups.forEach(ug => {\n                    const group = this.groups.filter(g => g.id === ug);\n                    if (group != null && group.length > 0) {\n                        (group[0] as any).checked = true;\n                    }\n                });\n            }\n        } catch { }\n\n        this.loading = false;\n    }\n\n    check(g: GroupResponse, select?: boolean) {\n        (g as any).checked = select == null ? !(g as any).checked : select;\n        if (!(g as any).checked) {\n            (g as any).readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.groups.forEach(g => this.check(g, select));\n    }\n\n    async submit() {\n        const request = new OrganizationUserUpdateGroupsRequest();\n        request.groupIds = this.groups.filter(g => (g as any).checked).map(g => g.id);\n\n        try {\n            this.formPromise = this.apiService.putOrganizationUserGroups(this.organizationId, this.organizationUserId,\n                request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('editedGroupsForUser', this.name));\n            this.onSavedUser.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"groupAccessTitle\"> {{'groupAccess' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <p>{{'groupAccessUserDesc' | i18n}}</p> <div *ngIf=\"!groups || !groups.length\"> {{'noGroupsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\"> <tbody> <tr *ngFor=\"let g of groups; let i = index\"> <td class=\"table-list-checkbox\" (click)=\"check(g)\"> <input type=\"checkbox\" [(ngModel)]=\"g.checked\" name=\"Groups[{{i}}].Checked\" appStopProp> </td> <td (click)=\"check(g)\"> {{g.name}} </td> </tr> </tbody> </table> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { EnvironmentService } from 'jslib-common/abstractions';\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PolicyResponse } from 'jslib-common/models/response/policyResponse';\n\nimport { ModalComponent } from '../../modal.component';\n\nimport { PolicyEditComponent } from './policy-edit.component';\n\n@Component({\n    selector: 'app-org-policies',\n    templateUrl: 'policies.component.html',\n})\nexport class PoliciesComponent implements OnInit {\n    @ViewChild('editTemplate', { read: ViewContainerRef, static: true }) editModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    policies: any[];\n\n    // Remove when removing deprecation warning\n    enterpriseTokenPromise: Promise<any>;\n    userCanAccessBusinessPortal = false;\n\n    private enterpriseUrl: string;\n\n    private modal: ModalComponent = null;\n    private orgPolicies: PolicyResponse[];\n    private policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private platformUtilsService: PlatformUtilsService, private userService: UserService,\n        private router: Router, private environmentService: EnvironmentService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (organization == null || !organization.usePolicies) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n            this.userCanAccessBusinessPortal = organization.canAccessBusinessPortal;\n            this.policies = [\n                {\n                    name: this.i18nService.t('twoStepLogin'),\n                    description: this.i18nService.t('twoStepLoginPolicyDesc'),\n                    type: PolicyType.TwoFactorAuthentication,\n                    enabled: false,\n                    display: true,\n                },\n                {\n                    name: this.i18nService.t('masterPass'),\n                    description: this.i18nService.t('masterPassPolicyDesc'),\n                    type: PolicyType.MasterPassword,\n                    enabled: false,\n                    display: true,\n                },\n                {\n                    name: this.i18nService.t('passwordGenerator'),\n                    description: this.i18nService.t('passwordGeneratorPolicyDesc'),\n                    type: PolicyType.PasswordGenerator,\n                    enabled: false,\n                    display: true,\n                },\n                {\n                    name: this.i18nService.t('singleOrg'),\n                    description: this.i18nService.t('singleOrgDesc'),\n                    type: PolicyType.SingleOrg,\n                    enabled: false,\n                    display: true,\n                },\n                {\n                    name: this.i18nService.t('requireSso'),\n                    description: this.i18nService.t('requireSsoPolicyDesc'),\n                    type: PolicyType.RequireSso,\n                    enabled: false,\n                    display: organization.useSso,\n                },\n                {\n                    name: this.i18nService.t('personalOwnership'),\n                    description: this.i18nService.t('personalOwnershipPolicyDesc'),\n                    type: PolicyType.PersonalOwnership,\n                    enabled: false,\n                    display: true,\n                },\n                {\n                    name: this.i18nService.t('disableSend'),\n                    description: this.i18nService.t('disableSendPolicyDesc'),\n                    type: PolicyType.DisableSend,\n                    enabled: false,\n                    display: true,\n                },\n                {\n                    name: this.i18nService.t('sendOptions'),\n                    description: this.i18nService.t('sendOptionsPolicyDesc'),\n                    type: PolicyType.SendOptions,\n                    enabled: false,\n                    display: true,\n                }, {\n                    name: this.i18nService.t('resetPasswordPolicy'),\n                    description: this.i18nService.t('resetPasswordPolicyDescription'),\n                    type: PolicyType.ResetPassword,\n                    enabled: false,\n                    display: organization.useResetPassword,\n                },\n            ];\n            await this.load();\n\n            // Handle policies component launch from Event message\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                if (qParams.policyId != null) {\n                    const policyIdFromEvents: string = qParams.policyId;\n                    for (const orgPolicy of this.orgPolicies) {\n                        if (orgPolicy.id === policyIdFromEvents) {\n                            for (let i = 0; i < this.policies.length; i++) {\n                                if (this.policies[i].type === orgPolicy.type) {\n                                    this.edit(this.policies[i]);\n                                    break;\n                                }\n                            }\n                            break;\n                        }\n                    }\n                }\n\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n\n        // Remove when removing deprecation warning\n        this.enterpriseUrl = 'https://portal.bitwarden.com';\n        if (this.environmentService.enterpriseUrl != null) {\n            this.enterpriseUrl = this.environmentService.enterpriseUrl;\n        } else if (this.environmentService.baseUrl != null) {\n            this.enterpriseUrl = this.environmentService.baseUrl + '/portal';\n        }\n    }\n\n    async load() {\n        const response = await this.apiService.getPolicies(this.organizationId);\n        this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n        this.orgPolicies.forEach(op => {\n            this.policiesEnabledMap.set(op.type, op.enabled);\n        });\n        this.policies.forEach(p => {\n            p.enabled = this.policiesEnabledMap.has(p.type) && this.policiesEnabledMap.get(p.type);\n        });\n        this.loading = false;\n    }\n\n    edit(p: any) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.editModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<PolicyEditComponent>(\n            PolicyEditComponent, this.editModalRef);\n\n        childComponent.name = p.name;\n        childComponent.description = p.description;\n        childComponent.type = p.type;\n        childComponent.organizationId = this.organizationId;\n        childComponent.policiesEnabledMap = this.policiesEnabledMap;\n        childComponent.onSavedPolicy.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n\n    // Remove when removing deprecation warning\n    async goToEnterprisePortal() {\n        if (this.enterpriseTokenPromise != null) {\n            return;\n        }\n        try {\n            this.enterpriseTokenPromise = this.apiService.getEnterprisePortalSignInToken();\n            const token = await this.enterpriseTokenPromise;\n            if (token != null) {\n                const userId = await this.userService.getUserId();\n                this.platformUtilsService.launchUri(this.enterpriseUrl + '/login?userId=' + userId +\n                    '&token=' + (window as any).encodeURIComponent(token) + '&organizationId=' + this.organizationId);\n            }\n        } catch { }\n        this.enterpriseTokenPromise = null;\n    }\n}\n","<app-callout *ngIf=\"userCanAccessBusinessPortal\" [type]=\"'warning'\"> <p>{{'webPoliciesDeprecationWarning' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"goToEnterprisePortal()\">{{'businessPortal' | i18n}}</button> </app-callout> <div class=\"page-header d-flex\"> <h1>{{'policies' | i18n}}</h1> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <table class=\"table table-hover table-list\" *ngIf=\"!loading\"> <tbody> <tr *ngFor=\"let p of policies\"> <td *ngIf=\"p.display\"> <a href=\"#\" appStopClick (click)=\"edit(p)\">{{p.name}}</a> <span class=\"badge badge-success\" *ngIf=\"p.enabled\">{{'enabled' | i18n}}</span> <small class=\"text-muted d-block\">{{p.description}}</small> </td> </tr> </tbody> </table> <ng-template #editTemplate></ng-template> ","// Using index.ts is deprecated, please do not extend\nexport { ApiService } from './api.service';\nexport { AppIdService } from './appId.service';\nexport { AuditService } from './audit.service';\nexport { AuthService } from './auth.service';\nexport { CipherService } from './cipher.service';\nexport { CollectionService } from './collection.service';\nexport { CryptoService } from './crypto.service';\nexport { EnvironmentService } from './environment.service';\nexport { FolderService } from './folder.service';\nexport { I18nService } from './i18n.service';\nexport { LogService } from './log.service';\nexport { MessagingService } from './messaging.service';\nexport { PasswordGenerationService } from './passwordGeneration.service';\nexport { PlatformUtilsService } from './platformUtils.service';\nexport { SearchService } from './search.service';\nexport { SettingsService } from './settings.service';\nexport { StorageService } from './storage.service';\nexport { StateService } from './state.service';\nexport { SyncService } from './sync.service';\nexport { TokenService } from './token.service';\nexport { TotpService } from './totp.service';\nexport { UserService } from './user.service';\nexport { VaultTimeoutService } from './vaultTimeout.service';\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { PolicyRequest } from 'jslib-common/models/request/policyRequest';\n\nimport { PolicyResponse } from 'jslib-common/models/response/policyResponse';\n\n@Component({\n    selector: 'app-policy-edit',\n    templateUrl: 'policy-edit.component.html',\n})\nexport class PolicyEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() description: string;\n    @Input() type: PolicyType;\n    @Input() organizationId: string;\n    @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n    @Output() onSavedPolicy = new EventEmitter();\n\n    policyType = PolicyType;\n    loading = true;\n    enabled = false;\n    formPromise: Promise<any>;\n    passwordScores: any[];\n    defaultTypes: any[];\n\n    // Master password\n    masterPassMinComplexity?: number = null;\n    masterPassMinLength?: number;\n    masterPassRequireUpper?: number;\n    masterPassRequireLower?: number;\n    masterPassRequireNumbers?: number;\n    masterPassRequireSpecial?: number;\n\n    // Password generator\n    passGenDefaultType?: string;\n    passGenMinLength?: number;\n    passGenUseUpper?: boolean;\n    passGenUseLower?: boolean;\n    passGenUseNumbers?: boolean;\n    passGenUseSpecial?: boolean;\n    passGenMinNumbers?: number;\n    passGenMinSpecial?: number;\n    passGenMinNumberWords?: number;\n    passGenCapitalize?: boolean;\n    passGenIncludeNumber?: boolean;\n\n    // Send options\n    sendDisableHideEmail?: boolean;\n\n    // Reset Password\n    resetPasswordAutoEnroll?: boolean;\n\n    private policy: PolicyResponse;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) {\n        this.passwordScores = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: i18nService.t('weak') + ' (0)', value: 0 },\n            { name: i18nService.t('weak') + ' (1)', value: 1 },\n            { name: i18nService.t('weak') + ' (2)', value: 2 },\n            { name: i18nService.t('good') + ' (3)', value: 3 },\n            { name: i18nService.t('strong') + ' (4)', value: 4 },\n        ];\n        this.defaultTypes = [\n            { name: i18nService.t('userPreference'), value: null },\n            { name: i18nService.t('password'), value: 'password' },\n            { name: i18nService.t('passphrase'), value: 'passphrase' },\n        ];\n    }\n\n    async ngOnInit() {\n        await this.load();\n        this.loading = false;\n    }\n\n    async load() {\n        try {\n            this.policy = await this.apiService.getPolicy(this.organizationId, this.type);\n\n            if (this.policy != null) {\n                this.enabled = this.policy.enabled;\n                if (this.policy.data != null) {\n                    switch (this.type) {\n                        case PolicyType.PasswordGenerator:\n                            this.passGenDefaultType = this.policy.data.defaultType;\n                            this.passGenMinLength = this.policy.data.minLength;\n                            this.passGenUseUpper = this.policy.data.useUpper;\n                            this.passGenUseLower = this.policy.data.useLower;\n                            this.passGenUseNumbers = this.policy.data.useNumbers;\n                            this.passGenUseSpecial = this.policy.data.useSpecial;\n                            this.passGenMinNumbers = this.policy.data.minNumbers;\n                            this.passGenMinSpecial = this.policy.data.minSpecial;\n                            this.passGenMinNumberWords = this.policy.data.minNumberWords;\n                            this.passGenCapitalize = this.policy.data.capitalize;\n                            this.passGenIncludeNumber = this.policy.data.includeNumber;\n                            break;\n                        case PolicyType.MasterPassword:\n                            this.masterPassMinComplexity = this.policy.data.minComplexity;\n                            this.masterPassMinLength = this.policy.data.minLength;\n                            this.masterPassRequireUpper = this.policy.data.requireUpper;\n                            this.masterPassRequireLower = this.policy.data.requireLower;\n                            this.masterPassRequireNumbers = this.policy.data.requireNumbers;\n                            this.masterPassRequireSpecial = this.policy.data.requireSpecial;\n                            break;\n                        case PolicyType.SendOptions:\n                            this.sendDisableHideEmail = this.policy.data.disableHideEmail;\n                            break;\n                        case PolicyType.ResetPassword:\n                            this.resetPasswordAutoEnroll = this.policy.data.autoEnrollEnabled;\n                            break;\n                        default:\n                            break;\n                    }\n                }\n            }\n        } catch (e) {\n            if (e.statusCode === 404) {\n                this.enabled = false;\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    async submit() {\n        if (this.preValidate()) {\n            const request = new PolicyRequest();\n            request.enabled = this.enabled;\n            request.type = this.type;\n            request.data = null;\n            switch (this.type) {\n                case PolicyType.PasswordGenerator:\n                    request.data = {\n                        defaultType: this.passGenDefaultType,\n                        minLength: this.passGenMinLength || null,\n                        useUpper: this.passGenUseUpper,\n                        useLower: this.passGenUseLower,\n                        useNumbers: this.passGenUseNumbers,\n                        useSpecial: this.passGenUseSpecial,\n                        minNumbers: this.passGenMinNumbers || null,\n                        minSpecial: this.passGenMinSpecial || null,\n                        minNumberWords: this.passGenMinNumberWords || null,\n                        capitalize: this.passGenCapitalize,\n                        includeNumber: this.passGenIncludeNumber,\n                    };\n                    break;\n                case PolicyType.MasterPassword:\n                    request.data = {\n                        minComplexity: this.masterPassMinComplexity || null,\n                        minLength: this.masterPassMinLength || null,\n                        requireUpper: this.masterPassRequireUpper,\n                        requireLower: this.masterPassRequireLower,\n                        requireNumbers: this.masterPassRequireNumbers,\n                        requireSpecial: this.masterPassRequireSpecial,\n                    };\n                    break;\n                case PolicyType.SendOptions:\n                    request.data = {\n                        disableHideEmail: this.sendDisableHideEmail,\n                    };\n                    break;\n                case PolicyType.ResetPassword:\n                    request.data = {\n                        autoEnrollEnabled: this.resetPasswordAutoEnroll,\n                    };\n                    break;\n                default:\n                    break;\n            }\n            try {\n                this.formPromise = this.apiService.putPolicy(this.organizationId, this.type, request);\n                await this.formPromise;\n                this.toasterService.popAsync('success', null, this.i18nService.t('editedPolicyId', this.name));\n                this.onSavedPolicy.emit();\n            } catch { }\n        }\n    }\n\n    get checkboxDesc(): string {\n        return this.type === PolicyType.PersonalOwnership ? this.i18nService.t('personalOwnershipCheckboxDesc') :\n            this.i18nService.t('enabled');\n    }\n\n    private preValidate(): boolean {\n        switch (this.type) {\n            case PolicyType.RequireSso:\n                // Don't need prevalidation checks if submitting to disable\n                if (!this.enabled) {\n                    return true;\n                }\n                // Have SingleOrg policy enabled?\n                if (!(this.policiesEnabledMap.has(PolicyType.SingleOrg)\n                    && this.policiesEnabledMap.get(PolicyType.SingleOrg))) {\n                    this.toasterService.popAsync('error', null, this.i18nService.t('requireSsoPolicyReqError'));\n                    return false;\n                }\n                return true;\n\n            case PolicyType.SingleOrg:\n                // Don't need prevalidation checks if submitting to enable\n                if (this.enabled) {\n                    return true;\n                }\n                // If RequireSso Policy is enabled prevent submittal\n                if (this.policiesEnabledMap.has(PolicyType.RequireSso)\n                    && this.policiesEnabledMap.get(PolicyType.RequireSso)) {\n                    this.toasterService.popAsync('error', null, this.i18nService.t('disableRequireSsoError'));\n                    return false;\n                }\n                return true;\n\n            default:\n                return true;\n        }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"policiesEditTitle\">{{'editPolicy' | i18n}} - {{name}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <p>{{description}}</p> <app-callout type=\"warning\" *ngIf=\"type === policyType.TwoFactorAuthentication\" title=\"{{'warning' | i18n}}\" icon=\"fa-warning\"> {{'twoStepLoginPolicyWarning' | i18n}} </app-callout> <app-callout type=\"warning\" *ngIf=\"type === policyType.SingleOrg\" title=\"{{'warning' | i18n}}\" icon=\"fa-warning\"> {{'singleOrgPolicyWarning' | i18n}} </app-callout> <ng-container *ngIf=\"type === policyType.RequireSso\"> <app-callout type=\"tip\" title=\"{{'prerequisite' | i18n}}\"> {{'requireSsoPolicyReq' | i18n}} </app-callout> <app-callout type=\"warning\"> {{'requireSsoExemption' | i18n}} </app-callout> </ng-container> <app-callout type=\"warning\" *ngIf=\"type === policyType.PersonalOwnership\"> {{'personalOwnershipExemption' | i18n}} </app-callout> <app-callout type=\"warning\" *ngIf=\"type === policyType.DisableSend\"> {{'disableSendExemption' | i18n}} </app-callout> <app-callout type=\"warning\" *ngIf=\"type === policyType.SendOptions\"> {{'sendOptionsExemption' | i18n}} </app-callout> <app-callout type=\"warning\" *ngIf=\"type === policyType.ResetPassword\"> {{'resetPasswordPolicyWarning' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [(ngModel)]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{checkboxDesc}}</label> </div> </div> <ng-container *ngIf=\"type === policyType.MasterPassword\"> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"masterPassMinComplexity\">{{'minComplexityScore' | i18n}}</label> <select id=\"masterPassMinComplexity\" name=\"MasterPassMinComplexity\" [(ngModel)]=\"masterPassMinComplexity\" class=\"form-control\"> <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> <div class=\"col-6 form-group\"> <label for=\"masterPassMinLength\">{{'minLength' | i18n}}</label> <input id=\"masterPassMinLength\" class=\"form-control\" type=\"number\" min=\"8\" name=\"MasterPassMinLength\" [(ngModel)]=\"masterPassMinLength\"> </div> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"masterPassRequireUpper\" [(ngModel)]=\"masterPassRequireUpper\" name=\"MasterPassRequireUpper\"> <label class=\"form-check-label\" for=\"masterPassRequireUpper\">A-Z</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"masterPassRequireLower\" [(ngModel)]=\"masterPassRequireLower\" name=\"MasterPassRequireLower\"> <label class=\"form-check-label\" for=\"masterPassRequireLower\">a-z</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"masterPassRequireNumbers\" [(ngModel)]=\"masterPassRequireNumbers\" name=\"MasterPassRequireNumbers\"> <label class=\"form-check-label\" for=\"masterPassRequireNumbers\">0-9</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"masterPassRequireSpecial\" [(ngModel)]=\"masterPassRequireSpecial\" name=\"MasterPassRequireSpecial\"> <label class=\"form-check-label\" for=\"masterPassRequireSpecial\">!@#$%^&amp;*</label> </div> </ng-container> <ng-container *ngIf=\"type === policyType.PasswordGenerator\"> <div class=\"row\"> <div class=\"col-6 form-group mb-0\"> <label for=\"passGenDefaultType\">{{'defaultType' | i18n}}</label> <select id=\"passGenDefaultType\" name=\"PassGenDefaultType\" [(ngModel)]=\"passGenDefaultType\" class=\"form-control\"> <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <h3 class=\"mt-4\">{{'password' | i18n}}</h3> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"passGenMinLength\">{{'minLength' | i18n}}</label> <input id=\"passGenMinLength\" class=\"form-control\" type=\"number\" name=\"PassGenMinLength\" min=\"5\" max=\"128\" [(ngModel)]=\"passGenMinLength\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"passGenMinNumbers\">{{'minNumbers' | i18n}}</label> <input id=\"passGenMinNumbers\" class=\"form-control\" type=\"number\" name=\"PassGenMinNumbers\" min=\"0\" max=\"9\" [(ngModel)]=\"passGenMinNumbers\"> </div> <div class=\"col-6 form-group\"> <label for=\"passGenMinSpecial\">{{'minSpecial' | i18n}}</label> <input id=\"passGenMinSpecial\" class=\"form-control\" type=\"number\" name=\"PassGenMinSpecial\" min=\"0\" max=\"9\" [(ngModel)]=\"passGenMinSpecial\"> </div> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenUseUpper\" [(ngModel)]=\"passGenUseUpper\" name=\"PassGenUseUpper\"> <label class=\"form-check-label\" for=\"passGenUseUpper\">A-Z</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenUseLower\" [(ngModel)]=\"passGenUseLower\" name=\"PassGenUseLower\"> <label class=\"form-check-label\" for=\"passGenUseLower\">a-z</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenUseNumbers\" [(ngModel)]=\"passGenUseNumbers\" name=\"PassGenUseNumbers\"> <label class=\"form-check-label\" for=\"passGenUseNumbers\">0-9</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenUseSpecial\" [(ngModel)]=\"passGenUseSpecial\" name=\"PassGenUseSpecial\"> <label class=\"form-check-label\" for=\"passGenUseSpecial\">!@#$%^&amp;*</label> </div> <h3 class=\"mt-4\">{{'passphrase' | i18n}}</h3> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"passGenMinNumberWords\">{{'minimumNumberOfWords' | i18n}}</label> <input id=\"passGenMinNumberWords\" class=\"form-control\" type=\"number\" name=\"PassGenMinNumberWords\" min=\"3\" max=\"20\" [(ngModel)]=\"passGenMinNumberWords\"> </div> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenCapitalize\" [(ngModel)]=\"passGenCapitalize\" name=\"PassGenCapitalize\"> <label class=\"form-check-label\" for=\"passGenCapitalize\">{{'capitalize' | i18n}}</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenIncludeNumber\" [(ngModel)]=\"passGenIncludeNumber\" name=\"PassGenIncludeNumber\"> <label class=\"form-check-label\" for=\"passGenIncludeNumber\">{{'includeNumber' | i18n}}</label> </div> </ng-container> <ng-container *ngIf=\"type === policyType.SendOptions\"> <h3 class=\"mt-4\">{{'options' | i18n}}</h3> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"sendDisableHideEmail\" [(ngModel)]=\"sendDisableHideEmail\" name=\"SendDisableHideEmail\"> <label class=\"form-check-label\" for=\"sendDisableHideEmail\">{{'disableHideEmail' | i18n}}</label> </div> </ng-container> <ng-container *ngIf=\"type === policyType.ResetPassword\"> <h3 class=\"mt-4\">{{'resetPasswordPolicyAutoEnroll' | i18n}}</h3> <p>{{'resetPasswordPolicyAutoEnrollDescription' | i18n}}</p> <app-callout type=\"warning\"> {{'resetPasswordPolicyAutoEnrollWarning' | i18n}} </app-callout> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"autoEnrollEnabled\" [(ngModel)]=\"resetPasswordAutoEnroll\" name=\"AutoEnrollEnabled\"> <label class=\"form-check-label\" for=\"autoEnrollEnabled\">{{'resetPasswordPolicyAutoEnrollCheckbox' | i18n }}</label> </div> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> </div> </form> </div> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\n\nimport { OrganizationKeysRequest } from 'jslib-common/models/request/organizationKeysRequest';\nimport { OrganizationUpdateRequest } from 'jslib-common/models/request/organizationUpdateRequest';\n\nimport { OrganizationResponse } from 'jslib-common/models/response/organizationResponse';\n\nimport { ModalComponent } from '../../modal.component';\n\nimport { ApiKeyComponent } from '../../settings/api-key.component';\nimport { PurgeVaultComponent } from '../../settings/purge-vault.component';\nimport { TaxInfoComponent } from '../../settings/tax-info.component';\n\nimport { DeleteOrganizationComponent } from './delete-organization.component';\n\n@Component({\n    selector: 'app-org-account',\n    templateUrl: 'account.component.html',\n})\nexport class AccountComponent {\n    @ViewChild('deleteOrganizationTemplate', { read: ViewContainerRef, static: true }) deleteModalRef: ViewContainerRef;\n    @ViewChild('purgeOrganizationTemplate', { read: ViewContainerRef, static: true }) purgeModalRef: ViewContainerRef;\n    @ViewChild('apiKeyTemplate', { read: ViewContainerRef, static: true }) apiKeyModalRef: ViewContainerRef;\n    @ViewChild('rotateApiKeyTemplate', { read: ViewContainerRef, static: true }) rotateApiKeyModalRef: ViewContainerRef;\n    @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n    selfHosted = false;\n    loading = true;\n    canUseApi = false;\n    org: OrganizationResponse;\n    formPromise: Promise<any>;\n    taxFormPromise: Promise<any>;\n\n    private organizationId: string;\n    private modal: ModalComponent = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver,\n        private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private route: ActivatedRoute,\n        private syncService: SyncService, private platformUtilsService: PlatformUtilsService,\n        private cryptoService: CryptoService) { }\n\n    async ngOnInit() {\n        this.selfHosted = this.platformUtilsService.isSelfHost();\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            try {\n                this.org = await this.apiService.getOrganization(this.organizationId);\n                this.canUseApi = this.org.useApi;\n            } catch { }\n        });\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            const request = new OrganizationUpdateRequest();\n            request.name = this.org.name;\n            request.businessName = this.org.businessName;\n            request.billingEmail = this.org.billingEmail;\n            request.identifier = this.org.identifier;\n\n            // Backfill pub/priv key if necessary\n            if (!this.org.hasPublicAndPrivateKeys) {\n                const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n                const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n                request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n            }\n\n            this.formPromise = this.apiService.putOrganization(this.organizationId, request).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('organizationUpdated'));\n        } catch { }\n    }\n\n    async submitTaxInfo() {\n        this.taxFormPromise = this.taxInfo.submitTaxInfo();\n        await this.taxFormPromise;\n        this.toasterService.popAsync('success', null, this.i18nService.t('taxInfoUpdated'));\n    }\n\n    deleteOrganization() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.deleteModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<DeleteOrganizationComponent>(\n            DeleteOrganizationComponent, this.deleteModalRef);\n        childComponent.organizationId = this.organizationId;\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    purgeVault() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.purgeModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<PurgeVaultComponent>(PurgeVaultComponent, this.purgeModalRef);\n        childComponent.organizationId = this.organizationId;\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    viewApiKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.apiKeyModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ApiKeyComponent>(ApiKeyComponent, this.apiKeyModalRef);\n        childComponent.keyType = 'organization';\n        childComponent.entityId = this.organizationId;\n        childComponent.postKey = this.apiService.postOrganizationApiKey.bind(this.apiService);\n        childComponent.scope = 'api.organization';\n        childComponent.grantType = 'client_credentials';\n        childComponent.apiKeyTitle = 'apiKey';\n        childComponent.apiKeyWarning = 'apiKeyWarning';\n        childComponent.apiKeyDescription = 'apiKeyDesc';\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    rotateApiKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.rotateApiKeyModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ApiKeyComponent>(ApiKeyComponent, this.rotateApiKeyModalRef);\n        childComponent.keyType = 'organization';\n        childComponent.isRotation = true;\n        childComponent.entityId = this.organizationId;\n        childComponent.postKey = this.apiService.postOrganizationRotateApiKey.bind(this.apiService);\n        childComponent.scope = 'api.organization';\n        childComponent.grantType = 'client_credentials';\n        childComponent.apiKeyTitle = 'apiKey';\n        childComponent.apiKeyWarning = 'apiKeyWarning';\n        childComponent.apiKeyDescription = 'apiKeyRotateDesc';\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'myOrganization' | i18n}}</h1> </div> <div *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <form *ngIf=\"org && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"name\">{{'organizationName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"org.name\" [disabled]=\"selfHosted\"> </div> <div class=\"form-group\"> <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label> <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"org.billingEmail\" [disabled]=\"selfHosted\"> </div> <div class=\"form-group\"> <label for=\"businessName\">{{'businessName' | i18n}}</label> <input id=\"businessName\" class=\"form-control\" type=\"text\" name=\"BusinessName\" [(ngModel)]=\"org.businessName\" [disabled]=\"selfHosted\"> </div> <div class=\"form-group\"> <label for=\"identifier\">{{'identifier' | i18n}}</label> <input id=\"identifier\" class=\"form-control\" type=\"text\" name=\"Identifier\" [(ngModel)]=\"org.identifier\"> </div> </div> <div class=\"col-6\"> <app-avatar data=\"{{org.name}}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> <ng-container *ngIf=\"canUseApi\"> <div class=\"secondary-header border-0 mb-0\"> <h1>{{'apiKey' | i18n}}</h1> </div> <p> {{'apiKeyDesc' | i18n}} <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}} </a> </p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">{{'viewApiKey' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">{{'rotateApiKey' | i18n}}</button> </ng-container> <div class=\"secondary-header border-0 mb-0\"> <h1>{{'taxInformation' | i18n}}</h1> </div> <p>{{'taxInformationDesc' | i18n}}</p> <div *ngIf=\"!org || loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <form *ngIf=\"org && !loading\" #formTax (ngSubmit)=\"submitTaxInfo()\" [appApiAction]=\"taxFormPromise\" ngNativeValidate> <app-tax-info></app-tax-info> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"formTax.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> <div class=\"secondary-header text-danger border-0 mb-0\"> <h1>{{'dangerZone' | i18n}}</h1> </div> <div class=\"card border-danger\"> <div class=\"card-body\"> <p>{{'dangerZoneDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">{{'deleteOrganization' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">{{'purgeVault' | i18n}}</button> </div> </div> <ng-template #deleteOrganizationTemplate></ng-template> <ng-template #purgeOrganizationTemplate></ng-template> <ng-template #apiKeyTemplate></ng-template> <ng-template #rotateApiKeyTemplate></ng-template> ","import { TaxInfoUpdateRequest } from './taxInfoUpdateRequest';\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n    taxId: string;\n    line1: string;\n    line2: string;\n    city: string;\n    state: string;\n}\n","export class TaxInfoUpdateRequest {\n    country: string;\n    postalCode: string;\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-delete-organization',\n    templateUrl: 'delete-organization.component.html',\n})\nexport class DeleteOrganizationComponent {\n    organizationId: string;\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private router: Router) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.deleteOrganization(this.organizationId, request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('organizationDeleted'),\n                this.i18nService.t('organizationDeletedDesc'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{'deleteOrganization' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'deleteOrganizationDesc' | i18n}}</p> <app-callout type=\"warning\">{{'deleteOrganizationWarning' | i18n}}</app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'deleteOrganization' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { UserBillingComponent } from '../../settings/user-billing.component';\n\n@Component({\n    selector: 'app-org-billing',\n    templateUrl: '../../settings/user-billing.component.html',\n})\nexport class OrganizationBillingComponent extends UserBillingComponent implements OnInit {\n    constructor(apiService: ApiService, i18nService: I18nService, toasterService: ToasterService,\n        private route: ActivatedRoute, platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            this.firstLoaded = true;\n        });\n    }\n}\n","export class WebConstants {\n    static readonly stripeTestKey = 'pk_test_KPoCfZXu7mznb9uSCPZ2JpTD';\n    static readonly stripeLiveKey = 'pk_live_bpN0P37nMxrMQkcaHXtAybJk';\n    static readonly btSandboxKey = 'sandbox_r72q8jq6_9pnxkwm75f87sdc2';\n    static readonly btProductionKey = 'production_qfbsv8kc_njj2zjtyngtjmbjd';\n    static readonly paypal = {\n        businessIdProduction: '4ZDA7DLUUJGMN',\n        businessIdSandbox: 'AD3LAUZSNVPJY',\n        buttonActionProduction: 'https://www.paypal.com/cgi-bin/webscr',\n        buttonActionSandbox: 'https://www.sandbox.paypal.com/cgi-bin/webscr',\n    };\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { OrganizationSubscriptionResponse } from 'jslib-common/models/response/organizationSubscriptionResponse';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { PlanType } from 'jslib-common/enums/planType';\n\n@Component({\n    selector: 'app-org-subscription',\n    templateUrl: 'organization-subscription.component.html',\n})\nexport class OrganizationSubscriptionComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    organizationId: string;\n    adjustSeatsAdd = true;\n    showAdjustSeats = false;\n    adjustStorageAdd = true;\n    showAdjustStorage = false;\n    showUpdateLicense = false;\n    showDownloadLicense = false;\n    showChangePlan = false;\n    sub: OrganizationSubscriptionResponse;\n    selfHosted = false;\n\n    cancelPromise: Promise<any>;\n    reinstatePromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService,\n        private i18nService: I18nService, private toasterService: ToasterService,\n        private messagingService: MessagingService, private route: ActivatedRoute) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            this.firstLoaded = true;\n        });\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n        this.loading = true;\n        this.sub = await this.apiService.getOrganizationSubscription(this.organizationId);\n        this.loading = false;\n    }\n\n    async reinstate() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('reinstateConfirmation'),\n            this.i18nService.t('reinstateSubscription'), this.i18nService.t('yes'), this.i18nService.t('cancel'));\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.reinstatePromise = this.apiService.postOrganizationReinstate(this.organizationId);\n            await this.reinstatePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('reinstated'));\n            this.load();\n        } catch { }\n    }\n\n    async cancel() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('cancelConfirmation'),\n            this.i18nService.t('cancelSubscription'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.cancelPromise = this.apiService.postOrganizationCancel(this.organizationId);\n            await this.cancelPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('canceledSubscription'));\n            this.load();\n        } catch { }\n    }\n\n    async changePlan() {\n        if (this.subscription == null && this.sub.planType === PlanType.Free) {\n            this.showChangePlan = !this.showChangePlan;\n            return;\n        }\n        const contactSupport = await this.platformUtilsService.showDialog(this.i18nService.t('changeBillingPlanDesc'),\n            this.i18nService.t('changeBillingPlan'), this.i18nService.t('contactSupport'), this.i18nService.t('close'));\n        if (contactSupport) {\n            this.platformUtilsService.launchUri('https://bitwarden.com/contact');\n        }\n    }\n\n    closeChangePlan(changed: boolean) {\n        this.showChangePlan = false;\n    }\n\n    downloadLicense() {\n        this.showDownloadLicense = !this.showDownloadLicense;\n    }\n\n    closeDownloadLicense() {\n        this.showDownloadLicense = false;\n    }\n\n    updateLicense() {\n        if (this.loading) {\n            return;\n        }\n        this.showUpdateLicense = true;\n    }\n\n    closeUpdateLicense(updated: boolean) {\n        this.showUpdateLicense = false;\n        if (updated) {\n            this.load();\n            this.messagingService.send('updatedOrgLicense');\n        }\n    }\n\n    adjustSeats(add: boolean) {\n        this.adjustSeatsAdd = add;\n        this.showAdjustSeats = true;\n    }\n\n    closeSeats(load: boolean) {\n        this.showAdjustSeats = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    adjustStorage(add: boolean) {\n        this.adjustStorageAdd = add;\n        this.showAdjustStorage = true;\n    }\n\n    closeStorage(load: boolean) {\n        this.showAdjustStorage = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get isExpired() {\n        return this.sub != null && this.sub.expiration != null &&\n            new Date(this.sub.expiration) < new Date();\n    }\n\n    get subscriptionMarkedForCancel() {\n        return this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate;\n    }\n\n    get subscription() {\n        return this.sub != null ? this.sub.subscription : null;\n    }\n\n    get nextInvoice() {\n        return this.sub != null ? this.sub.upcomingInvoice : null;\n    }\n\n    get storagePercentage() {\n        return this.sub != null && this.sub.maxStorageGb ?\n            +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2) : 0;\n    }\n\n    get storageProgressWidth() {\n        return this.storagePercentage < 5 ? 5 : 0;\n    }\n\n    get billingInterval() {\n        const monthly = !this.sub.plan.isAnnual;\n        return monthly ? 'month' : 'year';\n    }\n\n    get storageGbPrice() {\n        return this.sub.plan.additionalStoragePricePerGb;\n    }\n\n    get seatPrice() {\n        return this.sub.plan.seatPrice;\n    }\n\n    get canAdjustSeats() {\n        return this.sub.plan.hasAdditionalSeatsOption;\n    }\n\n    get canDownloadLicense() {\n        return (this.sub.planType !== PlanType.Free && this.subscription == null) ||\n            (this.subscription != null && !this.subscription.cancelled);\n    }\n}\n","<div class=\"page-header\"> <h1> {{'subscription' | i18n}} <small *ngIf=\"firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <ng-container *ngIf=\"!firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"sub\"> <app-callout type=\"warning\" title=\"{{'canceled' | i18n}}\" *ngIf=\"subscription && subscription.cancelled\"> {{'subscriptionCanceled' | i18n}}</app-callout> <app-callout type=\"warning\" title=\"{{'pendingCancellation' | i18n}}\" *ngIf=\"subscriptionMarkedForCancel\"> <p>{{'subscriptionPendingCanceled' | i18n}}</p> <button #reinstateBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" (click)=\"reinstate()\" [appApiAction]=\"reinstatePromise\" [disabled]=\"reinstateBtn.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'reinstateSubscription' | i18n}}</span> </button> </app-callout> <dl *ngIf=\"selfHosted\"> <dt>{{'billingPlan' | i18n}}</dt> <dd>{{sub.plan.name}}</dd> <dt>{{'expiration' | i18n}}</dt> <dd *ngIf=\"sub.expiration\"> {{sub.expiration | date:'mediumDate'}} <span *ngIf=\"isExpired\" class=\"text-danger ml-2\"> <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> {{'licenseIsExpired' | i18n}} </span> </dd> <dd *ngIf=\"!sub.expiration\">{{'neverExpires' | i18n}}</dd> </dl> <div class=\"row\" *ngIf=\"!selfHosted\"> <div class=\"col-4\"> <dl> <dt>{{'billingPlan' | i18n}}</dt> <dd>{{sub.plan.name}}</dd> <ng-container *ngIf=\"subscription\"> <dt>{{'status' | i18n}}</dt> <dd> <span class=\"text-capitalize\">{{subscription.status || '-'}}</span> <span class=\"badge badge-warning\" *ngIf=\"subscriptionMarkedForCancel\">{{'pendingCancellation' | i18n}}</span> </dd> <dt>{{'nextCharge' | i18n}}</dt> <dd>{{nextInvoice ? ((nextInvoice.date | date: 'mediumDate') + ', ' + (nextInvoice.amount | currency:'$')) : '-'}} </dd> </ng-container> </dl> </div> <div class=\"col-8\" *ngIf=\"subscription\"> <strong class=\"d-block mb-1\">{{'details' | i18n}}</strong> <table class=\"table\"> <tbody> <tr *ngFor=\"let i of subscription.items\"> <td> {{i.name}} {{i.quantity > 1 ? '&times;' + i.quantity : ''}} @ {{i.amount | currency:'$'}} </td> <td> {{(i.quantity * i.amount) | currency:'$'}} /{{i.interval | i18n}} </td> </tr> </tbody> </table> </div> </div> <ng-container *ngIf=\"selfHosted\"> <div> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\"> {{'updateLicense' | i18n}} </button> <a href=\"https://vault.bitwarden.com\" target=\"_blank\" rel=\"noopener\" class=\"btn btn-outline-secondary\"> {{'manageSubscription' | i18n}} </a> </div> <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\"> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"closeUpdateLicense(false)\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{'updateLicense' | i18n}}</h3> <app-update-license [organizationId]=\"organizationId\" (onUpdated)=\"closeUpdateLicense(true)\" (onCanceled)=\"closeUpdateLicense(false)\"></app-update-license> </div> </div> </ng-container> <ng-container *ngIf=\"!selfHosted\"> <div class=\"d-flex\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"changePlan()\" *ngIf=\"!showChangePlan\"> {{'changeBillingPlan' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"downloadLicense()\" *ngIf=\"canDownloadLicense\" [disabled]=\"showDownloadLicense\"> {{'downloadLicense' | i18n}} </button> <button #cancelBtn type=\"button\" class=\"btn btn-outline-danger btn-submit ml-auto\" (click)=\"cancel()\" [appApiAction]=\"cancelPromise\" [disabled]=\"cancelBtn.loading\" *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'cancelSubscription' | i18n}}</span> </button> </div> <app-change-plan [organizationId]=\"organizationId\" (onChanged)=\"closeChangePlan(true)\" (onCanceled)=\"closeChangePlan(false)\" *ngIf=\"showChangePlan\"></app-change-plan> <div class=\"mt-3\" *ngIf=\"showDownloadLicense\"> <app-download-license [organizationId]=\"organizationId\" (onDownloaded)=\"closeDownloadLicense()\" (onCanceled)=\"closeDownloadLicense()\"></app-download-license> </div> <h2 class=\"spaced-header\">{{'userSeats' | i18n}}</h2> <p>{{'subscriptionUserSeats' | i18n : sub.seats}}</p> <ng-container *ngIf=\"subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\"> <div class=\"mt-3\"> <div class=\"d-flex\" *ngIf=\"!showAdjustSeats\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustSeats(true)\"> {{'addSeats' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"adjustSeats(false)\"> {{'removeSeats' | i18n}} </button> </div> <app-adjust-seats [seatPrice]=\"seatPrice\" [add]=\"adjustSeatsAdd\" [organizationId]=\"organizationId\" [interval]=\"billingInterval\" (onAdjusted)=\"closeSeats(true)\" (onCanceled)=\"closeSeats(false)\" *ngIf=\"showAdjustSeats\"></app-adjust-seats> </div> </ng-container> <h2 class=\"spaced-header\">{{'storage' | i18n}}</h2> <p>{{'subscriptionStorage' | i18n : sub.maxStorageGb || 0 : sub.storageName || '0 MB'}}</p> <div class=\"progress\"> <div class=\"progress-bar bg-success\" role=\"progressbar\" [ngStyle]=\"{width: storageProgressWidth + '%' }\" [attr.aria-valuenow]=\"storagePercentage\" aria-valuemin=\"0\" aria-valuemax=\"100\"> {{(storagePercentage / 100) | percent}}</div> </div> <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"> <div class=\"mt-3\"> <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\"> {{'addStorage' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"adjustStorage(false)\"> {{'removeStorage' | i18n}} </button> </div> <app-adjust-storage [storageGbPrice]=\"storageGbPrice\" [add]=\"adjustStorageAdd\" [organizationId]=\"organizationId\" [interval]=\"billingInterval\" (onAdjusted)=\"closeStorage(true)\" (onCanceled)=\"closeStorage(false)\" *ngIf=\"showAdjustStorage\"></app-adjust-storage> </div> </ng-container> </ng-container> </ng-container> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { PlanType } from 'jslib-common/enums/planType';\nimport { ProductType } from 'jslib-common/enums/productType';\n\n@Component({\n    selector: 'app-change-plan',\n    templateUrl: 'change-plan.component.html',\n})\nexport class ChangePlanComponent {\n    @Input() organizationId: string;\n    @Output() onChanged = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    formPromise: Promise<any>;\n    defaultUpgradePlan: PlanType = PlanType.FamiliesAnnually;\n    defaultUpgradeProduct: ProductType = ProductType.Families;\n\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService) { }\n\n    async submit() {\n        try {\n            this.onChanged.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","<div class=\"card card-org-plans\"> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h2 class=\"card-body-header\">{{'changeBillingPlan' | i18n}}</h2> <p class=\"mb-0\">{{'changeBillingPlanUpgrade' | i18n}}</p> <app-organization-plans [showFree]=\"false\" [showCancel]=\"true\" [plan]=\"defaultUpgradePlan\" [product]=\"defaultUpgradeProduct\" [organizationId]=\"organizationId\" (onCanceled)=\"cancel()\"> </app-organization-plans> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-download-license',\n    templateUrl: 'download-license.component.html',\n})\nexport class DownloadLicenseComponent {\n    @Input() organizationId: string;\n    @Output() onDownloaded = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    installationId: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService) { }\n\n    async submit() {\n        if (this.installationId == null || this.installationId === '') {\n            return;\n        }\n\n        try {\n            this.formPromise = this.apiService.getOrganizationLicense(this.organizationId, this.installationId);\n            const license = await this.formPromise;\n            const licenseString = JSON.stringify(license, null, 2);\n            this.platformUtilsService.saveFile(window, licenseString, null, 'bitwarden_organization_license.json');\n            this.onDownloaded.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{'downloadLicense' | i18n}}</h3> <div class=\"row\"> <div class=\"form-group col-6\"> <div class=\"d-flex\"> <label for=\"installationId\">{{'enterInstallationId' | i18n}}</label> <a class=\"ml-auto\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://help.bitwarden.com/article/licensing-on-premise/#organization-account-sharing\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <input id=\"installationId\" class=\"form-control\" type=\"text\" name=\"InstallationId\" [(ngModel)]=\"installationId\" required> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> </div> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { SeatRequest } from 'jslib-common/models/request/seatRequest';\n\nimport { PaymentComponent } from '../../settings/payment.component';\n\n@Component({\n    selector: 'app-adjust-seats',\n    templateUrl: 'adjust-seats.component.html',\n})\nexport class AdjustSeatsComponent {\n    @Input() seatPrice = 0;\n    @Input() add = true;\n    @Input() organizationId: string;\n    @Input() interval = 'year';\n    @Output() onAdjusted = new EventEmitter<number>();\n    @Output() onCanceled = new EventEmitter();\n\n    @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n    seatAdjustment = 0;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private router: Router,\n        private activatedRoute: ActivatedRoute) { }\n\n    async submit() {\n        try {\n            const request = new SeatRequest();\n            request.seatAdjustment = this.seatAdjustment;\n            if (!this.add) {\n                request.seatAdjustment *= -1;\n            }\n\n            let paymentFailed = false;\n            const action = async () => {\n                const result = await this.apiService.postOrganizationSeat(this.organizationId, request);\n                if (result != null && result.paymentIntentClientSecret != null) {\n                    try {\n                        await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n                    } catch {\n                        paymentFailed = true;\n                    }\n                }\n            };\n            this.formPromise = action();\n            await this.formPromise;\n            this.onAdjusted.emit(this.seatAdjustment);\n            if (paymentFailed) {\n                this.toasterService.popAsync({\n                    body: this.i18nService.t('couldNotChargeCardPayInvoice'),\n                    type: 'warning',\n                    timeout: 10000,\n                });\n                this.router.navigate(['../billing'], { relativeTo: this.activatedRoute });\n            } else {\n                this.toasterService.popAsync('success', null,\n                    this.i18nService.t('adjustedSeats', request.seatAdjustment.toString()));\n            }\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    get adjustedSeatTotal(): number {\n        return this.seatAdjustment * this.seatPrice;\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{(add ? 'addSeats' : 'removeSeats') | i18n}}</h3> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"seatAdjustment\">{{(add ? 'seatsToAdd' : 'seatsToRemove') | i18n}}</label> <input id=\"seatAdjustment\" class=\"form-control\" type=\"number\" name=\"SeatAdjustment\" [(ngModel)]=\"seatAdjustment\" min=\"0\" step=\"1\" required> </div> </div> <div *ngIf=\"add\" class=\"mb-3\"> <strong>{{'total' | i18n}}:</strong> {{seatAdjustment || 0}} &times; {{seatPrice | currency:'$'}} = {{adjustedSeatTotal | currency:'$'}} /{{interval | i18n}} </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> <small class=\"d-block text-muted mt-3\"> {{(add ? 'seatsAddNote' : 'seatsRemoveNote') | i18n}} </small> </div> </form> <app-payment [showMethods]=\"false\"></app-payment> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'app-org-settings',\n    templateUrl: 'settings.component.html',\n})\nexport class SettingsComponent {\n    access2fa = false;\n    selfHosted: boolean;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.selfHosted = await this.platformUtilsService.isSelfHost();\n            const organization = await this.userService.getOrganization(params.organizationId);\n            this.access2fa = organization.use2fa;\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\"> <div class=\"card-header\">{{'settings' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'myOrganization' | i18n}} </a> <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'subscription' | i18n}} </a> <a routerLink=\"billing\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!selfHosted\"> {{'billing' | i18n}} </a> <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"access2fa\"> {{'twoStepLogin' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorDuoComponent } from '../../settings/two-factor-duo.component';\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from '../../settings/two-factor-setup.component';\n\n@Component({\n    selector: 'app-two-factor-setup',\n    templateUrl: '../../settings/two-factor-setup.component.html',\n})\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n    constructor(apiService: ApiService, userService: UserService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        policyService: PolicyService, private route: ActivatedRoute) {\n        super(apiService, userService, componentFactoryResolver, messagingService, policyService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await super.ngOnInit();\n        });\n    }\n\n    manage(type: TwoFactorProviderType) {\n        switch (type) {\n            case TwoFactorProviderType.OrganizationDuo:\n                const duoComp = this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n                duoComp.type = TwoFactorProviderType.OrganizationDuo;\n                duoComp.organizationId = this.organizationId;\n                duoComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    protected getTwoFactorProviders() {\n        return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n    }\n\n    protected filterProvider(type: TwoFactorProviderType) {\n        return type !== TwoFactorProviderType.OrganizationDuo;\n    }\n}\n","import {\n    Component,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { UpdateTwoFactorAuthenticatorRequest } from 'jslib-common/models/request/updateTwoFactorAuthenticatorRequest';\nimport { TwoFactorAuthenticatorResponse } from 'jslib-common/models/response/twoFactorAuthenticatorResponse';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-authenticator',\n    templateUrl: 'two-factor-authenticator.component.html',\n})\nexport class TwoFactorAuthenticatorComponent extends TwoFactorBaseComponent implements OnInit, OnDestroy {\n    type = TwoFactorProviderType.Authenticator;\n    key: string;\n    token: string;\n    formPromise: Promise<any>;\n\n    private qrScript: HTMLScriptElement;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, private userService: UserService,\n        platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n        this.qrScript = window.document.createElement('script');\n        this.qrScript.src = 'scripts/qrious.min.js';\n        this.qrScript.async = true;\n    }\n\n    ngOnInit() {\n        window.document.body.appendChild(this.qrScript);\n    }\n\n    ngOnDestroy() {\n        window.document.body.removeChild(this.qrScript);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        return this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorAuthenticatorRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.token = this.token;\n        request.key = this.key;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private async processResponse(response: TwoFactorAuthenticatorResponse) {\n        this.token = null;\n        this.enabled = response.enabled;\n        this.key = response.key;\n        const email = await this.userService.getEmail();\n        window.setTimeout(() => {\n            const qr = new (window as any).QRious({\n                element: document.getElementById('qr'),\n                value: 'otpauth://totp/Bitwarden:' + encodeURIComponent(email) +\n                    '?secret=' + encodeURIComponent(this.key) + '&issuer=Bitwarden',\n                size: 160,\n            });\n        }, 100);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\"> <div class=\"modal-dialog\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faAuthenticatorTitle\"> {{'twoStepLogin' | i18n}} <small>{{'authenticatorAppTitle' | i18n}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"> <div class=\"modal-body\"> <ng-container *ngIf=\"!enabled\"> <img src=\"images/0.png\" class=\"float-right\" alt=\"\"> <p>{{'twoStepAuthenticatorDesc' | i18n}}</p> <p> <strong>1. {{'twoStepAuthenticatorDownloadApp' | i18n}}</strong> </p> </ng-container> <ng-container *ngIf=\"enabled\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\"> <p>{{'twoStepLoginProviderEnabled' | i18n}}</p> {{'twoStepAuthenticatorReaddDesc' | i18n}} </app-callout> <img src=\"images/0.png\" class=\"float-right\" alt=\"\"> <p>{{'twoStepAuthenticatorNeedApp' | i18n}}</p> </ng-container> <ul class=\"fa-ul\"> <li> <i class=\"fa-li fa fa-apple\"></i>{{'iosDevices' | i18n}}: <a href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\" target=\"_blank\" rel=\"noopener\">Authy</a> </li> <li> <i class=\"fa-li fa fa-android\"></i>{{'androidDevices' | i18n}}: <a href=\"https://play.google.com/store/apps/details?id=com.authy.authy\" target=\"_blank\" rel=\"noopener\">Authy</a> </li> <li> <i class=\"fa-li fa fa-windows\"></i>{{'windowsDevices' | i18n}}: <a href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\" target=\"_blank\" rel=\"noopener\">Microsoft Authenticator</a> </li> </ul> <p>{{'twoStepAuthenticatorAppsRecommended' | i18n}}</p> <p *ngIf=\"!enabled\"> <strong>2. {{'twoStepAuthenticatorScanCode' | i18n}}</strong> </p> <hr *ngIf=\"enabled\"> <p class=\"text-center\" [ngClass]=\"{'mb-0': enabled}\"> <canvas id=\"qr\"></canvas><br> <code appA11yTitle=\"{{'key' | i18n}}\">{{key}}</code> </p> <ng-container *ngIf=\"!enabled\"> <label for=\"token\">3. {{'twoStepAuthenticatorEnterCode' | i18n}}</label> <input id=\"token\" type=\"text\" name=\"Token\" class=\"form-control\" [(ngModel)]=\"token\" required appInputVerbatim> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span> <span *ngIf=\"enabled\">{{'disable' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { TwoFactorEmailRequest } from 'jslib-common/models/request/twoFactorEmailRequest';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\nimport { UpdateTwoFactorEmailRequest } from 'jslib-common/models/request/updateTwoFactorEmailRequest';\nimport { TwoFactorEmailResponse } from 'jslib-common/models/response/twoFactorEmailResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-email',\n    templateUrl: 'two-factor-email.component.html',\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Email;\n    email: string;\n    token: string;\n    sentEmail: string;\n    formPromise: Promise<any>;\n    emailPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        private userService: UserService) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        return this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    async sendEmail() {\n        try {\n            const request = new TwoFactorEmailRequest(this.email, this.masterPasswordHash);\n            this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n            await this.emailPromise;\n            this.sentEmail = this.email;\n        } catch { }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorEmailRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.email = this.email;\n        request.token = this.token;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorEmail(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private async processResponse(response: TwoFactorEmailResponse) {\n        this.token = null;\n        this.email = response.email;\n        this.enabled = response.enabled;\n        if (!this.enabled && (this.email == null || this.email === '')) {\n            this.email = await this.userService.getEmail();\n        }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\"> <div class=\"modal-dialog\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faEmailTitle\"> {{'twoStepLogin' | i18n}} <small>{{'emailTitle' | i18n}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"> <div class=\"modal-body\"> <ng-container *ngIf=\"enabled\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\"> {{'twoStepLoginProviderEnabled' | i18n}} </app-callout> <strong>{{'email' | i18n}}:</strong> {{email}} </ng-container> <ng-container *ngIf=\"!enabled\"> <p class=\"d-flex\"> <span class=\"mr-3\">{{'twoFactorEmailDesc' | i18n}}</span> <img src=\"images/1.png\" class=\"float-right ml-auto\" alt=\"\"> </p> <div class=\"form-group\"> <label for=\"email\">1. {{'twoFactorEmailEnterEmail' | i18n}}</label> <input id=\"email\" type=\"text\" name=\"Email\" class=\"form-control\" [(ngModel)]=\"email\" required inputmode=\"email\" appInputVerbatim=\"false\"> </div> <div class=\"mb-3 d-flex\"> <button #sendBtn type=\"button\" class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\" (click)=\"sendEmail()\" [appApiAction]=\"emailPromise\" [disabled]=\"sendBtn.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'sendEmail' | i18n}}</span> </button> <span class=\"text-success ml-3\" *ngIf=\"sentEmail\"> {{'verificationCodeEmailSent' | i18n : sentEmail}} </span> </div> <div class=\"form-group\"> <label for=\"token\">2. {{'twoFactorEmailEnterCode' | i18n}}</label> <input id=\"token\" type=\"text\" name=\"Token\" class=\"form-control\" [(ngModel)]=\"token\" required appInputVerbatim> </div> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span> <span *ngIf=\"enabled\">{{'disable' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { TwoFactorRecoverResponse } from 'jslib-common/models/response/twoFactorRescoverResponse';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\n@Component({\n    selector: 'app-two-factor-recovery',\n    templateUrl: 'two-factor-recovery.component.html',\n})\nexport class TwoFactorRecoveryComponent {\n    type = -1;\n    code: string;\n    authed: boolean;\n    twoFactorProviderType = TwoFactorProviderType;\n\n    constructor(private i18nService: I18nService) { }\n\n    auth(authResponse: any) {\n        this.authed = true;\n        this.processResponse(authResponse.response);\n    }\n\n    print() {\n        const w = window.open();\n        w.document.write('<div style=\"font-size: 18px; text-align: center;\">' +\n            '<p>' + this.i18nService.t('twoFactorRecoveryYourCode') + ':</p>' +\n            '<code style=\"font-family: Menlo, Monaco, Consolas, \\'Courier New\\', monospace;\">' +\n            this.code + '</code></div>' +\n            '<p style=\"text-align: center;\">' + new Date() + '</p>');\n        w.onafterprint = () => w.close();\n        w.print();\n    }\n\n    private formatString(s: string) {\n        if (s == null) {\n            return null;\n        }\n        return s.replace(/(.{4})/g, '$1 ').trim().toUpperCase();\n    }\n\n    private processResponse(response: TwoFactorRecoverResponse) {\n        this.code = this.formatString(response.code);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\"> <div class=\"modal-dialog\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faRecoveryTitle\"> {{'twoStepLogin' | i18n}} <small>{{'recoveryCodeTitle' | i18n}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <ng-container *ngIf=\"authed\"> <div class=\"modal-body text-center\"> <ng-container *ngIf=\"code\"> <p>{{'twoFactorRecoveryYourCode' | i18n}}:</p> <code class=\"text-lg\">{{code}}</code> </ng-container> <ng-container *ngIf=\"!code\"> {{'twoFactorRecoveryNoCode' | i18n}} </ng-container> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">{{'printCode' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </ng-container> </div> </div> </div> ","import {\n    Component,\n    NgZone,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from 'jslib-common/models/request/updateTwoFactorWebAuthnDeleteRequest';\nimport { UpdateTwoFactorWebAuthnRequest } from 'jslib-common/models/request/updateTwoFactorWebAuthnRequest';\nimport {\n    ChallengeResponse,\n    TwoFactorWebAuthnResponse,\n} from 'jslib-common/models/response/twoFactorWebAuthnResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-webauthn',\n    templateUrl: 'two-factor-webauthn.component.html',\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.WebAuthn;\n    name: string;\n    keys: any[];\n    keyIdAvailable: number = null;\n    keysConfiguredCount = 0;\n    webAuthnError: boolean;\n    webAuthnListening: boolean;\n    webAuthnResponse: PublicKeyCredential;\n    challengePromise: Promise<ChallengeResponse>;\n    formPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        private ngZone: NgZone) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n            // Should never happen.\n            return Promise.reject();\n        }\n        const request = new UpdateTwoFactorWebAuthnRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.deviceResponse = this.webAuthnResponse;\n        request.id = this.keyIdAvailable;\n        request.name = this.name;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    disable() {\n        return super.disable(this.formPromise);\n    }\n\n    async remove(key: any) {\n        if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n            return;\n        }\n        const name = key.name != null ? key.name : this.i18nService.t('webAuthnkeyX', key.id);\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeU2fConfirmation'), name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n        const request = new UpdateTwoFactorWebAuthnDeleteRequest();\n        request.id = key.id;\n        request.masterPasswordHash = this.masterPasswordHash;\n        try {\n            key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n            const response = await key.removePromise;\n            key.removePromise = null;\n            await this.processResponse(response);\n        } catch { }\n    }\n\n    async readKey() {\n        if (this.keyIdAvailable == null) {\n            return;\n        }\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        try {\n            this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n            const challenge = await this.challengePromise;\n            this.readDevice(challenge);\n        } catch { }\n    }\n\n    private readDevice(webAuthnChallenge: ChallengeResponse) {\n        // tslint:disable-next-line\n        console.log('listening for key...');\n        this.resetWebAuthn(true);\n\n        navigator.credentials.create({\n            publicKey: webAuthnChallenge,\n        }).then((data: PublicKeyCredential) => {\n            this.ngZone.run(() => {\n                this.webAuthnListening = false;\n                this.webAuthnResponse = data;\n            });\n        }).catch(err => {\n            // tslint:disable-next-line\n            console.error(err);\n            this.resetWebAuthn(false);\n            // TODO: Should we display the actual error?\n            this.webAuthnError = true;\n        });\n    }\n\n    private resetWebAuthn(listening = false) {\n        this.webAuthnResponse = null;\n        this.webAuthnError = false;\n        this.webAuthnListening = listening;\n    }\n\n    private processResponse(response: TwoFactorWebAuthnResponse) {\n        this.resetWebAuthn();\n        this.keys = [];\n        this.keyIdAvailable = null;\n        this.name = null;\n        this.keysConfiguredCount = 0;\n        for (let i = 1; i <= 5; i++) {\n            if (response.keys != null) {\n                const key = response.keys.filter(k => k.id === i);\n                if (key.length > 0) {\n                    this.keysConfiguredCount++;\n                    this.keys.push({\n                        id: i, name: key[0].name,\n                        configured: true,\n                        migrated: key[0].migrated,\n                        removePromise: null,\n                    });\n                    continue;\n                }\n            }\n            this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n            if (this.keyIdAvailable == null) {\n                this.keyIdAvailable = i;\n            }\n        }\n        this.enabled = response.enabled;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\"> <div class=\"modal-dialog modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faU2fTitle\"> {{'twoStepLogin' | i18n}} <small>{{'webAuthnTitle' | i18n}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"> <div class=\"modal-body\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"enabled\"> {{'twoStepLoginProviderEnabled' | i18n}} </app-callout> <app-callout type=\"warning\"> <p>{{'twoFactorWebAuthnWarning' | i18n}}</p> <ul class=\"mb-0\"> <li>{{'twoFactorWebAuthnSupportWeb' | i18n}}</li> </ul> </app-callout> <img src=\"images/7.png\" class=\"float-right ml-5\" alt=\"\"> <ul class=\"fa-ul\"> <li *ngFor=\"let k of keys; let i = index\" #removeKeyBtn [appApiAction]=\"k.removePromise\"> <i class=\"fa-li fa fa-key\"></i> <strong *ngIf=\"!k.configured || !k.name\">{{'webAuthnkeyX' | i18n : i + 1}}</strong> <strong *ngIf=\"k.configured && k.name\">{{k.name}}</strong> <ng-container *ngIf=\"k.configured && !removeKeyBtn.loading\"> <ng-container *ngIf=\"k.migrated\"> <span>{{'webAuthnMigrated' | i18n}}</span> </ng-container> </ng-container> <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\"> <i class=\"fa fa-spin fa-spinner text-muted fa-fw\" title=\"{{'loading' | i18n}}\" *ngIf=\"removeKeyBtn.loading\" aria-hidden=\"true\"></i> - <a href=\"#\" appStopClick (click)=\"remove(k)\">{{'remove' | i18n}}</a> </ng-container> </li> </ul> <hr> <p>{{'twoFactorWebAuthnAdd' | i18n}}:</p> <ol> <li>{{'twoFactorU2fGiveName' | i18n}}</li> <li>{{'twoFactorU2fPlugInReadKey' | i18n}}</li> <li>{{'twoFactorU2fTouchButton' | i18n}}</li> <li>{{'twoFactorU2fSaveForm' | i18n}}</li> </ol> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" type=\"text\" name=\"Name\" class=\"form-control\" [(ngModel)]=\"name\" [disabled]=\"!keyIdAvailable\"> </div> </div> <button type=\"button\" (click)=\"readKey()\" class=\"btn btn-outline-secondary mr-2\" [disabled]=\"readKeyBtn.loading || webAuthnListening || !keyIdAvailable\" #readKeyBtn [appApiAction]=\"challengePromise\"> {{'readKey' | i18n}} </button> <ng-container *ngIf=\"readKeyBtn.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" aria-hidden=\"true\"></i> </ng-container> <ng-container *ngIf=\"!readKeyBtn.loading\"> <ng-container *ngIf=\"webAuthnListening\"> <i class=\"fa fa-spinner fa-spin text-muted\" aria-hidden=\"true\"></i> {{'twoFactorU2fWaiting' | i18n}}... </ng-container> <ng-container *ngIf=\"webAuthnResponse\"> <i class=\"fa fa-check-circle text-success\" aria-hidden=\"true\"></i> {{'twoFactorU2fClickSave' | i18n}} </ng-container> <ng-container *ngIf=\"webAuthnError\"> <i class=\"fa fa-warning text-danger\" aria-hidden=\"true\"></i> {{'twoFactorU2fProblemReadingTryAgain' | i18n}} </ng-container> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.loading || !webAuthnResponse\"> <i class=\"fa fa-spinner fa-spin\" *ngIf=\"form.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!form.loading\">{{'save' | i18n}}</span> </button> <button #disableBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" [appApiAction]=\"disablePromise\" [disabled]=\"disableBtn.loading\" (click)=\"disable()\" *ngIf=\"enabled\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'disableAllKeys' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { UpdateTwoFactorYubioOtpRequest } from 'jslib-common/models/request/updateTwoFactorYubioOtpRequest';\nimport { TwoFactorYubiKeyResponse } from 'jslib-common/models/response/twoFactorYubiKeyResponse';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-yubikey',\n    templateUrl: 'two-factor-yubikey.component.html',\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Yubikey;\n    keys: any[];\n    nfc = false;\n\n    formPromise: Promise<any>;\n    disablePromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        const request = new UpdateTwoFactorYubioOtpRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n        request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n        request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n        request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n        request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n        request.nfc = this.nfc;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n            this.toasterService.popAsync('success', null, this.i18nService.t('yubikeysUpdated'));\n        });\n    }\n\n    disable() {\n        return super.disable(this.disablePromise);\n    }\n\n    remove(key: any) {\n        key.existingKey = null;\n        key.key = null;\n    }\n\n    private processResponse(response: TwoFactorYubiKeyResponse) {\n        this.enabled = response.enabled;\n        this.keys = [\n            { key: response.key1, existingKey: this.padRight(response.key1) },\n            { key: response.key2, existingKey: this.padRight(response.key2) },\n            { key: response.key3, existingKey: this.padRight(response.key3) },\n            { key: response.key4, existingKey: this.padRight(response.key4) },\n            { key: response.key5, existingKey: this.padRight(response.key5) },\n        ];\n        this.nfc = response.nfc || !response.enabled;\n    }\n\n    private padRight(str: string, character = '•', size = 44) {\n        if (str == null || character == null || str.length >= size) {\n            return str;\n        }\n        const max = (size - str.length) / character.length;\n        for (let i = 0; i < max; i++) {\n            str += character;\n        }\n        return str;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\"> <div class=\"modal-dialog modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faYubiKeyTitle\"> {{'twoStepLogin' | i18n}} <small>YubiKey</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\" autocomplete=\"off\"> <div class=\"modal-body\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"enabled\"> {{'twoStepLoginProviderEnabled' | i18n}} </app-callout> <app-callout type=\"warning\"> <p>{{'twoFactorYubikeyWarning' | i18n}}</p> <ul class=\"mb-0\"> <li>{{'twoFactorYubikeySupportUsb' | i18n}}</li> <li>{{'twoFactorYubikeySupportMobile' | i18n}}</li> </ul> </app-callout> <img src=\"images/3.png\" class=\"float-right\" alt=\"\"> <p>{{'twoFactorYubikeyAdd' | i18n}}:</p> <ol> <li>{{'twoFactorYubikeyPlugIn' | i18n}}</li> <li>{{'twoFactorYubikeySelectKey' | i18n}}</li> <li>{{'twoFactorYubikeyTouchButton' | i18n}}</li> <li>{{'twoFactorYubikeySaveForm' | i18n}}</li> </ol> <hr> <div class=\"row\"> <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\"> <label for=\"key{{i + 1}}\">{{'yubikeyX' | i18n : i + 1}}</label> <input id=\"key{{i + 1}}\" type=\"password\" name=\"Key{{i + 1}}\" class=\"form-control\" [(ngModel)]=\"k.key\" *ngIf=\"!k.existingKey\" appInputVerbatim autocomplete=\"new-password\"> <div class=\"d-flex\" *ngIf=\"k.existingKey\"> <span class=\"mr-2\">{{k.existingKey}}</span> <button type=\"button\" class=\"btn btn-link text-danger ml-auto\" (click)=\"remove(k)\" appA11yTitle=\"{{'remove' | i18n}}\"> <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <strong class=\"d-block mb-2\">{{'nfcSupport' | i18n}}</strong> <div class=\"form-check\"> <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\"> <label class=\"form-check-label\" for=\"nfc\">{{'twoFactorYubikeySupportsNfc' | i18n}}</label> </div> <small class=\"form-text text-muted\">{{'twoFactorYubikeySupportsNfcDesc' | i18n}}</small> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button #disableBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" [appApiAction]=\"disablePromise\" [disabled]=\"disableBtn.loading\" (click)=\"disable()\" *ngIf=\"enabled\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'disableAllKeys' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { ExportComponent as BaseExportComponent } from '../../tools/export.component';\n\nimport { EventType } from 'jslib-common/enums/eventType';\n\n@Component({\n    selector: 'app-org-export',\n    templateUrl: '../../tools/export.component.html',\n})\nexport class ExportComponent extends BaseExportComponent {\n    constructor(cryptoService: CryptoService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, exportService: ExportService,\n        eventService: EventService, private route: ActivatedRoute) {\n        super(cryptoService, i18nService, platformUtilsService, exportService, eventService);\n    }\n\n    ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n        });\n    }\n\n    getExportData() {\n        return this.exportService.getOrganizationExport(this.organizationId, this.format);\n    }\n\n    getFileName() {\n        return super.getFileName('org');\n    }\n\n    async collectEvent(): Promise<any> {\n        // TODO\n        // await this.eventService.collect(EventType.Organization_ClientExportedVault);\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport {\n    ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent,\n} from '../../tools/exposed-passwords-report.component';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Component({\n    selector: 'app-exposed-passwords-report',\n    templateUrl: '../../tools/exposed-passwords-report.component.html',\n})\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n    manageableCiphers: Cipher[];\n\n    constructor(cipherService: CipherService, auditService: AuditService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        userService: UserService, private route: ActivatedRoute) {\n        super(cipherService, auditService, componentFactoryResolver, messagingService, userService);\n    }\n\n    ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.manageableCiphers = await this.cipherService.getAll();\n            super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n\n    canManageCipher(c: CipherView): boolean {\n        return this.manageableCiphers.some(x => x.id === c.id);\n    }\n}\n","import { PasswordHistoryResponse } from '../response/passwordHistoryResponse';\n\nexport class PasswordHistoryData {\n    password: string;\n    lastUsedDate: string;\n\n    constructor(response?: PasswordHistoryResponse) {\n        if (response == null) {\n            return;\n        }\n\n        this.password = response.password;\n        this.lastUsedDate = response.lastUsedDate;\n    }\n}\n","import { View } from './view';\n\nimport { Attachment } from '../domain/attachment';\nimport { SymmetricCryptoKey } from '../domain/symmetricCryptoKey';\n\nexport class AttachmentView implements View {\n    id: string = null;\n    url: string = null;\n    size: string = null;\n    sizeName: string = null;\n    fileName: string = null;\n    key: SymmetricCryptoKey = null;\n\n    constructor(a?: Attachment) {\n        if (!a) {\n            return;\n        }\n\n        this.id = a.id;\n        this.url = a.url;\n        this.size = a.size;\n        this.sizeName = a.sizeName;\n    }\n\n    get fileSize(): number {\n        try {\n            if (this.size != null) {\n                return parseInt(this.size, null);\n            }\n        } catch { }\n        return 0;\n    }\n}\n","import { PasswordHistoryData } from '../data/passwordHistoryData';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nimport { PasswordHistoryView } from '../view/passwordHistoryView';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Password extends Domain {\n    password: EncString;\n    lastUsedDate: Date;\n\n    constructor(obj?: PasswordHistoryData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            password: null,\n        }, alreadyEncrypted);\n        this.lastUsedDate = new Date(obj.lastUsedDate);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n         return this.decryptObj(new PasswordHistoryView(this), {\n            password: null,\n        }, orgId, encKey);\n    }\n\n    toPasswordHistoryData(): PasswordHistoryData {\n        const ph = new PasswordHistoryData();\n        ph.lastUsedDate = this.lastUsedDate.toISOString();\n        this.buildDataModel(this, ph, {\n            password: null,\n        });\n        return ph;\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherCreateRequest {\n    cipher: CipherRequest;\n    collectionIds: string[];\n\n    constructor(cipher: Cipher) {\n        this.cipher = new CipherRequest(cipher);\n        this.collectionIds = cipher.collectionIds;\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class CardApi extends BaseResponse {\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.cardholderName = this.getResponseProperty('CardholderName');\n        this.brand = this.getResponseProperty('Brand');\n        this.number = this.getResponseProperty('Number');\n        this.expMonth = this.getResponseProperty('ExpMonth');\n        this.expYear = this.getResponseProperty('ExpYear');\n        this.code = this.getResponseProperty('Code');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { FieldType } from '../../enums/fieldType';\n\nexport class FieldApi extends BaseResponse {\n    name: string;\n    value: string;\n    type: FieldType;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n        this.value = this.getResponseProperty('Value');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class IdentityApi extends BaseResponse {\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.title = this.getResponseProperty('Title');\n        this.firstName = this.getResponseProperty('FirstName');\n        this.middleName = this.getResponseProperty('MiddleName');\n        this.lastName = this.getResponseProperty('LastName');\n        this.address1 = this.getResponseProperty('Address1');\n        this.address2 = this.getResponseProperty('Address2');\n        this.address3 = this.getResponseProperty('Address3');\n        this.city = this.getResponseProperty('City');\n        this.state = this.getResponseProperty('State');\n        this.postalCode = this.getResponseProperty('PostalCode');\n        this.country = this.getResponseProperty('Country');\n        this.company = this.getResponseProperty('Company');\n        this.email = this.getResponseProperty('Email');\n        this.phone = this.getResponseProperty('Phone');\n        this.ssn = this.getResponseProperty('SSN');\n        this.username = this.getResponseProperty('Username');\n        this.passportNumber = this.getResponseProperty('PassportNumber');\n        this.licenseNumber = this.getResponseProperty('LicenseNumber');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { LoginUriApi } from './loginUriApi';\n\nexport class LoginApi extends BaseResponse {\n    uris: LoginUriApi[];\n    username: string;\n    password: string;\n    passwordRevisionDate: string;\n    totp: string;\n    autofillOnPageLoad: boolean;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.username = this.getResponseProperty('Username');\n        this.password = this.getResponseProperty('Password');\n        this.passwordRevisionDate = this.getResponseProperty('PasswordRevisionDate');\n        this.totp = this.getResponseProperty('Totp');\n        this.autofillOnPageLoad = this.getResponseProperty('AutofillOnPageLoad');\n\n        const uris = this.getResponseProperty('Uris');\n        if (uris != null) {\n            this.uris = uris.map((u: any) => new LoginUriApi(u));\n        }\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { UriMatchType } from '../../enums/uriMatchType';\n\nexport class LoginUriApi extends BaseResponse {\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.uri = this.getResponseProperty('Uri');\n        const match = this.getResponseProperty('Match');\n        this.match = match != null ? match : null;\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { SecureNoteType } from '../../enums/secureNoteType';\n\nexport class SecureNoteApi extends BaseResponse {\n    type: SecureNoteType;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.type = this.getResponseProperty('Type');\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n    Input,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appFallbackSrc]',\n})\nexport class FallbackSrcDirective {\n    @Input('appFallbackSrc') appFallbackSrc: string;\n\n    constructor(private el: ElementRef) {\n    }\n\n    @HostListener('error') onError() {\n        this.el.nativeElement.src = this.appFallbackSrc;\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { ImportService } from 'jslib-common/abstractions/import.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ImportComponent as BaseImportComponent } from '../../tools/import.component';\n\n@Component({\n    selector: 'app-org-import',\n    templateUrl: '../../tools/import.component.html',\n})\nexport class ImportComponent extends BaseImportComponent {\n    organizationName: string;\n\n    constructor(i18nService: I18nService, toasterService: ToasterService,\n        importService: ImportService, router: Router, private route: ActivatedRoute,\n        platformUtilsService: PlatformUtilsService,\n        private userService: UserService) {\n        super(i18nService, toasterService, importService, router, platformUtilsService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            this.successNavigate = ['organizations', this.organizationId, 'vault'];\n            super.ngOnInit();\n        });\n        const organization = await this.userService.getOrganization(this.organizationId);\n        this.organizationName = organization.name;\n    }\n\n    async submit() {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('importWarning', this.organizationName),\n            this.i18nService.t('warning'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n        super.submit();\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport {\n    InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent,\n} from '../../tools/inactive-two-factor-report.component';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Component({\n    selector: 'app-inactive-two-factor-report',\n    templateUrl: '../../tools/inactive-two-factor-report.component.html',\n})\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n    constructor(cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService,\n        private route: ActivatedRoute) {\n        super(cipherService, componentFactoryResolver, messagingService, userService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport {\n    ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent,\n} from '../../tools/reused-passwords-report.component';\n\n@Component({\n    selector: 'app-reused-passwords-report',\n    templateUrl: '../../tools/reused-passwords-report.component.html',\n})\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n    manageableCiphers: Cipher[];\n\n    constructor(cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService,\n        private route: ActivatedRoute) {\n        super(cipherService, componentFactoryResolver, messagingService, userService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.manageableCiphers = await this.cipherService.getAll();\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n\n    canManageCipher(c: CipherView): boolean {\n        return this.manageableCiphers.some(x => x.id === c.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'app-org-tools',\n    templateUrl: 'tools.component.html',\n})\nexport class ToolsComponent {\n    organization: Organization;\n    accessReports = false;\n    loading = true;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private messagingService: MessagingService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n            // since all paid plans include useTotp\n            this.accessReports = this.organization.useTotp;\n            this.loading = false;\n        });\n    }\n\n    upgradeOrganization() {\n        this.messagingService.send('upgradeOrganization', { organizationId: this.organization.id });\n    }\n}\n","<div class=\"container page-content\"> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card mb-4\" *ngIf=\"organization.canAccessImportExport\"> <div class=\"card-header\">{{'tools' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'importData' | i18n}} </a> <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'exportVault' | i18n}} </a> </div> </div> <div class=\"card\" *ngIf=\"organization.canAccessReports\"> <div class=\"card-header d-flex\"> {{'reports' | i18n}} <div class=\"ml-auto\"> <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!accessReports\" (click)=\"upgradeOrganization()\"> {{'upgrade' | i18n}} </a> </div> </div> <div class=\"list-group list-group-flush\"> <a routerLink=\"exposed-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'exposedPasswordsReport' | i18n}} </a> <a routerLink=\"reused-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'reusedPasswordsReport' | i18n}} </a> <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'weakPasswordsReport' | i18n}} </a> <a routerLink=\"unsecured-websites-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'unsecuredWebsitesReport' | i18n}} </a> <a routerLink=\"inactive-two-factor-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'inactive2faReport' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </ng-container> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport {\n    UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent,\n} from '../../tools/unsecured-websites-report.component';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Component({\n    selector: 'app-unsecured-websites-report',\n    templateUrl: '../../tools/unsecured-websites-report.component.html',\n})\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n    constructor(cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService,\n        private route: ActivatedRoute) {\n        super(cipherService, componentFactoryResolver, messagingService, userService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport {\n    WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent,\n} from '../../tools/weak-passwords-report.component';\n\n@Component({\n    selector: 'app-weak-passwords-report',\n    templateUrl: '../../tools/weak-passwords-report.component.html',\n})\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n    manageableCiphers: Cipher[];\n\n    constructor(cipherService: CipherService, passwordGenerationService: PasswordGenerationService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        userService: UserService, private route: ActivatedRoute) {\n        super(cipherService, passwordGenerationService, componentFactoryResolver, messagingService, userService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.manageableCiphers = await this.cipherService.getAll();\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n\n    canManageCipher(c: CipherView): boolean {\n        return this.manageableCiphers.some(x => x.id === c.id);\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { ModalComponent } from '../../modal.component';\n\nimport { EntityEventsComponent } from '../manage/entity-events.component';\nimport { AddEditComponent } from './add-edit.component';\nimport { AttachmentsComponent } from './attachments.component';\nimport { CiphersComponent } from './ciphers.component';\nimport { CollectionsComponent } from './collections.component';\nimport { GroupingsComponent } from './groupings.component';\n\nconst BroadcasterSubscriptionId = 'OrgVaultComponent';\n\n@Component({\n    selector: 'app-org-vault',\n    templateUrl: 'vault.component.html',\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n    @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\n    @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n    @ViewChild('attachments', { read: ViewContainerRef, static: true }) attachmentsModalRef: ViewContainerRef;\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('collections', { read: ViewContainerRef, static: true }) collectionsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef, static: true }) eventsModalRef: ViewContainerRef;\n\n    organization: Organization;\n    collectionId: string = null;\n    type: CipherType = null;\n    deleted: boolean = false;\n    trashCleanupWarning: string = null;\n\n    modal: ModalComponent = null;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private router: Router, private changeDetectorRef: ChangeDetectorRef,\n        private syncService: SyncService, private i18nService: I18nService,\n        private componentFactoryResolver: ComponentFactoryResolver, private messagingService: MessagingService,\n        private broadcasterService: BroadcasterService, private ngZone: NgZone,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.trashCleanupWarning = this.i18nService.t(\n            this.platformUtilsService.isSelfHost() ? 'trashCleanupWarningSelfHosted' : 'trashCleanupWarning'\n        );\n\n        const queryParams = this.route.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.groupingsComponent.organization = this.organization;\n            this.ciphersComponent.organization = this.organization;\n\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                this.ciphersComponent.searchText = this.groupingsComponent.searchText = qParams.search;\n                if (!this.organization.canManageAllCollections) {\n                    await this.syncService.fullSync(false);\n                    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n                        this.ngZone.run(async () => {\n                            switch (message.command) {\n                                case 'syncCompleted':\n                                    if (message.successfully) {\n                                        await Promise.all([\n                                            this.groupingsComponent.load(),\n                                            this.ciphersComponent.refresh(),\n                                        ]);\n                                        this.changeDetectorRef.detectChanges();\n                                    }\n                                    break;\n                            }\n                        });\n                    });\n                }\n                await this.groupingsComponent.load();\n\n                if (qParams == null) {\n                    this.groupingsComponent.selectedAll = true;\n                    await this.ciphersComponent.reload();\n                } else {\n                    if (qParams.deleted) {\n                        this.groupingsComponent.selectedTrash = true;\n                        await this.filterDeleted(true);\n                    } else if (qParams.type) {\n                        const t = parseInt(qParams.type, null);\n                        this.groupingsComponent.selectedType = t;\n                        await this.filterCipherType(t, true);\n                    } else if (qParams.collectionId) {\n                        this.groupingsComponent.selectedCollectionId = qParams.collectionId;\n                        await this.filterCollection(qParams.collectionId, true);\n                    } else {\n                        this.groupingsComponent.selectedAll = true;\n                        await this.ciphersComponent.reload();\n                    }\n                }\n\n                if (qParams.viewEvents != null) {\n                    const cipher = this.ciphersComponent.ciphers.filter(c => c.id === qParams.viewEvents);\n                    if (cipher.length > 0) {\n                        this.viewEvents(cipher[0]);\n                    }\n                }\n\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n\n            if (queryParams != null) {\n                queryParams.unsubscribe();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async clearGroupingFilters() {\n        this.ciphersComponent.showAddNew = true;\n        this.ciphersComponent.deleted = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchVault');\n        await this.ciphersComponent.applyFilter();\n        this.clearFilters();\n        this.go();\n    }\n\n    async filterCipherType(type: CipherType, load = false) {\n        this.ciphersComponent.showAddNew = true;\n        this.ciphersComponent.deleted = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchType');\n        const filter = (c: CipherView) => c.type === type;\n        if (load) {\n            await this.ciphersComponent.reload(filter);\n        } else {\n            await this.ciphersComponent.applyFilter(filter);\n        }\n        this.clearFilters();\n        this.type = type;\n        this.go();\n    }\n\n    async filterCollection(collectionId: string, load = false) {\n        this.ciphersComponent.showAddNew = true;\n        this.ciphersComponent.deleted = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchCollection');\n        const filter = (c: CipherView) => {\n            if (collectionId === 'unassigned') {\n                return c.collectionIds == null || c.collectionIds.length === 0;\n            } else {\n                return c.collectionIds != null && c.collectionIds.indexOf(collectionId) > -1;\n            }\n        };\n        if (load) {\n            await this.ciphersComponent.reload(filter);\n        } else {\n            await this.ciphersComponent.applyFilter(filter);\n        }\n        this.clearFilters();\n        this.collectionId = collectionId;\n        this.go();\n    }\n\n    async filterDeleted(load: boolean = false) {\n        this.ciphersComponent.showAddNew = false;\n        this.ciphersComponent.deleted = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchTrash');\n        if (load) {\n            await this.ciphersComponent.reload(null, true);\n        } else {\n            await this.ciphersComponent.applyFilter(null);\n        }\n        this.clearFilters();\n        this.deleted = true;\n        this.go();\n    }\n\n    filterSearchText(searchText: string) {\n        this.ciphersComponent.searchText = searchText;\n        this.ciphersComponent.search(200);\n    }\n\n    editCipherAttachments(cipher: CipherView) {\n        if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n            this.messagingService.send('upgradeOrganization', { organizationId: cipher.organizationId });\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.attachmentsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AttachmentsComponent>(AttachmentsComponent, this.attachmentsModalRef);\n\n        childComponent.organization = this.organization;\n        childComponent.cipherId = cipher.id;\n        let madeAttachmentChanges = false;\n        childComponent.onUploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n        childComponent.onDeletedAttachment.subscribe(() => madeAttachmentChanges = true);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n            if (madeAttachmentChanges) {\n                await this.ciphersComponent.refresh();\n            }\n            madeAttachmentChanges = false;\n        });\n    }\n\n    editCipherCollections(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.collectionsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<CollectionsComponent>(CollectionsComponent, this.collectionsModalRef);\n\n        if (this.organization.canManageAllCollections) {\n            childComponent.collectionIds = cipher.collectionIds;\n            childComponent.collections = this.groupingsComponent.collections.filter(c => !c.readOnly);\n        }\n        childComponent.organization = this.organization;\n        childComponent.cipherId = cipher.id;\n        childComponent.onSavedCollections.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    addCipher() {\n        const component = this.editCipher(null);\n        component.organizationId = this.organization.id;\n        component.type = this.type;\n        if (this.organization.canManageAllCollections) {\n            component.collections = this.groupingsComponent.collections.filter(c => !c.readOnly);\n        }\n        if (this.collectionId != null) {\n            component.collectionIds = [this.collectionId];\n        }\n    }\n\n    editCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AddEditComponent>(AddEditComponent, this.cipherAddEditModalRef);\n\n        childComponent.organization = this.organization;\n        childComponent.cipherId = cipher == null ? null : cipher.id;\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n        childComponent.onRestoredCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n\n    cloneCipher(cipher: CipherView) {\n        const component = this.editCipher(cipher);\n        component.cloneMode = true;\n        component.organizationId = this.organization.id;\n        if (this.organization.canManageAllCollections) {\n            component.collections = this.groupingsComponent.collections.filter(c => !c.readOnly);\n        }\n        // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n        // in the add-edit componenet\n        component.collectionIds = cipher.collectionIds;\n    }\n\n    async viewEvents(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.eventsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityEventsComponent>(\n            EntityEventsComponent, this.eventsModalRef);\n\n        childComponent.name = cipher.name;\n        childComponent.organizationId = this.organization.id;\n        childComponent.entityId = cipher.id;\n        childComponent.showUser = true;\n        childComponent.entity = 'cipher';\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private clearFilters() {\n        this.collectionId = null;\n        this.type = null;\n        this.deleted = false;\n    }\n\n    private go(queryParams: any = null) {\n        if (queryParams == null) {\n            queryParams = {\n                type: this.type,\n                collectionId: this.collectionId,\n                deleted: this.deleted ? true : null,\n            };\n        }\n\n        this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams: queryParams,\n            replaceUrl: true,\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <app-org-vault-groupings [showFolders]=\"false\" [showFavorites]=\"false\" [showTrash]=\"true\" (onAllClicked)=\"clearGroupingFilters()\" (onCipherTypeClicked)=\"filterCipherType($event)\" (onCollectionClicked)=\"filterCollection($event.id)\" (onSearchTextChanged)=\"filterSearchText($event)\" (onTrashClicked)=\"filterDeleted()\"> </app-org-vault-groupings> </div> <div class=\"col-9\"> <div class=\"page-header d-flex\"> <h1> {{'vault' | i18n}} <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\"> <ng-container *ngIf=\"actionSpinner.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </small> </h1> <div class=\"ml-auto d-flex\"> <app-vault-bulk-actions [ciphersComponent]=\"ciphersComponent\" [modal]=\"modal\" [deleted]=\"deleted\" [organization]=\"organization\"> </app-vault-bulk-actions> <button type=\"button\" class=\"btn btn-outline-primary btn-sm ml-auto\" (click)=\"addCipher()\" *ngIf=\"!deleted\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'addItem' | i18n}} </button> </div> </div> <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"fa-warning\"> {{trashCleanupWarning}} </app-callout> <app-org-vault-ciphers (onCipherClicked)=\"editCipher($event)\" (onAttachmentsClicked)=\"editCipherAttachments($event)\" (onAddCipher)=\"addCipher()\" (onCollectionsClicked)=\"editCipherCollections($event)\" (onEventsClicked)=\"viewEvents($event)\" (onCloneClicked)=\"cloneCipher($event)\"> </app-org-vault-ciphers> </div> </div> </div> <ng-template #attachments></ng-template> <ng-template #cipherAddEdit></ng-template> <ng-template #collections></ng-template> <ng-template #eventsTemplate></ng-template> ","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherData } from 'jslib-common/models/data/cipherData';\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { AttachmentView } from 'jslib-common/models/view/attachmentView';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from '../../vault/attachments.component';\n\n@Component({\n    selector: 'app-org-vault-attachments',\n    templateUrl: '../../vault/attachments.component.html',\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n    viewOnly = false;\n    organization: Organization;\n\n    constructor(cipherService: CipherService, i18nService: I18nService,\n        cryptoService: CryptoService, userService: UserService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService) {\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService, apiService);\n    }\n\n    protected async reupload(attachment: AttachmentView) {\n        if (this.organization.canManageAllCollections && this.showFixOldAttachments(attachment)) {\n            await super.reuploadCipherAttachment(attachment, true);\n        }\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.canManageAllCollections) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        return new Cipher(new CipherData(response));\n    }\n\n    protected saveCipherAttachment(file: File) {\n        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file, this.organization.canManageAllCollections);\n    }\n\n    protected deleteCipherAttachment(attachmentId: string) {\n        if (!this.organization.canManageAllCollections) {\n            return super.deleteCipherAttachment(attachmentId);\n        }\n        return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n    }\n\n    protected showFixOldAttachments(attachment: AttachmentView) {\n        return attachment.key == null && this.organization.canManageAllCollections;\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { ErrorResponse } from 'jslib-common/models/response';\n\nimport { AttachmentView } from 'jslib-common/models/view/attachmentView';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n    @Input() cipherId: string;\n    @Output() onUploadedAttachment = new EventEmitter();\n    @Output() onDeletedAttachment = new EventEmitter();\n    @Output() onReuploadedAttachment = new EventEmitter();\n\n    cipher: CipherView;\n    cipherDomain: Cipher;\n    hasUpdatedKey: boolean;\n    canAccessAttachments: boolean;\n    formPromise: Promise<any>;\n    deletePromises: { [id: string]: Promise<any>; } = {};\n    reuploadPromises: { [id: string]: Promise<any>; } = {};\n    emergencyAccessId?: string = null;\n\n    constructor(protected cipherService: CipherService, protected i18nService: I18nService,\n        protected cryptoService: CryptoService, protected userService: UserService,\n        protected platformUtilsService: PlatformUtilsService, protected apiService: ApiService,\n        protected win: Window) { }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async submit() {\n        if (!this.hasUpdatedKey) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('updateKey'));\n            return;\n        }\n\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        if (files[0].size > 524288000) { // 500 MB\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('maxFileSize'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.saveCipherAttachment(files[0]);\n            this.cipherDomain = await this.formPromise;\n            this.cipher = await this.cipherDomain.decrypt();\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('attachmentSaved'));\n            this.onUploadedAttachment.emit();\n        } catch { }\n\n        // reset file input\n        // ref: https://stackoverflow.com/a/20552042\n        fileEl.type = '';\n        fileEl.type = 'file';\n        fileEl.value = '';\n    }\n\n    async delete(attachment: AttachmentView) {\n        if (this.deletePromises[attachment.id] != null) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteAttachmentConfirmation'), this.i18nService.t('deleteAttachment'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n            await this.deletePromises[attachment.id];\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedAttachment'));\n            const i = this.cipher.attachments.indexOf(attachment);\n            if (i > -1) {\n                this.cipher.attachments.splice(i, 1);\n            }\n        } catch { }\n\n        this.deletePromises[attachment.id] = null;\n        this.onDeletedAttachment.emit();\n    }\n\n    async download(attachment: AttachmentView) {\n        const a = (attachment as any);\n        if (a.downloading) {\n            return;\n        }\n\n        if (!this.canAccessAttachments) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('premiumRequired'),\n                this.i18nService.t('premiumRequiredDesc'));\n            return;\n        }\n\n        let url: string;\n        try {\n            const attachmentDownloadResponse = await this.apiService.getAttachmentData(this.cipher.id, attachment.id,\n                this.emergencyAccessId);\n            url = attachmentDownloadResponse.url;\n        } catch (e) {\n            if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n                url = attachment.url;\n            } else if (e instanceof ErrorResponse) {\n                throw new Error((e as ErrorResponse).getSingleMessage());\n            } else {\n                throw e;\n            }\n        }\n\n        a.downloading = true;\n        const response = await fetch(new Request(url, { cache: 'no-store' }));\n        if (response.status !== 200) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n            a.downloading = false;\n            return;\n        }\n\n        try {\n            const buf = await response.arrayBuffer();\n            const key = attachment.key != null ? attachment.key :\n                await this.cryptoService.getOrgKey(this.cipher.organizationId);\n            const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n            this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n        } catch (e) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n\n        a.downloading = false;\n    }\n\n    protected async init() {\n        this.cipherDomain = await this.loadCipher();\n        this.cipher = await this.cipherDomain.decrypt();\n\n        this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n        const canAccessPremium = await this.userService.canAccessPremium();\n        this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n        if (!this.canAccessAttachments) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'),\n                this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n            if (confirmed) {\n                this.platformUtilsService.launchUri('https://vault.bitwarden.com/#/?premium=purchase');\n            }\n        } else if (!this.hasUpdatedKey) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('updateKey'), this.i18nService.t('featureUnavailable'),\n                this.i18nService.t('learnMore'), this.i18nService.t('cancel'), 'warning');\n            if (confirmed) {\n                this.platformUtilsService.launchUri('https://help.bitwarden.com/article/update-encryption-key/');\n            }\n        }\n    }\n\n    protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n        const a = (attachment as any);\n        if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n            return;\n        }\n\n        try {\n            this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n                // 1. Download\n                a.downloading = true;\n                const response = await fetch(new Request(attachment.url, { cache: 'no-store' }));\n                if (response.status !== 200) {\n                    this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n                    a.downloading = false;\n                    return;\n                }\n\n                try {\n                    // 2. Resave\n                    const buf = await response.arrayBuffer();\n                    const key = attachment.key != null ? attachment.key :\n                        await this.cryptoService.getOrgKey(this.cipher.organizationId);\n                    const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n                    this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n                        this.cipherDomain, attachment.fileName, decBuf, admin);\n                    this.cipher = await this.cipherDomain.decrypt();\n\n                    // 3. Delete old\n                    this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n                    await this.deletePromises[attachment.id];\n                    const foundAttachment = this.cipher.attachments.filter(a2 => a2.id === attachment.id);\n                    if (foundAttachment.length > 0) {\n                        const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n                        if (i > -1) {\n                            this.cipher.attachments.splice(i, 1);\n                        }\n                    }\n\n                    this.platformUtilsService.showToast('success', null, this.i18nService.t('attachmentSaved'));\n                    this.onReuploadedAttachment.emit();\n                } catch (e) {\n                    this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n                }\n\n                a.downloading = false;\n            });\n            await this.reuploadPromises[attachment.id];\n        } catch { }\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected saveCipherAttachment(file: File) {\n        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n    }\n\n    protected deleteCipherAttachment(attachmentId: string) {\n        return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class GlobalDomainResponse extends BaseResponse {\n    type: number;\n    domains: string[];\n    excluded: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.domains = this.getResponseProperty('Domains');\n        this.excluded = this.getResponseProperty('Excluded');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class IdentityTokenResponse extends BaseResponse {\n    accessToken: string;\n    expiresIn: number;\n    refreshToken: string;\n    tokenType: string;\n\n    resetMasterPassword: boolean;\n    privateKey: string;\n    key: string;\n    twoFactorToken: string;\n    kdf: KdfType;\n    kdfIterations: number;\n\n    constructor(response: any) {\n        super(response);\n        this.accessToken = response.access_token;\n        this.expiresIn = response.expires_in;\n        this.refreshToken = response.refresh_token;\n        this.tokenType = response.token_type;\n\n        this.resetMasterPassword = this.getResponseProperty('ResetMasterPassword');\n        this.privateKey = this.getResponseProperty('PrivateKey');\n        this.key = this.getResponseProperty('Key');\n        this.twoFactorToken = this.getResponseProperty('TwoFactorToken');\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n    twoFactorProviders: TwoFactorProviderType[];\n    twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string; }>();\n\n    constructor(response: any) {\n        super(response);\n        this.twoFactorProviders = this.getResponseProperty('TwoFactorProviders');\n        const twoFactorProviders2 = this.getResponseProperty('TwoFactorProviders2');\n        if (twoFactorProviders2 != null) {\n            for (const prop in twoFactorProviders2) {\n                if (twoFactorProviders2.hasOwnProperty(prop)) {\n                    this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n                }\n            }\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class KeysResponse extends BaseResponse {\n    privateKey: string;\n    publicKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.privateKey = this.getResponseProperty('PrivateKey');\n        this.publicKey = this.getResponseProperty('PublicKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class ListResponse<T> extends BaseResponse {\n    data: T[];\n    continuationToken: string;\n\n    constructor(response: any, t: new (dataResponse: any) => T) {\n        super(response);\n        const data = this.getResponseProperty('Data');\n        this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n        this.continuationToken = this.getResponseProperty('ContinuationToken');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n    id: string;\n    name: string;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useBusinessPortal: boolean;\n    useSso: boolean;\n    useResetPassword: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    key: string;\n    hasPublicAndPrivateKeys: boolean;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    ssoBound: boolean;\n    identifier: string;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n    userId: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.usePolicies = this.getResponseProperty('UsePolicies');\n        this.useGroups = this.getResponseProperty('UseGroups');\n        this.useDirectory = this.getResponseProperty('UseDirectory');\n        this.useEvents = this.getResponseProperty('UseEvents');\n        this.useTotp = this.getResponseProperty('UseTotp');\n        this.use2fa = this.getResponseProperty('Use2fa');\n        this.useApi = this.getResponseProperty('UseApi');\n        this.useBusinessPortal = this.getResponseProperty('UseBusinessPortal');\n        this.useSso = this.getResponseProperty('UseSso');\n        this.useResetPassword = this.getResponseProperty('UseResetPassword');\n        this.selfHost = this.getResponseProperty('SelfHost');\n        this.usersGetPremium = this.getResponseProperty('UsersGetPremium');\n        this.seats = this.getResponseProperty('Seats');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.key = this.getResponseProperty('Key');\n        this.hasPublicAndPrivateKeys = this.getResponseProperty('HasPublicAndPrivateKeys');\n        this.status = this.getResponseProperty('Status');\n        this.type = this.getResponseProperty('Type');\n        this.enabled = this.getResponseProperty('Enabled');\n        this.ssoBound = this.getResponseProperty('SsoBound');\n        this.identifier = this.getResponseProperty('Identifier');\n        this.permissions = new PermissionsApi(this.getResponseProperty('permissions'));\n        this.resetPasswordEnrolled = this.getResponseProperty('ResetPasswordEnrolled');\n        this.userId = this.getResponseProperty('UserId');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { CipherResponse } from './cipherResponse';\nimport { CollectionDetailsResponse } from './collectionResponse';\nimport { DomainsResponse } from './domainsResponse';\nimport { FolderResponse } from './folderResponse';\nimport { PolicyResponse } from './policyResponse';\nimport { ProfileResponse } from './profileResponse';\nimport { SendResponse } from './sendResponse';\n\nexport class SyncResponse extends BaseResponse {\n    profile?: ProfileResponse;\n    folders: FolderResponse[] = [];\n    collections: CollectionDetailsResponse[] = [];\n    ciphers: CipherResponse[] = [];\n    domains?: DomainsResponse;\n    policies?: PolicyResponse[] = [];\n    sends: SendResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n\n        const profile = this.getResponseProperty('Profile');\n        if (profile != null) {\n            this.profile = new ProfileResponse(profile);\n        }\n\n        const folders = this.getResponseProperty('Folders');\n        if (folders != null) {\n            this.folders = folders.map((f: any) => new FolderResponse(f));\n        }\n\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n        }\n\n        const ciphers = this.getResponseProperty('Ciphers');\n        if (ciphers != null) {\n            this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n        }\n\n        const domains = this.getResponseProperty('Domains');\n        if (domains != null) {\n            this.domains = new DomainsResponse(domains);\n        }\n\n        const policies = this.getResponseProperty('Policies');\n        if (policies != null) {\n            this.policies = policies.map((p: any) => new PolicyResponse(p));\n        }\n\n        const sends = this.getResponseProperty('Sends');\n        if (sends != null) {\n            this.sends = sends.map((s: any) => new SendResponse(s));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { PolicyType } from '../../enums/policyType';\n\nexport class PolicyResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    type: PolicyType;\n    data: any;\n    enabled: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.type = this.getResponseProperty('Type');\n        this.data = this.getResponseProperty('Data');\n        this.enabled = this.getResponseProperty('Enabled');\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CipherData } from 'jslib-common/models/data/cipherData';\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherCollectionsRequest } from 'jslib-common/models/request/cipherCollectionsRequest';\n\nimport { CollectionsComponent as BaseCollectionsComponent } from '../../vault/collections.component';\n\n@Component({\n    selector: 'app-org-vault-collections',\n    templateUrl: '../../vault/collections.component.html',\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n    organization: Organization;\n\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, cipherService: CipherService,\n        private apiService: ApiService) {\n        super(collectionService, platformUtilsService, i18nService, cipherService);\n        this.allowSelectNone = true;\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.canManageAllCollections) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        return new Cipher(new CipherData(response));\n    }\n\n    protected loadCipherCollections() {\n        if (!this.organization.canManageAllCollections) {\n            return super.loadCipherCollections();\n        }\n        return this.collectionIds;\n    }\n\n    protected loadCollections() {\n        if (!this.organization.canManageAllCollections) {\n            return super.loadCollections();\n        }\n        return Promise.resolve(this.collections);\n    }\n\n    protected saveCollections() {\n        if (this.organization.canManageAllCollections) {\n            const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n            return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n        } else {\n            return super.saveCollections();\n        }\n    }\n}\n","export class CipherCollectionsRequest {\n    collectionIds: string[];\n\n    constructor(collectionIds: string[]) {\n        this.collectionIds = collectionIds == null ? [] : collectionIds;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherBulkDeleteRequest } from 'jslib-common/models/request/cipherBulkDeleteRequest';\n\n@Component({\n    selector: 'app-vault-bulk-delete',\n    templateUrl: 'bulk-delete.component.html',\n})\nexport class BulkDeleteComponent {\n    @Input() cipherIds: string[] = [];\n    @Input() permanent: boolean = false;\n    @Input() organization: Organization;\n    @Output() onDeleted = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private cipherService: CipherService, private toasterService: ToasterService,\n        private i18nService: I18nService, private apiService: ApiService) { }\n\n    async submit() {\n        if (!this.organization || !this.organization.canManageAllCollections) {\n            await this.deleteCiphers();\n        } else {\n            await this.deleteCiphersAdmin();\n        }\n\n        await this.formPromise;\n\n        this.onDeleted.emit();\n        this.toasterService.popAsync('success', null, this.i18nService.t(this.permanent ? 'permanentlyDeletedItems'\n            : 'deletedItems'));\n    }\n\n    private async deleteCiphers() {\n        if (this.permanent) {\n            this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n        } else {\n            this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n        }\n    }\n\n    private async deleteCiphersAdmin() {\n        const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n        if (this.permanent) {\n            this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n        } else {\n            this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n        }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"deleteSelectedTitle\"> {{(permanent ? 'permanentlyDeleteSelected' : 'deleteSelected') | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> {{(permanent ? 'permanentlyDeleteSelectedItemsDesc' : 'deleteSelectedItemsDesc') | i18n: cipherIds.length}} </div> <div class=\"modal-footer\"> <button appAutoFocus type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{(permanent ? 'permanentlyDelete' : 'delete') | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","export class CipherBulkDeleteRequest {\n    ids: string[];\n    organizationId: string;\n\n    constructor(ids: string[], organizationId?: string) {\n        this.ids = ids == null ? [] : ids;\n        this.organizationId = organizationId;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { FolderView } from 'jslib-common/models/view/folderView';\n\n@Component({\n    selector: 'app-vault-bulk-move',\n    templateUrl: 'bulk-move.component.html',\n})\nexport class BulkMoveComponent implements OnInit {\n    @Input() cipherIds: string[] = [];\n    @Output() onMoved = new EventEmitter();\n\n    folderId: string = null;\n    folders: FolderView[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private cipherService: CipherService, private toasterService: ToasterService,\n        private i18nService: I18nService, private folderService: FolderService) { }\n\n    async ngOnInit() {\n        this.folders = await this.folderService.getAllDecrypted();\n        this.folderId = this.folders[0].id;\n    }\n\n    async submit() {\n        this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n        await this.formPromise;\n        this.onMoved.emit();\n        this.toasterService.popAsync('success', null, this.i18nService.t('movedItems'));\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"moveSelectedTitle\"> {{'moveSelected' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'moveSelectedItemsDesc' | i18n: cipherIds.length}}</p> <div class=\"form-group\"> <label for=\"folder\">{{'folder' | i18n}}</label> <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\"> <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{f.name}}</option> </select> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-vault-bulk-restore',\n    templateUrl: 'bulk-restore.component.html',\n})\nexport class BulkRestoreComponent {\n    @Input() cipherIds: string[] = [];\n    @Output() onRestored = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private cipherService: CipherService, private toasterService: ToasterService,\n        private i18nService: I18nService) { }\n\n    async submit() {\n        this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n        await this.formPromise;\n        this.onRestored.emit();\n        this.toasterService.popAsync('success', null, this.i18nService.t('restoredItems'));\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"restoreSelectedTitle\"> {{'restoreSelected' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> {{'restoreSelectedItemsDesc' | i18n: cipherIds.length}} </div> <div class=\"modal-footer\"> <button appAutoFocus type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'restore' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherView } from 'jslib-common/models/view';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\n@Component({\n    selector: 'app-vault-bulk-share',\n    templateUrl: 'bulk-share.component.html',\n})\nexport class BulkShareComponent implements OnInit {\n    @Input() ciphers: CipherView[] = [];\n    @Input() organizationId: string;\n    @Output() onShared = new EventEmitter();\n\n    nonShareableCount = 0;\n    collections: CollectionView[] = [];\n    organizations: Organization[] = [];\n    shareableCiphers: CipherView[] = [];\n    formPromise: Promise<any>;\n\n    private writeableCollections: CollectionView[] = [];\n\n    constructor(private cipherService: CipherService, private toasterService: ToasterService,\n        private i18nService: I18nService, private collectionService: CollectionService,\n        private userService: UserService) { }\n\n    async ngOnInit() {\n        this.shareableCiphers = this.ciphers.filter(c => !c.hasOldAttachments && c.organizationId == null);\n        this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n        const allCollections = await this.collectionService.getAllDecrypted();\n        this.writeableCollections = allCollections.filter(c => !c.readOnly);\n        this.organizations = await this.userService.getAllOrganizations();\n        if (this.organizationId == null && this.organizations.length > 0) {\n            this.organizationId = this.organizations[0].id;\n        }\n        this.filterCollections();\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    filterCollections() {\n        this.selectAll(false);\n        if (this.organizationId == null || this.writeableCollections.length === 0) {\n            this.collections = [];\n        } else {\n            this.collections = this.writeableCollections.filter(c => c.organizationId === this.organizationId);\n        }\n    }\n\n    async submit() {\n        const checkedCollectionIds = this.collections.filter(c => (c as any).checked).map(c => c.id);\n        try {\n            this.formPromise = this.cipherService.shareManyWithServer(this.shareableCiphers, this.organizationId,\n                checkedCollectionIds);\n            await this.formPromise;\n            this.onShared.emit();\n            const orgName = this.organizations.find(o => o.id === this.organizationId)?.name ?? this.i18nService.t('organization');\n            this.toasterService.popAsync('success', null, this.i18nService.t('movedItemsToOrg', orgName));\n        } catch { }\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        const collections = select ? this.collections : this.writeableCollections;\n        collections.forEach(c => this.check(c, select));\n    }\n\n    get canSave() {\n        if (this.shareableCiphers != null && this.shareableCiphers.length > 0 && this.collections != null) {\n            for (let i = 0; i < this.collections.length; i++) {\n                if ((this.collections[i] as any).checked) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedToOrgTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"moveSelectedToOrgTitle\"> {{'moveSelectedToOrg' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'moveManyToOrgDesc' | i18n}}</p> <p>{{'moveSelectedItemsCountDesc' | i18n: this.ciphers.length : shareableCiphers.length : nonShareableCount}} </p> <div class=\"form-group\"> <label for=\"organization\">{{'organization' | i18n}}</label> <select id=\"organization\" name=\"OrganizationId\" [(ngModel)]=\"organizationId\" class=\"form-control\" (change)=\"filterCollections()\"> <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{o.name}}</option> </select> </div> <div class=\"d-flex\"> <h3>{{'collections' | i18n}}</h3> <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </div> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <tbody> <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\"> <td class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td> {{c.name}} </td> </tr> </tbody> </table> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [disabled]=\"form.loading || !canSave\" [ngClass]=\"{loading:form.loading}\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { SendAccess } from 'jslib-common/models/domain/sendAccess';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { SendAccessView } from 'jslib-common/models/view/sendAccessView';\n\nimport { SendType } from 'jslib-common/enums/sendType';\nimport { SendAccessRequest } from 'jslib-common/models/request/sendAccessRequest';\nimport { ErrorResponse } from 'jslib-common/models/response/errorResponse';\n\nimport { SendAccessResponse } from 'jslib-common/models/response/sendAccessResponse';\n\n@Component({\n    selector: 'app-send-access',\n    templateUrl: 'access.component.html',\n})\nexport class AccessComponent implements OnInit {\n    send: SendAccessView;\n    sendType = SendType;\n    downloading = false;\n    loading = true;\n    passwordRequired = false;\n    formPromise: Promise<SendAccessResponse>;\n    password: string;\n    showText = false;\n    unavailable = false;\n    error = false;\n    hideEmail = false;\n\n    private id: string;\n    private key: string;\n    private decKey: SymmetricCryptoKey;\n    private accessRequest: SendAccessRequest;\n\n    constructor(private i18nService: I18nService, private cryptoFunctionService: CryptoFunctionService,\n        private apiService: ApiService, private platformUtilsService: PlatformUtilsService,\n        private route: ActivatedRoute, private cryptoService: CryptoService) {\n    }\n\n    get sendText() {\n        if (this.send == null || this.send.text == null) {\n            return null;\n        }\n        return this.showText ? this.send.text.text : this.send.text.maskedText;\n    }\n\n    get expirationDate() {\n        if (this.send == null || this.send.expirationDate == null) {\n            return null;\n        }\n        return this.send.expirationDate;\n    }\n\n    get creatorIdentifier() {\n        if (this.send == null || this.send.creatorIdentifier == null) {\n            return null;\n        }\n        return this.send.creatorIdentifier;\n    }\n\n    ngOnInit() {\n        this.route.params.subscribe(async params => {\n            this.id = params.sendId;\n            this.key = params.key;\n            if (this.key == null || this.id == null) {\n                return;\n            }\n            await this.load();\n        });\n    }\n\n    async download() {\n        if (this.send == null || this.decKey == null) {\n            return;\n        }\n\n        if (this.downloading) {\n            return;\n        }\n\n\n        const downloadData = await this.apiService.getSendFileDownloadData(this.send, this.accessRequest);\n\n        if (Utils.isNullOrWhitespace(downloadData.url)) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('missingSendFile'));\n            return;\n        }\n\n        this.downloading = true;\n        const response = await fetch(new Request(downloadData.url, { cache: 'no-store' }));\n        if (response.status !== 200) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n            this.downloading = false;\n            return;\n        }\n\n        try {\n            const buf = await response.arrayBuffer();\n            const decBuf = await this.cryptoService.decryptFromBytes(buf, this.decKey);\n            this.platformUtilsService.saveFile(window, decBuf, null, this.send.file.fileName);\n        } catch (e) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n\n        this.downloading = false;\n    }\n\n    copyText() {\n        this.platformUtilsService.copyToClipboard(this.send.text.text);\n        this.platformUtilsService.showToast('success', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('sendTypeText')));\n    }\n\n    toggleText() {\n        this.showText = !this.showText;\n    }\n\n    async load() {\n        this.unavailable = false;\n        this.error = false;\n        this.hideEmail = false;\n        const keyArray = Utils.fromUrlB64ToArray(this.key);\n        this.accessRequest = new SendAccessRequest();\n        if (this.password != null) {\n            const passwordHash = await this.cryptoFunctionService.pbkdf2(this.password, keyArray, 'sha256', 100000);\n            this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n        }\n        try {\n            let sendResponse: SendAccessResponse = null;\n            if (this.loading) {\n                sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n            } else {\n                this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n                sendResponse = await this.formPromise;\n            }\n            this.passwordRequired = false;\n            const sendAccess = new SendAccess(sendResponse);\n            this.decKey = await this.cryptoService.makeSendKey(keyArray);\n            this.send = await sendAccess.decrypt(this.decKey);\n            this.showText = this.send.text != null ? !this.send.text.hidden : true;\n        } catch (e) {\n            if (e instanceof ErrorResponse) {\n                if (e.statusCode === 401) {\n                    this.passwordRequired = true;\n                } else if (e.statusCode === 404) {\n                    this.unavailable = true;\n                } else {\n                    this.error = true;\n                }\n            }\n        }\n        this.loading = false;\n        this.hideEmail = this.creatorIdentifier == null && !this.passwordRequired && !this.loading && !this.unavailable;\n    }\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-center mt-5\"> <div class=\"col-12\"> <p class=\"lead text-center mb-4\">Bitwarden Send</p> </div> <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\"> <p>{{'sendCreatorIdentifier' | i18n: creatorIdentifier }}</p> </div> <div class=\"col-8\" *ngIf=\"hideEmail\"> <app-callout type=\"warning\" title=\"{{'warning' | i18n}}\"> {{'viewSendHiddenEmailWarning' | i18n }} <a href=\"https://bitwarden.com/help/article/receive-send/\" target=\"_blank\">{{'learnMore' | i18n}}</a>. </app-callout> </div> </div> <div class=\"row justify-content-center\"> <div class=\"col-5\"> <div class=\"card d-block\"> <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\"> <p>{{'sendProtectedPassword' | i18n}}</p> <p>{{'sendProtectedPasswordDontKnow' | i18n}}</p> <div class=\"form-group\"> <label for=\"password\">{{'password' | i18n}}</label> <input id=\"password\" type=\"password\" name=\"Password\" class=\"text-monospace form-control\" [(ngModel)]=\"password\" required appInputVerbatim appAutofocus> </div> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span> <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'continue' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> <div class=\"card-body\" *ngIf=\"!loading && unavailable\"> {{'sendAccessUnavailable' | i18n}} </div> <div class=\"card-body\" *ngIf=\"!loading && error\"> {{'unexpectedError' | i18n}} </div> <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\"> <p class=\"text-center\"><b>{{send.name}}</b></p> <hr> <ng-container *ngIf=\"send.type === sendType.Text\"> <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{'sendHiddenByDefault' | i18n}}</app-callout> <div class=\"form-group\"> <textarea id=\"text\" rows=\"8\" name=\"Text\" [(ngModel)]=\"sendText\" class=\"form-control\" readonly=\"readonly\"></textarea> </div> <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"toggleText()\" *ngIf=\"send.text.hidden\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showText, 'fa-eye-slash': showText}\"></i> {{'toggleVisibility' | i18n}} </button> <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\"> <i class=\"fa fa-copy\" aria-hidden=\"true\"></i> {{'copyValue' | i18n}} </button> </ng-container> <ng-container *ngIf=\"send.type === sendType.File\"> <p>{{send.file.fileName}}</p> <button class=\"btn btn-primary btn-block\" type=\"button\" (click)=\"download()\" *ngIf=\"!downloading\"> <i class=\"fa fa-download\" aria-hidden=\"true\"></i> {{'downloadFile' | i18n}} ({{send.file.sizeName}})</button> <button class=\"btn btn-primary btn-block\" type=\"button\" *ngIf=\"downloading\" disabled=\"true\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </ng-container> <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">Expires: {{expirationDate | date: 'medium'}}</p> </div> </div> </div> <div class=\"col-12 text-center mt-5 text-muted\"> <p class=\"mb-0\">{{'sendAccessTaglineProductDesc' | i18n}}<br> {{'sendAccessTaglineLearnMore' | i18n}} <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\">Bitwarden Send</a> {{'sendAccessTaglineOr' | i18n}} <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{'sendAccessTaglineSignUp' | i18n}}</a> {{'sendAccessTaglineTryToday' | i18n}} </p> </div> </div> </form> ","import {\n    Component,\n    ComponentFactoryResolver,\n    NgZone,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { SendView } from 'jslib-common/models/view/sendView';\n\nimport { SendComponent as BaseSendComponent } from 'jslib-angular/components/send/send.component';\n\nimport { AddEditComponent } from './add-edit.component';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nconst BroadcasterSubscriptionId = 'SendComponent';\n\n@Component({\n    selector: 'app-send',\n    templateUrl: 'send.component.html',\n})\nexport class SendComponent extends BaseSendComponent {\n    @ViewChild('sendAddEdit', { read: ViewContainerRef, static: true }) sendAddEditModalRef: ViewContainerRef;\n\n    modal: ModalComponent = null;\n\n    constructor(sendService: SendService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, environmentService: EnvironmentService,\n        ngZone: NgZone, searchService: SearchService, policyService: PolicyService, userService: UserService,\n        private componentFactoryResolver: ComponentFactoryResolver, private broadcasterService: BroadcasterService) {\n        super(sendService, i18nService, platformUtilsService, environmentService, ngZone, searchService,\n            policyService, userService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        await this.load();\n\n        // Broadcaster subscription - load if sync completes in the background\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'syncCompleted':\n                        if (message.successfully) {\n                            await this.load();\n                        }\n                        break;\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    addSend() {\n        if (this.disableSend) {\n            return;\n        }\n\n        const component = this.editSend(null);\n        component.type = this.type;\n    }\n\n    editSend(send: SendView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.sendAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AddEditComponent>(\n            AddEditComponent, this.sendAddEditModalRef);\n\n        childComponent.sendId = send == null ? null : send.id;\n        childComponent.onSavedSend.subscribe(async (s: SendView) => {\n            this.modal.close();\n            await this.load();\n        });\n        childComponent.onDeletedSend.subscribe(async (s: SendView) => {\n            this.modal.close();\n            await this.load();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row card border-warning mb-4\" *ngIf=\"disableSend\"> <div class=\"card-header bg-warning text-white\"> <i class=\"fa fa-warning fa-fw\" aria-hidden=\"true\"></i> {{'sendDisabled' | i18n}} </div> <div class=\"card-body\"> <span>{{'sendDisabledWarning' | i18n}}</span> </div> </div> <div class=\"row\"> <div class=\"col-3 groupings\"> <div class=\"card vault-filters\"> <div class=\"card-header d-flex\"> {{'filters' | i18n}} </div> <div class=\"card-body\"> <input type=\"search\" placeholder=\"{{searchPlaceholder || ('searchSends' | i18n)}}\" id=\"search\" class=\"form-control\" [(ngModel)]=\"searchText\" (input)=\"searchTextChanged()\" autocomplete=\"off\" appAutofocus> <ul class=\"fa-ul card-ul\"> <li [ngClass]=\"{active: selectedAll}\"> <a href=\"#\" appStopClick (click)=\"selectAll()\"> <i class=\"fa-li fa fa-fw fa-th\"></i>{{'allSends' | i18n}} </a> </li> </ul> <h3>{{'types' | i18n}}</h3> <ul class=\"fa-ul card-ul\"> <li [ngClass]=\"{active: selectedType === sendType.Text}\"> <a href=\"#\" appStopClick (click)=\"selectType(sendType.Text)\"> <i class=\"fa-li fa fa-fw fa-file-text-o\"></i>{{'sendTypeText' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedType === sendType.File}\"> <a href=\"#\" appStopClick (click)=\"selectType(sendType.File)\"> <i class=\"fa-li fa fa-fw fa-file-o\"></i>{{'sendTypeFile' | i18n}} </a> </li> </ul> </div> </div> </div> <div class=\"col-9\"> <div class=\"page-header d-flex\"> <h1> {{'send' | i18n}} <small #actionSpinner [appApiAction]=\"actionPromise\"> <ng-container *ngIf=\"actionSpinner.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </small> </h1> <div class=\"ml-auto d-flex\"> <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"addSend()\" [disabled]=\"disableSend\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'createSend' | i18n}} </button> </div> </div> <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\"> <tbody> <tr *ngFor=\"let s of filteredSends\"> <td class=\"table-list-icon\"> <div class=\"icon\" aria-hidden=\"true\"> <i class=\"fa fa-fw fa-lg fa-file-o\" *ngIf=\"s.type == sendType.File\"></i> <i class=\"fa fa-fw fa-lg fa-file-text-o\" *ngIf=\"s.type == sendType.Text\"></i> </div> </td> <td class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{s.name}}</a> <ng-container *ngIf=\"s.disabled\"> <i class=\"fa fa-warning\" appStopProp title=\"{{'disabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'disabled' | i18n}}</span> </ng-container> <ng-container *ngIf=\"s.password\"> <i class=\"fa fa-key\" appStopProp title=\"{{'password' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'password' | i18n}}</span> </ng-container> <ng-container *ngIf=\"s.maxAccessCountReached\"> <i class=\"fa fa-ban\" appStopProp title=\"{{'maxAccessCountReached' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'maxAccessCountReached' | i18n}}</span> </ng-container> <ng-container *ngIf=\"s.expired\"> <i class=\"fa fa-clock-o\" appStopProp title=\"{{'expired' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'expired' | i18n}}</span> </ng-container> <ng-container *ngIf=\"s.pendingDelete\"> <i class=\"fa fa-trash\" appStopProp title=\"{{'pendingDeletion' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'pendingDeletion' | i18n}}</span> </ng-container> <br> <small appStopProp>{{s.deletionDate | date:'medium'}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(s)\"> <i class=\"fa fa-fw fa-copy\" aria-hidden=\"true\"></i> {{'copySendLink' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"removePassword(s)\" *ngIf=\"s.password && !disableSend\"> <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i> {{'removePassword' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(s)\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{'delete' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\"> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <p>{{'noSendsInList' | i18n}}</p> <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\"> <i class=\"fa fa-plus fa-fw\"></i>{{'createSend' | i18n}}</button> </ng-container> </div> </div> </div> </div> <ng-template #sendAddEdit></ng-template> ","import { DatePipe } from '@angular/common';\n\nimport { Component } from '@angular/core';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { AddEditComponent as BaseAddEditComponent } from 'jslib-angular/components/send/add-edit.component';\n\n@Component({\n    selector: 'app-send-add-edit',\n    templateUrl: 'add-edit.component.html',\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n    constructor(i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        environmentService: EnvironmentService, datePipe: DatePipe,\n        sendService: SendService, userService: UserService,\n        messagingService: MessagingService, policyService: PolicyService) {\n        super(i18nService, platformUtilsService, environmentService, datePipe, sendService, userService,\n            messagingService, policyService);\n    }\n\n    async copyLinkToClipboard(link: string): Promise<void | boolean> {\n        // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n        // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n        return new Promise(resolve => {\n            window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n        });\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"sendAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"send\"> <app-callout *ngIf=\"disableSend\"> <span>{{'sendDisabledWarning' | i18n}}</span> </app-callout> <app-callout *ngIf=\"!disableSend && disableHideEmail\"> <span>{{'sendOptionsPolicyInEffect' | i18n}}</span> <ul class=\"mb-0\"> <li>{{'sendDisableHideEmailInEffect' | i18n}}</li> </ul> </app-callout> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"send.name\" required [readOnly]=\"disableSend\"> <small class=\"form-text text-muted\">{{'sendNameDesc' | i18n}}</small> </div> </div> <div class=\"row\" *ngIf=\"!editMode\"> <div class=\"col-6 form-group\"> <label>{{'whatTypeOfSend' | i18n}}</label> <div class=\"form-check\" *ngFor=\"let o of typeOptions\"> <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"send.type\" name=\"Type_{{o.value}}\" id=\"type_{{o.value}}\" [value]=\"o.value\" (change)=\"typeChanged(o)\" [checked]=\"send.type === o.value\"> <label class=\"form-check-label\" for=\"type_{{o.value}}\"> {{o.name}} </label> </div> </div> </div> <ng-container *ngIf=\"send.type === sendType.Text\"> <div class=\"form-group\"> <label for=\"text\">{{'sendTypeText' | i18n}}</label> <textarea id=\"text\" name=\"Text.Text\" rows=\"6\" [(ngModel)]=\"send.text.text\" class=\"form-control\" [readOnly]=\"disableSend\"></textarea> <small class=\"form-text text-muted\">{{'sendTextDesc' | i18n}}</small> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"send.text.hidden\" id=\"text-hidden\" name=\"Text.Hidden\" [disabled]=\"disableSend\"> <label class=\"form-check-label\" for=\"text-hidden\">{{'textHiddenByDefault' | i18n}}</label> </div> </div> </ng-container> <ng-container *ngIf=\"send.type === sendType.File\"> <div class=\"form-group\"> <div *ngIf=\"editMode\"> <strong class=\"d-block\">{{'file' | i18n}}</strong> {{send.file.fileName}} ({{send.file.sizeName}}) </div> <div *ngIf=\"!editMode\"> <label for=\"file\">{{'file' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required [disabled]=\"disableSend\"> <small class=\"form-text text-muted\">{{'sendFileDesc' | i18n}} {{'maxFileSize' | i18n}}</small> </div> </div> </ng-container> <h3 class=\"mt-5\">{{'share' | i18n}}</h3> <div class=\"form-group\" *ngIf=\"link\"> <label for=\"link\">{{'sendLinkLabel' | i18n}}</label> <input type=\"text\" readonly=\"readonly\" id=\"link\" name=\"Link\" [(ngModel)]=\"link\" class=\"form-control\"> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"copyLink\" id=\"copy-link\" name=\"CopyLink\"> <label class=\"form-check-label\" for=\"copy-link\">{{'copySendLinkOnSave' | i18n}}</label> </div> </div> <div id=\"options-header\" class=\"section-header d-flex flex-row align-items-center mt-5\" (click)=\"toggleOptions()\"> <h3 class=\"mb-0 mr-2\">{{'options' | i18n}}</h3> <a class=\"mb-1\" href=\"#\" appStopClick role=\"button\"> <i class=\"fa\" aria-hidden=\"true\" [ngClass]=\"{'fa-chevron-down': !showOptions, 'fa-chevron-up': showOptions}\"></i> </a> </div> <div id=\"options\" [hidden]=\"!showOptions\"> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"deletionDate\">{{'deletionDate' | i18n}}</label> <ng-template #deletionDateCustom> <ng-container *ngIf=\"isDateTimeLocalSupported\"> <input id=\"deletionDateCustom\" class=\"form-control mt-1\" type=\"datetime-local\" name=\"DeletionDate\" [(ngModel)]=\"deletionDate\" required placeholder=\"MM/DD/YYYY HH:MM AM/PM\" [readOnly]=\"disableSend\"> </ng-container> <div *ngIf=\"!isDateTimeLocalSupported\" class=\"d-flex justify-content-around\"> <input id=\"deletionDateCustomFallback\" class=\"form-control mt-1\" type=\"date\" name=\"DeletionDateFallback\" [(ngModel)]=\"deletionDateFallback\" required placeholder=\"MM/DD/YYYY\" [readOnly]=\"disableSend\" data-date-format=\"mm/dd/yyyy\"> <select *ngIf=\"isSafari\" id=\"deletionTimeCustomFallback\" class=\"form-control mt-1 ml-1\" [required]=\"!editMode\" [(ngModel)]=\"safariDeletionTime\" name=\"SafariDeletionTime\"> <option *ngFor=\"let o of safariDeletionTimeOptions\" [value]=\"o.military\">{{o.standard}}</option> </select> <input *ngIf=\"!isSafari\" id=\"deletionTimeCustomFallback\" class=\"form-control mt-1 ml-1\" type=\"time\" name=\"DeletionTimeDate\" [(ngModel)]=\"deletionTimeFallback\" required placeholder=\"HH:MM AM/PM\" [readOnly]=\"disableSend\"> </div> </ng-template> <div *ngIf=\"!editMode\"> <select id=\"deletionDate\" name=\"DeletionDateSelect\" [(ngModel)]=\"deletionDateSelect\" class=\"form-control\" required> <option *ngFor=\"let o of deletionDateOptions\" [ngValue]=\"o.value\">{{o.name}} </option> </select> <ng-container *ngIf=\"deletionDateSelect === 0\"> <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container> </ng-container> </div> <div *ngIf=\"editMode\"> <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container> </div> <div class=\"form-text text-muted small\">{{'deletionDateDesc' | i18n}}</div> </div> <div class=\"col-6 form-group\"> <div class=\"d-flex\"> <label for=\"expirationDate\">{{'expirationDate' | i18n}}</label> <a href=\"#\" appStopClick (click)=\"clearExpiration()\" class=\"ml-auto\" *ngIf=\"editMode && !disableSend\"> {{'clear' | i18n}} </a> </div> <ng-template #expirationDateCustom> <ng-container *ngIf=\"isDateTimeLocalSupported\"> <input id=\"expirationDateCustom\" class=\"form-control mt-1\" type=\"datetime-local\" name=\"ExpirationDate\" [(ngModel)]=\"expirationDate\" placeholder=\"MM/DD/YYYY HH:MM AM/PM\" [readOnly]=\"disableSend\"> </ng-container> <div class=\"d-flex justify-content-around\" *ngIf=\"!isDateTimeLocalSupported\"> <input id=\"expirationDateCustomFallback\" class=\"form-control mt-1\" type=\"date\" name=\"ExpirationDateFallback\" [(ngModel)]=\"expirationDateFallback\" [required]=\"!editMode\" placeholder=\"MM/DD/YYYY\" [readOnly]=\"disableSend\" data-date-format=\"mm/dd/yyyy\" (change)=\"expirationDateFallbackChanged()\"> <select *ngIf=\"isSafari\" id=\"expirationTimeCustomFallback\" class=\"form-control mt-1 ml-1\" [required]=\"!editMode\" [(ngModel)]=\"safariExpirationTime\" name=\"SafariExpirationTime\"> <option *ngFor=\"let o of safariExpirationTimeOptions\" [ngValue]=\"o.military\">{{o.standard}}</option> </select> <input *ngIf=\"!isSafari\" id=\"expirationTimeCustomFallback\" class=\"form-control mt-1 ml-1\" type=\"time\" name=\"ExpirationTimeFallback\" [(ngModel)]=\"expirationTimeFallback\" [required]=\"!editMode\" placeholder=\"HH:MM AM/PM\" [readOnly]=\"disableSend\"> </div> </ng-template> <div *ngIf=\"!editMode\"> <select id=\"expirationDate\" name=\"ExpirationDateSelect\" [(ngModel)]=\"expirationDateSelect\" class=\"form-control\" required> <option *ngFor=\"let o of expirationDateOptions\" [ngValue]=\"o.value\">{{o.name}} </option> </select> <ng-container *ngIf=\"expirationDateSelect === 0\"> <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container> </ng-container> </div> <div *ngIf=\"editMode\"> <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container> </div> <div class=\"form-text text-muted small\">{{'expirationDateDesc' | i18n}}</div> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"maxAccessCount\">{{'maxAccessCount' | i18n}}</label> <input id=\"maxAccessCount\" class=\"form-control\" type=\"number\" name=\"MaxAccessCount\" [(ngModel)]=\"send.maxAccessCount\" min=\"1\" [readOnly]=\"disableSend\"> <div class=\"form-text text-muted small\">{{'maxAccessCountDesc' | i18n}}</div> </div> <div class=\"col-6 form-group\" *ngIf=\"editMode\"> <label for=\"accessCount\">{{'currentAccessCount' | i18n}}</label> <input id=\"accessCount\" class=\"form-control\" type=\"text\" name=\"AccessCount\" readonly=\"readonly\" [(ngModel)]=\"send.accessCount\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"password\" *ngIf=\"!hasPassword\">{{'password' | i18n}}</label> <label for=\"password\" *ngIf=\"hasPassword\">{{'newPassword' | i18n}}</label> <div class=\"input-group\"> <input id=\"password\" class=\"form-control text-monospace\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"Password\" [(ngModel)]=\"password\" [readOnly]=\"disableSend\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePasswordVisible()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> <div class=\"form-text text-muted small\">{{'sendPasswordDesc' | i18n}}</div> </div> </div> <div class=\"form-group\"> <label for=\"notes\">{{'notes' | i18n}}</label> <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"send.notes\" class=\"form-control\" [readOnly]=\"disableSend\"></textarea> <div class=\"form-text text-muted small\">{{'sendNotesDesc' | i18n}}</div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"send.hideEmail\" id=\"hideEmail\" name=\"HideEmail\" [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"> <label class=\"form-check-label\" for=\"hideEmail\"> {{'hideEmail' | i18n}} </label> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"send.disabled\" id=\"disabled\" name=\"Disabled\" [disabled]=\"disableSend\"> <label class=\"form-check-label\" for=\"disabled\">{{'disableThisSend' | i18n}}</label> </div> </div> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [ngClass]=\"{loading:form.loading}\" [disabled]=\"form.loading || disableSend\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> <div class=\"ml-auto\" *ngIf=\"send\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import { SendType } from '../../enums/sendType';\nimport { Utils } from '../../misc/utils';\n\nimport { Send } from '../domain/send';\nimport { SymmetricCryptoKey } from '../domain/symmetricCryptoKey';\n\nimport { SendFileView } from './sendFileView';\nimport { SendTextView } from './sendTextView';\nimport { View } from './view';\n\nexport class SendView implements View {\n    id: string = null;\n    accessId: string = null;\n    name: string = null;\n    notes: string = null;\n    key: ArrayBuffer;\n    cryptoKey: SymmetricCryptoKey;\n    type: SendType = null;\n    text = new SendTextView();\n    file = new SendFileView();\n    maxAccessCount?: number = null;\n    accessCount: number = 0;\n    revisionDate: Date = null;\n    deletionDate: Date = null;\n    expirationDate: Date = null;\n    password: string = null;\n    disabled: boolean = false;\n    hideEmail: boolean = false;\n\n    constructor(s?: Send) {\n        if (!s) {\n            return;\n        }\n\n        this.id = s.id;\n        this.accessId = s.accessId;\n        this.type = s.type;\n        this.maxAccessCount = s.maxAccessCount;\n        this.accessCount = s.accessCount;\n        this.revisionDate = s.revisionDate;\n        this.deletionDate = s.deletionDate;\n        this.expirationDate = s.expirationDate;\n        this.disabled = s.disabled;\n        this.password = s.password;\n        this.hideEmail = s.hideEmail;\n    }\n\n    get urlB64Key(): string {\n        return Utils.fromBufferToUrlB64(this.key);\n    }\n\n    get maxAccessCountReached(): boolean {\n        if (this.maxAccessCount == null) {\n            return false;\n        }\n        return this.accessCount >= this.maxAccessCount;\n    }\n\n    get expired(): boolean {\n        if (this.expirationDate == null) {\n            return false;\n        }\n        return this.expirationDate <= new Date();\n    }\n\n    get pendingDelete(): boolean {\n        return this.deletionDate <= new Date();\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ModalComponent } from '../modal.component';\nimport { ApiKeyComponent } from './api-key.component';\nimport { DeauthorizeSessionsComponent } from './deauthorize-sessions.component';\nimport { DeleteAccountComponent } from './delete-account.component';\nimport { PurgeVaultComponent } from './purge-vault.component';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'app-account',\n    templateUrl: 'account.component.html',\n})\nexport class AccountComponent {\n    @ViewChild('deauthorizeSessionsTemplate', { read: ViewContainerRef, static: true }) deauthModalRef: ViewContainerRef;\n    @ViewChild('purgeVaultTemplate', { read: ViewContainerRef, static: true }) purgeModalRef: ViewContainerRef;\n    @ViewChild('deleteAccountTemplate', { read: ViewContainerRef, static: true }) deleteModalRef: ViewContainerRef;\n    @ViewChild('viewUserApiKeyTemplate', { read: ViewContainerRef, static: true }) viewUserApiKeyModalRef: ViewContainerRef;\n    @ViewChild('rotateUserApiKeyTemplate', { read: ViewContainerRef, static: true }) rotateUserApiKeyModalRef: ViewContainerRef;\n\n    private modal: ModalComponent = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, private apiService: ApiService,\n        private userService: UserService) { }\n\n    deauthorizeSessions() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.deauthModalRef.createComponent(factory).instance;\n        this.modal.show<DeauthorizeSessionsComponent>(DeauthorizeSessionsComponent, this.deauthModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    purgeVault() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.purgeModalRef.createComponent(factory).instance;\n        this.modal.show<PurgeVaultComponent>(PurgeVaultComponent, this.purgeModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    deleteAccount() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.deleteModalRef.createComponent(factory).instance;\n        this.modal.show<DeleteAccountComponent>(DeleteAccountComponent, this.deleteModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    async viewUserApiKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.viewUserApiKeyModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ApiKeyComponent>(ApiKeyComponent, this.viewUserApiKeyModalRef);\n        childComponent.keyType = 'user';\n        childComponent.entityId = await this.userService.getUserId();\n        childComponent.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n        childComponent.scope = 'api';\n        childComponent.grantType = 'client_credentials';\n        childComponent.apiKeyTitle = 'apiKey';\n        childComponent.apiKeyWarning = 'userApiKeyWarning';\n        childComponent.apiKeyDescription = 'userApiKeyDesc';\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    async rotateUserApiKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.rotateUserApiKeyModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ApiKeyComponent>(ApiKeyComponent, this.rotateUserApiKeyModalRef);\n        childComponent.keyType = 'user';\n        childComponent.isRotation = true;\n        childComponent.entityId = await this.userService.getUserId();\n        childComponent.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n        childComponent.scope = 'api';\n        childComponent.grantType = 'client_credentials';\n        childComponent.apiKeyTitle = 'apiKey';\n        childComponent.apiKeyWarning = 'userApiKeyWarning';\n        childComponent.apiKeyDescription = 'apiKeyRotateDesc';\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'myAccount' | i18n}}</h1> </div> <app-profile></app-profile> <div class=\"secondary-header\"> <h1>{{'changeEmail' | i18n}}</h1> </div> <app-change-email></app-change-email> <div class=\"secondary-header\"> <h1>{{'changeMasterPassword' | i18n}}</h1> </div> <app-change-password></app-change-password> <div class=\"secondary-header\"> <h1>{{'encKeySettings' | i18n}}</h1> </div> <app-change-kdf></app-change-kdf> <div class=\"secondary-header border-0 mb-0\"> <h1>{{'apiKey' | i18n}}</h1> </div> <p> {{'userApiKeyDesc' | i18n}} </p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewUserApiKey()\">{{'viewApiKey' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateUserApiKey()\">{{'rotateApiKey' | i18n}}</button> <div class=\"secondary-header text-danger border-0 mb-0\"> <h1>{{'dangerZone' | i18n}}</h1> </div> <div class=\"card border-danger\"> <div class=\"card-body\"> <p>{{'dangerZoneDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deauthorizeSessions()\">{{'deauthorizeSessions' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">{{'purgeVault' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteAccount()\">{{'deleteAccount' | i18n}}</button> </div> </div> <ng-template #deauthorizeSessionsTemplate></ng-template> <ng-template #purgeVaultTemplate></ng-template> <ng-template #deleteAccountTemplate></ng-template> <ng-template #viewUserApiKeyTemplate></ng-template> <ng-template #rotateUserApiKeyTemplate></ng-template> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-deauthorize-sessions',\n    templateUrl: 'deauthorize-sessions.component.html',\n})\nexport class DeauthorizeSessionsComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.postSecurityStamp(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('sessionsDeauthorized'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"deAuthTitle\">{{'deauthorizeSessions' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'deauthorizeSessionsDesc' | i18n}}</p> <app-callout type=\"warning\">{{'deauthorizeSessionsWarning' | i18n}}</app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutoFocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'deauthorizeSessions' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-delete-account',\n    templateUrl: 'delete-account.component.html',\n})\nexport class DeleteAccountComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.deleteAccount(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('accountDeleted'),\n                this.i18nService.t('accountDeletedDesc'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"deleteAccountTitle\">{{'deleteAccount' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'deleteAccountDesc' | i18n}}</p> <app-callout type=\"warning\">{{'deleteAccountWarning' | i18n}}</app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'deleteAccount' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { UpdateProfileRequest } from 'jslib-common/models/request/updateProfileRequest';\n\nimport { ProfileResponse } from 'jslib-common/models/response/profileResponse';\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: 'profile.component.html',\n})\nexport class ProfileComponent implements OnInit {\n    loading = true;\n    profile: ProfileResponse;\n    fingerprint: string;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private userService: UserService,\n        private cryptoService: CryptoService) { }\n\n    async ngOnInit() {\n        this.profile = await this.apiService.getProfile();\n        this.loading = false;\n        const fingerprint = await this.cryptoService.getFingerprint(await this.userService.getUserId());\n        if (fingerprint != null) {\n            this.fingerprint = fingerprint.join('-');\n        }\n    }\n\n    async submit() {\n        try {\n            const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n            this.formPromise = this.apiService.putProfile(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('accountUpdated'));\n        } catch { }\n    }\n}\n","<div *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <form *ngIf=\"profile && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\"> </div> <div class=\"form-group\"> <label for=\"email\">{{'email' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"profile.email\" readonly=\"readonly\"> </div> <div class=\"form-group\"> <label for=\"masterPasswordHint\">{{'masterPassHintLabel' | i18n}}</label> <input id=\"masterPasswordHint\" class=\"form-control\" type=\"text\" name=\"MasterPasswordHint\" [(ngModel)]=\"profile.masterPasswordHint\"> </div> </div> <div class=\"col-6\"> <div class=\"mb-3\"> <app-avatar data=\"{{profile.name || profile.email}}\" [email]=\"profile.email\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar> </div> <hr> <p *ngIf=\"fingerprint\"> {{'yourAccountsFingerprint' | i18n}}: <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i></a><br> <code>{{fingerprint}}</code> </p> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> ","import {\n    Component,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EmailRequest } from 'jslib-common/models/request/emailRequest';\nimport { EmailTokenRequest } from 'jslib-common/models/request/emailTokenRequest';\n\n@Component({\n    selector: 'app-change-email',\n    templateUrl: 'change-email.component.html',\n})\nexport class ChangeEmailComponent {\n    masterPassword: string;\n    newEmail: string;\n    token: string;\n    tokenSent = false;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private userService: UserService) { }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        this.newEmail = this.newEmail.trim().toLowerCase();\n        if (!this.tokenSent) {\n            const request = new EmailTokenRequest();\n            request.newEmail = this.newEmail;\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n            try {\n                this.formPromise = this.apiService.postEmailToken(request);\n                await this.formPromise;\n                this.tokenSent = true;\n            } catch { }\n        } else {\n            const request = new EmailRequest();\n            request.token = this.token;\n            request.newEmail = this.newEmail;\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n            const kdf = await this.userService.getKdf();\n            const kdfIterations = await this.userService.getKdfIterations();\n            const newKey = await this.cryptoService.makeKey(this.masterPassword, this.newEmail, kdf, kdfIterations);\n            request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n            const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n            request.key = newEncKey[1].encryptedString;\n            try {\n                this.formPromise = this.apiService.postEmail(request);\n                await this.formPromise;\n                this.reset();\n                this.toasterService.popAsync('success', this.i18nService.t('emailChanged'),\n                    this.i18nService.t('logBackIn'));\n                this.messagingService.send('logout');\n            } catch { }\n        }\n    }\n\n    reset() {\n        this.token = this.newEmail = this.masterPassword = null;\n        this.tokenSent = false;\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required [readonly]=\"tokenSent\" appInputVerbatim> </div> <div class=\"form-group\"> <label for=\"newEmail\">{{'newEmail' | i18n}}</label> <input id=\"newEmail\" class=\"form-control\" type=\"text\" name=\"NewEmail\" [(ngModel)]=\"newEmail\" required [readonly]=\"tokenSent\" inputmode=\"email\" appInputVerbatim=\"false\"> </div> </div> </div> <ng-container *ngIf=\"tokenSent\"> <hr> <p>{{'changeEmailDesc' | i18n : newEmail}}</p> <app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"token\">{{'code' | i18n}}</label> <input id=\"token\" class=\"form-control\" type=\"text\" name=\"Token\" [(ngModel)]=\"token\" required appInputVerbatim> </div> </div> </div> </ng-container> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!tokenSent\">{{'continue' | i18n}}</span> <span *ngIf=\"tokenSent\">{{'changeEmail' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\"> {{'cancel' | i18n}} </button> </form> ","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class EmailTokenRequest extends PasswordVerificationRequest {\n    newEmail: string;\n    masterPasswordHash: string;\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport {\n    ChangePasswordComponent as BaseChangePasswordComponent,\n} from 'jslib-angular/components/change-password.component';\n\nimport { EmergencyAccessStatusType } from 'jslib-common/enums/emergencyAccessStatusType';\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { CipherWithIdRequest } from 'jslib-common/models/request/cipherWithIdRequest';\nimport { EmergencyAccessUpdateRequest } from 'jslib-common/models/request/emergencyAccessUpdateRequest';\nimport { FolderWithIdRequest } from 'jslib-common/models/request/folderWithIdRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from 'jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest';\nimport { PasswordRequest } from 'jslib-common/models/request/passwordRequest';\nimport { UpdateKeyRequest } from 'jslib-common/models/request/updateKeyRequest';\n\n@Component({\n    selector: 'app-change-password',\n    templateUrl: 'change-password.component.html',\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n    rotateEncKey = false;\n    currentMasterPassword: string;\n\n    constructor(i18nService: I18nService,\n        cryptoService: CryptoService, messagingService: MessagingService,\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService,\n        private folderService: FolderService, private cipherService: CipherService,\n        private syncService: SyncService, private apiService: ApiService) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    async rotateEncKeyClicked() {\n        if (this.rotateEncKey) {\n            const ciphers = await this.cipherService.getAllDecrypted();\n            let hasOldAttachments = false;\n            if (ciphers != null) {\n                for (let i = 0; i < ciphers.length; i++) {\n                    if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n                        hasOldAttachments = true;\n                        break;\n                    }\n                }\n            }\n\n            if (hasOldAttachments) {\n                const learnMore = await this.platformUtilsService.showDialog(\n                    this.i18nService.t('oldAttachmentsNeedFixDesc'), null,\n                    this.i18nService.t('learnMore'), this.i18nService.t('close'), 'warning');\n                if (learnMore) {\n                    this.platformUtilsService.launchUri(\n                        'https://help.bitwarden.com/article/attachments/#fixing-old-attachments');\n                }\n                this.rotateEncKey = false;\n                return;\n            }\n\n            const result = await this.platformUtilsService.showDialog(\n                this.i18nService.t('updateEncryptionKeyWarning') + ' ' +\n                this.i18nService.t('updateEncryptionKeyExportWarning') + ' ' +\n                this.i18nService.t('rotateEncKeyConfirmation'), this.i18nService.t('rotateEncKeyTitle'),\n                this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n            if (!result) {\n                this.rotateEncKey = false;\n            }\n        }\n    }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        await super.submit();\n    }\n\n    async setupSubmitActions() {\n        if (this.currentMasterPassword == null || this.currentMasterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return false;\n        }\n\n        if (this.rotateEncKey) {\n            await this.syncService.fullSync(true);\n        }\n\n        return super.setupSubmitActions();\n    }\n\n    async performSubmitActions(newMasterPasswordHash: string, newKey: SymmetricCryptoKey,\n        newEncKey: [SymmetricCryptoKey, EncString]) {\n        const request = new PasswordRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.currentMasterPassword, null);\n        request.newMasterPasswordHash = newMasterPasswordHash;\n        request.key = newEncKey[1].encryptedString;\n\n        try {\n            if (this.rotateEncKey) {\n                this.formPromise = this.apiService.postPassword(request).then(() => {\n                    return this.updateKey(newKey, request.newMasterPasswordHash);\n                });\n            } else {\n                this.formPromise = this.apiService.postPassword(request);\n            }\n\n            await this.formPromise;\n\n            this.platformUtilsService.showToast('success', this.i18nService.t('masterPasswordChanged'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n    }\n\n    private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const privateKey = await this.cryptoService.getPrivateKey();\n        let encPrivateKey: EncString = null;\n        if (privateKey != null) {\n            encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n        }\n        const request = new UpdateKeyRequest();\n        request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n        request.key = encKey[1].encryptedString;\n        request.masterPasswordHash = masterPasswordHash;\n\n        const folders = await this.folderService.getAllDecrypted();\n        for (let i = 0; i < folders.length; i++) {\n            if (folders[i].id == null) {\n                continue;\n            }\n            const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n            request.folders.push(new FolderWithIdRequest(folder));\n        }\n\n        const ciphers = await this.cipherService.getAllDecrypted();\n        for (let i = 0; i < ciphers.length; i++) {\n            if (ciphers[i].organizationId != null) {\n                continue;\n            }\n\n            const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n            request.ciphers.push(new CipherWithIdRequest(cipher));\n        }\n\n        await this.apiService.postAccountKey(request);\n\n        await this.updateEmergencyAccesses(encKey[0]);\n\n        await this.updateAllResetPasswordKeys(encKey[0]);\n    }\n\n    private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n        const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n        const allowedStatuses = [\n            EmergencyAccessStatusType.Confirmed,\n            EmergencyAccessStatusType.RecoveryInitiated,\n            EmergencyAccessStatusType.RecoveryApproved,\n        ];\n\n        const filteredAccesses = emergencyAccess.data.filter(d => allowedStatuses.includes(d.status));\n\n        for (const details of filteredAccesses) {\n            const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n            const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n            const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n            const updateRequest = new EmergencyAccessUpdateRequest();\n            updateRequest.type = details.type;\n            updateRequest.waitTimeDays = details.waitTimeDays;\n            updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n            await this.apiService.putEmergencyAccess(details.id, updateRequest);\n        }\n    }\n\n    private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey) {\n        const orgs = await this.userService.getAllOrganizations();\n\n        for (const org of orgs) {\n            // If not already enrolled, skip\n            if (!org.resetPasswordEnrolled) {\n                continue;\n            }\n\n            // Retrieve public key\n            const response = await this.apiService.getOrganizationKeys(org.id);\n            const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n            // Re-enroll - encrpyt user's encKey.key with organization public key\n            const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n            // Create/Execute request\n            const request = new OrganizationUserResetPasswordEnrollmentRequest();\n            request.resetPasswordKey = encryptedKey.encryptedString;\n\n            await this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n        }\n    }\n}\n","<app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout> <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\"> {{'masterPasswordPolicyInEffect' | i18n}} <ul class=\"mb-0\"> <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\"> {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}} </li> <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\"> {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}} </li> <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">{{'policyInEffectUppercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireLower\">{{'policyInEffectLowercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">{{'policyInEffectNumbers' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">{{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li> </ul> </app-callout> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"currentMasterPassword\">{{'currentMasterPass' | i18n}}</label> <input id=\"currentMasterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"currentMasterPassword\" required appInputVerbatim> </div> </div> </div> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"newMasterPassword\">{{'newMasterPass' | i18n}}</label> <input id=\"newMasterPassword\" type=\"password\" name=\"NewMasterPasswordHash\" class=\"form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim autocomplete=\"new-password\"> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"></app-password-strength> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'confirmNewMasterPass' | i18n}}</label> <input id=\"masterPasswordRetype\" type=\"password\" name=\"MasterPasswordRetype\" class=\"form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim autocomplete=\"new-password\"> </div> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"rotateEncKey\" name=\"RotateEncKey\" [(ngModel)]=\"rotateEncKey\" (change)=\"rotateEncKeyClicked()\"> <label class=\"form-check-label\" for=\"rotateEncKey\"> {{'rotateAccountEncKey' | i18n}} </label> <a href=\"https://bitwarden.com/help/article/account-encryption-key/#rotate-your-encryption-key\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'changeMasterPassword' | i18n}}</span> </button> </form> ","export enum EmergencyAccessStatusType {\n    Invited = 0,\n    Accepted = 1,\n    Confirmed = 2,\n    RecoveryInitiated = 3,\n    RecoveryApproved = 4,\n}\n","import { EmergencyAccessType } from '../../enums/emergencyAccessType';\n\nexport class EmergencyAccessUpdateRequest {\n    type: EmergencyAccessType;\n    waitTimeDays: number;\n    keyEncrypted?: string;\n}\n","import { FolderRequest } from './folderRequest';\n\nimport { Folder } from '../domain/folder';\n\nexport class FolderWithIdRequest extends FolderRequest {\n    id: string;\n\n    constructor(folder: Folder) {\n        super(folder);\n        this.id = folder.id;\n    }\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class PasswordRequest extends PasswordVerificationRequest {\n    newMasterPasswordHash: string;\n    key: string;\n}\n","import { CipherWithIdRequest } from './cipherWithIdRequest';\nimport { FolderWithIdRequest } from './folderWithIdRequest';\n\nexport class UpdateKeyRequest {\n    ciphers: CipherWithIdRequest[] = [];\n    folders: FolderWithIdRequest[] = [];\n    masterPasswordHash: string;\n    privateKey: string;\n    key: string;\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { KdfRequest } from 'jslib-common/models/request/kdfRequest';\n\nimport { KdfType } from 'jslib-common/enums/kdfType';\n\n@Component({\n    selector: 'app-change-kdf',\n    templateUrl: 'change-kdf.component.html',\n})\nexport class ChangeKdfComponent implements OnInit {\n    masterPassword: string;\n    kdfIterations: number;\n    kdf = KdfType.PBKDF2_SHA256;\n    kdfOptions: any[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private userService: UserService) {\n        this.kdfOptions = [\n            { name: 'PBKDF2 SHA-256', value: KdfType.PBKDF2_SHA256 },\n        ];\n    }\n\n    async ngOnInit() {\n        this.kdf = await this.userService.getKdf();\n        this.kdfIterations = await this.userService.getKdfIterations();\n    }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        const request = new KdfRequest();\n        request.kdf = this.kdf;\n        request.kdfIterations = this.kdfIterations;\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        const email = await this.userService.getEmail();\n        const newKey = await this.cryptoService.makeKey(this.masterPassword, email, this.kdf, this.kdfIterations);\n        request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n        const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n        request.key = newEncKey[1].encryptedString;\n        try {\n            this.formPromise = this.apiService.postAccountKdf(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('encKeySettingsChanged'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","<app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"kdfMasterPassword\">{{'masterPass' | i18n}}</label> <input id=\"kdfMasterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appInputVerbatim> </div> </div> </div> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group mb-0\"> <label for=\"kdf\">{{'kdfAlgorithm' | i18n}}</label> <a class=\"ml-auto\" href=\"https://en.wikipedia.org/wiki/Key_derivation_function\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required> <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <div class=\"col-6\"> <div class=\"form-group mb-0\"> <label for=\"kdfIterations\">{{'kdfIterations' | i18n}}</label> <a class=\"ml-auto\" href=\"https://bitwarden.com/help/article/what-encryption-is-used/#pbkdf2\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> <input id=\"kdfIterations\" type=\"number\" min=\"5000\" max=\"2000000\" name=\"KdfIterations\" class=\"form-control\" [(ngModel)]=\"kdfIterations\" required> </div> </div> <div class=\"col-12\"> <div class=\"form-group\"> <div class=\"small form-text text-muted\"> <p>{{'kdfIterationsDesc' | i18n : (100000 | number)}}</p> <strong>{{'warning' | i18n}}</strong>: {{'kdfIterationsWarning' | i18n : (50000 | number)}} </div> </div> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'changeKdf' | i18n}}</span> </button> </form> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { PlanType } from 'jslib-common/enums/planType';\nimport { ProductType } from 'jslib-common/enums/productType';\n\nimport { OrganizationPlansComponent } from './organization-plans.component';\n\n@Component({\n    selector: 'app-create-organization',\n    templateUrl: 'create-organization.component.html',\n})\nexport class CreateOrganizationComponent implements OnInit {\n    @ViewChild(OrganizationPlansComponent, { static: true }) orgPlansComponent: OrganizationPlansComponent;\n\n    constructor(private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.plan === 'families') {\n                this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n                this.orgPlansComponent.product = ProductType.Families;\n            } else if (qParams.plan === 'teams') {\n                this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n                this.orgPlansComponent.product = ProductType.Teams;\n            } else if (qParams.plan === 'enterprise') {\n                this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n                this.orgPlansComponent.product = ProductType.Enterprise;\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'newOrganization' | i18n}}</h1> </div> <p>{{'newOrganizationDesc' | i18n}}</p> <app-organization-plans></app-organization-plans> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { UpdateDomainsRequest } from 'jslib-common/models/request/updateDomainsRequest';\n\n@Component({\n    selector: 'app-domain-rules',\n    templateUrl: 'domain-rules.component.html',\n})\nexport class DomainRulesComponent implements OnInit {\n    loading = true;\n    custom: string[] = [];\n    global: any[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        const response = await this.apiService.getSettingsDomains();\n        this.loading = false;\n        if (response.equivalentDomains != null) {\n            this.custom = response.equivalentDomains.map(d => d.join(', '));\n        }\n        if (response.globalEquivalentDomains != null) {\n            this.global = response.globalEquivalentDomains.map(d => {\n                return {\n                    domains: d.domains.join(', '),\n                    excluded: d.excluded,\n                    key: d.type,\n                };\n            });\n        }\n    }\n\n    toggleExcluded(globalDomain: any) {\n        globalDomain.excluded = !globalDomain.excluded;\n    }\n\n    customize(globalDomain: any) {\n        globalDomain.excluded = true;\n        this.custom.push(globalDomain.domains);\n    }\n\n    remove(index: number) {\n        this.custom.splice(index, 1);\n    }\n\n    add() {\n        this.custom.push('');\n    }\n\n    async submit() {\n        const request = new UpdateDomainsRequest();\n        request.excludedGlobalEquivalentDomains = this.global.filter(d => d.excluded)\n            .map(d => d.key);\n        if (request.excludedGlobalEquivalentDomains.length === 0) {\n            request.excludedGlobalEquivalentDomains = null;\n        }\n        request.equivalentDomains = this.custom.filter(d => d != null && d.trim() !== '')\n            .map(d => d.split(',').map(d2 => d2.trim()));\n        if (request.equivalentDomains.length === 0) {\n            request.equivalentDomains = null;\n        }\n\n        try {\n            this.formPromise = this.apiService.putSettingsDomains(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('domainsUpdated'));\n        } catch { }\n    }\n\n    indexTrackBy(index: number, obj: any): any {\n        return index;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'domainRules' | i18n}}</h1> </div> <p>{{'domainRulesDesc' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <h2>{{'customEqDomains' | i18n}}</h2> <p *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"!loading\"> <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\"> <div class=\"flex-fill\"> <label for=\"customDomain_{{i}}\" class=\"sr-only\">{{'customDomainX' | i18n : (i + 1)}}</label> <textarea class=\"form-control\" name=\"CustomDomain[{{i}}]\" id=\"customDomain_{{i}}\" [(ngModel)]=\"custom[i]\" placeholder=\"{{'ex' | i18n}} google.com, gmail.com\" required></textarea> </div> <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"remove(i)\" appA11yTitle=\"{{'remove' | i18n}}\"> <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i> </button> </div> <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newCustomDomain' | i18n}} </button> <small class=\"text-muted d-block mb-3\">{{'newCustomDomainDesc' | i18n}}</small> </ng-container> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <h2 class=\"spaced-header\">{{'globalEqDomains' | i18n}}</h2> <p *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\"> <tbody> <tr *ngFor=\"let d of global\"> <td [ngClass]=\"{'table-list-strike': d.excluded}\">{{d.domains}}</td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleExcluded(d)\" *ngIf=\"!d.excluded\"> <i class=\"fa fa-fw fa-close\" aria-hidden=\"true\"></i> {{'exclude' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleExcluded(d)\" *ngIf=\"d.excluded\"> <i class=\"fa fa-fw fa-plus\" aria-hidden=\"true\"></i> {{'include' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\"> <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> {{'customize' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-options',\n    templateUrl: 'options.component.html',\n})\nexport class OptionsComponent implements OnInit {\n    vaultTimeout: number = null;\n    vaultTimeoutAction: string = 'lock';\n    disableIcons: boolean;\n    enableGravatars: boolean;\n    enableFullWidth: boolean;\n    locale: string;\n    vaultTimeouts: any[];\n    localeOptions: any[];\n\n    private startingLocale: string;\n\n    constructor(private storageService: StorageService, private stateService: StateService,\n        private i18nService: I18nService, private toasterService: ToasterService,\n        private vaultTimeoutService: VaultTimeoutService, private platformUtilsService: PlatformUtilsService,\n        private messagingService: MessagingService) {\n        this.vaultTimeouts = [\n            { name: i18nService.t('oneMinute'), value: 1 },\n            { name: i18nService.t('fiveMinutes'), value: 5 },\n            { name: i18nService.t('fifteenMinutes'), value: 15 },\n            { name: i18nService.t('thirtyMinutes'), value: 30 },\n            { name: i18nService.t('oneHour'), value: 60 },\n            { name: i18nService.t('fourHours'), value: 240 },\n            { name: i18nService.t('onRefresh'), value: -1 },\n        ];\n        if (this.platformUtilsService.isDev()) {\n            this.vaultTimeouts.push({ name: i18nService.t('never'), value: null });\n        }\n\n        const localeOptions: any[] = [];\n        i18nService.supportedTranslationLocales.forEach(locale => {\n            let name = locale;\n            if (i18nService.localeNames.has(locale)) {\n                name += (' - ' + i18nService.localeNames.get(locale));\n            }\n            localeOptions.push({ name: name, value: locale });\n        });\n        localeOptions.sort(Utils.getSortFunction(i18nService, 'name'));\n        localeOptions.splice(0, 0, { name: i18nService.t('default'), value: null });\n        this.localeOptions = localeOptions;\n    }\n\n    async ngOnInit() {\n        this.vaultTimeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n        this.vaultTimeoutAction = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\n        this.disableIcons = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        this.enableGravatars = await this.storageService.get<boolean>('enableGravatars');\n        this.enableFullWidth = await this.storageService.get<boolean>('enableFullWidth');\n        this.locale = this.startingLocale = await this.storageService.get<string>(ConstantsService.localeKey);\n    }\n\n    async submit() {\n        await this.vaultTimeoutService.setVaultTimeoutOptions(this.vaultTimeout != null ? this.vaultTimeout : null,\n            this.vaultTimeoutAction);\n        await this.storageService.save(ConstantsService.disableFaviconKey, this.disableIcons);\n        await this.stateService.save(ConstantsService.disableFaviconKey, this.disableIcons);\n        await this.storageService.save('enableGravatars', this.enableGravatars);\n        await this.stateService.save('enableGravatars', this.enableGravatars);\n        await this.storageService.save('enableFullWidth', this.enableFullWidth);\n        this.messagingService.send('setFullWidth');\n        await this.storageService.save(ConstantsService.localeKey, this.locale);\n        if (this.locale !== this.startingLocale) {\n            window.location.reload();\n        } else {\n            this.toasterService.popAsync('success', null, this.i18nService.t('optionsUpdated'));\n        }\n    }\n\n    async vaultTimeoutActionChanged(newValue: string) {\n        if (newValue === 'logOut') {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('vaultTimeoutLogOutConfirmation'),\n                this.i18nService.t('vaultTimeoutLogOutConfirmationTitle'),\n                this.i18nService.t('yes'), this.i18nService.t('cancel'), 'warning');\n            if (!confirmed) {\n                this.vaultTimeoutAction = 'lock';\n                return;\n            }\n        }\n        this.vaultTimeoutAction = newValue;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'options' | i18n}}</h1> </div> <p>{{'optionsDesc' | i18n}}</p> <form (ngSubmit)=\"submit()\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"vaultTimeout\">{{'vaultTimeout' | i18n}}</label> <select id=\"vaultTimeout\" name=\"VaultTimeout\" [(ngModel)]=\"vaultTimeout\" class=\"form-control\"> <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{o.name}}</option> </select> <small class=\"form-text text-muted\">{{'vaultTimeoutDesc' | i18n}}</small> </div> </div> </div> <div class=\"form-group\"> <label>{{'vaultTimeoutAction' | i18n}}</label> <div class=\"form-check form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"vaultTimeoutAction\" id=\"vaultTimeoutActionLock\" value=\"lock\" [(ngModel)]=\"vaultTimeoutAction\"> <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\"> {{'lock' | i18n}} <small>{{'vaultTimeoutActionLockDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"vaultTimeoutAction\" id=\"vaultTimeoutActionLogOut\" value=\"logOut\" [(ngModel)]=\"vaultTimeoutAction\" (ngModelChange)=\"vaultTimeoutActionChanged($event)\"> <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\"> {{'logOut' | i18n}} <small>{{'vaultTimeoutActionLogOutDesc' | i18n}}</small> </label> </div> </div> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <div class=\"d-flex\"> <label for=\"locale\">{{'language' | i18n}}</label> <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/localization/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\"> <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> <small class=\"form-text text-muted\">{{'languageDesc' | i18n}}</small> </div> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"disableIcons\" name=\"DisableIcons\" [(ngModel)]=\"disableIcons\"> <label class=\"form-check-label\" for=\"disableIcons\"> {{'disableIcons' | i18n}} </label> <a href=\"https://help.bitwarden.com/article/website-icons/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <small class=\"form-text text-muted\">{{'disableIconsDesc' | i18n}}</small> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enableGravatars\" name=\"enableGravatars\" [(ngModel)]=\"enableGravatars\"> <label class=\"form-check-label\" for=\"enableGravatars\"> {{'enableGravatars' | i18n}} </label> <a href=\"https://gravatar.com/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <small class=\"form-text text-muted\">{{'enableGravatarsDesc' | i18n}}</small> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enableFullWidth\" name=\"enableFullWidth\" [(ngModel)]=\"enableFullWidth\"> <label class=\"form-check-label\" for=\"enableFullWidth\"> {{'enableFullWidth' | i18n}} </label> </div> <small class=\"form-text text-muted\">{{'enableFullWidthDesc' | i18n}}</small> </div> <button type=\"submit\" class=\"btn btn-primary\"> {{'save' | i18n}} </button> </form> ","import {\n    AfterContentInit,\n    Component,\n    Input,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { SsoComponent } from 'jslib-angular/components/sso.component';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\n@Component({\n    selector: 'app-link-sso',\n    templateUrl: 'link-sso.component.html',\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n    @Input() organization: Organization;\n    returnUri: string = '/settings/organizations';\n\n    constructor(platformUtilsService: PlatformUtilsService, i18nService: I18nService,\n        apiService: ApiService, authService: AuthService,\n        router: Router, route: ActivatedRoute,\n        cryptoFunctionService: CryptoFunctionService, passwordGenerationService: PasswordGenerationService,\n        storageService: StorageService, stateService: StateService) {\n        super(authService, router,\n            i18nService, route,\n            storageService, stateService,\n            platformUtilsService, apiService,\n            cryptoFunctionService, passwordGenerationService);\n\n        this.returnUri = '/settings/organizations';\n        this.redirectUri = window.location.origin + '/sso-connector.html';\n        this.clientId = 'web';\n    }\n\n    async ngAfterContentInit() {\n        this.identifier = this.organization.identifier;\n    }\n}\n","<a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"submit(returnUri, true)\"> <i class=\"fa fa-fw fa-link\" aria-hidden=\"true\"></i> {{'linkSso' | i18n}} </a> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PaymentComponent } from './payment.component';\nimport { TaxInfoComponent } from './tax-info.component';\n\n@Component({\n    selector: 'app-premium',\n    templateUrl: 'premium.component.html',\n})\nexport class PremiumComponent implements OnInit {\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n    @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n    canAccessPremium = false;\n    selfHosted = false;\n    premiumPrice = 10;\n    storageGbPrice = 4;\n    additionalStorage = 0;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        private tokenService: TokenService, private router: Router,\n        private messagingService: MessagingService, private syncService: SyncService,\n        private userService: UserService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        const premium = await this.tokenService.getPremium();\n        if (premium) {\n            this.router.navigate(['/settings/subscription']);\n            return;\n        }\n    }\n\n    async submit() {\n        let files: FileList = null;\n        if (this.selfHosted) {\n            const fileEl = document.getElementById('file') as HTMLInputElement;\n            files = fileEl.files;\n            if (files == null || files.length === 0) {\n                this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('selectFile'));\n                return;\n            }\n        }\n\n        try {\n            if (this.selfHosted) {\n                if (!this.tokenService.getEmailVerified()) {\n                    this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                        this.i18nService.t('verifyEmailFirst'));\n                    return;\n                }\n\n                const fd = new FormData();\n                fd.append('license', files[0]);\n                this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n                    return this.finalizePremium();\n                });\n            } else {\n                this.formPromise = this.paymentComponent.createPaymentToken().then(result => {\n                    const fd = new FormData();\n                    fd.append('paymentMethodType', result[1].toString());\n                    if (result[0] != null) {\n                        fd.append('paymentToken', result[0]);\n                    }\n                    fd.append('additionalStorageGb', (this.additionalStorage || 0).toString());\n                    fd.append('country', this.taxInfoComponent.taxInfo.country);\n                    fd.append('postalCode', this.taxInfoComponent.taxInfo.postalCode);\n                    return this.apiService.postPremium(fd);\n                }).then(paymentResponse => {\n                    if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n                        return this.paymentComponent.handleStripeCardPayment(paymentResponse.paymentIntentClientSecret,\n                            () => this.finalizePremium());\n                    } else {\n                        return this.finalizePremium();\n                    }\n                });\n            }\n            await this.formPromise;\n        } catch { }\n    }\n\n    async finalizePremium() {\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n        this.toasterService.popAsync('success', null, this.i18nService.t('premiumUpdated'));\n        this.messagingService.send('purchasedPremium');\n        this.router.navigate(['/settings/subscription']);\n    }\n\n    get additionalStorageTotal(): number {\n        return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n    }\n\n    get subtotal(): number {\n        return this.premiumPrice + this.additionalStorageTotal;\n    }\n\n    get taxCharges(): number {\n        return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null ?\n            (this.taxInfoComponent.taxRate / 100) * this.subtotal :\n            0;\n    }\n\n    get total(): number {\n        return (this.subtotal + this.taxCharges) || 0;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'goPremium' | i18n}}</h1> </div> <app-callout type=\"info\" *ngIf=\"canAccessPremium\" title=\"{{'youHavePremiumAccess' | i18n}}\" icon=\"fa-star\"> {{'alreadyPremiumFromOrg' | i18n}} </app-callout> <app-callout type=\"success\"> <p>{{'premiumUpgradeUnlockFeatures' | i18n}}</p> <ul class=\"fa-ul\"> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpStorage' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpTwoStep' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpEmergency' |i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpReports' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpTotp' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpSupport' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpFuture' | i18n}} </li> </ul> <p class=\"text-lg\" [ngClass]=\"{'mb-0':!selfHosted}\">{{'premiumPrice' | i18n : (premiumPrice | currency:'$')}}</p> <a href=\"https://vault.bitwarden.com/#/settings/premium\" target=\"_blank\" rel=\"noopener\" class=\"btn btn-outline-secondary\" *ngIf=\"selfHosted\"> {{'purchasePremium' | i18n}} </a> </app-callout> <ng-container *ngIf=\"selfHosted\"> <p>{{'uploadLicenseFilePremium' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"form-group\"> <label for=\"file\">{{'licenseFile' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required> <small class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : 'bitwarden_premium_license.json'}}</small> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> </form> </ng-container> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\"> <h2 class=\"mt-5\">{{'addons' | i18n}}</h2> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"additionalStorage\">{{'additionalStorageGb' | i18n}}</label> <input id=\"additionalStorage\" class=\"form-control\" type=\"number\" name=\"AdditionalStorageGb\" [(ngModel)]=\"additionalStorage\" min=\"0\" max=\"99\" step=\"1\" placeholder=\"{{'additionalStorageGbDesc' | i18n}}\"> <small class=\"text-muted form-text\">{{'additionalStorageIntervalDesc' | i18n : '1 GB' : (storageGbPrice | currency:'$') : ('year' | i18n)}}</small> </div> </div> <h2 class=\"spaced-header\">{{'summary' | i18n}}</h2> {{'premiumMembership' | i18n}}: {{premiumPrice | currency:'$'}} <br> {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} GB &times; {{storageGbPrice | currency:'$'}} = {{additionalStorageTotal | currency:'$'}} <hr class=\"my-3\"> <h2 class=\"spaced-header mb-4\">{{'paymentInformation' | i18n}}</h2> <app-payment [hideBank]=\"true\"></app-payment> <app-tax-info></app-tax-info> <div id=\"price\" class=\"my-4\"> <div class=\"text-muted text-sm\"> {{ 'planPrice' | i18n }}: {{ subtotal | currency: 'USD $' }} <br/> <ng-container> {{ 'estimatedTax' | i18n }}: {{ taxCharges | currency: 'USD $' }} </ng-container> </div> <hr class=\"my-1 col-3 ml-0\"> <p class=\"text-lg\"><strong>{{'total' | i18n}}:</strong> {{total | currency:'USD $'}}/{{'year' | i18n}}</p> </div> <small class=\"text-muted font-italic\">{{'paymentChargedAnnually' | i18n}}</small> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> </form> ","import {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nconst BroadcasterSubscriptionId = 'SettingsComponent';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: 'settings.component.html',\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n    premium: boolean;\n    selfHosted: boolean;\n\n    constructor(private tokenService: TokenService, private broadcasterService: BroadcasterService,\n        private ngZone: NgZone, private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'purchasedPremium':\n                        await this.load();\n                        break;\n                    default:\n                }\n            });\n        });\n\n        this.selfHosted = await this.platformUtilsService.isSelfHost();\n        await this.load();\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async load() {\n        this.premium = await this.tokenService.getPremium();\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\"> <div class=\"card-header\">{{'settings' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'myAccount' | i18n}} </a> <a routerLink=\"options\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'options' | i18n}} </a> <a routerLink=\"organizations\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'organizations' | i18n}} </a> <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"premium\"> {{'premiumMembership' | i18n}} </a> <a routerLink=\"premium\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!premium\"> {{'goPremium' | i18n}} </a> <a routerLink=\"billing\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!selfHosted\"> {{'billing' | i18n}} </a> <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'twoStepLogin' | i18n}} </a> <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'domainRules' | i18n}} </a> <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'emergencyAccess' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { SubscriptionResponse } from 'jslib-common/models/response/subscriptionResponse';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\n\n@Component({\n    selector: 'app-user-subscription',\n    templateUrl: 'user-subscription.component.html',\n})\nexport class UserSubscriptionComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    adjustStorageAdd = true;\n    showAdjustStorage = false;\n    showUpdateLicense = false;\n    sub: SubscriptionResponse;\n    selfHosted = false;\n\n    cancelPromise: Promise<any>;\n    reinstatePromise: Promise<any>;\n\n    constructor(private tokenService: TokenService, private apiService: ApiService,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private toasterService: ToasterService, private router: Router) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        await this.load();\n        this.firstLoaded = true;\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.tokenService.getPremium()) {\n            this.loading = true;\n            this.sub = await this.apiService.getUserSubscription();\n        } else {\n            this.router.navigate(['/settings/premium']);\n            return;\n        }\n\n        this.loading = false;\n    }\n\n    async reinstate() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.usingInAppPurchase) {\n            this.platformUtilsService.showDialog(this.i18nService.t('manageSubscriptionFromStore'),\n                this.i18nService.t('cancelSubscription'), null, null, 'warning');\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('reinstateConfirmation'),\n            this.i18nService.t('reinstateSubscription'), this.i18nService.t('yes'), this.i18nService.t('cancel'));\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.reinstatePromise = this.apiService.postReinstatePremium();\n            await this.reinstatePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('reinstated'));\n            this.load();\n        } catch { }\n    }\n\n    async cancel() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.usingInAppPurchase) {\n            this.platformUtilsService.showDialog(this.i18nService.t('manageSubscriptionFromStore'),\n                this.i18nService.t('cancelSubscription'), null, null, 'warning');\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('cancelConfirmation'),\n            this.i18nService.t('cancelSubscription'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.cancelPromise = this.apiService.postCancelPremium();\n            await this.cancelPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('canceledSubscription'));\n            this.load();\n        } catch { }\n    }\n\n    downloadLicense() {\n        if (this.loading) {\n            return;\n        }\n\n        const licenseString = JSON.stringify(this.sub.license, null, 2);\n        this.platformUtilsService.saveFile(window, licenseString, null, 'bitwarden_premium_license.json');\n    }\n\n    updateLicense() {\n        if (this.loading) {\n            return;\n        }\n        this.showUpdateLicense = true;\n    }\n\n    closeUpdateLicense(load: boolean) {\n        this.showUpdateLicense = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    adjustStorage(add: boolean) {\n        if (this.usingInAppPurchase) {\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\n                this.i18nService.t(add ? 'addStorage' : 'removeStorage'), null, null, 'warning');\n            return;\n        }\n        this.adjustStorageAdd = add;\n        this.showAdjustStorage = true;\n    }\n\n    closeStorage(load: boolean) {\n        this.showAdjustStorage = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get subscriptionMarkedForCancel() {\n        return this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate;\n    }\n\n    get subscription() {\n        return this.sub != null ? this.sub.subscription : null;\n    }\n\n    get nextInvoice() {\n        return this.sub != null ? this.sub.upcomingInvoice : null;\n    }\n\n    get storagePercentage() {\n        return this.sub != null && this.sub.maxStorageGb ?\n            +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2) : 0;\n    }\n\n    get storageProgressWidth() {\n        return this.storagePercentage < 5 ? 5 : 0;\n    }\n\n    get usingInAppPurchase() {\n        return this.sub != null ? this.sub.usingInAppPurchase : false;\n    }\n}\n","<div class=\"page-header\"> <h1> {{'premiumMembership' | i18n}} <small *ngIf=\"firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <ng-container *ngIf=\"!firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"sub\"> <app-callout type=\"warning\" title=\"{{'canceled' | i18n}}\" *ngIf=\"subscription && subscription.cancelled\"> {{'subscriptionCanceled' | i18n}}</app-callout> <app-callout type=\"warning\" title=\"{{'pendingCancellation' | i18n}}\" *ngIf=\"subscriptionMarkedForCancel\"> <p>{{'subscriptionPendingCanceled' | i18n}}</p> <button #reinstateBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" (click)=\"reinstate()\" [appApiAction]=\"reinstatePromise\" [disabled]=\"reinstateBtn.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'reinstateSubscription' | i18n}}</span> </button> </app-callout> <dl *ngIf=\"selfHosted\"> <dt>{{'expiration' | i18n}}</dt> <dd *ngIf=\"sub.expiration\">{{sub.expiration | date:'mediumDate'}}</dd> <dd *ngIf=\"!sub.expiration\">{{'neverExpires' | i18n}}</dd> </dl> <div class=\"row\" *ngIf=\"!selfHosted\"> <div class=\"col-4\"> <dl> <dt>{{'status' | i18n}}</dt> <dd> <span class=\"text-capitalize\">{{(subscription && subscription.status) || '-'}}</span> <span class=\"badge badge-warning\" *ngIf=\"subscriptionMarkedForCancel\">{{'pendingCancellation' | i18n}}</span> </dd> <dt>{{'nextCharge' | i18n}}</dt> <dd>{{nextInvoice ? ((nextInvoice.date | date: 'mediumDate') + ', ' + (nextInvoice.amount | currency:'$')) : '-'}} </dd> </dl> </div> <div class=\"col-8\" *ngIf=\"subscription\"> <strong class=\"d-block mb-1\">{{'details' | i18n}}</strong> <table class=\"table\"> <tbody> <tr *ngFor=\"let i of subscription.items\"> <td> {{i.name}} {{i.quantity > 1 ? '&times;' + i.quantity : ''}} @ {{i.amount | currency:'$'}} </td> <td> {{(i.quantity * i.amount) | currency:'$'}} /{{i.interval | i18n}} </td> </tr> </tbody> </table> </div> </div> <ng-container *ngIf=\"selfHosted\"> <div> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\"> {{'updateLicense' | i18n}} </button> <a href=\"https://vault.bitwarden.com/#/settings/subscription\" target=\"_blank\" rel=\"noopener\" class=\"btn btn-outline-secondary\"> {{'manageSubscription' | i18n}} </a> </div> <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\"> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"closeUpdateLicense(false)\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{'updateLicense' | i18n}}</h3> <app-update-license (onUpdated)=\"closeUpdateLicense(true)\" (onCanceled)=\"closeUpdateLicense(false)\"> </app-update-license> </div> </div> </ng-container> <ng-container *ngIf=\"!selfHosted\"> <div class=\"d-flex\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"downloadLicense()\" *ngIf=\"!subscription || !subscription.cancelled\"> {{'downloadLicense' | i18n}} </button> <button #cancelBtn type=\"button\" class=\"btn btn-outline-danger btn-submit ml-auto\" (click)=\"cancel()\" [appApiAction]=\"cancelPromise\" [disabled]=\"cancelBtn.loading\" *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'cancelSubscription' | i18n}}</span> </button> </div> <h2 class=\"spaced-header\">{{'storage' | i18n}}</h2> <p>{{'subscriptionStorage' | i18n : sub.maxStorageGb || 0 : sub.storageName || '0 MB'}}</p> <div class=\"progress\"> <div class=\"progress-bar bg-success\" role=\"progressbar\" [ngStyle]=\"{width: storageProgressWidth + '%' }\" [attr.aria-valuenow]=\"storagePercentage\" aria-valuemin=\"0\" aria-valuemax=\"100\"> {{(storagePercentage / 100) | percent}}</div> </div> <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"> <div class=\"mt-3\"> <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\"> {{'addStorage' | i18n}} </button> <button type=\"button\" class=\"ml-1 btn btn-outline-secondary\" (click)=\"adjustStorage(false)\"> {{'removeStorage' | i18n}} </button> </div> <app-adjust-storage [storageGbPrice]=\"4\" [add]=\"adjustStorageAdd\" (onAdjusted)=\"closeStorage(true)\" (onCanceled)=\"closeStorage(false)\" *ngIf=\"showAdjustStorage\"></app-adjust-storage> </div> </ng-container> </ng-container> </ng-container> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { BreachAccountResponse } from 'jslib-common/models/response/breachAccountResponse';\n\n@Component({\n    selector: 'app-breach-report',\n    templateUrl: 'breach-report.component.html',\n})\nexport class BreachReportComponent implements OnInit {\n    error = false;\n    username: string;\n    checkedUsername: string;\n    breachedAccounts: BreachAccountResponse[] = [];\n    formPromise: Promise<BreachAccountResponse[]>;\n\n    constructor(private auditService: AuditService, private userService: UserService) { }\n\n    async ngOnInit() {\n        this.username = await this.userService.getEmail();\n    }\n\n    async submit() {\n        this.error = false;\n        this.username = this.username.toLowerCase();\n        try {\n            this.formPromise = this.auditService.breachedAccounts(this.username);\n            this.breachedAccounts = await this.formPromise;\n        } catch {\n            this.error = true;\n        }\n        this.checkedUsername = this.username;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'dataBreachReport' | i18n}}</h1> </div> <p>{{'breachDesc' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"username\">{{'username' | i18n}}</label> <input id=\"username\" type=\"text\" name=\"Username\" class=\"form-control\" [(ngModel)]=\"username\" required> <small class=\"form-text text-muted\">{{'breachCheckUsernameEmail' | i18n}}</small> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'checkBreaches' | i18n}}</span> </button> </form> <div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\"> <p *ngIf=\"error\">{{'reportError' | i18n}}...</p> <ng-container *ngIf=\"!error\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!breachedAccounts.length\"> {{'breachUsernameNotFound' | i18n : checkedUsername}} </app-callout> <app-callout type=\"danger\" title=\"{{'breachFound' | i18n}}\" *ngIf=\"breachedAccounts.length\"> {{'breachUsernameFound' | i18n : checkedUsername : breachedAccounts.length}} </app-callout> <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\"> <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\"> <div class=\"row\"> <div class=\"col-2 text-center\"> <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\"> </div> <div class=\"col-7\"> <h3 class=\"text-lg\">{{a.title}}</h3> <p [innerHTML]=\"a.description\"></p> <p class=\"mb-1\">{{'compromisedData' | i18n}}:</p> <ul> <li *ngFor=\"let d of a.dataClasses\">{{d}}</li> </ul> </div> <div class=\"col-3\"> <dl> <dt>{{'website' | i18n}}</dt> <dd>{{a.domain}}</dd> <dt>{{'affectedUsers' | i18n}}</dt> <dd>{{a.pwnCount | number}}</dd> <dt>{{'breachOccurred' | i18n}}</dt> <dd>{{a.breachDate | date: 'mediumDate'}}</dd> <dt>{{'breachReported' | i18n}}</dt> <dd>{{a.addedDate | date: 'mediumDate'}}</dd> </dl> </div> </div> </li> </ul> </ng-container> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport {\n    PasswordGeneratorComponent as BasePasswordGeneratorComponent,\n} from 'jslib-angular/components/password-generator.component';\n\nimport { ModalComponent } from '../modal.component';\nimport { PasswordGeneratorHistoryComponent } from './password-generator-history.component';\n\n@Component({\n    selector: 'app-password-generator',\n    templateUrl: 'password-generator.component.html',\n})\nexport class PasswordGeneratorComponent extends BasePasswordGeneratorComponent {\n    @ViewChild('historyTemplate', { read: ViewContainerRef, static: true }) historyModalRef: ViewContainerRef;\n\n    private modal: ModalComponent = null;\n\n    constructor(passwordGenerationService: PasswordGenerationService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver) {\n        super(passwordGenerationService, platformUtilsService, i18nService, window);\n    }\n\n    history() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.historyModalRef.createComponent(factory).instance;\n        this.modal.show<PasswordGeneratorHistoryComponent>(PasswordGeneratorHistoryComponent, this.historyModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    lengthChanged() {\n        document.getElementById('length').focus();\n    }\n\n    minNumberChanged() {\n        document.getElementById('min-number').focus();\n    }\n\n    minSpecialChanged() {\n        document.getElementById('min-special').focus();\n    }\n}\n","<div class=\"page-header\"> <h1>{{'passwordGenerator' | i18n}}</h1> </div> <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions?.inEffect()\"> {{'passwordGeneratorPolicyInEffect' | i18n}} </app-callout> <div class=\"card card-password bg-light my-4\"> <div class=\"card-body\"> <div class=\"password-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div> </div> </div> <div class=\"form-group\"> <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\"> <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"options.type\" name=\"Type_{{o.value}}\" id=\"type_{{o.value}}\" [value]=\"o.value\" (change)=\"saveOptions()\" [checked]=\"options.type === o.value\"> <label class=\"form-check-label\" for=\"type_{{o.value}}\"> {{o.name}} </label> </div> </div> <ng-container *ngIf=\"options.type === 'passphrase'\"> <div class=\"row\"> <div class=\"form-group col-4\"> <label for=\"num-words\">{{'numWords' | i18n}}</label> <input id=\"num-words\" class=\"form-control\" type=\"number\" min=\"3\" max=\"20\" [(ngModel)]=\"options.numWords\" (blur)=\"saveOptions()\"> </div> <div class=\"form-group col-4\"> <label for=\"word-separator\">{{'wordSeparator' | i18n}}</label> <input id=\"word-separator\" class=\"form-control\" type=\"text\" maxlength=\"1\" [(ngModel)]=\"options.wordSeparator\" (blur)=\"saveOptions()\"> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input id=\"capitalize\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.capitalize\" [disabled]=\"enforcedPolicyOptions?.capitalize\"> <label for=\"capitalize\" class=\"form-check-label\">{{'capitalize' | i18n}}</label> </div> <div class=\"form-check\"> <input id=\"include-number\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.includeNumber\" [disabled]=\"enforcedPolicyOptions?.includeNumber\"> <label for=\"include-number\" class=\"form-check-label\">{{'includeNumber' | i18n}}</label> </div> </div> </ng-container> <ng-container *ngIf=\"options.type === 'password'\"> <div class=\"row\"> <div class=\"form-group col-4\"> <label for=\"length\">{{'length' | i18n}}</label> <input id=\"length\" class=\"form-control\" type=\"number\" min=\"5\" max=\"128\" [(ngModel)]=\"options.length\" (blur)=\"saveOptions()\" (change)=\"lengthChanged()\"> </div> <div class=\"form-group col-4\"> <label for=\"min-number\">{{'minNumbers' | i18n}}</label> <input id=\"min-number\" class=\"form-control\" type=\"number\" min=\"0\" max=\"9\" (blur)=\"saveOptions()\" [(ngModel)]=\"options.minNumber\" (change)=\"minNumberChanged()\"> </div> <div class=\"form-group col-4\"> <label for=\"min-special\">{{'minSpecial' | i18n}}</label> <input id=\"min-special\" class=\"form-control\" type=\"number\" min=\"0\" max=\"9\" (blur)=\"saveOptions()\" [(ngModel)]=\"options.minSpecial\" (change)=\"minSpecialChanged()\"> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input id=\"uppercase\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.uppercase\" [disabled]=\"enforcedPolicyOptions?.useUppercase\"> <label for=\"uppercase\" class=\"form-check-label\">A-Z</label> </div> <div class=\"form-check\"> <input id=\"lowercase\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.lowercase\" [disabled]=\"enforcedPolicyOptions?.useLowercase\"> <label for=\"lowercase\" class=\"form-check-label\">a-z</label> </div> <div class=\"form-check\"> <input id=\"numbers\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.number\" [disabled]=\"enforcedPolicyOptions?.useNumbers\"> <label for=\"numbers\" class=\"form-check-label\">0-9</label> </div> <div class=\"form-check\"> <input id=\"special\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.special\" [disabled]=\"enforcedPolicyOptions?.useSpecial\"> <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label> </div> <div class=\"form-check\"> <input id=\"ambiguous\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"avoidAmbiguous\"> <label for=\"ambiguous\" class=\"form-check-label\">{{'ambiguous' | i18n}}</label> </div> </div> </ng-container> <div class=\"d-flex\"> <div> <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\"> {{'regeneratePassword' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\"> {{'copyPassword' | i18n}} </button> </div> <div class=\"ml-auto\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"history()\" appA11yTitle=\"{{'passwordHistory' | i18n}}\"> <i class=\"fa fa-clock-o fa-lg\" aria-hidden=\"true\"></i> </button> </div> </div> <ng-template #historyTemplate></ng-template> ","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport {\n    PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent,\n} from 'jslib-angular/components/password-generator-history.component';\n\n@Component({\n    selector: 'app-password-generator-history',\n    templateUrl: 'password-generator-history.component.html',\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n    constructor(passwordGenerationService: PasswordGenerationService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService) {\n        super(passwordGenerationService, platformUtilsService, i18nService, window);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"passHistoryTitle\">{{'passwordHistory' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"history.length\"> <ul class=\"list-group list-group-flush\"> <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\"> <div class=\"password-row\"> <div class=\"text-monospace password-wrapper\" [innerHTML]=\"h.password | colorPassword\" appSelectCopy></div> <small class=\"text-muted\">{{h.date | date:'medium'}}</small> </div> <div class=\"ml-auto\"> <button class=\"btn btn-link\" appA11yTitle=\"{{'copyPassword' | i18n}}\" (click)=\"copy(h.password)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </li> </ul> </div> <div class=\"modal-body\" *ngIf=\"!history.length\"> {{'noPasswordsInList' | i18n}} </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'close' | i18n}} </button> <div class=\"ml-auto\"> <button type=\"button\" (click)=\"clear()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'clear' | i18n}}\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'app-tools',\n    templateUrl: 'tools.component.html',\n})\nexport class ToolsComponent implements OnInit {\n    canAccessPremium = false;\n\n    constructor(private userService: UserService, private messagingService: MessagingService) { }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n    }\n\n    premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card mb-4\"> <div class=\"card-header\">{{'tools' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'passwordGenerator' | i18n}} </a> <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'importData' | i18n}} </a> <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'exportVault' | i18n}} </a> </div> </div> <div class=\"card\"> <div class=\"card-header d-flex\"> {{'reports' | i18n}} <div class=\"ml-auto\"> <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium\" (click)=\"premiumRequired()\"> {{'premium' | i18n}} </a> </div> </div> <div class=\"list-group list-group-flush\"> <a routerLink=\"exposed-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'exposedPasswordsReport' | i18n}} </a> <a routerLink=\"reused-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'reusedPasswordsReport' | i18n}} </a> <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'weakPasswordsReport' | i18n}} </a> <a routerLink=\"unsecured-websites-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'unsecuredWebsitesReport' | i18n}} </a> <a routerLink=\"inactive-two-factor-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'inactive2faReport' | i18n}} </a> <a routerLink=\"breach-report\" class=\"list-group-item d-flex\" routerLinkActive=\"active\"> {{'dataBreachReport' | i18n}} <div class=\"ml-auto\"> <span class=\"badge badge-success\" *ngIf=\"!canAccessPremium\"> {{'free' | i18n | uppercase}} </span> </div> </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import {\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { OrganizationsComponent } from '../settings/organizations.component';\nimport { UpdateKeyComponent } from '../settings/update-key.component';\nimport { AddEditComponent } from './add-edit.component';\nimport { AttachmentsComponent } from './attachments.component';\nimport { CiphersComponent } from './ciphers.component';\nimport { CollectionsComponent } from './collections.component';\nimport { FolderAddEditComponent } from './folder-add-edit.component';\nimport { GroupingsComponent } from './groupings.component';\nimport { ShareComponent } from './share.component';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nconst BroadcasterSubscriptionId = 'VaultComponent';\n\n@Component({\n    selector: 'app-vault',\n    templateUrl: 'vault.component.html',\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n    @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\n    @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n    @ViewChild(OrganizationsComponent, { static: true }) organizationsComponent: OrganizationsComponent;\n    @ViewChild('attachments', { read: ViewContainerRef, static: true }) attachmentsModalRef: ViewContainerRef;\n    @ViewChild('folderAddEdit', { read: ViewContainerRef, static: true }) folderAddEditModalRef: ViewContainerRef;\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('share', { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n    @ViewChild('collections', { read: ViewContainerRef, static: true }) collectionsModalRef: ViewContainerRef;\n    @ViewChild('updateKeyTemplate', { read: ViewContainerRef, static: true }) updateKeyModalRef: ViewContainerRef;\n\n    favorites: boolean = false;\n    type: CipherType = null;\n    folderId: string = null;\n    collectionId: string = null;\n    showVerifyEmail = false;\n    showBrowserOutdated = false;\n    showUpdateKey = false;\n    showPremiumCallout = false;\n    deleted: boolean = false;\n    trashCleanupWarning: string = null;\n\n    modal: ModalComponent = null;\n\n    constructor(private syncService: SyncService, private route: ActivatedRoute,\n        private router: Router, private changeDetectorRef: ChangeDetectorRef,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private tokenService: TokenService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private userService: UserService,\n        private platformUtilsService: PlatformUtilsService, private broadcasterService: BroadcasterService,\n        private ngZone: NgZone) { }\n\n    async ngOnInit() {\n        this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n        this.showBrowserOutdated = window.navigator.userAgent.indexOf('MSIE') !== -1;\n        this.trashCleanupWarning = this.i18nService.t(\n            this.platformUtilsService.isSelfHost() ? 'trashCleanupWarningSelfHosted' : 'trashCleanupWarning'\n        );\n\n        const queryParamsSub = this.route.queryParams.subscribe(async params => {\n            await this.syncService.fullSync(false);\n\n            this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n            const canAccessPremium = await this.userService.canAccessPremium();\n            this.showPremiumCallout = !this.showVerifyEmail && !canAccessPremium &&\n                !this.platformUtilsService.isSelfHost();\n\n            await Promise.all([\n                this.groupingsComponent.load(),\n                this.organizationsComponent.load(),\n            ]);\n\n            if (params == null) {\n                this.groupingsComponent.selectedAll = true;\n                await this.ciphersComponent.reload();\n            } else {\n                if (params.deleted) {\n                    this.groupingsComponent.selectedTrash = true;\n                    await this.filterDeleted();\n                } else if (params.favorites) {\n                    this.groupingsComponent.selectedFavorites = true;\n                    await this.filterFavorites();\n                } else if (params.type) {\n                    const t = parseInt(params.type, null);\n                    this.groupingsComponent.selectedType = t;\n                    await this.filterCipherType(t);\n                } else if (params.folderId) {\n                    this.groupingsComponent.selectedFolder = true;\n                    this.groupingsComponent.selectedFolderId = params.folderId;\n                    await this.filterFolder(params.folderId);\n                } else if (params.collectionId) {\n                    this.groupingsComponent.selectedCollectionId = params.collectionId;\n                    await this.filterCollection(params.collectionId);\n                } else {\n                    this.groupingsComponent.selectedAll = true;\n                    await this.ciphersComponent.reload();\n                }\n            }\n\n            this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n                this.ngZone.run(async () => {\n                    switch (message.command) {\n                        case 'syncCompleted':\n                            if (message.successfully) {\n                                await Promise.all([\n                                    this.groupingsComponent.load(),\n                                    this.organizationsComponent.load(),\n                                    this.ciphersComponent.load(this.ciphersComponent.filter),\n                                ]);\n                                this.changeDetectorRef.detectChanges();\n                            }\n                            break;\n                    }\n                });\n            });\n\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async clearGroupingFilters() {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchVault');\n        await this.ciphersComponent.reload();\n        this.clearFilters();\n        this.go();\n    }\n\n    async filterFavorites() {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchFavorites');\n        await this.ciphersComponent.reload(c => c.favorite);\n        this.clearFilters();\n        this.favorites = true;\n        this.go();\n    }\n\n    async filterDeleted() {\n        this.ciphersComponent.showAddNew = false;\n        this.ciphersComponent.deleted = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchTrash');\n        await this.ciphersComponent.reload(null, true);\n        this.clearFilters();\n        this.deleted = true;\n        this.go();\n    }\n\n    async filterCipherType(type: CipherType) {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchType');\n        await this.ciphersComponent.reload(c => c.type === type);\n        this.clearFilters();\n        this.type = type;\n        this.go();\n    }\n\n    async filterFolder(folderId: string) {\n        this.ciphersComponent.showAddNew = true;\n        folderId = folderId === 'none' ? null : folderId;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchFolder');\n        await this.ciphersComponent.reload(c => c.folderId === folderId);\n        this.clearFilters();\n        this.folderId = folderId == null ? 'none' : folderId;\n        this.go();\n    }\n\n    async filterCollection(collectionId: string) {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchCollection');\n        await this.ciphersComponent.reload(c => c.collectionIds != null &&\n            c.collectionIds.indexOf(collectionId) > -1);\n        this.clearFilters();\n        this.collectionId = collectionId;\n        this.go();\n    }\n\n    filterSearchText(searchText: string) {\n        this.ciphersComponent.searchText = searchText;\n        this.ciphersComponent.search(200);\n    }\n\n    async editCipherAttachments(cipher: CipherView) {\n        const canAccessPremium = await this.userService.canAccessPremium();\n        if (cipher.organizationId == null && !canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        } else if (cipher.organizationId != null) {\n            const org = await this.userService.getOrganization(cipher.organizationId);\n            if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n                this.messagingService.send('upgradeOrganization', { organizationId: cipher.organizationId });\n                return;\n            }\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.attachmentsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AttachmentsComponent>(AttachmentsComponent, this.attachmentsModalRef);\n\n        childComponent.cipherId = cipher.id;\n        let madeAttachmentChanges = false;\n        childComponent.onUploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n        childComponent.onDeletedAttachment.subscribe(() => madeAttachmentChanges = true);\n        childComponent.onReuploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n            if (madeAttachmentChanges) {\n                await this.ciphersComponent.refresh();\n            }\n            madeAttachmentChanges = false;\n        });\n    }\n\n    shareCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.shareModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ShareComponent>(ShareComponent, this.shareModalRef);\n\n        childComponent.cipherId = cipher.id;\n        childComponent.onSharedCipher.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    editCipherCollections(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.collectionsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<CollectionsComponent>(CollectionsComponent, this.collectionsModalRef);\n\n        childComponent.cipherId = cipher.id;\n        childComponent.onSavedCollections.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    async addFolder() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.folderAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<FolderAddEditComponent>(\n            FolderAddEditComponent, this.folderAddEditModalRef);\n\n        childComponent.folderId = null;\n        childComponent.onSavedFolder.subscribe(async () => {\n            this.modal.close();\n            await this.groupingsComponent.loadFolders();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async editFolder(folderId: string) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.folderAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<FolderAddEditComponent>(\n            FolderAddEditComponent, this.folderAddEditModalRef);\n\n        childComponent.folderId = folderId;\n        childComponent.onSavedFolder.subscribe(async () => {\n            this.modal.close();\n            await this.groupingsComponent.loadFolders();\n        });\n        childComponent.onDeletedFolder.subscribe(async () => {\n            this.modal.close();\n            await this.groupingsComponent.loadFolders();\n            await this.filterFolder('none');\n            this.groupingsComponent.selectedFolderId = null;\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    addCipher() {\n        const component = this.editCipher(null);\n        component.type = this.type;\n        component.folderId = this.folderId === 'none' ? null : this.folderId;\n        if (this.collectionId != null) {\n            const collection = this.groupingsComponent.collections.filter(c => c.id === this.collectionId);\n            if (collection.length > 0) {\n                component.organizationId = collection[0].organizationId;\n                component.collectionIds = [this.collectionId];\n            }\n        }\n    }\n\n    editCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AddEditComponent>(\n            AddEditComponent, this.cipherAddEditModalRef);\n\n        childComponent.cipherId = cipher == null ? null : cipher.id;\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n        childComponent.onRestoredCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n\n    cloneCipher(cipher: CipherView) {\n        const component = this.editCipher(cipher);\n        component.cloneMode = true;\n    }\n\n    updateKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.updateKeyModalRef.createComponent(factory).instance;\n        this.modal.show<UpdateKeyComponent>(UpdateKeyComponent, this.updateKeyModalRef);\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private clearFilters() {\n        this.folderId = null;\n        this.collectionId = null;\n        this.favorites = false;\n        this.type = null;\n        this.deleted = false;\n    }\n\n    private go(queryParams: any = null) {\n        if (queryParams == null) {\n            queryParams = {\n                favorites: this.favorites ? true : null,\n                type: this.type,\n                folderId: this.folderId,\n                collectionId: this.collectionId,\n                deleted: this.deleted ? true : null,\n            };\n        }\n\n        this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams: queryParams,\n            replaceUrl: true,\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <app-vault-groupings (onAllClicked)=\"clearGroupingFilters()\" (onFavoritesClicked)=\"filterFavorites()\" (onCipherTypeClicked)=\"filterCipherType($event)\" (onFolderClicked)=\"filterFolder($event.id)\" (onAddFolder)=\"addFolder()\" (onEditFolder)=\"editFolder($event.id)\" (onCollectionClicked)=\"filterCollection($event.id)\" (onSearchTextChanged)=\"filterSearchText($event)\" (onTrashClicked)=\"filterDeleted()\"> </app-vault-groupings> </div> <div class=\"col-6\"> <div class=\"page-header d-flex\"> <h1> {{'myVault' | i18n}} <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\"> <ng-container *ngIf=\"actionSpinner.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </small> </h1> <div class=\"ml-auto d-flex\"> <app-vault-bulk-actions [ciphersComponent]=\"ciphersComponent\" [modal]=\"modal\" [deleted]=\"deleted\"> </app-vault-bulk-actions> <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"addCipher()\" *ngIf=\"!deleted\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'addItem' | i18n}} </button> </div> </div> <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"fa-warning\"> {{trashCleanupWarning}} </app-callout> <app-vault-ciphers (onCipherClicked)=\"editCipher($event)\" (onAttachmentsClicked)=\"editCipherAttachments($event)\" (onAddCipher)=\"addCipher()\" (onShareClicked)=\"shareCipher($event)\" (onCollectionsClicked)=\"editCipherCollections($event)\" (onCloneClicked)=\"cloneCipher($event)\"> </app-vault-ciphers> </div> <div class=\"col-3\"> <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\"> <div class=\"card-header bg-warning text-white\"> <i class=\"fa fa-warning fa-fw\" aria-hidden=\"true\"></i> {{'updateKeyTitle' | i18n}} </div> <div class=\"card-body\"> <p>{{'updateEncryptionKeyShortDesc' | i18n}}</p> <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\"> {{'updateEncryptionKey' | i18n}} </button> </div> </div> <app-verify-email *ngIf=\"showVerifyEmail\" class=\"d-block mb-4\"></app-verify-email> <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\"> <div class=\"card-header bg-warning text-white\"> <i class=\"fa fa-warning fa-fw\" aria-hidden=\"true\"></i> {{'updateBrowser' | i18n}} </div> <div class=\"card-body\"> <p>{{'updateBrowserDesc' | i18n}}</p> <a class=\"btn btn-block btn-outline-secondary\" target=\"_blank\" href=\"https://browser-update.org/update-browser.html\" rel=\"noopener\"> {{'updateBrowser' | i18n}} </a> </div> </div> <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\"> <div class=\"card-header bg-success text-white\"> <i class=\"fa fa-star fa-fw\" aria-hidden=\"true\"></i> {{'goPremium' | i18n}} </div> <div class=\"card-body\"> <p>{{'premiumUpgradeUnlockFeatures' | i18n}}</p> <a class=\"btn btn-block btn-outline-secondary\" routerLink=\"/settings/premium\"> {{'goPremium' | i18n}} </a> </div> </div> <div class=\"card\"> <div class=\"card-header d-flex\"> {{'organizations' | i18n}} <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/what-is-an-organization/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"card-body\"> <app-organizations [vault]=\"true\"></app-organizations> </div> </div> </div> </div> </div> <ng-template #attachments></ng-template> <ng-template #folderAddEdit></ng-template> <ng-template #cipherAddEdit></ng-template> <ng-template #share></ng-template> <ng-template #collections></ng-template> <ng-template #updateKeyTemplate></ng-template> ","import { Component } from '@angular/core';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\n\nimport { CipherWithIdRequest } from 'jslib-common/models/request/cipherWithIdRequest';\nimport { FolderWithIdRequest } from 'jslib-common/models/request/folderWithIdRequest';\nimport { UpdateKeyRequest } from 'jslib-common/models/request/updateKeyRequest';\n\n@Component({\n    selector: 'app-update-key',\n    templateUrl: 'update-key.component.html',\n})\nexport class UpdateKeyComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private syncService: SyncService,\n        private folderService: FolderService, private cipherService: CipherService) { }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (hasEncKey) {\n            return;\n        }\n\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.makeRequest().then(request => {\n                return this.apiService.postAccountKey(request);\n            });\n            await this.formPromise;\n            const toast: Toast = {\n                type: 'success',\n                title: this.i18nService.t('keyUpdated'),\n                body: this.i18nService.t('logBackInOthersToo'),\n                timeout: 15000,\n            };\n            this.toasterService.popAsync(toast);\n            this.messagingService.send('logout');\n        } catch { }\n    }\n\n    private async makeRequest(): Promise<UpdateKeyRequest> {\n        const key = await this.cryptoService.getKey();\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const privateKey = await this.cryptoService.getPrivateKey();\n        let encPrivateKey: EncString = null;\n        if (privateKey != null) {\n            encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n        }\n        const request = new UpdateKeyRequest();\n        request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n        request.key = encKey[1].encryptedString;\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n        await this.syncService.fullSync(true);\n\n        const folders = await this.folderService.getAllDecrypted();\n        for (let i = 0; i < folders.length; i++) {\n            if (folders[i].id == null) {\n                continue;\n            }\n            const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n            request.folders.push(new FolderWithIdRequest(folder));\n        }\n\n        const ciphers = await this.cipherService.getAllDecrypted();\n        for (let i = 0; i < ciphers.length; i++) {\n            if (ciphers[i].organizationId != null) {\n                continue;\n            }\n            const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n            request.ciphers.push(new CipherWithIdRequest(cipher));\n        }\n\n        return request;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"updateEncKeyTitle\">{{'updateEncryptionKey' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'updateEncryptionKeyShortDesc' | i18n}} {{'updateEncryptionKeyDesc' | i18n}} <a href=\"https://help.bitwarden.com/article/update-encryption-key/\" target=\"_blank\" rel=\"noopener\">{{'learnMore' | i18n}}</a> </p> <app-callout type=\"warning\">{{'updateEncryptionKeyWarning' | i18n}}</app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'updateEncryptionKey' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import { Component } from '@angular/core';\n\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport {\n    FolderAddEditComponent as BaseFolderAddEditComponent,\n} from 'jslib-angular/components/folder-add-edit.component';\n\n@Component({\n    selector: 'app-folder-add-edit',\n    templateUrl: 'folder-add-edit.component.html',\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n    constructor(folderService: FolderService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService) {\n        super(folderService, i18nService, platformUtilsService);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"folderAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"folder.name\" required appAutofocus> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import {\n    Component,\n    OnDestroy,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { ShareComponent as BaseShareComponent } from 'jslib-angular/components/share.component';\n\n@Component({\n    selector: 'app-vault-share',\n    templateUrl: 'share.component.html',\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, userService: UserService,\n        cipherService: CipherService) {\n        super(collectionService, platformUtilsService, i18nService, userService, cipherService);\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        const collections = select ? this.collections : this.writeableCollections;\n        collections.forEach(c => this.check(c, select));\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"shareTitle\"> {{'moveToOrganization' | i18n}} <small *ngIf=\"cipher\">{{cipher.name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\"> {{'noOrganizationsList' | i18n}} </div> <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\"> <p>{{'moveToOrgDesc' | i18n}}</p> <div class=\"form-group\"> <label for=\"organization\">{{'organization' | i18n}}</label> <select id=\"organization\" name=\"OrganizationId\" [(ngModel)]=\"organizationId\" class=\"form-control\" (change)=\"filterCollections()\"> <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{o.name}}</option> </select> </div> <div class=\"d-flex\"> <h3>{{'collections' | i18n}}</h3> <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </div> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <tbody> <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\"> <td class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td> {{c.name}} </td> </tr> </tbody> </table> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [disabled]=\"form.loading || !canSave\" [ngClass]=\"{loading:form.loading}\" *ngIf=\"organizations && organizations.length\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-primary\" *ngIf=\"!organizations || !organizations.length\"> {{'newOrganization' | i18n}} </a> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-verify-email',\n    templateUrl: 'verify-email.component.html',\n})\nexport class VerifyEmailComponent {\n    actionPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async send() {\n        if (this.actionPromise != null) {\n            return;\n        }\n        try {\n            this.actionPromise = this.apiService.postAccountVerifyEmail();\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('checkInboxForVerification'));\n        } catch { }\n        this.actionPromise = null;\n    }\n}\n","<div class=\"card border-warning\"> <div class=\"card-header bg-warning text-white\"> <i class=\"fa fa-envelope-o fa-fw\" aria-hidden=\"true\"></i> {{'verifyEmail' | i18n}} </div> <div class=\"card-body\"> <p>{{'verifyEmailDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-block btn-outline-secondary btn-submit\" #sendBtn [appApiAction]=\"actionPromise\" [disabled]=\"sendBtn.loading\" (click)=\"send()\"> <i class=\"fa fa-spin fa-spinner\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span> {{'sendEmail' | i18n}} </span> </button> </div> </div> ","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Injectable()\nexport class OrganizationGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router,\n        private toasterService: ToasterService, private i18nService: I18nService) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const org = await this.userService.getOrganization(route.params.organizationId);\n        if (org == null) {\n            this.router.navigate(['/']);\n            return false;\n        }\n        if (!org.isOwner && !org.enabled) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('organizationIsDisabled'));\n            this.router.navigate(['/']);\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Permissions } from 'jslib-common/enums/permissions';\n\n@Injectable()\nexport class OrganizationTypeGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const org = await this.userService.getOrganization(route.params.organizationId);\n        const permissions = route.data == null ? null : route.data.permissions as Permissions[];\n\n        if (\n            (permissions.indexOf(Permissions.AccessBusinessPortal) !== -1 && org.canAccessBusinessPortal) ||\n            (permissions.indexOf(Permissions.AccessEventLogs) !== -1 && org.canAccessEventLogs) ||\n            (permissions.indexOf(Permissions.AccessImportExport) !== -1 && org.canAccessImportExport) ||\n            (permissions.indexOf(Permissions.AccessReports) !== -1 && org.canAccessReports) ||\n            (permissions.indexOf(Permissions.ManageAllCollections) !== -1 && org.canManageAllCollections) ||\n            (permissions.indexOf(Permissions.ManageAssignedCollections) !== -1 && org.canManageAssignedCollections) ||\n            (permissions.indexOf(Permissions.ManageGroups) !== -1 && org.canManageGroups) ||\n            (permissions.indexOf(Permissions.ManageOrganization) !== -1 && org.isOwner) ||\n            (permissions.indexOf(Permissions.ManagePolicies) !== -1 && org.canManagePolicies) ||\n            (permissions.indexOf(Permissions.ManageUsers) !== -1 && org.canManageUsers) ||\n            (permissions.indexOf(Permissions.ManageUsersPassword) !== -1 && org.canManageUsersPassword)\n        ) {\n            return true;\n        }\n\n        this.router.navigate(['/organizations', org.id]);\n        return false;\n    }\n}\n","export enum Permissions {\n    AccessBusinessPortal,\n    AccessEventLogs,\n    AccessImportExport,\n    AccessReports,\n    ManageAllCollections,\n    ManageAssignedCollections,\n    ManageGroups,\n    ManageOrganization,\n    ManagePolicies,\n    ManageUsers,\n    ManageUsersPassword,\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n    RouterStateSnapshot,\n} from '@angular/router';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(private vaultTimeoutService: VaultTimeoutService, private userService: UserService,\n        private router: Router, private messagingService: MessagingService) { }\n\n    async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (!isAuthed) {\n            this.messagingService.send('authBlocked');\n            return false;\n        }\n\n        const locked = await this.vaultTimeoutService.isLocked();\n        if (locked) {\n            if (routerState != null) {\n                this.messagingService.send('lockedUrl', { url: routerState.url });\n            }\n            this.router.navigate(['lock'], { queryParams: { promptBiometric: true }});\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\n@Injectable()\nexport class LockGuardService implements CanActivate {\n\n    protected homepage = 'vault';\n    constructor(private vaultTimeoutService: VaultTimeoutService, private userService: UserService,\n        private router: Router) { }\n\n    async canActivate() {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (isAuthed) {\n            const locked = await this.vaultTimeoutService.isLocked();\n            if (locked) {\n                return true;\n            } else {\n                this.router.navigate([this.homepage]);\n                return false;\n            }\n        }\n\n        this.router.navigate(['']);\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\n@Injectable()\nexport class UnauthGuardService implements CanActivate {\n\n    protected homepage = 'vault';\n    constructor(private vaultTimeoutService: VaultTimeoutService, private userService: UserService,\n        private router: Router) { }\n\n    async canActivate() {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (isAuthed) {\n            const locked = await this.vaultTimeoutService.isLocked();\n            if (locked) {\n                this.router.navigate(['lock']);\n            } else {\n                this.router.navigate([this.homepage]);\n            }\n            return false;\n        }\n\n        return true;\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\n\nimport { CipherData } from 'jslib-common/models/data';\nimport { Cipher, SymmetricCryptoKey } from 'jslib-common/models/domain';\nimport { EmergencyAccessViewResponse } from 'jslib-common/models/response/emergencyAccessResponse';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { EmergencyAccessAttachmentsComponent } from './emergency-access-attachments.component';\nimport { EmergencyAddEditComponent } from './emergency-add-edit.component';\n\n@Component({\n    selector: 'emergency-access-view',\n    templateUrl: 'emergency-access-view.component.html',\n})\nexport class EmergencyAccessViewComponent implements OnInit {\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('attachments', { read: ViewContainerRef, static: true }) attachmentsModalRef: ViewContainerRef;\n\n    id: string;\n    ciphers: CipherView[] = [];\n\n    private modal: ModalComponent = null;\n\n    constructor(private cipherService: CipherService, private cryptoService: CryptoService,\n        private componentFactoryResolver: ComponentFactoryResolver, private router: Router,\n        private route: ActivatedRoute, private apiService: ApiService) { }\n\n    ngOnInit() {\n        this.route.params.subscribe(qParams => {\n            if (qParams.id == null) {\n                return this.router.navigate(['settings/emergency-access']);\n            }\n\n            this.id = qParams.id;\n\n            this.load();\n        });\n    }\n\n    selectCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EmergencyAddEditComponent>(EmergencyAddEditComponent, this.cipherAddEditModalRef);\n\n        childComponent.cipherId = cipher == null ? null : cipher.id;\n        childComponent.cipher = cipher;\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n\n    async load() {\n        const response = await this.apiService.postEmergencyAccessView(this.id);\n        this.ciphers = await this.getAllCiphers(response);\n    }\n\n    async viewAttachments(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.attachmentsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EmergencyAccessAttachmentsComponent>(EmergencyAccessAttachmentsComponent, this.attachmentsModalRef);\n\n        childComponent.cipher = cipher;\n        childComponent.emergencyAccessId = this.id;\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n        const ciphers = response.ciphers;\n\n        const decCiphers: CipherView[] = [];\n        const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n        const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n        const promises: any[] = [];\n        ciphers.forEach(cipherResponse => {\n            const cipherData = new CipherData(cipherResponse);\n            const cipher = new Cipher(cipherData);\n            promises.push(cipher.decrypt(oldEncKey).then(c => decCiphers.push(c)));\n        });\n\n        await Promise.all(promises);\n        decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n        return decCiphers;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'vault' | i18n}}</h1> </div> <div class=\"mt-4\"> <ng-container *ngIf=\"ciphers.length\"> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\"> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\"> <i class=\"fa fa-fw fa-paperclip\" aria-hidden=\"true\"></i> {{'attachments' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> <ng-template #attachments></ng-template> ","import { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class EncryptedObject {\n    iv: ArrayBuffer;\n    data: ArrayBuffer;\n    mac: ArrayBuffer;\n    key: SymmetricCryptoKey;\n}\n","export class EnvironmentUrls {\n    base: string;\n    api: string;\n    identity: string;\n    events: string;\n}\n","export class GeneratedPasswordHistory {\n    password: string;\n    date: number;\n\n    constructor(password: string, date: number) {\n        this.password = password;\n        this.date = date;\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { AttachmentView } from 'jslib-common/models/view/attachmentView';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from 'jslib-angular/components/attachments.component';\n\n@Component({\n    selector: 'emergency-access-attachments',\n    templateUrl: '../vault/attachments.component.html',\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n    viewOnly = true;\n    canAccessAttachments = true;\n\n    constructor(cipherService: CipherService, i18nService: I18nService,\n        cryptoService: CryptoService, userService: UserService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService) {\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService, apiService, window);\n    }\n\n    protected async init() {\n        // Do nothing since cipher is already decoded\n    }\n\n    protected showFixOldAttachments(attachment: AttachmentView) {\n        return false;\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\nimport { AddEditComponent as BaseAddEditComponent } from '../vault/add-edit.component';\n\n@Component({\n    selector: 'app-org-vault-add-edit',\n    templateUrl: '../vault/add-edit.component.html',\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n    originalCipher: Cipher = null;\n    viewOnly = true;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        auditService: AuditService, stateService: StateService,\n        userService: UserService, collectionService: CollectionService,\n        totpService: TotpService, passwordGenerationService: PasswordGenerationService,\n        messagingService: MessagingService, eventService: EventService, policyService: PolicyService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\n            userService, collectionService, totpService, passwordGenerationService, messagingService,\n            eventService, policyService);\n    }\n\n    async load() {\n        this.title = this.i18nService.t('viewItem');\n    }\n\n    protected async loadCipher() {\n        return Promise.resolve(this.originalCipher);\n    }\n}\n","import { Component, ComponentFactoryResolver, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EmergencyAccessStatusType } from 'jslib-common/enums/emergencyAccessStatusType';\nimport { EmergencyAccessType } from 'jslib-common/enums/emergencyAccessType';\nimport { Utils } from 'jslib-common/misc/utils';\nimport { EmergencyAccessConfirmRequest } from 'jslib-common/models/request/emergencyAccessConfirmRequest';\nimport { EmergencyAccessGranteeDetailsResponse, EmergencyAccessGrantorDetailsResponse } from 'jslib-common/models/response/emergencyAccessResponse';\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { ModalComponent } from '../modal.component';\nimport { EmergencyAccessAddEditComponent } from './emergency-access-add-edit.component';\nimport { EmergencyAccessConfirmComponent } from './emergency-access-confirm.component';\nimport { EmergencyAccessTakeoverComponent } from './emergency-access-takeover.component';\n\n@Component({\n    selector: 'emergency-access',\n    templateUrl: 'emergency-access.component.html',\n})\nexport class EmergencyAccessComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('takeoverTemplate', { read: ViewContainerRef, static: true}) takeoverModalRef: ViewContainerRef;\n    @ViewChild('confirmTemplate', { read: ViewContainerRef, static: true }) confirmModalRef: ViewContainerRef;\n\n    canAccessPremium: boolean;\n    trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n    grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n    emergencyAccessType = EmergencyAccessType;\n    emergencyAccessStatusType = EmergencyAccessStatusType;\n    actionPromise: Promise<any>;\n    isOrganizationOwner: boolean;\n\n    private modal: ModalComponent = null;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private platformUtilsService: PlatformUtilsService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private storageService: StorageService, private userService: UserService,\n        private messagingService: MessagingService) { }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        const orgs = await this.userService.getAllOrganizations();\n        this.isOrganizationOwner = orgs.some(o => o.isOwner);\n        this.load();\n    }\n\n    async load() {\n        this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n        this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n    }\n\n    async premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    edit(details: EmergencyAccessGranteeDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EmergencyAccessAddEditComponent>(\n            EmergencyAccessAddEditComponent, this.addEditModalRef);\n\n        childComponent.name = details?.name ?? details?.email;\n        childComponent.emergencyAccessId = details?.id;\n        childComponent.readOnly = !this.canAccessPremium;\n        childComponent.onSaved.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeleted.subscribe(() => {\n            this.modal.close();\n            this.remove(details);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    invite() {\n        this.edit(null);\n    }\n\n    async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n        if (this.actionPromise != null) {\n            return;\n        }\n        this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n        await this.actionPromise;\n        this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenReinvited', contact.email));\n        this.actionPromise = null;\n    }\n\n    async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n        function updateUser() {\n            contact.status = EmergencyAccessStatusType.Confirmed;\n        }\n\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const autoConfirm = await this.storageService.get<boolean>(ConstantsService.autoConfirmFingerprints);\n        if (autoConfirm == null || !autoConfirm) {\n            if (this.modal != null) {\n                this.modal.close();\n            }\n\n            const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n            this.modal = this.confirmModalRef.createComponent(factory).instance;\n            const childComponent = this.modal.show<EmergencyAccessConfirmComponent>(\n                EmergencyAccessConfirmComponent, this.confirmModalRef);\n\n            childComponent.name = contact?.name ?? contact?.email;\n            childComponent.emergencyAccessId = contact.id;\n            childComponent.userId = contact?.granteeId;\n            childComponent.onConfirmed.subscribe(async () => {\n                this.modal.close();\n\n                childComponent.formPromise = this.doConfirmation(contact);\n                await childComponent.formPromise;\n\n                updateUser();\n                this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', contact.name || contact.email));\n            });\n\n            this.modal.onClosed.subscribe(() => {\n                this.modal = null;\n            });\n            return;\n        }\n\n        this.actionPromise = this.doConfirmation(contact);\n        await this.actionPromise;\n        updateUser();\n\n        this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', contact.name || contact.email));\n        this.actionPromise = null;\n    }\n\n    async remove(details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), details.name || details.email,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteEmergencyAccess(details.id);\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', details.name || details.email));\n\n            if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n                this.removeGrantee(details);\n            } else {\n                this.removeGrantor(details);\n            }\n        } catch { }\n    }\n\n    async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('requestAccessConfirmation', details.waitTimeDays.toString()),\n            details.name || details.email,\n            this.i18nService.t('requestAccess'),\n            this.i18nService.t('no'),\n            'warning',\n        );\n\n        if (!confirmed) {\n            return false;\n        }\n\n        await this.apiService.postEmergencyAccessInitiate(details.id);\n\n        details.status = EmergencyAccessStatusType.RecoveryInitiated;\n        this.toasterService.popAsync('success', null, this.i18nService.t('requestSent', details.name || details.email));\n    }\n\n    async approve(details: EmergencyAccessGranteeDetailsResponse) {\n        const type = this.i18nService.t(details.type === EmergencyAccessType.View ? 'view' : 'takeover');\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('approveAccessConfirmation', details.name || details.email, type),\n            details.name || details.email,\n            this.i18nService.t('approve'),\n            this.i18nService.t('no'),\n            'warning',\n        );\n\n        if (!confirmed) {\n            return false;\n        }\n\n        await this.apiService.postEmergencyAccessApprove(details.id);\n        details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n        this.toasterService.popAsync('success', null, this.i18nService.t('emergencyApproved', details.name || details.email));\n    }\n\n    async reject(details: EmergencyAccessGranteeDetailsResponse) {\n        await this.apiService.postEmergencyAccessReject(details.id);\n        details.status = EmergencyAccessStatusType.Confirmed;\n\n        this.toasterService.popAsync('success', null, this.i18nService.t('emergencyRejected', details.name || details.email));\n    }\n\n    async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EmergencyAccessTakeoverComponent>(\n            EmergencyAccessTakeoverComponent, this.takeoverModalRef);\n\n        childComponent.name = details != null ? details.name || details.email : null;\n        childComponent.email = details.email;\n        childComponent.emergencyAccessId = details != null ? details.id : null;\n\n        childComponent.onDone.subscribe(() => {\n            this.modal.close();\n            this.toasterService.popAsync('success', null, this.i18nService.t('passwordResetFor', details.name || details.email));\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n        const index = this.trustedContacts.indexOf(details);\n        if (index > -1) {\n            this.trustedContacts.splice(index, 1);\n        }\n    }\n\n    private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n        const index = this.grantedContacts.indexOf(details);\n        if (index > -1) {\n            this.grantedContacts.splice(index, 1);\n        }\n    }\n\n    // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n    private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n        const encKey = await this.cryptoService.getEncKey();\n        const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n        try {\n            // tslint:disable-next-line\n            console.log('User\\'s fingerprint: ' +\n                (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join('-'));\n        } catch { }\n\n        const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n        const request = new EmergencyAccessConfirmRequest();\n        request.key = encryptedKey.encryptedString;\n        await this.apiService.postEmergencyAccessConfirm(details.id, request);\n    }\n}\n","<div class=\"page-header\"> <h1>{{'emergencyAccess' | i18n}}</h1> </div> <p> {{'emergencyAccessDesc' | i18n}} <a href=\"https://bitwarden.com/help/article/emergency-access/\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}}. </a> </p> <p *ngIf=\"isOrganizationOwner\"> <b>{{'warning' | i18n }}:</b> {{'emergencyAccessOwnerWarning' | i18n}} </p> <div class=\"page-header d-flex\"> <h2> {{'trustedEmergencyContacts' | i18n}} <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium\" (click)=\"premiumRequired()\"> {{'premium' | i18n}} </a> </h2> <div class=\"ml-auto d-flex\"> <button class=\"btn btn-sm btn-outline-primary ml-3\" type=\"button\" (click)=\"invite()\" [disabled]=\"!canAccessPremium\"> <i aria-hidden=\"true\" class=\"fa fa-plus fa-fw\"></i> {{'addEmergencyContact' |i18n}} </button> </div> </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\"> <tbody> <tr *ngFor=\"let c of trustedContacts; let i = index\"> <td width=\"30\"> <app-avatar [data]=\"c.name || c.email\" [email]=\"c.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" appStopClick (click)=\"edit(c)\">{{c.email}}</a> <span class=\"badge badge-secondary\" *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\">{{'accepted' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\">{{'emergencyAccessRecoveryInitiated' | i18n}}</span> <span class=\"badge badge-success\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{'emergencyAccessRecoveryApproved' | i18n}}</span> <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.View\">{{'view' | i18n}}</span> <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.Takeover\">{{'takeover' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{c.name}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"reinvite(c)\" *ngIf=\"c.status === emergencyAccessStatusType.Invited\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'resendInvitation' | i18n}} </a> <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"confirm(c)\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirm' | i18n}} </a> <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"approve(c)\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'approve' | i18n}} </a> <a class=\"dropdown-item text-warning\" href=\"#\" appStopClick (click)=\"reject(c)\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated || c.status === emergencyAccessStatusType.RecoveryApproved\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'reject' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(c)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <p *ngIf=\"!trustedContacts || !trustedContacts.length\">{{'noTrustedContacts' | i18n}}</p> <div class=\"page-header spaced-header\"> <h2>{{'designatedEmergencyContacts' | i18n}}</h2> </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\"> <tbody> <tr *ngFor=\"let c of grantedContacts; let i = index\"> <td width=\"30\"> <app-avatar [data]=\"c.name || c.email\" [email]=\"c.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <span>{{c.email}}</span> <span class=\"badge badge-secondary\" *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\">{{'accepted' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\">{{'emergencyAccessRecoveryInitiated' | i18n}}</span> <span class=\"badge badge-success\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{'emergencyAccessRecoveryApproved' | i18n}}</span> <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.View\">{{'view' | i18n}}</span> <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.Takeover\">{{'takeover' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{c.name}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"requestAccess(c)\" *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'requestAccess' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"takeover(c)\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved && c.type === emergencyAccessType.Takeover\"> <i class=\"fa fa-fw fa-key\" aria-hidden=\"true\"></i> {{'takeover' | i18n}} </a> <a class=\"dropdown-item\" [routerLink]=\"c.id\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved && c.type === emergencyAccessType.View\"> <i class=\"fa fa-fw fa-eye\" aria-hidden=\"true\"></i> {{'view' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(c)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <p *ngIf=\"!grantedContacts || !grantedContacts.length\">{{'noGrantedAccess' | i18n}}</p> <ng-template #addEdit></ng-template> <ng-template #takeoverTemplate></ng-template> <ng-template #confirmTemplate></ng-template> ","export enum EmergencyAccessType\n{\n    View = 0,\n    Takeover = 1,\n}\n","import { EmergencyAccessStatusType } from '../../enums/emergencyAccessStatusType';\nimport { EmergencyAccessType } from '../../enums/emergencyAccessType';\nimport { KdfType } from '../../enums/kdfType';\nimport { BaseResponse } from './baseResponse';\nimport { CipherResponse } from './cipherResponse';\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n    id: string;\n    granteeId: string;\n    name: string;\n    email: string;\n    type: EmergencyAccessType;\n    status: EmergencyAccessStatusType;\n    waitTimeDays: number;\n    creationDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.granteeId = this.getResponseProperty('GranteeId');\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.waitTimeDays = this.getResponseProperty('WaitTimeDays');\n        this.creationDate = this.getResponseProperty('CreationDate');\n    }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n    id: string;\n    grantorId: string;\n    name: string;\n    email: string;\n    type: EmergencyAccessType;\n    status: EmergencyAccessStatusType;\n    waitTimeDays: number;\n    creationDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.grantorId = this.getResponseProperty('GrantorId');\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.waitTimeDays = this.getResponseProperty('WaitTimeDays');\n        this.creationDate = this.getResponseProperty('CreationDate');\n    }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n    keyEncrypted: string;\n    kdf: KdfType;\n    kdfIterations: number;\n\n    constructor(response: any) {\n        super(response);\n\n        this.keyEncrypted = this.getResponseProperty('KeyEncrypted');\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n    }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n    keyEncrypted: string;\n    ciphers: CipherResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n\n        this.keyEncrypted = this.getResponseProperty('KeyEncrypted');\n\n        const ciphers = this.getResponseProperty('Ciphers');\n        if (ciphers != null) {\n            this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { EmergencyAccessType } from 'jslib-common/enums/emergencyAccessType';\nimport { EmergencyAccessInviteRequest } from 'jslib-common/models/request/emergencyAccessInviteRequest';\nimport { EmergencyAccessUpdateRequest } from 'jslib-common/models/request/emergencyAccessUpdateRequest';\n\n@Component({\n    selector: 'emergency-access-add-edit',\n    templateUrl: 'emergency-access-add-edit.component.html',\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() emergencyAccessId: string;\n    @Output() onSaved = new EventEmitter();\n    @Output() onDeleted = new EventEmitter();\n\n    loading = true;\n    readOnly: boolean = false;\n    editMode: boolean = false;\n    title: string;\n    email: string;\n    type: EmergencyAccessType = EmergencyAccessType.View;\n\n    formPromise: Promise<any>;\n\n    emergencyAccessType = EmergencyAccessType;\n    waitTimes: { name: string; value: number; }[];\n    waitTime: number;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.emergencyAccessId != null;\n\n        this.waitTimes = [\n            { name: this.i18nService.t('oneDay'), value: 1 },\n            { name: this.i18nService.t('days', '2'), value: 2 },\n            { name: this.i18nService.t('days', '7'), value: 7 },\n            { name: this.i18nService.t('days', '14'), value: 14 },\n            { name: this.i18nService.t('days', '30'), value: 30 },\n            { name: this.i18nService.t('days', '90'), value: 90 },\n        ];\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editEmergencyContact');\n            try {\n                const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n                this.type = emergencyAccess.type;\n                this.waitTime = emergencyAccess.waitTimeDays;\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('inviteEmergencyContact');\n            this.waitTime = this.waitTimes[2].value;\n        }\n\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            if (this.editMode) {\n                const request = new EmergencyAccessUpdateRequest();\n                request.type = this.type;\n                request.waitTimeDays = this.waitTime;\n\n                this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n            } else {\n                const request = new EmergencyAccessInviteRequest();\n                request.email = this.email.trim();\n                request.type = this.type;\n                request.waitTimeDays = this.waitTime;\n\n                this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n            }\n\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedUserId' : 'invitedUsers', this.name));\n            this.onSaved.emit();\n        } catch { }\n    }\n\n    async delete() {\n        this.onDeleted.emit();\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAddEditTitle\"> <span class=\"badge badge-primary\" *ngIf=\"readOnly\">{{'premium' | i18n}}</span> {{title}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <ng-container *ngIf=\"!editMode\"> <p>{{'inviteEmergencyContactDesc' | i18n}}</p> <div class=\"form-group mb-4\"> <label for=\"email\">{{'email' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required> </div> </ng-container> <h3> {{'userAccess' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/emergency-access/#user-access\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </h3> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"emergencyTypeView\" [value]=\"emergencyAccessType.View\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"emergencyTypeView\"> {{'view' | i18n}} <small>{{'viewDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"emergencyTypeTakeover\" [value]=\"emergencyAccessType.Takeover\" [(ngModel)]=\"type\" [disabled]=\"readOnly\"> <label class=\"form-check-label\" for=\"emergencyTypeTakeover\"> {{'takeover' | i18n}} <small>{{'takeoverDesc' | i18n}}</small> </label> </div> <div class=\"form-group col-6 mt-4\"> <label for=\"waitTime\">{{'waitTime' | i18n}}</label> <select id=\"waitTime\" name=\"waitTime\" [(ngModel)]=\"waitTime\" class=\"form-control\" [disabled]=\"readOnly\"> <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{o.name}}</option> </select> <small class=\"text-muted\">{{'waitTimeDesc' | i18n}}</small> </div> </div> <div class=\"modal-footer\"> <button #submitBtn type=\"submit\" class=\"btn btn-primary\" [disabled]=\"loading || submitBtn.loading || readOnly\" [appApiAction]=\"formPromise\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\" *ngIf=\"loading || submitBtn.loading\"></i> <span *ngIf=\"!loading && !submitBtn.loading\">{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'emergency-access-confirm',\n    templateUrl: 'emergency-access-confirm.component.html',\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n    @Input() name: string;\n    @Input() userId: string;\n    @Input() emergencyAccessId: string;\n    @Input() formPromise: Promise<any>;\n    @Output() onConfirmed = new EventEmitter();\n\n    dontAskAgain = false;\n    loading = true;\n    fingerprint: string;\n\n    constructor(private apiService: ApiService, private cryptoService: CryptoService,\n        private storageService: StorageService) { }\n\n    async ngOnInit() {\n        try {\n            const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n            if (publicKeyResponse != null) {\n                const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n                const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n                if (fingerprint != null) {\n                    this.fingerprint = fingerprint.join('-');\n                }\n            }\n        } catch { }\n        this.loading = false;\n    }\n\n    async submit() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.dontAskAgain) {\n            await this.storageService.save(ConstantsService.autoConfirmFingerprints, true);\n        }\n\n        try {\n            this.onConfirmed.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"confirmUserTitle\"> {{'confirmUser' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p> {{'fingerprintEnsureIntegrityVerify' | i18n}} <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}}</a> </p> <p><code>{{fingerprint}}</code></p> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"dontAskAgain\" name=\"DontAskAgain\" [(ngModel)]=\"dontAskAgain\"> <label class=\"form-check-label\" for=\"dontAskAgain\"> {{'dontAskFingerprintAgain' | i18n}} </label> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'confirm' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { KdfType } from 'jslib-common/enums/kdfType';\nimport { PolicyData } from 'jslib-common/models/data/policyData';\nimport { Policy } from 'jslib-common/models/domain/policy';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\nimport { EmergencyAccessPasswordRequest } from 'jslib-common/models/request/emergencyAccessPasswordRequest';\nimport { PolicyResponse } from 'jslib-common/models/response/policyResponse';\n\nimport { ChangePasswordComponent } from 'jslib-angular/components/change-password.component';\n\n@Component({\n    selector: 'emergency-access-takeover',\n    templateUrl: 'emergency-access-takeover.component.html',\n})\nexport class EmergencyAccessTakeoverComponent extends ChangePasswordComponent implements OnInit {\n    @Output() onDone = new EventEmitter();\n    @Input() emergencyAccessId: string;\n    @Input() name: string;\n    @Input() email: string;\n    @Input() kdf: KdfType;\n    @Input() kdfIterations: number;\n\n    formPromise: Promise<any>;\n\n    constructor(i18nService: I18nService, cryptoService: CryptoService,\n        messagingService: MessagingService, userService: UserService,\n        passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService,\n        private apiService: ApiService, private toasterService: ToasterService) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    async ngOnInit() {\n        const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n        if (response.data != null && response.data.length > 0) {\n            const policies = response.data.map((policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse)));\n            this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(policies);\n        }\n     }\n\n    async submit() {\n        if (!await this.strongPassword()) {\n            return;\n        }\n\n        const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(this.emergencyAccessId);\n\n        const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n        const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n        if (oldEncKey == null) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'), this.i18nService.t('unexpectedError'));\n            return;\n        }\n\n        const key = await this.cryptoService.makeKey(this.masterPassword, this.email, takeoverResponse.kdf, takeoverResponse.kdfIterations);\n        const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n        const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n        const request = new EmergencyAccessPasswordRequest();\n        request.newMasterPasswordHash = masterPasswordHash;\n        request.key = encKey[1].encryptedString;\n\n        this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n        try {\n            this.onDone.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAddEditTitle\"> {{'takeover' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout> <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\"> {{'masterPasswordPolicyInEffect' | i18n}} <ul class=\"mb-0\"> <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\"> {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}} </li> <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\"> {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}} </li> <li *ngIf=\"enforcedPolicyOptions?.requireUpper\"> {{'policyInEffectUppercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireLower\"> {{'policyInEffectLowercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\"> {{'policyInEffectNumbers' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\"> {{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li> </ul> </app-callout> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"masterPassword\">{{'newMasterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"NewMasterPasswordHash\" class=\"form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim autocomplete=\"new-password\"> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"></app-password-strength> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'confirmNewMasterPass' | i18n}}</label> <input id=\"masterPasswordRetype\" type=\"password\" name=\"MasterPasswordRetype\" class=\"form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim autocomplete=\"new-password\"> </div> </div> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import * as jq from 'jquery';\nimport Swal from 'sweetalert2';\n\nimport {\n    BodyOutputType,\n    Toast,\n    ToasterConfig,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n    NavigationEnd,\n    Router,\n} from '@angular/router';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { NotificationsService } from 'jslib-common/abstractions/notifications.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { SettingsService } from 'jslib-common/abstractions/settings.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { RouterService } from './services/router.service';\n\nconst BroadcasterSubscriptionId = 'AppComponent';\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n})\nexport class AppComponent implements OnDestroy, OnInit {\n    toasterConfig: ToasterConfig = new ToasterConfig({\n        showCloseButton: true,\n        mouseoverTimerStop: true,\n        animation: 'flyRight',\n        limit: 5,\n    });\n\n    private lastActivity: number = null;\n    private idleTimer: number = null;\n    private isIdle = false;\n\n    constructor(\n        private broadcasterService: BroadcasterService, private userService: UserService,\n        private tokenService: TokenService, private folderService: FolderService,\n        private settingsService: SettingsService, private syncService: SyncService,\n        private passwordGenerationService: PasswordGenerationService, private cipherService: CipherService,\n        private authService: AuthService, private router: Router,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private ngZone: NgZone,\n        private vaultTimeoutService: VaultTimeoutService, private storageService: StorageService,\n        private cryptoService: CryptoService, private collectionService: CollectionService,\n        private sanitizer: DomSanitizer, private searchService: SearchService,\n        private notificationsService: NotificationsService, private routerService: RouterService,\n        private stateService: StateService, private eventService: EventService,\n        private policyService: PolicyService) { }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            window.onmousemove = () => this.recordActivity();\n            window.onmousedown = () => this.recordActivity();\n            window.ontouchstart = () => this.recordActivity();\n            window.onclick = () => this.recordActivity();\n            window.onscroll = () => this.recordActivity();\n            window.onkeypress = () => this.recordActivity();\n        });\n\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'loggedIn':\n                    case 'loggedOut':\n                    case 'unlocked':\n                        this.notificationsService.updateConnection(false);\n                        break;\n                    case 'authBlocked':\n                        this.router.navigate(['/']);\n                        break;\n                    case 'logout':\n                        this.logOut(!!message.expired);\n                        break;\n                    case 'lockVault':\n                        await this.vaultTimeoutService.lock();\n                        break;\n                    case 'locked':\n                        this.notificationsService.updateConnection(false);\n                        this.router.navigate(['lock']);\n                        break;\n                    case 'lockedUrl':\n                        window.setTimeout(() => this.routerService.setPreviousUrl(message.url), 500);\n                        break;\n                    case 'syncStarted':\n                        break;\n                    case 'syncCompleted':\n                        break;\n                    case 'upgradeOrganization':\n                        const upgradeConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('upgradeOrganizationDesc'), this.i18nService.t('upgradeOrganization'),\n                            this.i18nService.t('upgradeOrganization'), this.i18nService.t('cancel'));\n                        if (upgradeConfirmed) {\n                            this.router.navigate(['organizations', message.organizationId, 'settings', 'billing']);\n                        }\n                        break;\n                    case 'premiumRequired':\n                        const premiumConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'),\n                            this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n                        if (premiumConfirmed) {\n                            this.router.navigate(['settings/premium']);\n                        }\n                        break;\n                    case 'emailVerificationRequired':\n                        const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('emailVerificationRequiredDesc'),\n                            this.i18nService.t('emailVerificationRequired'),\n                            this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n                        if (emailVerificationConfirmed) {\n                            this.platformUtilsService.launchUri('https://bitwarden.com/help/article/create-bitwarden-account/');\n                        }\n                        break;\n                    case 'showToast':\n                        this.showToast(message);\n                        break;\n                    case 'setFullWidth':\n                        this.setFullWidth();\n                        break;\n                    default:\n                        break;\n                }\n            });\n        });\n\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                const modals = Array.from(document.querySelectorAll('.modal'));\n                for (const modal of modals) {\n                    (jq(modal) as any).modal('hide');\n                }\n\n                if (document.querySelector('.swal-modal') != null) {\n                    Swal.close(undefined);\n                }\n            }\n        });\n\n        this.setFullWidth();\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    private async logOut(expired: boolean) {\n        await this.eventService.uploadEvents();\n        const userId = await this.userService.getUserId();\n\n        await Promise.all([\n            this.eventService.clearEvents(),\n            this.syncService.setLastSync(new Date(0)),\n            this.tokenService.clearToken(),\n            this.cryptoService.clearKeys(),\n            this.userService.clear(),\n            this.settingsService.clear(userId),\n            this.cipherService.clear(userId),\n            this.folderService.clear(userId),\n            this.collectionService.clear(userId),\n            this.policyService.clear(userId),\n            this.passwordGenerationService.clear(),\n            this.stateService.purge(),\n        ]);\n\n        this.searchService.clearIndex();\n        this.authService.logOut(async () => {\n            if (expired) {\n                this.toasterService.popAsync('warning', this.i18nService.t('loggedOut'),\n                    this.i18nService.t('loginExpired'));\n            }\n\n            Swal.close();\n            this.router.navigate(['/']);\n        });\n    }\n\n    private async recordActivity() {\n        const now = (new Date()).getTime();\n        if (this.lastActivity != null && now - this.lastActivity < 250) {\n            return;\n        }\n\n        this.lastActivity = now;\n        this.storageService.save(ConstantsService.lastActiveKey, now);\n\n        // Idle states\n        if (this.isIdle) {\n            this.isIdle = false;\n            this.idleStateChanged();\n        }\n        if (this.idleTimer != null) {\n            window.clearTimeout(this.idleTimer);\n            this.idleTimer = null;\n        }\n        this.idleTimer = window.setTimeout(() => {\n            if (!this.isIdle) {\n                this.isIdle = true;\n                this.idleStateChanged();\n            }\n        }, IdleTimeout);\n    }\n\n    private showToast(msg: any) {\n        const toast: Toast = {\n            type: msg.type,\n            title: msg.title,\n        };\n        if (typeof (msg.text) === 'string') {\n            toast.body = msg.text;\n        } else if (msg.text.length === 1) {\n            toast.body = msg.text[0];\n        } else {\n            let message = '';\n            msg.text.forEach((t: string) =>\n                message += ('<p>' + this.sanitizer.sanitize(SecurityContext.HTML, t) + '</p>'));\n            toast.body = message;\n            toast.bodyOutputType = BodyOutputType.TrustedHtml;\n        }\n        if (msg.options != null) {\n            if (msg.options.trustedHtml === true) {\n                toast.bodyOutputType = BodyOutputType.TrustedHtml;\n            }\n            if (msg.options.timeout != null && msg.options.timeout > 0) {\n                toast.timeout = msg.options.timeout;\n            }\n        }\n        this.toasterService.popAsync(toast);\n    }\n\n    private idleStateChanged() {\n        if (this.isIdle) {\n            this.notificationsService.disconnectFromInactivity();\n        } else {\n            this.notificationsService.reconnectFromActivity();\n        }\n    }\n\n    private async setFullWidth() {\n        const enableFullWidth = await this.storageService.get<boolean>('enableFullWidth');\n        if (enableFullWidth) {\n            document.body.classList.add('full-width');\n        } else {\n            document.body.classList.remove('full-width');\n        }\n    }\n}\n","<toaster-container [toasterconfig]=\"toasterConfig\" aria-live=\"polite\"></toaster-container> <router-outlet></router-outlet> ","import { DeviceType } from '../enums/deviceType';\nimport { PolicyType } from '../enums/policyType';\n\nimport { ApiService as ApiServiceAbstraction } from '../abstractions/api.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { TokenService } from '../abstractions/token.service';\n\nimport { EnvironmentUrls } from '../models/domain/environmentUrls';\n\nimport { AttachmentRequest } from '../models/request/attachmentRequest';\nimport { BitPayInvoiceRequest } from '../models/request/bitPayInvoiceRequest';\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { DeleteRecoverRequest } from '../models/request/deleteRecoverRequest';\nimport { EmailRequest } from '../models/request/emailRequest';\nimport { EmailTokenRequest } from '../models/request/emailTokenRequest';\nimport { EmergencyAccessAcceptRequest } from '../models/request/emergencyAccessAcceptRequest';\nimport { EmergencyAccessConfirmRequest } from '../models/request/emergencyAccessConfirmRequest';\nimport { EmergencyAccessInviteRequest } from '../models/request/emergencyAccessInviteRequest';\nimport { EmergencyAccessPasswordRequest } from '../models/request/emergencyAccessPasswordRequest';\nimport { EmergencyAccessUpdateRequest } from '../models/request/emergencyAccessUpdateRequest';\nimport { EventRequest } from '../models/request/eventRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { GroupRequest } from '../models/request/groupRequest';\nimport { IapCheckRequest } from '../models/request/iapCheckRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportDirectoryRequest } from '../models/request/importDirectoryRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KdfRequest } from '../models/request/kdfRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { OrganizationCreateRequest } from '../models/request/organizationCreateRequest';\nimport { OrganizationImportRequest } from '../models/request/organizationImportRequest';\nimport { OrganizationKeysRequest } from '../models/request/organizationKeysRequest';\nimport { OrganizationTaxInfoUpdateRequest } from '../models/request/organizationTaxInfoUpdateRequest';\nimport { OrganizationUpdateRequest } from '../models/request/organizationUpdateRequest';\nimport { OrganizationUpgradeRequest } from '../models/request/organizationUpgradeRequest';\nimport { OrganizationUserAcceptRequest } from '../models/request/organizationUserAcceptRequest';\nimport { OrganizationUserBulkConfirmRequest } from '../models/request/organizationUserBulkConfirmRequest';\nimport { OrganizationUserBulkRequest } from '../models/request/organizationUserBulkRequest';\nimport { OrganizationUserConfirmRequest } from '../models/request/organizationUserConfirmRequest';\nimport { OrganizationUserInviteRequest } from '../models/request/organizationUserInviteRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from '../models/request/organizationUserResetPasswordEnrollmentRequest';\nimport { OrganizationUserResetPasswordRequest } from '../models/request/organizationUserResetPasswordRequest';\nimport { OrganizationUserUpdateGroupsRequest } from '../models/request/organizationUserUpdateGroupsRequest';\nimport { OrganizationUserUpdateRequest } from '../models/request/organizationUserUpdateRequest';\nimport { PasswordHintRequest } from '../models/request/passwordHintRequest';\nimport { PasswordRequest } from '../models/request/passwordRequest';\nimport { PasswordVerificationRequest } from '../models/request/passwordVerificationRequest';\nimport { PaymentRequest } from '../models/request/paymentRequest';\nimport { PolicyRequest } from '../models/request/policyRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { RegisterRequest } from '../models/request/registerRequest';\nimport { SeatRequest } from '../models/request/seatRequest';\nimport { SelectionReadOnlyRequest } from '../models/request/selectionReadOnlyRequest';\nimport { SendAccessRequest } from '../models/request/sendAccessRequest';\nimport { SendRequest } from '../models/request/sendRequest';\nimport { SetPasswordRequest } from '../models/request/setPasswordRequest';\nimport { StorageRequest } from '../models/request/storageRequest';\nimport { TaxInfoUpdateRequest } from '../models/request/taxInfoUpdateRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\nimport { TwoFactorEmailRequest } from '../models/request/twoFactorEmailRequest';\nimport { TwoFactorProviderRequest } from '../models/request/twoFactorProviderRequest';\nimport { TwoFactorRecoveryRequest } from '../models/request/twoFactorRecoveryRequest';\nimport { UpdateDomainsRequest } from '../models/request/updateDomainsRequest';\nimport { UpdateKeyRequest } from '../models/request/updateKeyRequest';\nimport { UpdateProfileRequest } from '../models/request/updateProfileRequest';\nimport { UpdateTwoFactorAuthenticatorRequest } from '../models/request/updateTwoFactorAuthenticatorRequest';\nimport { UpdateTwoFactorDuoRequest } from '../models/request/updateTwoFactorDuoRequest';\nimport { UpdateTwoFactorEmailRequest } from '../models/request/updateTwoFactorEmailRequest';\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from '../models/request/updateTwoFactorWebAuthnDeleteRequest';\nimport { UpdateTwoFactorWebAuthnRequest } from '../models/request/updateTwoFactorWebAuthnRequest';\nimport { UpdateTwoFactorYubioOtpRequest } from '../models/request/updateTwoFactorYubioOtpRequest';\nimport { VerifyBankRequest } from '../models/request/verifyBankRequest';\nimport { VerifyDeleteRecoverRequest } from '../models/request/verifyDeleteRecoverRequest';\nimport { VerifyEmailRequest } from '../models/request/verifyEmailRequest';\n\nimport { Utils } from '../misc/utils';\nimport { ApiKeyResponse } from '../models/response/apiKeyResponse';\nimport { AttachmentResponse } from '../models/response/attachmentResponse';\nimport { AttachmentUploadDataResponse } from '../models/response/attachmentUploadDataResponse';\nimport { BillingResponse } from '../models/response/billingResponse';\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport {\n    CollectionGroupDetailsResponse,\n    CollectionResponse,\n} from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport {\n    EmergencyAccessGranteeDetailsResponse,\n    EmergencyAccessGrantorDetailsResponse,\n    EmergencyAccessTakeoverResponse,\n    EmergencyAccessViewResponse\n} from '../models/response/emergencyAccessResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { EventResponse } from '../models/response/eventResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    GroupDetailsResponse,\n    GroupResponse,\n} from '../models/response/groupResponse';\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\nimport { ListResponse } from '../models/response/listResponse';\nimport { OrganizationKeysResponse } from '../models/response/organizationKeysResponse';\nimport { OrganizationResponse } from '../models/response/organizationResponse';\nimport { OrganizationSubscriptionResponse } from '../models/response/organizationSubscriptionResponse';\nimport { OrganizationUserBulkPublicKeyResponse } from '../models/response/organizationUserBulkPublicKeyResponse';\nimport { OrganizationUserBulkResponse } from '../models/response/organizationUserBulkResponse';\nimport {\n    OrganizationUserDetailsResponse,\n    OrganizationUserResetPasswordDetailsReponse,\n    OrganizationUserUserDetailsResponse,\n} from '../models/response/organizationUserResponse';\nimport { PaymentResponse } from '../models/response/paymentResponse';\nimport { PlanResponse } from '../models/response/planResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\nimport { PreloginResponse } from '../models/response/preloginResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { SelectionReadOnlyResponse } from '../models/response/selectionReadOnlyResponse';\nimport { SendAccessResponse } from '../models/response/sendAccessResponse';\nimport { SendFileDownloadDataResponse } from '../models/response/sendFileDownloadDataResponse';\nimport { SendFileUploadDataResponse } from '../models/response/sendFileUploadDataResponse';\nimport { SendResponse } from '../models/response/sendResponse';\nimport { SubscriptionResponse } from '../models/response/subscriptionResponse';\nimport { SyncResponse } from '../models/response/syncResponse';\nimport { TaxInfoResponse } from '../models/response/taxInfoResponse';\nimport { TaxRateResponse } from '../models/response/taxRateResponse';\nimport { TwoFactorAuthenticatorResponse } from '../models/response/twoFactorAuthenticatorResponse';\nimport { TwoFactorDuoResponse } from '../models/response/twoFactorDuoResponse';\nimport { TwoFactorEmailResponse } from '../models/response/twoFactorEmailResponse';\nimport { TwoFactorProviderResponse } from '../models/response/twoFactorProviderResponse';\nimport { TwoFactorRecoverResponse } from '../models/response/twoFactorRescoverResponse';\nimport { TwoFactorWebAuthnResponse } from '../models/response/twoFactorWebAuthnResponse';\nimport { ChallengeResponse } from '../models/response/twoFactorWebAuthnResponse';\nimport { TwoFactorYubiKeyResponse } from '../models/response/twoFactorYubiKeyResponse';\nimport { UserKeyResponse } from '../models/response/userKeyResponse';\n\nimport { SendAccessView } from '../models/view/sendAccessView';\n\nexport class ApiService implements ApiServiceAbstraction {\n    urlsSet: boolean = false;\n    apiBaseUrl: string;\n    identityBaseUrl: string;\n    eventsBaseUrl: string;\n\n    private device: DeviceType;\n    private deviceType: string;\n    private isWebClient = false;\n    private isDesktopClient = false;\n    private usingBaseUrl = false;\n\n    constructor(private tokenService: TokenService, private platformUtilsService: PlatformUtilsService,\n        private logoutCallback: (expired: boolean) => Promise<void>, private customUserAgent: string = null) {\n        this.device = platformUtilsService.getDevice();\n        this.deviceType = this.device.toString();\n        this.isWebClient = this.device === DeviceType.IEBrowser || this.device === DeviceType.ChromeBrowser ||\n            this.device === DeviceType.EdgeBrowser || this.device === DeviceType.FirefoxBrowser ||\n            this.device === DeviceType.OperaBrowser || this.device === DeviceType.SafariBrowser ||\n            this.device === DeviceType.UnknownBrowser || this.device === DeviceType.VivaldiBrowser;\n        this.isDesktopClient = this.device === DeviceType.WindowsDesktop || this.device === DeviceType.MacOsDesktop ||\n            this.device === DeviceType.LinuxDesktop;\n    }\n\n    setUrls(urls: EnvironmentUrls): void {\n        this.urlsSet = true;\n\n        if (urls.base != null) {\n            this.usingBaseUrl = true;\n            this.apiBaseUrl = urls.base + '/api';\n            this.identityBaseUrl = urls.base + '/identity';\n            this.eventsBaseUrl = urls.base + '/events';\n            return;\n        }\n\n        this.apiBaseUrl = urls.api;\n        this.identityBaseUrl = urls.identity;\n        this.eventsBaseUrl = urls.events;\n\n        // Production\n        if (this.apiBaseUrl == null) {\n            this.apiBaseUrl = 'https://api.bitwarden.com';\n        }\n        if (this.identityBaseUrl == null) {\n            this.identityBaseUrl = 'https://identity.bitwarden.com';\n        }\n        if (this.eventsBaseUrl == null) {\n            this.eventsBaseUrl = 'https://events.bitwarden.com';\n        }\n    }\n\n    // Auth APIs\n\n    async postIdentityToken(request: TokenRequest): Promise<IdentityTokenResponse | IdentityTwoFactorResponse> {\n        const headers = new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n            'Accept': 'application/json',\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n        request.alterIdentityTokenHeaders(headers);\n        const response = await this.fetch(new Request(this.identityBaseUrl + '/connect/token', {\n            body: this.qsStringify(request.toIdentityToken(request.clientId ?? this.platformUtilsService.identityClientId)),\n            credentials: this.getCredentials(),\n            cache: 'no-store',\n            headers: headers,\n            method: 'POST',\n        }));\n\n        let responseJson: any = null;\n        if (this.isJsonResponse(response)) {\n            responseJson = await response.json();\n        }\n\n        if (responseJson != null) {\n            if (response.status === 200) {\n                return new IdentityTokenResponse(responseJson);\n            } else if (response.status === 400 && responseJson.TwoFactorProviders2 &&\n                Object.keys(responseJson.TwoFactorProviders2).length) {\n                await this.tokenService.clearTwoFactorToken(request.email);\n                return new IdentityTwoFactorResponse(responseJson);\n            }\n        }\n\n        return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n    }\n\n    async refreshIdentityToken(): Promise<any> {\n        try {\n            await this.doRefreshToken();\n        } catch (e) {\n            return Promise.reject(null);\n        }\n    }\n\n    // Account APIs\n\n    async getProfile(): Promise<ProfileResponse> {\n        const r = await this.send('GET', '/accounts/profile', null, true, true);\n        return new ProfileResponse(r);\n    }\n\n    async getUserBilling(): Promise<BillingResponse> {\n        const r = await this.send('GET', '/accounts/billing', null, true, true);\n        return new BillingResponse(r);\n    }\n\n    async getUserSubscription(): Promise<SubscriptionResponse> {\n        const r = await this.send('GET', '/accounts/subscription', null, true, true);\n        return new SubscriptionResponse(r);\n    }\n\n    async getTaxInfo(): Promise<TaxInfoResponse> {\n        const r = await this.send('GET', '/accounts/tax', null, true, true);\n        return new TaxInfoResponse(r);\n    }\n\n    async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n        const r = await this.send('PUT', '/accounts/profile', request, true, true);\n        return new ProfileResponse(r);\n    }\n\n    putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n        return this.send('PUT', '/accounts/tax', request, true, false);\n    }\n\n    async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n        const r = await this.send('POST', '/accounts/prelogin', request, false, true);\n        return new PreloginResponse(r);\n    }\n\n    postEmailToken(request: EmailTokenRequest): Promise<any> {\n        return this.send('POST', '/accounts/email-token', request, true, false);\n    }\n\n    postEmail(request: EmailRequest): Promise<any> {\n        return this.send('POST', '/accounts/email', request, true, false);\n    }\n\n    postPassword(request: PasswordRequest): Promise<any> {\n        return this.send('POST', '/accounts/password', request, true, false);\n    }\n\n    setPassword(request: SetPasswordRequest): Promise<any> {\n        return this.send('POST', '/accounts/set-password', request, true, false);\n    }\n\n    postSecurityStamp(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('POST', '/accounts/security-stamp', request, true, false);\n    }\n\n    deleteAccount(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('DELETE', '/accounts', request, true, false);\n    }\n\n    async getAccountRevisionDate(): Promise<number> {\n        const r = await this.send('GET', '/accounts/revision-date', null, true, true);\n        return r as number;\n    }\n\n    postPasswordHint(request: PasswordHintRequest): Promise<any> {\n        return this.send('POST', '/accounts/password-hint', request, false, false);\n    }\n\n    postRegister(request: RegisterRequest): Promise<any> {\n        return this.send('POST', '/accounts/register', request, false, false);\n    }\n\n    async postPremium(data: FormData): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/accounts/premium', data, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postIapCheck(request: IapCheckRequest): Promise<any> {\n        return this.send('POST', '/accounts/iap-check', request, true, false);\n    }\n\n    postReinstatePremium(): Promise<any> {\n        return this.send('POST', '/accounts/reinstate-premium', null, true, false);\n    }\n\n    postCancelPremium(): Promise<any> {\n        return this.send('POST', '/accounts/cancel-premium', null, true, false);\n    }\n\n    async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/accounts/storage', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    postAccountPayment(request: PaymentRequest): Promise<any> {\n        return this.send('POST', '/accounts/payment', request, true, false);\n    }\n\n    postAccountLicense(data: FormData): Promise<any> {\n        return this.send('POST', '/accounts/license', data, true, false);\n    }\n\n    postAccountKeys(request: KeysRequest): Promise<any> {\n        return this.send('POST', '/accounts/keys', request, true, false);\n    }\n\n    postAccountKey(request: UpdateKeyRequest): Promise<any> {\n        return this.send('POST', '/accounts/key', request, true, false);\n    }\n\n    postAccountVerifyEmail(): Promise<any> {\n        return this.send('POST', '/accounts/verify-email', null, true, false);\n    }\n\n    postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n        return this.send('POST', '/accounts/verify-email-token', request, false, false);\n    }\n\n    postAccountVerifyPassword(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('POST', '/accounts/verify-password', request, true, false);\n    }\n\n    postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n        return this.send('POST', '/accounts/delete-recover', request, false, false);\n    }\n\n    postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n        return this.send('POST', '/accounts/delete-recover-token', request, false, false);\n    }\n\n    postAccountKdf(request: KdfRequest): Promise<any> {\n        return this.send('POST', '/accounts/kdf', request, true, false);\n    }\n\n    async getEnterprisePortalSignInToken(): Promise<string> {\n        const r = await this.send('GET', '/accounts/enterprise-portal-signin-token', null, true, true);\n        return r as string;\n    }\n\n    async deleteSsoUser(organizationId: string): Promise<any> {\n        return this.send('DELETE', '/accounts/sso/' + organizationId, null, true, false);\n    }\n\n    async getSsoUserIdentifier(): Promise<string> {\n        return this.send('GET', '/accounts/sso/user-identifier', null, true, true);\n    }\n\n    async postUserApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/accounts/api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    async postUserRotateApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/accounts/rotate-api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    // Folder APIs\n\n    async getFolder(id: string): Promise<FolderResponse> {\n        const r = await this.send('GET', '/folders/' + id, null, true, true);\n        return new FolderResponse(r);\n    }\n\n    async postFolder(request: FolderRequest): Promise<FolderResponse> {\n        const r = await this.send('POST', '/folders', request, true, true);\n        return new FolderResponse(r);\n    }\n\n    async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n        const r = await this.send('PUT', '/folders/' + id, request, true, true);\n        return new FolderResponse(r);\n    }\n\n    deleteFolder(id: string): Promise<any> {\n        return this.send('DELETE', '/folders/' + id, null, true, false);\n    }\n\n    // Send APIs\n\n    async getSend(id: string): Promise<SendResponse> {\n        const r = await this.send('GET', '/sends/' + id, null, true, true);\n        return new SendResponse(r);\n    }\n\n    async postSendAccess(id: string, request: SendAccessRequest, apiUrl?: string): Promise<SendAccessResponse> {\n        const addSendIdHeader = (headers: Headers) => {\n            headers.set('Send-Id', id);\n        };\n        const r = await this.send('POST', '/sends/access/' + id, request, false, true, apiUrl, addSendIdHeader);\n        return new SendAccessResponse(r);\n    }\n\n    async getSendFileDownloadData(send: SendAccessView, request: SendAccessRequest, apiUrl?: string): Promise<SendFileDownloadDataResponse> {\n        const addSendIdHeader = (headers: Headers) => {\n            headers.set('Send-Id', send.id);\n        };\n        const r = await this.send('POST', '/sends/' + send.id + '/access/file/' + send.file.id, request, false, true,\n            apiUrl, addSendIdHeader);\n        return new SendFileDownloadDataResponse(r);\n    }\n\n    async getSends(): Promise<ListResponse<SendResponse>> {\n        const r = await this.send('GET', '/sends', null, true, true);\n        return new ListResponse(r, SendResponse);\n    }\n\n    async postSend(request: SendRequest): Promise<SendResponse> {\n        const r = await this.send('POST', '/sends', request, true, true);\n        return new SendResponse(r);\n    }\n\n    async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n        const r = await this.send('POST', '/sends/file/v2', request, true, true);\n        return new SendFileUploadDataResponse(r);\n    }\n\n    async renewSendFileUploadUrl(sendId: string, fileId: string): Promise<SendFileUploadDataResponse> {\n        const r = await this.send('GET', '/sends/' + sendId + '/file/' + fileId, null, true, true);\n        return new SendFileUploadDataResponse(r);\n    }\n\n    postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n        return this.send('POST', '/sends/' + sendId + '/file/' + fileId, data, true, false);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n        const r = await this.send('POST', '/sends/file', data, true, true);\n        return new SendResponse(r);\n    }\n\n    async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n        const r = await this.send('PUT', '/sends/' + id, request, true, true);\n        return new SendResponse(r);\n    }\n\n    async putSendRemovePassword(id: string): Promise<SendResponse> {\n        const r = await this.send('PUT', '/sends/' + id + '/remove-password', null, true, true);\n        return new SendResponse(r);\n    }\n\n    deleteSend(id: string): Promise<any> {\n        return this.send('DELETE', '/sends/' + id, null, true, false);\n    }\n\n    // Cipher APIs\n\n    async getCipher(id: string): Promise<CipherResponse> {\n        const r = await this.send('GET', '/ciphers/' + id, null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async getCipherAdmin(id: string): Promise<CipherResponse> {\n        const r = await this.send('GET', '/ciphers/' + id + '/admin', null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n        const r = await this.send('GET', '/ciphers/organization-details?organizationId=' + organizationId,\n            null, true, true);\n        return new ListResponse(r, CipherResponse);\n    }\n\n    async postCipher(request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/create', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/admin', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id, request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/admin', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    deleteCipher(id: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id, null, true, false);\n    }\n\n    deleteCipherAdmin(id: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/admin', null, true, false);\n    }\n\n    deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('DELETE', '/ciphers', request, true, false);\n    }\n\n    deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('DELETE', '/ciphers/admin', request, true, false);\n    }\n\n    putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/move', request, true, false);\n    }\n\n    async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/share', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/share', request, true, false);\n    }\n\n    putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/collections', request, true, false);\n    }\n\n    putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/collections-admin', request, true, false);\n    }\n\n    postPurgeCiphers(request: PasswordVerificationRequest, organizationId: string = null): Promise<any> {\n        let path = '/ciphers/purge';\n        if (organizationId != null) {\n            path += '?organizationId=' + organizationId;\n        }\n        return this.send('POST', path, request, true, false);\n    }\n\n    postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n        return this.send('POST', '/ciphers/import', request, true, false);\n    }\n\n    postImportOrganizationCiphers(organizationId: string, request: ImportOrganizationCiphersRequest): Promise<any> {\n        return this.send('POST', '/ciphers/import-organization?organizationId=' + organizationId, request, true, false);\n    }\n\n    putDeleteCipher(id: string): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/delete', null, true, false);\n    }\n\n    putDeleteCipherAdmin(id: string): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/delete-admin', null, true, false);\n    }\n\n    putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/delete', request, true, false);\n    }\n\n    putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/delete-admin', request, true, false);\n    }\n\n    async putRestoreCipher(id: string): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/restore', null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/restore-admin', null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putRestoreManyCiphers(request: CipherBulkDeleteRequest): Promise<ListResponse<CipherResponse>> {\n        const r = await this.send('PUT', '/ciphers/restore', request, true, true);\n        return new ListResponse<CipherResponse>(r, CipherResponse);\n    }\n\n    // Attachments APIs\n\n    async getAttachmentData(cipherId: string, attachmentId: string, emergencyAccessId?: string): Promise<AttachmentResponse> {\n        const path = (emergencyAccessId != null ?\n            '/emergency-access/' + emergencyAccessId + '/' :\n            '/ciphers/') + cipherId + '/attachment/' + attachmentId;\n        const r = await this.send('GET', path, null, true, true);\n        return new AttachmentResponse(r);\n    }\n\n    async postCipherAttachment(id: string, request: AttachmentRequest): Promise<AttachmentUploadDataResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment/v2', request, true, true);\n        return new AttachmentUploadDataResponse(r);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment', data, true, true);\n        return new CipherResponse(r);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment-admin', data, true, true);\n        return new CipherResponse(r);\n    }\n\n    deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/attachment/' + attachmentId, null, true, false);\n    }\n\n    deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/attachment/' + attachmentId + '/admin', null, true, false);\n    }\n\n    postShareCipherAttachment(id: string, attachmentId: string, data: FormData,\n        organizationId: string): Promise<any> {\n        return this.send('POST', '/ciphers/' + id + '/attachment/' +\n            attachmentId + '/share?organizationId=' + organizationId, data, true, false);\n    }\n\n    async renewAttachmentUploadUrl(id: string, attachmentId: string): Promise<AttachmentUploadDataResponse> {\n        const r = await this.send('GET', '/ciphers/' + id + '/attachment/' + attachmentId + '/renew', null, true, true);\n        return new AttachmentUploadDataResponse(r);\n    }\n\n    postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n        return this.send('POST', '/ciphers/' + id + '/attachment/' + attachmentId, data, true, false);\n    }\n\n    // Collections APIs\n\n    async getCollectionDetails(organizationId: string, id: string): Promise<CollectionGroupDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections/' + id + '/details',\n            null, true, true);\n        return new CollectionGroupDetailsResponse(r);\n    }\n\n    async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n        const r = await this.send('GET', '/collections', null, true, true);\n        return new ListResponse(r, CollectionResponse);\n    }\n\n    async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections', null, true, true);\n        return new ListResponse(r, CollectionResponse);\n    }\n\n    async getCollectionUsers(organizationId: string, id: string): Promise<SelectionReadOnlyResponse[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections/' + id + '/users',\n            null, true, true);\n        return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n    }\n\n    async postCollection(organizationId: string, request: CollectionRequest): Promise<CollectionResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/collections', request, true, true);\n        return new CollectionResponse(r);\n    }\n\n    async putCollection(organizationId: string, id: string, request: CollectionRequest): Promise<CollectionResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/collections/' + id,\n            request, true, true);\n        return new CollectionResponse(r);\n    }\n\n    async putCollectionUsers(organizationId: string, id: string, request: SelectionReadOnlyRequest[]): Promise<any> {\n        await this.send('PUT', '/organizations/' + organizationId + '/collections/' + id + '/users',\n            request, true, false);\n    }\n\n    deleteCollection(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/collections/' + id, null, true, false);\n    }\n\n    deleteCollectionUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n        return this.send('DELETE',\n            '/organizations/' + organizationId + '/collections/' + id + '/user/' + organizationUserId,\n            null, true, false);\n    }\n\n    // Groups APIs\n\n    async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups/' + id + '/details',\n            null, true, true);\n        return new GroupDetailsResponse(r);\n    }\n\n    async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups', null, true, true);\n        return new ListResponse(r, GroupResponse);\n    }\n\n    async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups/' + id + '/users',\n            null, true, true);\n        return r;\n    }\n\n    async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/groups', request, true, true);\n        return new GroupResponse(r);\n    }\n\n    async putGroup(organizationId: string, id: string, request: GroupRequest): Promise<GroupResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/groups/' + id, request, true, true);\n        return new GroupResponse(r);\n    }\n\n    async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n        await this.send('PUT', '/organizations/' + organizationId + '/groups/' + id + '/users', request, true, false);\n    }\n\n    deleteGroup(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/groups/' + id, null, true, false);\n    }\n\n    deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n        return this.send('DELETE',\n            '/organizations/' + organizationId + '/groups/' + id + '/user/' + organizationUserId, null, true, false);\n    }\n\n    // Policy APIs\n\n    async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies/' + type, null, true, true);\n        return new PolicyResponse(r);\n    }\n\n    async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies', null, true, true);\n        return new ListResponse(r, PolicyResponse);\n    }\n\n    async getPoliciesByToken(organizationId: string, token: string, email: string, organizationUserId: string):\n        Promise<ListResponse<PolicyResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies/token?' +\n            'token=' + encodeURIComponent(token) + '&email=' + encodeURIComponent(email) +\n            '&organizationUserId=' + organizationUserId, null, false, true);\n        return new ListResponse(r, PolicyResponse);\n    }\n\n    async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<PolicyResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/policies/' + type, request, true, true);\n        return new PolicyResponse(r);\n    }\n\n    // Organization User APIs\n\n    async getOrganizationUser(organizationId: string, id: string): Promise<OrganizationUserDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id, null, true, true);\n        return new OrganizationUserDetailsResponse(r);\n    }\n\n    async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id + '/groups',\n            null, true, true);\n        return r;\n    }\n\n    async getOrganizationUsers(organizationId: string): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users', null, true, true);\n        return new ListResponse(r, OrganizationUserUserDetailsResponse);\n    }\n\n    async getOrganizationUserResetPasswordDetails(organizationId: string, id: string):\n        Promise<OrganizationUserResetPasswordDetailsReponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id +\n            '/reset-password-details', null, true, true);\n        return new OrganizationUserResetPasswordDetailsReponse(r);\n    }\n\n    postOrganizationUserInvite(organizationId: string, request: OrganizationUserInviteRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/invite', request, true, false);\n    }\n\n    postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/reinvite', null, true, false);\n    }\n\n    async postManyOrganizationUserReinvite(organizationId: string, request: OrganizationUserBulkRequest): Promise<ListResponse<OrganizationUserBulkResponse>> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/users/reinvite', request, true, true);\n        return new ListResponse(r, OrganizationUserBulkResponse);\n    }\n\n    postOrganizationUserAccept(organizationId: string, id: string,\n        request: OrganizationUserAcceptRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/accept', request, true, false);\n    }\n\n    postOrganizationUserConfirm(organizationId: string, id: string,\n        request: OrganizationUserConfirmRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/confirm',\n            request, true, false);\n    }\n\n    async postOrganizationUsersPublicKey(organizationId: string, request: OrganizationUserBulkRequest): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/users/public-keys', request, true, true);\n        return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n    }\n\n    async postOrganizationUserBulkConfirm(organizationId: string, request: OrganizationUserBulkConfirmRequest): Promise<ListResponse<OrganizationUserBulkResponse>> {\n        const r = await this.send('POST',  '/organizations/' + organizationId + '/users/confirm', request, true, true);\n        return new ListResponse(r, OrganizationUserBulkResponse);\n    }\n\n    putOrganizationUser(organizationId: string, id: string, request: OrganizationUserUpdateRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id, request, true, false);\n    }\n\n    putOrganizationUserGroups(organizationId: string, id: string,\n        request: OrganizationUserUpdateGroupsRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id + '/groups', request, true, false);\n    }\n\n    putOrganizationUserResetPasswordEnrollment(organizationId: string, userId: string,\n        request: OrganizationUserResetPasswordEnrollmentRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + userId + '/reset-password-enrollment',\n            request, true, false);\n    }\n\n    putOrganizationUserResetPassword(organizationId: string, id: string,\n        request: OrganizationUserResetPasswordRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id + '/reset-password',\n            request, true, false);\n    }\n\n    deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/users/' + id, null, true, false);\n    }\n\n    async deleteManyOrganizationUsers(organizationId: string, request: OrganizationUserBulkRequest): Promise<ListResponse<OrganizationUserBulkResponse>> {\n        const r = await this.send('DELETE', '/organizations/' + organizationId + '/users', request, true, true);\n        return new ListResponse(r, OrganizationUserBulkResponse);\n    }\n\n    // Plan APIs\n\n    async getPlans(): Promise<ListResponse<PlanResponse>> {\n        const r = await this.send('GET', '/plans/', null, true, true);\n        return new ListResponse(r, PlanResponse);\n    }\n\n    async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/import', request, true, false);\n    }\n\n    async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n        return this.send('POST', '/public/organization/import', request, true, false);\n    }\n\n    async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n        const r = await this.send('GET', '/plans/sales-tax-rates/', null, true, true);\n        return new ListResponse(r, TaxRateResponse);\n    }\n\n    // Settings APIs\n\n    async getSettingsDomains(): Promise<DomainsResponse> {\n        const r = await this.send('GET', '/settings/domains', null, true, true);\n        return new DomainsResponse(r);\n    }\n\n    async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n        const r = await this.send('PUT', '/settings/domains', request, true, true);\n        return new DomainsResponse(r);\n    }\n\n    // Sync APIs\n\n    async getSync(): Promise<SyncResponse> {\n        const path = this.isDesktopClient || this.isWebClient ? '/sync?excludeDomains=true' : '/sync';\n        const r = await this.send('GET', path, null, true, true);\n        return new SyncResponse(r);\n    }\n\n    // Two-factor APIs\n\n    async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n        const r = await this.send('GET', '/two-factor', null, true, true);\n        return new ListResponse(r, TwoFactorProviderResponse);\n    }\n\n    async getTwoFactorOrganizationProviders(organizationId: string): Promise<ListResponse<TwoFactorProviderResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/two-factor', null, true, true);\n        return new ListResponse(r, TwoFactorProviderResponse);\n    }\n\n    async getTwoFactorAuthenticator(request: PasswordVerificationRequest): Promise<TwoFactorAuthenticatorResponse> {\n        const r = await this.send('POST', '/two-factor/get-authenticator', request, true, true);\n        return new TwoFactorAuthenticatorResponse(r);\n    }\n\n    async getTwoFactorEmail(request: PasswordVerificationRequest): Promise<TwoFactorEmailResponse> {\n        const r = await this.send('POST', '/two-factor/get-email', request, true, true);\n        return new TwoFactorEmailResponse(r);\n    }\n\n    async getTwoFactorDuo(request: PasswordVerificationRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('POST', '/two-factor/get-duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async getTwoFactorOrganizationDuo(organizationId: string,\n        request: PasswordVerificationRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/two-factor/get-duo',\n            request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async getTwoFactorYubiKey(request: PasswordVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n        const r = await this.send('POST', '/two-factor/get-yubikey', request, true, true);\n        return new TwoFactorYubiKeyResponse(r);\n    }\n\n    async getTwoFactorWebAuthn(request: PasswordVerificationRequest): Promise<TwoFactorWebAuthnResponse> {\n        const r = await this.send('POST', '/two-factor/get-webauthn', request, true, true);\n        return new TwoFactorWebAuthnResponse(r);\n    }\n\n    async getTwoFactorWebAuthnChallenge(request: PasswordVerificationRequest): Promise<ChallengeResponse> {\n        const r = await this.send('POST', '/two-factor/get-webauthn-challenge', request, true, true);\n        return new ChallengeResponse(r);\n    }\n\n    async getTwoFactorRecover(request: PasswordVerificationRequest): Promise<TwoFactorRecoverResponse> {\n        const r = await this.send('POST', '/two-factor/get-recover', request, true, true);\n        return new TwoFactorRecoverResponse(r);\n    }\n\n    async putTwoFactorAuthenticator(\n        request: UpdateTwoFactorAuthenticatorRequest): Promise<TwoFactorAuthenticatorResponse> {\n        const r = await this.send('PUT', '/two-factor/authenticator', request, true, true);\n        return new TwoFactorAuthenticatorResponse(r);\n    }\n\n    async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n        const r = await this.send('PUT', '/two-factor/email', request, true, true);\n        return new TwoFactorEmailResponse(r);\n    }\n\n    async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('PUT', '/two-factor/duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async putTwoFactorOrganizationDuo(organizationId: string,\n        request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/two-factor/duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async putTwoFactorYubiKey(request: UpdateTwoFactorYubioOtpRequest): Promise<TwoFactorYubiKeyResponse> {\n        const r = await this.send('PUT', '/two-factor/yubikey', request, true, true);\n        return new TwoFactorYubiKeyResponse(r);\n    }\n\n    async putTwoFactorWebAuthn(request: UpdateTwoFactorWebAuthnRequest): Promise<TwoFactorWebAuthnResponse> {\n        const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n        const data: any = Object.assign({}, request);\n\n        data.deviceResponse = {\n            id: request.deviceResponse.id,\n            rawId: btoa(request.deviceResponse.id),\n            type: request.deviceResponse.type,\n            extensions: request.deviceResponse.getClientExtensionResults(),\n            response: {\n                AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n                clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n            },\n        };\n\n        const r = await this.send('PUT', '/two-factor/webauthn', data, true, true);\n        return new TwoFactorWebAuthnResponse(r);\n    }\n\n    async deleteTwoFactorWebAuthn(request: UpdateTwoFactorWebAuthnDeleteRequest): Promise<TwoFactorWebAuthnResponse> {\n        const r = await this.send('DELETE', '/two-factor/webauthn', request, true, true);\n        return new TwoFactorWebAuthnResponse(r);\n    }\n\n    async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n        const r = await this.send('PUT', '/two-factor/disable', request, true, true);\n        return new TwoFactorProviderResponse(r);\n    }\n\n    async putTwoFactorOrganizationDisable(organizationId: string,\n        request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/two-factor/disable',\n            request, true, true);\n        return new TwoFactorProviderResponse(r);\n    }\n\n    postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n        return this.send('POST', '/two-factor/recover', request, false, false);\n    }\n\n    postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n        return this.send('POST', '/two-factor/send-email', request, true, false);\n    }\n\n    postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n        return this.send('POST', '/two-factor/send-email-login', request, false, false);\n    }\n\n    // Emergency Access APIs\n\n    async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n        const r = await this.send('GET', '/emergency-access/trusted', null, true, true);\n        return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n    }\n\n    async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n        const r = await this.send('GET', '/emergency-access/granted', null, true, true);\n        return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n    }\n\n    async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n        const r = await this.send('GET', '/emergency-access/' + id, null, true, true);\n        return new EmergencyAccessGranteeDetailsResponse(r);\n    }\n\n    async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n        const r = await this.send('GET', '/emergency-access/' + id + '/policies', null, true, true);\n        return new ListResponse(r, PolicyResponse);\n    }\n\n    putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n        return this.send('PUT', '/emergency-access/' + id, request, true, false);\n    }\n\n    deleteEmergencyAccess(id: string): Promise<any> {\n        return this.send('DELETE', '/emergency-access/' + id, null, true, false);\n    }\n\n    postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n        return this.send('POST', '/emergency-access/invite', request, true, false);\n    }\n\n    postEmergencyAccessReinvite(id: string): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/reinvite', null, true, false);\n    }\n\n    postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/accept', request, true, false);\n    }\n\n    postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/confirm', request, true, false);\n    }\n\n    postEmergencyAccessInitiate(id: string): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/initiate', null, true, false);\n    }\n\n    postEmergencyAccessApprove(id: string): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/approve', null, true, false);\n    }\n\n    postEmergencyAccessReject(id: string): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/reject', null, true, false);\n    }\n\n    async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n        const r = await this.send('POST', '/emergency-access/' + id + '/takeover', null, true, true);\n        return new EmergencyAccessTakeoverResponse(r);\n    }\n\n    async postEmergencyAccessPassword(id: string, request: EmergencyAccessPasswordRequest): Promise<any> {\n        const r = await this.send('POST', '/emergency-access/' + id + '/password', request, true, true);\n    }\n\n    async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n        const r = await this.send('POST', '/emergency-access/' + id + '/view', null, true, true);\n        return new EmergencyAccessViewResponse(r);\n    }\n\n    // Organization APIs\n\n    async getOrganization(id: string): Promise<OrganizationResponse> {\n        const r = await this.send('GET', '/organizations/' + id, null, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async getOrganizationBilling(id: string): Promise<BillingResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/billing', null, true, true);\n        return new BillingResponse(r);\n    }\n\n    async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/subscription', null, true, true);\n        return new OrganizationSubscriptionResponse(r);\n    }\n\n    async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n        return this.send('GET', '/organizations/' + id + '/license?installationId=' + installationId,\n            null, true, true);\n    }\n\n    async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/tax', null, true, true);\n        return new TaxInfoResponse(r);\n    }\n\n    async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n        const r = await this.send('POST', '/organizations', request, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async putOrganization(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n        const r = await this.send('PUT', '/organizations/' + id, request, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async putOrganizationTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + id + '/tax', request, true, false);\n    }\n\n    postLeaveOrganization(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/leave', null, true, false);\n    }\n\n    async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n        const r = await this.send('POST', '/organizations/license', data, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/license', data, true, false);\n    }\n\n    async postOrganizationApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    async postOrganizationRotateApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/rotate-api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    async postOrganizationUpgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/upgrade', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/seat', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/storage', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/payment', request, true, false);\n    }\n\n    postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/verify-bank', request, true, false);\n    }\n\n    postOrganizationCancel(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/cancel', null, true, false);\n    }\n\n    postOrganizationReinstate(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/reinstate', null, true, false);\n    }\n\n    deleteOrganization(id: string, request: PasswordVerificationRequest): Promise<any> {\n        return this.send('DELETE', '/organizations/' + id, request, true, false);\n    }\n\n    async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/keys', null, true, true);\n        return new OrganizationKeysResponse(r);\n    }\n\n    async postOrganizationKeys(id: string, request: OrganizationKeysRequest): Promise<OrganizationKeysResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/keys', request, true, true);\n        return new OrganizationKeysResponse(r);\n    }\n\n    // Event APIs\n\n    async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/events', start, end, token), null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsCipher(id: string, start: string, end: string,\n        token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/ciphers/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsOrganization(id: string, start: string, end: string,\n        token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/organizations/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsOrganizationUser(organizationId: string, id: string,\n        start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET',\n            this.addEventParameters('/organizations/' + organizationId + '/users/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async postEventsCollect(request: EventRequest[]): Promise<any> {\n        const authHeader = await this.getActiveBearerToken();\n        const headers = new Headers({\n            'Device-Type': this.deviceType,\n            'Authorization': 'Bearer ' + authHeader,\n            'Content-Type': 'application/json; charset=utf-8',\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n        const response = await this.fetch(new Request(this.eventsBaseUrl + '/collect', {\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            method: 'POST',\n            body: JSON.stringify(request),\n            headers: headers,\n        }));\n        if (response.status !== 200) {\n            return Promise.reject('Event post failed.');\n        }\n    }\n\n    // User APIs\n\n    async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n        const r = await this.send('GET', '/users/' + id + '/public-key', null, true, true);\n        return new UserKeyResponse(r);\n    }\n\n    // HIBP APIs\n\n    async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n        const r = await this.send('GET', '/hibp/breach?username=' + username, null, true, true);\n        return r.map((a: any) => new BreachAccountResponse(a));\n    }\n\n    // Misc\n\n    async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n        const r = await this.send('POST', '/bitpay-invoice', request, true, true);\n        return r as string;\n    }\n\n    async postSetupPayment(): Promise<string> {\n        const r = await this.send('POST', '/setup-payment', null, true, true);\n        return r as string;\n    }\n\n    // Helpers\n\n    async getActiveBearerToken(): Promise<string> {\n        let accessToken = await this.tokenService.getToken();\n        if (this.tokenService.tokenNeedsRefresh()) {\n            await this.doRefreshToken();\n            accessToken = await this.tokenService.getToken();\n        }\n        return accessToken;\n    }\n\n    fetch(request: Request): Promise<Response> {\n        if (request.method === 'GET') {\n            request.headers.set('Cache-Control', 'no-store');\n            request.headers.set('Pragma', 'no-cache');\n        }\n        return this.nativeFetch(request);\n    }\n\n    nativeFetch(request: Request): Promise<Response> {\n        return fetch(request);\n    }\n\n    async preValidateSso(identifier: string): Promise<boolean> {\n        if (identifier == null || identifier === '') {\n            throw new Error('Organization Identifier was not provided.');\n        }\n        const headers = new Headers({\n            'Accept': 'application/json',\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n\n        const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n        const response = await this.fetch(new Request(this.identityBaseUrl + path, {\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            headers: headers,\n            method: 'GET',\n        }));\n\n        if (response.status === 200) {\n            return true;\n        } else {\n            const error = await this.handleError(response, false, true);\n            return Promise.reject(error);\n        }\n    }\n\n    protected async doRefreshToken(): Promise<void> {\n        const refreshToken = await this.tokenService.getRefreshToken();\n        if (refreshToken == null || refreshToken === '') {\n            throw new Error();\n        }\n        const headers = new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n            'Accept': 'application/json',\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n\n        const decodedToken = this.tokenService.decodeToken();\n        const response = await this.fetch(new Request(this.identityBaseUrl + '/connect/token', {\n            body: this.qsStringify({\n                grant_type: 'refresh_token',\n                client_id: decodedToken.client_id,\n                refresh_token: refreshToken,\n            }),\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            headers: headers,\n            method: 'POST',\n        }));\n\n        if (response.status === 200) {\n            const responseJson = await response.json();\n            const tokenResponse = new IdentityTokenResponse(responseJson);\n            await this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken);\n        } else {\n            const error = await this.handleError(response, true, true);\n            return Promise.reject(error);\n        }\n    }\n\n    private async send(method: 'GET' | 'POST' | 'PUT' | 'DELETE', path: string, body: any,\n        authed: boolean, hasResponse: boolean, apiUrl?: string,\n        alterHeaders?: (headers: Headers) => void): Promise<any> {\n        apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.apiBaseUrl : apiUrl;\n        const headers = new Headers({\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n\n        const requestInit: RequestInit = {\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            method: method,\n        };\n\n        if (authed) {\n            const authHeader = await this.getActiveBearerToken();\n            headers.set('Authorization', 'Bearer ' + authHeader);\n        }\n        if (body != null) {\n            if (typeof body === 'string') {\n                requestInit.body = body;\n                headers.set('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');\n            } else if (typeof body === 'object') {\n                if (body instanceof FormData) {\n                    requestInit.body = body;\n                } else {\n                    headers.set('Content-Type', 'application/json; charset=utf-8');\n                    requestInit.body = JSON.stringify(body);\n                }\n            }\n        }\n        if (hasResponse) {\n            headers.set('Accept', 'application/json');\n        }\n        if (alterHeaders != null) {\n            alterHeaders(headers);\n        }\n\n        requestInit.headers = headers;\n        const response = await this.fetch(new Request(apiUrl + path, requestInit));\n\n        if (hasResponse && response.status === 200) {\n            const responseJson = await response.json();\n            return responseJson;\n        } else if (response.status !== 200) {\n            const error = await this.handleError(response, false, authed);\n            return Promise.reject(error);\n        }\n    }\n\n    private async handleError(response: Response, tokenError: boolean, authed: boolean): Promise<ErrorResponse> {\n        if (authed && ((tokenError && response.status === 400) || response.status === 401 || response.status === 403)) {\n            await this.logoutCallback(true);\n            return null;\n        }\n\n        let responseJson: any = null;\n        if (this.isJsonResponse(response)) {\n            responseJson = await response.json();\n        } else if (this.isTextResponse(response)) {\n            responseJson = { Message: await response.text() };\n        }\n\n        return new ErrorResponse(responseJson, response.status, tokenError);\n    }\n\n    private qsStringify(params: any): string {\n        return Object.keys(params).map(key => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n        }).join('&');\n    }\n\n    private getCredentials(): RequestCredentials {\n        if (!this.isWebClient || this.usingBaseUrl) {\n            return 'include';\n        }\n        return undefined;\n    }\n\n    private addEventParameters(base: string, start: string, end: string, token: string) {\n        if (start != null) {\n            base += ('?start=' + start);\n        }\n        if (end != null) {\n            base += (base.indexOf('?') > -1 ? '&' : '?');\n            base += ('end=' + end);\n        }\n        if (token != null) {\n            base += (base.indexOf('?') > -1 ? '&' : '?');\n            base += ('continuationToken=' + token);\n        }\n        return base;\n    }\n\n    private isJsonResponse(response: Response): boolean {\n        const typeHeader = response.headers.get('content-type');\n        return typeHeader != null && typeHeader.indexOf('application/json') > -1;\n    }\n\n    private isTextResponse(response: Response): boolean {\n        const typeHeader = response.headers.get('content-type');\n        return typeHeader != null && typeHeader.indexOf('text') > -1;\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { PlanResponse } from './planResponse';\n\nimport { PlanType } from '../../enums/planType';\n\nexport class OrganizationResponse extends BaseResponse {\n    id: string;\n    identifier: string;\n    name: string;\n    businessName: string;\n    businessAddress1: string;\n    businessAddress2: string;\n    businessAddress3: string;\n    businessCountry: string;\n    businessTaxNumber: string;\n    billingEmail: string;\n    plan: PlanResponse;\n    planType: PlanType;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb: number;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useResetPassword: boolean;\n    hasPublicAndPrivateKeys: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.identifier = this.getResponseProperty('Identifier');\n        this.name = this.getResponseProperty('Name');\n        this.businessName = this.getResponseProperty('BusinessName');\n        this.businessAddress1 = this.getResponseProperty('BusinessAddress1');\n        this.businessAddress2 = this.getResponseProperty('BusinessAddress2');\n        this.businessAddress3 = this.getResponseProperty('BusinessAddress3');\n        this.businessCountry = this.getResponseProperty('BusinessCountry');\n        this.businessTaxNumber = this.getResponseProperty('BusinessTaxNumber');\n        this.billingEmail = this.getResponseProperty('BillingEmail');\n        const plan = this.getResponseProperty('Plan');\n        this.plan = plan == null ? null : new PlanResponse(plan);\n        this.planType = this.getResponseProperty('PlanType');\n        this.seats = this.getResponseProperty('Seats');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.useGroups = this.getResponseProperty('UseGroups');\n        this.useDirectory = this.getResponseProperty('UseDirectory');\n        this.useEvents = this.getResponseProperty('UseEvents');\n        this.useTotp = this.getResponseProperty('UseTotp');\n        this.use2fa = this.getResponseProperty('Use2fa');\n        this.useApi = this.getResponseProperty('UseApi');\n        this.useResetPassword = this.getResponseProperty('UseResetPassword');\n        this.hasPublicAndPrivateKeys = this.getResponseProperty('HasPublicAndPrivateKeys');\n    }\n}\n","import { PlanType } from '../../enums/planType';\nimport { ProductType } from '../../enums/productType';\n\nimport { BaseResponse } from './baseResponse';\n\nexport class PlanResponse extends BaseResponse {\n    type: PlanType;\n    product: ProductType;\n    name: string;\n    isAnnual: boolean;\n    nameLocalizationKey: string;\n    descriptionLocalizationKey: string;\n    canBeUsedByBusiness: boolean;\n    baseSeats: number;\n    baseStorageGb: number;\n    maxCollections: number;\n    maxUsers: number;\n\n    hasAdditionalSeatsOption: boolean;\n    maxAdditionalSeats: number;\n    hasAdditionalStorageOption: boolean;\n    maxAdditionalStorage: number;\n    hasPremiumAccessOption: boolean;\n    trialPeriodDays: number;\n\n    hasSelfHost: boolean;\n    hasPolicies: boolean;\n    hasGroups: boolean;\n    hasDirectory: boolean;\n    hasEvents: boolean;\n    hasTotp: boolean;\n    has2fa: boolean;\n    hasApi: boolean;\n    hasSso: boolean;\n    hasResetPassword: boolean;\n    usersGetPremium: boolean;\n\n    upgradeSortOrder: number;\n    displaySortOrder: number;\n    legacyYear: number;\n    disabled: boolean;\n\n    stripePlanId: string;\n    stripeSeatPlanId: string;\n    stripeStoragePlanId: string;\n    stripePremiumAccessPlanId: string;\n    basePrice: number;\n    seatPrice: number;\n    additionalStoragePricePerGb: number;\n    premiumAccessOptionPrice: number;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.product = this.getResponseProperty('Product');\n        this.name = this.getResponseProperty('Name');\n        this.isAnnual = this.getResponseProperty('IsAnnual');\n        this.nameLocalizationKey = this.getResponseProperty('NameLocalizationKey');\n        this.descriptionLocalizationKey = this.getResponseProperty('DescriptionLocalizationKey');\n        this.canBeUsedByBusiness = this.getResponseProperty('CanBeUsedByBusiness');\n        this.baseSeats = this.getResponseProperty('BaseSeats');\n        this.baseStorageGb = this.getResponseProperty('BaseStorageGb');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxUsers = this.getResponseProperty('MaxUsers');\n        this.hasAdditionalSeatsOption = this.getResponseProperty('HasAdditionalSeatsOption');\n        this.maxAdditionalSeats = this.getResponseProperty('MaxAdditionalSeats');\n        this.hasAdditionalStorageOption = this.getResponseProperty('HasAdditionalStorageOption');\n        this.maxAdditionalStorage = this.getResponseProperty('MaxAdditionalStorage');\n        this.hasPremiumAccessOption = this.getResponseProperty('HasPremiumAccessOption');\n        this.trialPeriodDays = this.getResponseProperty('TrialPeriodDays');\n        this.hasSelfHost = this.getResponseProperty('HasSelfHost');\n        this.hasPolicies = this.getResponseProperty('HasPolicies');\n        this.hasGroups = this.getResponseProperty('HasGroups');\n        this.hasDirectory = this.getResponseProperty('HasDirectory');\n        this.hasEvents = this.getResponseProperty('HasEvents');\n        this.hasTotp = this.getResponseProperty('HasTotp');\n        this.has2fa = this.getResponseProperty('Has2fa');\n        this.hasApi = this.getResponseProperty('HasApi');\n        this.hasSso = this.getResponseProperty('HasSso');\n        this.hasResetPassword = this.getResponseProperty('HasResetPassword');\n        this.usersGetPremium = this.getResponseProperty('UsersGetPremium');\n        this.upgradeSortOrder = this.getResponseProperty('UpgradeSortOrder');\n        this.displaySortOrder = this.getResponseProperty('SortOrder');\n        this.legacyYear = this.getResponseProperty('LegacyYear');\n        this.disabled = this.getResponseProperty('Disabled');\n        this.stripePlanId = this.getResponseProperty('StripePlanId');\n        this.stripeSeatPlanId = this.getResponseProperty('StripeSeatPlanId');\n        this.stripeStoragePlanId = this.getResponseProperty('StripeStoragePlanId');\n        this.stripePremiumAccessPlanId = this.getResponseProperty('StripePremiumAccessPlanId');\n        this.basePrice = this.getResponseProperty('BasePrice');\n        this.seatPrice = this.getResponseProperty('SeatPrice');\n        this.additionalStoragePricePerGb = this.getResponseProperty('AdditionalStoragePricePerGb');\n        this.premiumAccessOptionPrice = this.getResponseProperty('PremiumAccessOptionPrice');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class SubscriptionResponse extends BaseResponse {\n    storageName: string;\n    storageGb: number;\n    maxStorageGb: number;\n    subscription: BillingSubscriptionResponse;\n    upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n    license: any;\n    expiration: string;\n    usingInAppPurchase: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.storageName = this.getResponseProperty('StorageName');\n        this.storageGb = this.getResponseProperty('StorageGb');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.license = this.getResponseProperty('License');\n        this.expiration = this.getResponseProperty('Expiration');\n        this.usingInAppPurchase = this.getResponseProperty('UsingInAppPurchase');\n        const subscription = this.getResponseProperty('Subscription');\n        const upcomingInvoice = this.getResponseProperty('UpcomingInvoice');\n        this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n        this.upcomingInvoice = upcomingInvoice == null ? null :\n            new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n    trialStartDate: string;\n    trialEndDate: string;\n    periodStartDate: string;\n    periodEndDate: string;\n    cancelledDate: string;\n    cancelAtEndDate: boolean;\n    status: string;\n    cancelled: boolean;\n    items: BillingSubscriptionItemResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.trialEndDate = this.getResponseProperty('TrialStartDate');\n        this.trialEndDate = this.getResponseProperty('TrialEndDate');\n        this.periodStartDate = this.getResponseProperty('PeriodStartDate');\n        this.periodEndDate = this.getResponseProperty('PeriodEndDate');\n        this.cancelledDate = this.getResponseProperty('CancelledDate');\n        this.cancelAtEndDate = this.getResponseProperty('CancelAtEndDate');\n        this.status = this.getResponseProperty('Status');\n        this.cancelled = this.getResponseProperty('Cancelled');\n        const items = this.getResponseProperty('Items');\n        if (items != null) {\n            this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n        }\n    }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n    name: string;\n    amount: number;\n    quantity: number;\n    interval: string;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.amount = this.getResponseProperty('Amount');\n        this.quantity = this.getResponseProperty('Quantity');\n        this.interval = this.getResponseProperty('Interval');\n    }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n    date: string;\n    amount: number;\n\n    constructor(response: any) {\n        super(response);\n        this.date = this.getResponseProperty('Date');\n        this.amount = this.getResponseProperty('Amount');\n    }\n}\n","import { Utils } from '../../misc/utils';\nimport { BaseResponse } from './baseResponse';\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n    enabled: boolean;\n    keys: KeyResponse[];\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        const keys = this.getResponseProperty('Keys');\n        this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n    }\n}\n\nexport class KeyResponse extends BaseResponse {\n    name: string;\n    id: number;\n    migrated: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.id = this.getResponseProperty('Id');\n        this.migrated = this.getResponseProperty('Migrated');\n    }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n    attestation?: AttestationConveyancePreference;\n    authenticatorSelection?: AuthenticatorSelectionCriteria;\n    challenge: BufferSource;\n    excludeCredentials?: PublicKeyCredentialDescriptor[];\n    extensions?: AuthenticationExtensionsClientInputs;\n    pubKeyCredParams: PublicKeyCredentialParameters[];\n    rp: PublicKeyCredentialRpEntity;\n    timeout?: number;\n    user: PublicKeyCredentialUserEntity;\n\n    constructor(response: any) {\n        super(response);\n        this.attestation = this.getResponseProperty('attestation');\n        this.authenticatorSelection = this.getResponseProperty('authenticatorSelection');\n        this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty('challenge'));\n        this.excludeCredentials = this.getResponseProperty('excludeCredentials').map((c: any) => {\n            c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n            return c;\n        });\n        this.extensions = this.getResponseProperty('extensions');\n        this.pubKeyCredParams = this.getResponseProperty('pubKeyCredParams');\n        this.rp = this.getResponseProperty('rp');\n        this.timeout = this.getResponseProperty('timeout');\n\n        const user = this.getResponseProperty('user');\n        user.id = Utils.fromUrlB64ToArray(user.id);\n\n        this.user = user;\n    }\n}\n","import { Utils } from '../misc/utils';\n\nimport { AppIdService as AppIdServiceAbstraction } from '../abstractions/appId.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nexport class AppIdService implements AppIdServiceAbstraction {\n    constructor(private storageService: StorageService) {\n    }\n\n    getAppId(): Promise<string> {\n        return this.makeAndGetAppId('appId');\n    }\n\n    getAnonymousAppId(): Promise<string> {\n        return this.makeAndGetAppId('anonymousAppId');\n    }\n\n    private async makeAndGetAppId(key: string) {\n        const existingId = await this.storageService.get<string>(key);\n        if (existingId != null) {\n            return existingId;\n        }\n\n        const guid = Utils.newGuid();\n        await this.storageService.save(key, guid);\n        return guid;\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { AuditService as AuditServiceAbstraction } from '../abstractions/audit.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\n\nimport { throttle } from '../misc/throttle';\nimport { Utils } from '../misc/utils';\n\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\n\nconst PwnedPasswordsApi = 'https://api.pwnedpasswords.com/range/';\n\nexport class AuditService implements AuditServiceAbstraction {\n    constructor(private cryptoFunctionService: CryptoFunctionService, private apiService: ApiService) { }\n\n    @throttle(100, () => 'passwordLeaked')\n    async passwordLeaked(password: string): Promise<number> {\n        const hashBytes = await this.cryptoFunctionService.hash(password, 'sha1');\n        const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n        const hashStart = hash.substr(0, 5);\n        const hashEnding = hash.substr(5);\n\n        const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n        const leakedHashes = await response.text();\n        const match = leakedHashes.split(/\\r?\\n/).find(v => {\n            return v.split(':')[0] === hashEnding;\n        });\n\n        return match != null ? parseInt(match.split(':')[1], 10) : 0;\n    }\n\n    async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n        try {\n            return await this.apiService.getHibpBreach(username);\n        } catch (e) {\n            const error = e as ErrorResponse;\n            if (error.statusCode === 404) {\n                return [];\n            }\n            throw new Error();\n        }\n    }\n}\n","import { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { UriMatchType } from '../enums/uriMatchType';\n\nimport { CipherData } from '../models/data/cipherData';\n\nimport { Attachment } from '../models/domain/attachment';\nimport { Card } from '../models/domain/card';\nimport { Cipher } from '../models/domain/cipher';\nimport Domain from '../models/domain/domainBase';\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\nimport { Field } from '../models/domain/field';\nimport { Identity } from '../models/domain/identity';\nimport { Login } from '../models/domain/login';\nimport { LoginUri } from '../models/domain/loginUri';\nimport { Password } from '../models/domain/password';\nimport { SecureNote } from '../models/domain/secureNote';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { AttachmentRequest } from '../models/request/attachmentRequest';\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkRestoreRequest } from '../models/request/cipherBulkRestoreRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\n\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\n\nimport { AttachmentView } from '../models/view/attachmentView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FieldView } from '../models/view/fieldView';\nimport { PasswordHistoryView } from '../models/view/passwordHistoryView';\nimport { View } from '../models/view/view';\n\nimport { SortedCiphersCache } from '../models/domain/sortedCiphersCache';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService as CipherServiceAbstraction } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FileUploadService } from '../abstractions/fileUpload.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { SearchService } from '../abstractions/search.service';\nimport { SettingsService } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ConstantsService } from './constants.service';\n\nimport { sequentialize } from '../misc/sequentialize';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    ciphersPrefix: 'ciphers_',\n    localData: 'sitesLocalData',\n    neverDomains: 'neverDomains',\n};\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n    ['google.com', new Set(['script.google.com'])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n    // tslint:disable-next-line\n    _decryptedCipherCache: CipherView[];\n\n    private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(this.sortCiphersByLastUsed);\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private settingsService: SettingsService, private apiService: ApiService,\n        private fileUploadService: FileUploadService, private storageService: StorageService,\n        private i18nService: I18nService, private searchService: () => SearchService) {\n    }\n\n    get decryptedCipherCache() {\n        return this._decryptedCipherCache;\n    }\n    set decryptedCipherCache(value: CipherView[]) {\n        this._decryptedCipherCache = value;\n        if (this.searchService != null) {\n            if (value == null) {\n                this.searchService().clearIndex();\n            } else {\n                this.searchService().indexCiphers();\n            }\n        }\n    }\n\n    clearCache(): void {\n        this.decryptedCipherCache = null;\n        this.sortedCiphersCache.clear();\n    }\n\n    async encrypt(model: CipherView, key?: SymmetricCryptoKey, originalCipher: Cipher = null): Promise<Cipher> {\n        // Adjust password history\n        if (model.id != null) {\n            if (originalCipher == null) {\n                originalCipher = await this.get(model.id);\n            }\n            if (originalCipher != null) {\n                const existingCipher = await originalCipher.decrypt();\n                model.passwordHistory = existingCipher.passwordHistory || [];\n                if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n                    if (existingCipher.login.password != null && existingCipher.login.password !== '' &&\n                        existingCipher.login.password !== model.login.password) {\n                        const ph = new PasswordHistoryView();\n                        ph.password = existingCipher.login.password;\n                        ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n                        model.passwordHistory.splice(0, 0, ph);\n                    } else {\n                        model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n                    }\n                }\n                if (existingCipher.hasFields) {\n                    const existingHiddenFields = existingCipher.fields.filter(f => f.type === FieldType.Hidden &&\n                        f.name != null && f.name !== '' && f.value != null && f.value !== '');\n                    const hiddenFields = model.fields == null ? [] :\n                        model.fields.filter(f => f.type === FieldType.Hidden && f.name != null && f.name !== '');\n                    existingHiddenFields.forEach(ef => {\n                        const matchedField = hiddenFields.find(f => f.name === ef.name);\n                        if (matchedField == null || matchedField.value !== ef.value) {\n                            const ph = new PasswordHistoryView();\n                            ph.password = ef.name + ': ' + ef.value;\n                            ph.lastUsedDate = new Date();\n                            model.passwordHistory.splice(0, 0, ph);\n                        }\n                    });\n                }\n            }\n            if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n                model.passwordHistory = null;\n            } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n                // only save last 5 history\n                model.passwordHistory = model.passwordHistory.slice(0, 5);\n            }\n        }\n\n        const cipher = new Cipher();\n        cipher.id = model.id;\n        cipher.folderId = model.folderId;\n        cipher.favorite = model.favorite;\n        cipher.organizationId = model.organizationId;\n        cipher.type = model.type;\n        cipher.collectionIds = model.collectionIds;\n        cipher.revisionDate = model.revisionDate;\n        cipher.reprompt = model.reprompt;\n\n        if (key == null && cipher.organizationId != null) {\n            key = await this.cryptoService.getOrgKey(cipher.organizationId);\n            if (key == null) {\n                throw new Error('Cannot encrypt cipher for organization. No key.');\n            }\n        }\n        await Promise.all([\n            this.encryptObjProperty(model, cipher, {\n                name: null,\n                notes: null,\n            }, key),\n            this.encryptCipherData(cipher, model, key),\n            this.encryptFields(model.fields, key).then(fields => {\n                cipher.fields = fields;\n            }),\n            this.encryptPasswordHistories(model.passwordHistory, key).then(ph => {\n                cipher.passwordHistory = ph;\n            }),\n            this.encryptAttachments(model.attachments, key).then(attachments => {\n                cipher.attachments = attachments;\n            }),\n        ]);\n\n        return cipher;\n    }\n\n    async encryptAttachments(attachmentsModel: AttachmentView[], key: SymmetricCryptoKey): Promise<Attachment[]> {\n        if (attachmentsModel == null || attachmentsModel.length === 0) {\n            return null;\n        }\n\n        const promises: Promise<any>[] = [];\n        const encAttachments: Attachment[] = [];\n        attachmentsModel.forEach(async model => {\n            const attachment = new Attachment();\n            attachment.id = model.id;\n            attachment.size = model.size;\n            attachment.sizeName = model.sizeName;\n            attachment.url = model.url;\n            const promise = this.encryptObjProperty(model, attachment, {\n                fileName: null,\n            }, key).then(async () => {\n                if (model.key != null) {\n                    attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n                }\n                encAttachments.push(attachment);\n            });\n            promises.push(promise);\n        });\n\n        await Promise.all(promises);\n        return encAttachments;\n    }\n\n    async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n        if (!fieldsModel || !fieldsModel.length) {\n            return null;\n        }\n\n        const self = this;\n        const encFields: Field[] = [];\n        await fieldsModel.reduce((promise, field) => {\n            return promise.then(() => {\n                return self.encryptField(field, key);\n            }).then((encField: Field) => {\n                encFields.push(encField);\n            });\n        }, Promise.resolve());\n\n        return encFields;\n    }\n\n    async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n        const field = new Field();\n        field.type = fieldModel.type;\n        // normalize boolean type field values\n        if (fieldModel.type === FieldType.Boolean && fieldModel.value !== 'true') {\n            fieldModel.value = 'false';\n        }\n\n        await this.encryptObjProperty(fieldModel, field, {\n            name: null,\n            value: null,\n        }, key);\n\n        return field;\n    }\n\n    async encryptPasswordHistories(phModels: PasswordHistoryView[], key: SymmetricCryptoKey): Promise<Password[]> {\n        if (!phModels || !phModels.length) {\n            return null;\n        }\n\n        const self = this;\n        const encPhs: Password[] = [];\n        await phModels.reduce((promise, ph) => {\n            return promise.then(() => {\n                return self.encryptPasswordHistory(ph, key);\n            }).then((encPh: Password) => {\n                encPhs.push(encPh);\n            });\n        }, Promise.resolve());\n\n        return encPhs;\n    }\n\n    async encryptPasswordHistory(phModel: PasswordHistoryView, key: SymmetricCryptoKey): Promise<Password> {\n        const ph = new Password();\n        ph.lastUsedDate = phModel.lastUsedDate;\n\n        await this.encryptObjProperty(phModel, ph, {\n            password: null,\n        }, key);\n\n        return ph;\n    }\n\n    async get(id: string): Promise<Cipher> {\n        const userId = await this.userService.getUserId();\n        const localData = await this.storageService.get<any>(Keys.localData);\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Cipher(ciphers[id], false, localData ? localData[id] : null);\n    }\n\n    async getAll(): Promise<Cipher[]> {\n        const userId = await this.userService.getUserId();\n        const localData = await this.storageService.get<any>(Keys.localData);\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        const response: Cipher[] = [];\n        for (const id in ciphers) {\n            if (ciphers.hasOwnProperty(id)) {\n                response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\n            }\n        }\n        return response;\n    }\n\n    @sequentialize(() => 'getAllDecrypted')\n    async getAllDecrypted(): Promise<CipherView[]> {\n        if (this.decryptedCipherCache != null) {\n            const userId = await this.userService.getUserId();\n            if (this.searchService != null && (this.searchService().indexedEntityId ?? userId) !== userId)\n            {\n                await this.searchService().indexCiphers(userId, this.decryptedCipherCache);\n            }\n            return this.decryptedCipherCache;\n        }\n\n        const decCiphers: CipherView[] = [];\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const promises: any[] = [];\n        const ciphers = await this.getAll();\n        ciphers.forEach(cipher => {\n            promises.push(cipher.decrypt().then(c => decCiphers.push(c)));\n        });\n\n        await Promise.all(promises);\n        decCiphers.sort(this.getLocaleSortingFunction());\n        this.decryptedCipherCache = decCiphers;\n        return this.decryptedCipherCache;\n    }\n\n    async getAllDecryptedForGrouping(groupingId: string, folder: boolean = true): Promise<CipherView[]> {\n        const ciphers = await this.getAllDecrypted();\n\n        return ciphers.filter(cipher => {\n            if (cipher.isDeleted) {\n                return false;\n            }\n            if (folder && cipher.folderId === groupingId) {\n                return true;\n            } else if (!folder && cipher.collectionIds != null && cipher.collectionIds.indexOf(groupingId) > -1) {\n                return true;\n            }\n\n            return false;\n        });\n    }\n\n    async getAllDecryptedForUrl(url: string, includeOtherTypes?: CipherType[],\n        defaultMatch: UriMatchType = null): Promise<CipherView[]> {\n        if (url == null && includeOtherTypes == null) {\n            return Promise.resolve([]);\n        }\n\n        const domain = Utils.getDomain(url);\n        const eqDomainsPromise = domain == null ? Promise.resolve([]) :\n            this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n                let matches: any[] = [];\n                eqDomains.forEach(eqDomain => {\n                    if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                        matches = matches.concat(eqDomain);\n                    }\n                });\n\n                if (!matches.length) {\n                    matches.push(domain);\n                }\n\n                return matches;\n            });\n\n        const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n        const matchingDomains = result[0];\n        const ciphers = result[1];\n\n        if (defaultMatch == null) {\n            defaultMatch = await this.storageService.get<UriMatchType>(ConstantsService.defaultUriMatch);\n            if (defaultMatch == null) {\n                defaultMatch = UriMatchType.Domain;\n            }\n        }\n\n        return ciphers.filter(cipher => {\n            if (cipher.deletedDate != null) {\n                return false;\n            }\n            if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n                return true;\n            }\n\n            if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n                for (let i = 0; i < cipher.login.uris.length; i++) {\n                    const u = cipher.login.uris[i];\n                    if (u.uri == null) {\n                        continue;\n                    }\n\n                    const match = u.match == null ? defaultMatch : u.match;\n                    switch (match) {\n                        case UriMatchType.Domain:\n                            if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                                if (DomainMatchBlacklist.has(u.domain)) {\n                                    const domainUrlHost = Utils.getHost(url);\n                                    if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                                        return true;\n                                    }\n                                } else {\n                                    return true;\n                                }\n                            }\n                            break;\n                        case UriMatchType.Host:\n                            const urlHost = Utils.getHost(url);\n                            if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.Exact:\n                            if (url === u.uri) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.StartsWith:\n                            if (url.startsWith(u.uri)) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.RegularExpression:\n                            try {\n                                const regex = new RegExp(u.uri, 'i');\n                                if (regex.test(url)) {\n                                    return true;\n                                }\n                            } catch { }\n                            break;\n                        case UriMatchType.Never:\n                        default:\n                            break;\n                    }\n                }\n            }\n\n            return false;\n        });\n    }\n\n    async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n        const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n        if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n            const decCiphers: CipherView[] = [];\n            const promises: any[] = [];\n            ciphers.data.forEach(r => {\n                const data = new CipherData(r);\n                const cipher = new Cipher(data);\n                promises.push(cipher.decrypt().then(c => decCiphers.push(c)));\n            });\n            await Promise.all(promises);\n            decCiphers.sort(this.getLocaleSortingFunction());\n            return decCiphers;\n        } else {\n            return [];\n        }\n    }\n\n    async getLastUsedForUrl(url: string, autofillOnPageLoad: boolean = false): Promise<CipherView> {\n        return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n    }\n\n    async getLastLaunchedForUrl(url: string, autofillOnPageLoad: boolean = false): Promise<CipherView> {\n        return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n    }\n\n    async getNextCipherForUrl(url: string): Promise<CipherView> {\n        return this.getCipherForUrl(url, false, false, false);\n    }\n\n    updateLastUsedIndexForUrl(url: string) {\n        this.sortedCiphersCache.updateLastUsedIndex(url);\n    }\n\n    async updateLastUsedDate(id: string): Promise<void> {\n        let ciphersLocalData = await this.storageService.get<any>(Keys.localData);\n        if (!ciphersLocalData) {\n            ciphersLocalData = {};\n        }\n\n        if (ciphersLocalData[id]) {\n            ciphersLocalData[id].lastUsedDate = new Date().getTime();\n        } else {\n            ciphersLocalData[id] = {\n                lastUsedDate: new Date().getTime(),\n            };\n        }\n\n        await this.storageService.save(Keys.localData, ciphersLocalData);\n\n        if (this.decryptedCipherCache == null) {\n            return;\n        }\n\n        for (let i = 0; i < this.decryptedCipherCache.length; i++) {\n            const cached = this.decryptedCipherCache[i];\n            if (cached.id === id) {\n                cached.localData = ciphersLocalData[id];\n                break;\n            }\n        }\n    }\n\n    async updateLastLaunchedDate(id: string): Promise<void> {\n        let ciphersLocalData = await this.storageService.get<any>(Keys.localData);\n        if (!ciphersLocalData) {\n            ciphersLocalData = {};\n        }\n\n        if (ciphersLocalData[id]) {\n            ciphersLocalData[id].lastLaunched = new Date().getTime();\n        } else {\n            ciphersLocalData[id] = {\n                lastUsedDate: new Date().getTime(),\n            };\n        }\n\n        await this.storageService.save(Keys.localData, ciphersLocalData);\n\n        if (this.decryptedCipherCache == null) {\n            return;\n        }\n\n        for (let i = 0; i < this.decryptedCipherCache.length; i++) {\n            const cached = this.decryptedCipherCache[i];\n            if (cached.id === id) {\n                cached.localData = ciphersLocalData[id];\n                break;\n            }\n        }\n    }\n\n    async saveNeverDomain(domain: string): Promise<void> {\n        if (domain == null) {\n            return;\n        }\n\n        let domains = await this.storageService.get<{ [id: string]: any; }>(Keys.neverDomains);\n        if (!domains) {\n            domains = {};\n        }\n        domains[domain] = null;\n        await this.storageService.save(Keys.neverDomains, domains);\n    }\n\n    async saveWithServer(cipher: Cipher): Promise<any> {\n        let response: CipherResponse;\n        if (cipher.id == null) {\n            if (cipher.collectionIds != null) {\n                const request = new CipherCreateRequest(cipher);\n                response = await this.apiService.postCipherCreate(request);\n            } else {\n                const request = new CipherRequest(cipher);\n                response = await this.apiService.postCipher(request);\n            }\n            cipher.id = response.id;\n        } else {\n            const request = new CipherRequest(cipher);\n            response = await this.apiService.putCipher(cipher.id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new CipherData(response, userId, cipher.collectionIds);\n        await this.upsert(data);\n    }\n\n    async shareWithServer(cipher: CipherView, organizationId: string, collectionIds: string[]): Promise<any> {\n        const attachmentPromises: Promise<any>[] = [];\n        if (cipher.attachments != null) {\n            cipher.attachments.forEach(attachment => {\n                if (attachment.key == null) {\n                    attachmentPromises.push(this.shareAttachmentWithServer(attachment, cipher.id, organizationId));\n                }\n            });\n        }\n        await Promise.all(attachmentPromises);\n\n        cipher.organizationId = organizationId;\n        cipher.collectionIds = collectionIds;\n        const encCipher = await this.encrypt(cipher);\n        const request = new CipherShareRequest(encCipher);\n        const response = await this.apiService.putShareCipher(cipher.id, request);\n        const userId = await this.userService.getUserId();\n        const data = new CipherData(response, userId, collectionIds);\n        await this.upsert(data);\n    }\n\n    async shareManyWithServer(ciphers: CipherView[], organizationId: string, collectionIds: string[]): Promise<any> {\n        const promises: Promise<any>[] = [];\n        const encCiphers: Cipher[] = [];\n        for (const cipher of ciphers) {\n            cipher.organizationId = organizationId;\n            cipher.collectionIds = collectionIds;\n            promises.push(this.encrypt(cipher).then(c => {\n                encCiphers.push(c);\n            }));\n        }\n        await Promise.all(promises);\n        const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n        await this.apiService.putShareCiphers(request);\n        const userId = await this.userService.getUserId();\n        await this.upsert(encCiphers.map(c => c.toCipherData(userId)));\n    }\n\n    saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsArrayBuffer(unencryptedFile);\n            reader.onload = async (evt: any) => {\n                try {\n                    const cData = await this.saveAttachmentRawWithServer(cipher,\n                        unencryptedFile.name, evt.target.result, admin);\n                    resolve(cData);\n                } catch (e) {\n                    reject(e);\n                }\n            };\n            reader.onerror = evt => {\n                reject('Error reading file.');\n            };\n        });\n    }\n\n    async saveAttachmentRawWithServer(cipher: Cipher, filename: string,\n        data: ArrayBuffer, admin = false): Promise<Cipher> {\n        const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n        const encFileName = await this.cryptoService.encrypt(filename, key);\n\n        const dataEncKey = await this.cryptoService.makeEncKey(key);\n        const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n        const request: AttachmentRequest = {\n            key: dataEncKey[1].encryptedString,\n            fileName: encFileName.encryptedString,\n            fileSize: encData.buffer.byteLength,\n            adminRequest: admin,\n        };\n\n        let response: CipherResponse;\n        try {\n            const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n            response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n            await this.fileUploadService.uploadCipherAttachment(admin, uploadDataResponse, encFileName, encData);\n        } catch (e) {\n            if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404 || (e as ErrorResponse).statusCode === 405) {\n                response = await this.legacyServerAttachmentFileUpload(admin, cipher.id, encFileName, encData, dataEncKey[1]);\n            } else if (e instanceof ErrorResponse) {\n                throw new Error((e as ErrorResponse).getSingleMessage());\n            } else {\n                throw e;\n            }\n        }\n\n        const userId = await this.userService.getUserId();\n        const cData = new CipherData(response, userId, cipher.collectionIds);\n        if (!admin) {\n            await this.upsert(cData);\n        }\n        return new Cipher(cData);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async legacyServerAttachmentFileUpload(admin: boolean, cipherId: string, encFileName: EncString,\n        encData: EncArrayBuffer, key: EncString) {\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encData.buffer], { type: 'application/octet-stream' });\n            fd.append('key', key.encryptedString);\n            fd.append('data', blob, encFileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('key', key.encryptedString);\n                fd.append('data', Buffer.from(encData.buffer) as any, {\n                    filepath: encFileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        let response: CipherResponse;\n        try {\n            if (admin) {\n                response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n            } else {\n                response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n            }\n        } catch (e) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n        }\n\n        return response;\n    }\n\n    async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n        const request = new CipherCollectionsRequest(cipher.collectionIds);\n        await this.apiService.putCipherCollections(cipher.id, request);\n        const userId = await this.userService.getUserId();\n        const data = cipher.toCipherData(userId);\n        await this.upsert(data);\n    }\n\n    async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            ciphers = {};\n        }\n\n        if (cipher instanceof CipherData) {\n            const c = cipher as CipherData;\n            ciphers[c.id] = c;\n        } else {\n            (cipher as CipherData[]).forEach(c => {\n                ciphers[c.id] = c;\n            });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async replace(ciphers: { [id: string]: CipherData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.ciphersPrefix + userId);\n        this.clearCache();\n    }\n\n    async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n        await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n        const userId = await this.userService.getUserId();\n        let ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            ciphers = {};\n        }\n\n        ids.forEach(id => {\n            if (ciphers.hasOwnProperty(id)) {\n                ciphers[id].folderId = folderId;\n            }\n        });\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            if (ciphers[id] == null) {\n                return;\n            }\n            delete ciphers[id];\n        } else {\n            (id as string[]).forEach(i => {\n                delete ciphers[i];\n            });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteCipher(id);\n        await this.delete(id);\n    }\n\n    async deleteManyWithServer(ids: string[]): Promise<any> {\n        await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n        await this.delete(ids);\n    }\n\n    async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n\n        if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n            return;\n        }\n\n        for (let i = 0; i < ciphers[id].attachments.length; i++) {\n            if (ciphers[id].attachments[i].id === attachmentId) {\n                ciphers[id].attachments.splice(i, 1);\n            }\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n        try {\n            await this.apiService.deleteCipherAttachment(id, attachmentId);\n        } catch (e) {\n            return Promise.reject((e as ErrorResponse).getSingleMessage());\n        }\n        await this.deleteAttachment(id, attachmentId);\n    }\n\n    sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n        const aLastUsed = a.localData && a.localData.lastUsedDate ? a.localData.lastUsedDate as number : null;\n        const bLastUsed = b.localData && b.localData.lastUsedDate ? b.localData.lastUsedDate as number : null;\n\n        const bothNotNull = aLastUsed != null && bLastUsed != null;\n        if (bothNotNull && aLastUsed < bLastUsed) {\n            return 1;\n        }\n        if (aLastUsed != null && bLastUsed == null) {\n            return -1;\n        }\n\n        if (bothNotNull && aLastUsed > bLastUsed) {\n            return -1;\n        }\n        if (bLastUsed != null && aLastUsed == null) {\n            return 1;\n        }\n\n        return 0;\n    }\n\n    sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n        const result = this.sortCiphersByLastUsed(a, b);\n        if (result !== 0) {\n            return result;\n        }\n\n        return this.getLocaleSortingFunction()(a, b);\n    }\n\n    getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n        return (a, b) => {\n            let aName = a.name;\n            let bName = b.name;\n\n            if (aName == null && bName != null) {\n                return -1;\n            }\n            if (aName != null && bName == null) {\n                return 1;\n            }\n            if (aName == null && bName == null) {\n                return 0;\n            }\n\n            const result = this.i18nService.collator ? this.i18nService.collator.compare(aName, bName) :\n                aName.localeCompare(bName);\n\n            if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n                return result;\n            }\n\n            if (a.login.username != null) {\n                aName += a.login.username;\n            }\n\n            if (b.login.username != null) {\n                bName += b.login.username;\n            }\n\n            return this.i18nService.collator ? this.i18nService.collator.compare(aName, bName) :\n                aName.localeCompare(bName);\n        };\n    }\n\n    async softDelete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        const setDeletedDate = (cipherId: string) => {\n            if (ciphers[cipherId] == null) {\n                return;\n            }\n            ciphers[cipherId].deletedDate = new Date().toISOString();\n        };\n\n        if (typeof id === 'string') {\n            setDeletedDate(id);\n        } else {\n            (id as string[]).forEach(setDeletedDate);\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async softDeleteWithServer(id: string): Promise<any> {\n        await this.apiService.putDeleteCipher(id);\n        await this.softDelete(id);\n    }\n\n    async softDeleteManyWithServer(ids: string[]): Promise<any> {\n        await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n        await this.softDelete(ids);\n    }\n\n    async restore(cipher: { id: string, revisionDate: string; } | { id: string, revisionDate: string; }[]) {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        const clearDeletedDate = (c: { id: string, revisionDate: string; }) => {\n            if (ciphers[c.id] == null) {\n                return;\n            }\n            ciphers[c.id].deletedDate = null;\n            ciphers[c.id].revisionDate = c.revisionDate;\n        };\n\n\n        if (cipher.constructor.name === 'Array') {\n            (cipher as { id: string, revisionDate: string; }[]).forEach(clearDeletedDate);\n        } else {\n            clearDeletedDate(cipher as { id: string, revisionDate: string; });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async restoreWithServer(id: string): Promise<any> {\n        const response = await this.apiService.putRestoreCipher(id);\n        await this.restore({ id: id, revisionDate: response.revisionDate });\n    }\n\n    async restoreManyWithServer(ids: string[]): Promise<any> {\n        const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n        const restores: { id: string, revisionDate: string; }[] = [];\n        for (const cipher of response.data) {\n            restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n        }\n        await this.restore(restores);\n    }\n\n    // Helpers\n\n    private async shareAttachmentWithServer(attachmentView: AttachmentView, cipherId: string,\n        organizationId: string): Promise<any> {\n        const attachmentResponse = await this.apiService.nativeFetch(\n            new Request(attachmentView.url, { cache: 'no-store' }));\n        if (attachmentResponse.status !== 200) {\n            throw Error('Failed to download attachment: ' + attachmentResponse.status.toString());\n        }\n\n        const buf = await attachmentResponse.arrayBuffer();\n        const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n        const key = await this.cryptoService.getOrgKey(organizationId);\n        const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n        const dataEncKey = await this.cryptoService.makeEncKey(key);\n        const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encData.buffer], { type: 'application/octet-stream' });\n            fd.append('key', dataEncKey[1].encryptedString);\n            fd.append('data', blob, encFileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('key', dataEncKey[1].encryptedString);\n                fd.append('data', Buffer.from(encData.buffer) as any, {\n                    filepath: encFileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        try {\n            await this.apiService.postShareCipherAttachment(cipherId, attachmentView.id, fd, organizationId);\n        } catch (e) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n        }\n    }\n\n    private async encryptObjProperty<V extends View, D extends Domain>(model: V, obj: D,\n        map: any, key: SymmetricCryptoKey): Promise<void> {\n        const promises = [];\n        const self = this;\n\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            // tslint:disable-next-line\n            (function (theProp, theObj) {\n                const p = Promise.resolve().then(() => {\n                    const modelProp = (model as any)[(map[theProp] || theProp)];\n                    if (modelProp && modelProp !== '') {\n                        return self.cryptoService.encrypt(modelProp, key);\n                    }\n                    return null;\n                }).then((val: EncString) => {\n                    (theObj as any)[theProp] = val;\n                });\n                promises.push(p);\n            })(prop, obj);\n        }\n\n        await Promise.all(promises);\n    }\n\n    private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n        switch (cipher.type) {\n            case CipherType.Login:\n                cipher.login = new Login();\n                cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n                cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n                await this.encryptObjProperty(model.login, cipher.login, {\n                    username: null,\n                    password: null,\n                    totp: null,\n                }, key);\n\n                if (model.login.uris != null) {\n                    cipher.login.uris = [];\n                    for (let i = 0; i < model.login.uris.length; i++) {\n                        const loginUri = new LoginUri();\n                        loginUri.match = model.login.uris[i].match;\n                        await this.encryptObjProperty(model.login.uris[i], loginUri, {\n                            uri: null,\n                        }, key);\n                        cipher.login.uris.push(loginUri);\n                    }\n                }\n                return;\n            case CipherType.SecureNote:\n                cipher.secureNote = new SecureNote();\n                cipher.secureNote.type = model.secureNote.type;\n                return;\n            case CipherType.Card:\n                cipher.card = new Card();\n                await this.encryptObjProperty(model.card, cipher.card, {\n                    cardholderName: null,\n                    brand: null,\n                    number: null,\n                    expMonth: null,\n                    expYear: null,\n                    code: null,\n                }, key);\n                return;\n            case CipherType.Identity:\n                cipher.identity = new Identity();\n                await this.encryptObjProperty(model.identity, cipher.identity, {\n                    title: null,\n                    firstName: null,\n                    middleName: null,\n                    lastName: null,\n                    address1: null,\n                    address2: null,\n                    address3: null,\n                    city: null,\n                    state: null,\n                    postalCode: null,\n                    country: null,\n                    company: null,\n                    email: null,\n                    phone: null,\n                    ssn: null,\n                    username: null,\n                    passportNumber: null,\n                    licenseNumber: null,\n                }, key);\n                return;\n            default:\n                throw new Error('Unknown cipher type.');\n        }\n    }\n\n    private async getCipherForUrl(url: string, lastUsed: boolean, lastLaunched: boolean, autofillOnPageLoad: boolean): Promise<CipherView> {\n        const cacheKey = autofillOnPageLoad ? 'autofillOnPageLoad-' + url : url;\n\n        if (!this.sortedCiphersCache.isCached(cacheKey)) {\n            let ciphers = await this.getAllDecryptedForUrl(url);\n            if (!ciphers) {\n                return null;\n            }\n\n            if (autofillOnPageLoad) {\n                const autofillOnPageLoadDefault = await this.storageService.get(ConstantsService.autoFillOnPageLoadDefaultKey);\n                ciphers = ciphers.filter(cipher => cipher.login.autofillOnPageLoad ||\n                    (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false));\n                if (ciphers.length === 0) {\n                    return null;\n                }\n            }\n\n            this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n        }\n\n        if (lastLaunched) {\n            return this.sortedCiphersCache.getLastLaunched(cacheKey);\n        } else if (lastUsed) {\n            return this.sortedCiphersCache.getLastUsed(cacheKey);\n        } else {\n            return this.sortedCiphersCache.getNext(cacheKey);\n        }\n    }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n    return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n        const originalMethod: () => Promise<any> = descriptor.value;\n        const caches = new Map<any, Map<string, Promise<any>>>();\n\n        const getCache = (obj: any) => {\n            let cache = caches.get(obj);\n            if (cache != null) {\n                return cache;\n            }\n            cache = new Map<string, Promise<any>>();\n            caches.set(obj, cache);\n            return cache;\n        };\n\n        return {\n            value: function(...args: any[]) {\n                const cache = getCache(this);\n                const argsCacheKey = cacheKey(args);\n                let response = cache.get(argsCacheKey);\n                if (response != null) {\n                    return response;\n                }\n\n                const onFinally = () => {\n                    cache.delete(argsCacheKey);\n                    if (cache.size === 0) {\n                        caches.delete(this);\n                    }\n                };\n                response = originalMethod.apply(this, args).then((val: any) => {\n                    onFinally();\n                    return val;\n                }).catch((err: any) => {\n                    onFinally();\n                    throw err;\n                });\n\n                cache.set(argsCacheKey, response);\n                return response;\n            },\n        };\n    };\n}\n","import { CollectionData } from '../models/data/collectionData';\n\nimport { Collection } from '../models/domain/collection';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nimport { CollectionService as CollectionServiceAbstraction } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ServiceUtils } from '../misc/serviceUtils';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    collectionsPrefix: 'collections_',\n};\nconst NestingDelimiter = '/';\n\nexport class CollectionService implements CollectionServiceAbstraction {\n    decryptedCollectionCache: CollectionView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private storageService: StorageService, private i18nService: I18nService) {\n    }\n\n    clearCache(): void {\n        this.decryptedCollectionCache = null;\n    }\n\n    async encrypt(model: CollectionView): Promise<Collection> {\n        if (model.organizationId == null) {\n            throw new Error('Collection has no organization id.');\n        }\n        const key = await this.cryptoService.getOrgKey(model.organizationId);\n        if (key == null) {\n            throw new Error('No key for this collection\\'s organization.');\n        }\n        const collection = new Collection();\n        collection.id = model.id;\n        collection.organizationId = model.organizationId;\n        collection.readOnly = model.readOnly;\n        collection.name = await this.cryptoService.encrypt(model.name, key);\n        return collection;\n    }\n\n    async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n        if (collections == null) {\n            return [];\n        }\n        const decCollections: CollectionView[] = [];\n        const promises: Promise<any>[] = [];\n        collections.forEach(collection => {\n            promises.push(collection.decrypt().then(c => decCollections.push(c)));\n        });\n        await Promise.all(promises);\n        return decCollections.sort(Utils.getSortFunction(this.i18nService, 'name'));\n    }\n\n    async get(id: string): Promise<Collection> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null || !collections.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Collection(collections[id]);\n    }\n\n    async getAll(): Promise<Collection[]> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        const response: Collection[] = [];\n        for (const id in collections) {\n            if (collections.hasOwnProperty(id)) {\n                response.push(new Collection(collections[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<CollectionView[]> {\n        if (this.decryptedCollectionCache != null) {\n            return this.decryptedCollectionCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const collections = await this.getAll();\n        this.decryptedCollectionCache = await this.decryptMany(collections);\n        return this.decryptedCollectionCache;\n    }\n\n    async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n        if (collections == null) {\n            collections = await this.getAllDecrypted();\n        }\n        const nodes: TreeNode<CollectionView>[] = [];\n        collections.forEach(c => {\n            const collectionCopy = new CollectionView();\n            collectionCopy.id = c.id;\n            collectionCopy.organizationId = c.organizationId;\n            const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, '').split(NestingDelimiter) : [];\n            ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n        });\n        return nodes;\n    }\n\n    async getNested(id: string): Promise<TreeNode<CollectionView>> {\n        const collections = await this.getAllNested();\n        return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n    }\n\n    async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null) {\n            collections = {};\n        }\n\n        if (collection instanceof CollectionData) {\n            const c = collection as CollectionData;\n            collections[c.id] = c;\n        } else {\n            (collection as CollectionData[]).forEach(c => {\n                collections[c.id] = c;\n            });\n        }\n\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n\n    async replace(collections: { [id: string]: CollectionData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.collectionsPrefix + userId);\n        this.decryptedCollectionCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            const i = id as string;\n            delete collections[id];\n        } else {\n            (id as string[]).forEach(i => {\n                delete collections[i];\n            });\n        }\n\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n}\n","import {\n    ITreeNodeObject,\n    TreeNode,\n} from '../models/domain/treeNode';\n\nexport class ServiceUtils {\n    static nestedTraverse(nodeTree: TreeNode<ITreeNodeObject>[], partIndex: number, parts: string[],\n        obj: ITreeNodeObject, parent: ITreeNodeObject, delimiter: string) {\n        if (parts.length <= partIndex) {\n            return;\n        }\n\n        const end = partIndex === parts.length - 1;\n        const partName = parts[partIndex];\n\n        for (let i = 0; i < nodeTree.length; i++) {\n            if (nodeTree[i].node.name !== parts[partIndex]) {\n                continue;\n            }\n            if (end && nodeTree[i].node.id !== obj.id) {\n                // Another node with the same name.\n                nodeTree.push(new TreeNode(obj, partName, parent));\n                return;\n            }\n            ServiceUtils.nestedTraverse(nodeTree[i].children, partIndex + 1, parts,\n                obj, nodeTree[i].node, delimiter);\n            return;\n        }\n\n        if (nodeTree.filter(n => n.node.name === partName).length === 0) {\n            if (end) {\n                nodeTree.push(new TreeNode(obj, partName, parent));\n                return;\n            }\n            const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n            ServiceUtils.nestedTraverse(nodeTree, 0, [newPartName, ...parts.slice(partIndex + 2)],\n                obj, parent, delimiter);\n        }\n    }\n\n    static getTreeNodeObject(nodeTree: TreeNode<ITreeNodeObject>[], id: string): TreeNode<ITreeNodeObject> {\n        for (let i = 0; i < nodeTree.length; i++) {\n            if (nodeTree[i].node.id === id) {\n                return nodeTree[i];\n            } else if (nodeTree[i].children != null) {\n                const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n                if (node !== null) {\n                    return node;\n                }\n            }\n        }\n        return null;\n    }\n}\n","import { CryptoService } from '../abstractions/crypto.service';\n\nexport class ContainerService {\n    constructor(private cryptoService: CryptoService) {\n    }\n\n    // deprecated, use attachToGlobal instead\n    attachToWindow(win: any) {\n        this.attachToGlobal(win);\n    }\n\n    attachToGlobal(global: any) {\n        if (!global.bitwardenContainerService) {\n            global.bitwardenContainerService = this;\n        }\n    }\n\n    getCryptoService(): CryptoService {\n        return this.cryptoService;\n    }\n}\n","import * as bigInt from 'big-integer';\n\nimport { EncryptionType } from '../enums/encryptionType';\nimport { HashPurpose } from '../enums/hashPurpose';\nimport { KdfType } from '../enums/kdfType';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncryptedObject } from '../models/domain/encryptedObject';\nimport { EncString } from '../models/domain/encString';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { ProfileOrganizationResponse } from '../models/response/profileOrganizationResponse';\n\nimport { CryptoService as CryptoServiceAbstraction } from '../abstractions/crypto.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { LogService } from '../abstractions/log.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport {\n    KeySuffixOptions,\n    StorageService,\n} from '../abstractions/storage.service';\n\nimport { ConstantsService } from './constants.service';\n\nimport { sequentialize } from '../misc/sequentialize';\nimport { Utils } from '../misc/utils';\nimport { EEFLongWordList } from '../misc/wordlist';\n\nexport const Keys = {\n    key: 'key', // Master Key\n    encOrgKeys: 'encOrgKeys',\n    encPrivateKey: 'encPrivateKey',\n    encKey: 'encKey', // Generated Symmetric Key\n    keyHash: 'keyHash',\n};\n\nexport class CryptoService implements CryptoServiceAbstraction {\n    private key: SymmetricCryptoKey;\n    private encKey: SymmetricCryptoKey;\n    private legacyEtmKey: SymmetricCryptoKey;\n    private keyHash: string;\n    private publicKey: ArrayBuffer;\n    private privateKey: ArrayBuffer;\n    private orgKeys: Map<string, SymmetricCryptoKey>;\n\n    constructor(private storageService: StorageService, protected secureStorageService: StorageService,\n        private cryptoFunctionService: CryptoFunctionService, protected platformUtilService: PlatformUtilsService,\n        protected logService: LogService) {\n    }\n\n    async setKey(key: SymmetricCryptoKey): Promise<any> {\n        this.key = key;\n\n        await this.storeKey(key);\n    }\n\n    setKeyHash(keyHash: string): Promise<{}> {\n        this.keyHash = keyHash;\n        return this.storageService.save(Keys.keyHash, keyHash);\n    }\n\n    async setEncKey(encKey: string): Promise<{}> {\n        if (encKey == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.encKey, encKey);\n        this.encKey = null;\n    }\n\n    async setEncPrivateKey(encPrivateKey: string): Promise<{}> {\n        if (encPrivateKey == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.encPrivateKey, encPrivateKey);\n        this.privateKey = null;\n    }\n\n    setOrgKeys(orgs: ProfileOrganizationResponse[]): Promise<{}> {\n        const orgKeys: any = {};\n        orgs.forEach(org => {\n            orgKeys[org.id] = org.key;\n        });\n\n        this.orgKeys = null;\n        return this.storageService.save(Keys.encOrgKeys, orgKeys);\n    }\n\n    async getKey(keySuffix?: KeySuffixOptions): Promise<SymmetricCryptoKey> {\n        if (this.key != null) {\n            return this.key;\n        }\n\n        keySuffix ||= 'auto';\n        const symmetricKey = await this.getKeyFromStorage(keySuffix);\n\n        if (symmetricKey != null) {\n            this.setKey(symmetricKey);\n        }\n\n        return symmetricKey;\n    }\n\n    async getKeyFromStorage(keySuffix: KeySuffixOptions): Promise<SymmetricCryptoKey> {\n        const key = await this.retrieveKeyFromStorage(keySuffix);\n        if (key != null) {\n\n            const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n            if (!await this.validateKey(symmetricKey)) {\n                this.logService.warning('Wrong key, throwing away stored key');\n                this.secureStorageService.remove(Keys.key, { keySuffix: keySuffix });\n                return null;\n            }\n\n            return symmetricKey;\n        }\n        return null;\n    }\n\n    async getKeyHash(): Promise<string> {\n        if (this.keyHash != null) {\n            return this.keyHash;\n        }\n\n        const keyHash = await this.storageService.get<string>(Keys.keyHash);\n        if (keyHash != null) {\n            this.keyHash = keyHash;\n        }\n\n        return keyHash == null ? null : this.keyHash;\n    }\n\n    async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n        const storedKeyHash = await this.getKeyHash();\n        if (masterPassword != null && storedKeyHash != null) {\n            const localKeyHash = await this.hashPassword(masterPassword, key, HashPurpose.LocalAuthorization);\n            if (localKeyHash != null && storedKeyHash === localKeyHash) {\n                return true;\n            }\n\n            // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n            const serverKeyHash = await this.hashPassword(masterPassword, key, HashPurpose.ServerAuthorization);\n            if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n                await this.setKeyHash(localKeyHash);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    @sequentialize(() => 'getEncKey')\n    async getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n        if (this.encKey != null) {\n            return this.encKey;\n        }\n\n        const encKey = await this.storageService.get<string>(Keys.encKey);\n        if (encKey == null) {\n            return null;\n        }\n\n        if (key == null) {\n            key = await this.getKey();\n        }\n        if (key == null) {\n            return null;\n        }\n\n        let decEncKey: ArrayBuffer;\n        const encKeyCipher = new EncString(encKey);\n        if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n            decEncKey = await this.decryptToBytes(encKeyCipher, key);\n        } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n            const newKey = await this.stretchKey(key);\n            decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n        } else {\n            throw new Error('Unsupported encKey type.');\n        }\n\n        if (decEncKey == null) {\n            return null;\n        }\n        this.encKey = new SymmetricCryptoKey(decEncKey);\n        return this.encKey;\n    }\n\n    async getPublicKey(): Promise<ArrayBuffer> {\n        if (this.publicKey != null) {\n            return this.publicKey;\n        }\n\n        const privateKey = await this.getPrivateKey();\n        if (privateKey == null) {\n            return null;\n        }\n\n        this.publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n        return this.publicKey;\n    }\n\n    async getPrivateKey(): Promise<ArrayBuffer> {\n        if (this.privateKey != null) {\n            return this.privateKey;\n        }\n\n        const encPrivateKey = await this.storageService.get<string>(Keys.encPrivateKey);\n        if (encPrivateKey == null) {\n            return null;\n        }\n\n        this.privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n        return this.privateKey;\n    }\n\n    async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n        if (publicKey == null) {\n            publicKey = await this.getPublicKey();\n        }\n        if (publicKey === null) {\n            throw new Error('No public key available.');\n        }\n        const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, 'sha256');\n        const userFingerprint = await this.cryptoFunctionService.hkdfExpand(keyFingerprint, userId, 32, 'sha256');\n        return this.hashPhrase(userFingerprint);\n    }\n\n    @sequentialize(() => 'getOrgKeys')\n    async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n        if (this.orgKeys != null && this.orgKeys.size > 0) {\n            return this.orgKeys;\n        }\n\n        const encOrgKeys = await this.storageService.get<any>(Keys.encOrgKeys);\n        if (encOrgKeys == null) {\n            return null;\n        }\n\n        const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n        let setKey = false;\n\n        for (const orgId in encOrgKeys) {\n            if (!encOrgKeys.hasOwnProperty(orgId)) {\n                continue;\n            }\n\n            const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n            orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n            setKey = true;\n        }\n\n        if (setKey) {\n            this.orgKeys = orgKeys;\n        }\n\n        return this.orgKeys;\n    }\n\n    async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n        if (orgId == null) {\n            return null;\n        }\n\n        const orgKeys = await this.getOrgKeys();\n        if (orgKeys == null || !orgKeys.has(orgId)) {\n            return null;\n        }\n\n        return orgKeys.get(orgId);\n    }\n\n    async hasKey(): Promise<boolean> {\n        return this.hasKeyInMemory() || await this.hasKeyStored('auto') || await this.hasKeyStored('biometric');\n    }\n\n    hasKeyInMemory(): boolean {\n        return this.key != null;\n    }\n\n    hasKeyStored(keySuffix: KeySuffixOptions): Promise<boolean> {\n        return this.secureStorageService.has(Keys.key, { keySuffix: keySuffix });\n    }\n\n    async hasEncKey(): Promise<boolean> {\n        const encKey = await this.storageService.get<string>(Keys.encKey);\n        return encKey != null;\n    }\n\n    async clearKey(clearSecretStorage: boolean = true): Promise<any> {\n        this.key = this.legacyEtmKey = null;\n        if (clearSecretStorage) {\n            this.clearStoredKey('auto');\n            this.clearStoredKey('biometric');\n        }\n    }\n\n    async clearStoredKey(keySuffix: KeySuffixOptions) {\n        await this.secureStorageService.remove(Keys.key, { keySuffix: keySuffix });\n    }\n\n    clearKeyHash(): Promise<any> {\n        this.keyHash = null;\n        return this.storageService.remove(Keys.keyHash);\n    }\n\n    clearEncKey(memoryOnly?: boolean): Promise<any> {\n        this.encKey = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encKey);\n    }\n\n    clearKeyPair(memoryOnly?: boolean): Promise<any> {\n        this.privateKey = null;\n        this.publicKey = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encPrivateKey);\n    }\n\n    clearOrgKeys(memoryOnly?: boolean): Promise<any> {\n        this.orgKeys = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encOrgKeys);\n    }\n\n    clearPinProtectedKey(): Promise<any> {\n        return this.storageService.remove(ConstantsService.pinProtectedKey);\n    }\n\n    async clearKeys(): Promise<any> {\n        await this.clearKey();\n        await this.clearKeyHash();\n        await this.clearOrgKeys();\n        await this.clearEncKey();\n        await this.clearKeyPair();\n        await this.clearPinProtectedKey();\n    }\n\n    async toggleKey(): Promise<any> {\n        const key = await this.getKey();\n\n        await this.setKey(key);\n    }\n\n    async makeKey(password: string, salt: string, kdf: KdfType, kdfIterations: number):\n        Promise<SymmetricCryptoKey> {\n        let key: ArrayBuffer = null;\n        if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n            if (kdfIterations == null) {\n                kdfIterations = 5000;\n            } else if (kdfIterations < 5000) {\n                throw new Error('PBKDF2 iteration minimum is 5000.');\n            }\n            key = await this.cryptoFunctionService.pbkdf2(password, salt, 'sha256', kdfIterations);\n        } else {\n            throw new Error('Unknown Kdf.');\n        }\n        return new SymmetricCryptoKey(key);\n    }\n\n    async makeKeyFromPin(pin: string, salt: string, kdf: KdfType, kdfIterations: number,\n        protectedKeyCs: EncString = null):\n        Promise<SymmetricCryptoKey> {\n        if (protectedKeyCs == null) {\n            const pinProtectedKey = await this.storageService.get<string>(ConstantsService.pinProtectedKey);\n            if (pinProtectedKey == null) {\n                throw new Error('No PIN protected key found.');\n            }\n            protectedKeyCs = new EncString(pinProtectedKey);\n        }\n        const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n        const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n        return new SymmetricCryptoKey(decKey);\n    }\n\n    async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n        const shareKey = await this.cryptoFunctionService.randomBytes(64);\n        const publicKey = await this.getPublicKey();\n        const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n        return [encShareKey, new SymmetricCryptoKey(shareKey)];\n    }\n\n    async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n        const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n        const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n        const privateEnc = await this.encrypt(keyPair[1], key);\n        return [publicB64, privateEnc];\n    }\n\n    async makePinKey(pin: string, salt: string, kdf: KdfType, kdfIterations: number): Promise<SymmetricCryptoKey> {\n        const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n        return await this.stretchKey(pinKey);\n    }\n\n    async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n        const sendKey = await this.cryptoFunctionService.hkdf(keyMaterial, 'bitwarden-send', 'send', 64, 'sha256');\n        return new SymmetricCryptoKey(sendKey);\n    }\n\n    async hashPassword(password: string, key: SymmetricCryptoKey, hashPurpose?: HashPurpose): Promise<string> {\n        if (key == null) {\n            key = await this.getKey();\n        }\n        if (password == null || key == null) {\n            throw new Error('Invalid parameters.');\n        }\n\n        const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n        const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, 'sha256', iterations);\n        return Utils.fromBufferToB64(hash);\n    }\n\n    async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n        const theKey = await this.getKeyForEncryption(key);\n        const encKey = await this.cryptoFunctionService.randomBytes(64);\n        return this.buildEncKey(theKey, encKey);\n    }\n\n    async remakeEncKey(key: SymmetricCryptoKey, encKey?: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n        if (encKey == null) {\n            encKey = await this.getEncKey();\n        }\n        return this.buildEncKey(key, encKey.key);\n    }\n\n    async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n        if (plainValue == null) {\n            return Promise.resolve(null);\n        }\n\n        let plainBuf: ArrayBuffer;\n        if (typeof (plainValue) === 'string') {\n            plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n        } else {\n            plainBuf = plainValue;\n        }\n\n        const encObj = await this.aesEncrypt(plainBuf, key);\n        const iv = Utils.fromBufferToB64(encObj.iv);\n        const data = Utils.fromBufferToB64(encObj.data);\n        const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n        return new EncString(encObj.key.encType, data, iv, mac);\n    }\n\n    async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n        const encValue = await this.aesEncrypt(plainValue, key);\n        let macLen = 0;\n        if (encValue.mac != null) {\n            macLen = encValue.mac.byteLength;\n        }\n\n        const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n        encBytes.set([encValue.key.encType]);\n        encBytes.set(new Uint8Array(encValue.iv), 1);\n        if (encValue.mac != null) {\n            encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n        }\n\n        encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n        return new EncArrayBuffer(encBytes.buffer);\n    }\n\n    async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n        if (publicKey == null) {\n            publicKey = await this.getPublicKey();\n        }\n        if (publicKey == null) {\n            throw new Error('Public key unavailable.');\n        }\n\n        const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, 'sha1');\n        return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n    }\n\n    async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n        const headerPieces = encValue.split('.');\n        let encType: EncryptionType = null;\n        let encPieces: string[];\n\n        if (headerPieces.length === 1) {\n            encType = EncryptionType.Rsa2048_OaepSha256_B64;\n            encPieces = [headerPieces[0]];\n        } else if (headerPieces.length === 2) {\n            try {\n                encType = parseInt(headerPieces[0], null);\n                encPieces = headerPieces[1].split('|');\n            } catch (e) { }\n        }\n\n        switch (encType) {\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n            // HmacSha256 types are deprecated\n            case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n                break;\n            default:\n                throw new Error('encType unavailable.');\n        }\n\n        if (encPieces == null || encPieces.length <= 0) {\n            throw new Error('encPieces unavailable.');\n        }\n\n        const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n        const privateKey = privateKeyValue ?? await this.getPrivateKey();\n        if (privateKey == null) {\n            throw new Error('No private key.');\n        }\n\n        let alg: 'sha1' | 'sha256' = 'sha1';\n        switch (encType) {\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n                alg = 'sha256';\n                break;\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n            case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n                break;\n            default:\n                throw new Error('encType unavailable.');\n        }\n\n        return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n    }\n\n    async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const iv = Utils.fromB64ToArray(encString.iv).buffer;\n        const data = Utils.fromB64ToArray(encString.data).buffer;\n        const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n        const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n        if (decipher == null) {\n            return null;\n        }\n\n        return decipher;\n    }\n\n    async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n        return await this.aesDecryptToUtf8(encString.encryptionType, encString.data,\n            encString.iv, encString.mac, key);\n    }\n\n    async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        if (encBuf == null) {\n            throw new Error('no encBuf.');\n        }\n\n        const encBytes = new Uint8Array(encBuf);\n        const encType = encBytes[0];\n        let ctBytes: Uint8Array = null;\n        let ivBytes: Uint8Array = null;\n        let macBytes: Uint8Array = null;\n\n        switch (encType) {\n            case EncryptionType.AesCbc128_HmacSha256_B64:\n            case EncryptionType.AesCbc256_HmacSha256_B64:\n                if (encBytes.length <= 49) { // 1 + 16 + 32 + ctLength\n                    return null;\n                }\n\n                ivBytes = encBytes.slice(1, 17);\n                macBytes = encBytes.slice(17, 49);\n                ctBytes = encBytes.slice(49);\n                break;\n            case EncryptionType.AesCbc256_B64:\n                if (encBytes.length <= 17) { // 1 + 16 + ctLength\n                    return null;\n                }\n\n                ivBytes = encBytes.slice(1, 17);\n                ctBytes = encBytes.slice(17);\n                break;\n            default:\n                return null;\n        }\n\n        return await this.aesDecryptToBytes(encType, ctBytes.buffer, ivBytes.buffer,\n            macBytes != null ? macBytes.buffer : null, key);\n    }\n\n    // EFForg/OpenWireless\n    // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n    async randomNumber(min: number, max: number): Promise<number> {\n        let rval = 0;\n        const range = max - min + 1;\n        const bitsNeeded = Math.ceil(Math.log2(range));\n        if (bitsNeeded > 53) {\n            throw new Error('We cannot generate numbers larger than 53 bits.');\n        }\n\n        const bytesNeeded = Math.ceil(bitsNeeded / 8);\n        const mask = Math.pow(2, bitsNeeded) - 1;\n        // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n        // Fill a byte array with N random numbers\n        const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n        let p = (bytesNeeded - 1) * 8;\n        for (let i = 0; i < bytesNeeded; i++) {\n            rval += byteArray[i] * Math.pow(2, p);\n            p -= 8;\n        }\n\n        // Use & to apply the mask and reduce the number of recursive lookups\n        // tslint:disable-next-line\n        rval = rval & mask;\n\n        if (rval >= range) {\n            // Integer out of acceptable range\n            return this.randomNumber(min, max);\n        }\n\n        // Return an integer that falls within the range\n        return min + rval;\n    }\n\n    async validateKey(key: SymmetricCryptoKey) {\n        try {\n            const encPrivateKey = await this.storageService.get<string>(Keys.encPrivateKey);\n            const encKey = await this.getEncKey(key);\n            if (encPrivateKey == null || encKey == null) {\n                return false;\n            }\n\n            const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n            await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n        } catch (e) {\n            return false;\n        }\n\n        return true;\n    }\n\n    // Helpers\n\n    protected async storeKey(key: SymmetricCryptoKey) {\n        if (await this.shouldStoreKey('auto') || await this.shouldStoreKey('biometric')) {\n            this.secureStorageService.save(Keys.key, key.keyB64);\n        } else {\n            this.secureStorageService.remove(Keys.key);\n        }\n    }\n\n    protected async shouldStoreKey(keySuffix: KeySuffixOptions) {\n        let shouldStoreKey = false;\n        if (keySuffix === 'auto') {\n            const vaultTimeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n            shouldStoreKey = vaultTimeout == null;\n        } else if (keySuffix === 'biometric') {\n            const biometricUnlock = await this.storageService.get<boolean>(ConstantsService.biometricUnlockKey);\n            shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n        }\n        return shouldStoreKey;\n    }\n\n    protected retrieveKeyFromStorage(keySuffix: KeySuffixOptions) {\n        return this.secureStorageService.get<string>(Keys.key, { keySuffix: keySuffix });\n    }\n\n    private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n        const obj = new EncryptedObject();\n        obj.key = await this.getKeyForEncryption(key);\n        obj.iv = await this.cryptoFunctionService.randomBytes(16);\n        obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n        if (obj.key.macKey != null) {\n            const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n            macData.set(new Uint8Array(obj.iv), 0);\n            macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n            obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, 'sha256');\n        }\n\n        return obj;\n    }\n\n    private async aesDecryptToUtf8(encType: EncryptionType, data: string, iv: string, mac: string,\n        key: SymmetricCryptoKey): Promise<string> {\n        const keyForEnc = await this.getKeyForEncryption(key);\n        const theKey = this.resolveLegacyKey(encType, keyForEnc);\n\n        if (theKey.macKey != null && mac == null) {\n            this.logService.error('mac required.');\n            return null;\n        }\n\n        if (theKey.encType !== encType) {\n            this.logService.error('encType unavailable.');\n            return null;\n        }\n\n        const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n        if (fastParams.macKey != null && fastParams.mac != null) {\n            const computedMac = await this.cryptoFunctionService.hmacFast(fastParams.macData,\n                fastParams.macKey, 'sha256');\n            const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n            if (!macsEqual) {\n                this.logService.error('mac failed.');\n                return null;\n            }\n        }\n\n        return this.cryptoFunctionService.aesDecryptFast(fastParams);\n    }\n\n    private async aesDecryptToBytes(encType: EncryptionType, data: ArrayBuffer, iv: ArrayBuffer,\n        mac: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const keyForEnc = await this.getKeyForEncryption(key);\n        const theKey = this.resolveLegacyKey(encType, keyForEnc);\n\n        if (theKey.macKey != null && mac == null) {\n            return null;\n        }\n\n        if (theKey.encType !== encType) {\n            return null;\n        }\n\n        if (theKey.macKey != null && mac != null) {\n            const macData = new Uint8Array(iv.byteLength + data.byteLength);\n            macData.set(new Uint8Array(iv), 0);\n            macData.set(new Uint8Array(data), iv.byteLength);\n            const computedMac = await this.cryptoFunctionService.hmac(macData.buffer, theKey.macKey, 'sha256');\n            if (computedMac === null) {\n                return null;\n            }\n\n            const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n            if (!macsMatch) {\n                this.logService.error('mac failed.');\n                return null;\n            }\n        }\n\n        return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n    }\n\n    private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n        if (key != null) {\n            return key;\n        }\n\n        const encKey = await this.getEncKey();\n        if (encKey != null) {\n            return encKey;\n        }\n\n        return await this.getKey();\n    }\n\n    private resolveLegacyKey(encType: EncryptionType, key: SymmetricCryptoKey): SymmetricCryptoKey {\n        if (encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n            key.encType === EncryptionType.AesCbc256_B64) {\n            // Old encrypt-then-mac scheme, make a new key\n            if (this.legacyEtmKey == null) {\n                this.legacyEtmKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n            }\n            return this.legacyEtmKey;\n        }\n\n        return key;\n    }\n\n    private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n        const newKey = new Uint8Array(64);\n        const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, 'enc', 32, 'sha256');\n        const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, 'mac', 32, 'sha256');\n        newKey.set(new Uint8Array(encKey));\n        newKey.set(new Uint8Array(macKey), 32);\n        return new SymmetricCryptoKey(newKey.buffer);\n    }\n\n    private async hashPhrase(hash: ArrayBuffer, minimumEntropy: number = 64) {\n        const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n        let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n        const hashArr = Array.from(new Uint8Array(hash));\n        const entropyAvailable = hashArr.length * 4;\n        if (numWords * entropyPerWord > entropyAvailable) {\n            throw new Error('Output entropy of hash function is too small');\n        }\n\n        const phrase: string[] = [];\n        let hashNumber = bigInt.fromArray(hashArr, 256);\n        while (numWords--) {\n            const remainder = hashNumber.mod(EEFLongWordList.length);\n            hashNumber = hashNumber.divide(EEFLongWordList.length);\n            phrase.push(EEFLongWordList[remainder as any]);\n        }\n        return phrase;\n    }\n\n    private async buildEncKey(key: SymmetricCryptoKey, encKey: ArrayBuffer)\n        : Promise<[SymmetricCryptoKey, EncString]> {\n        let encKeyEnc: EncString = null;\n        if (key.key.byteLength === 32) {\n            const newKey = await this.stretchKey(key);\n            encKeyEnc = await this.encrypt(encKey, newKey);\n        } else if (key.key.byteLength === 64) {\n            encKeyEnc = await this.encrypt(encKey, key);\n        } else {\n            throw new Error('Invalid key size.');\n        }\n        return [new SymmetricCryptoKey(encKey), encKeyEnc];\n    }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n    'abacus',\n    'abdomen',\n    'abdominal',\n    'abide',\n    'abiding',\n    'ability',\n    'ablaze',\n    'able',\n    'abnormal',\n    'abrasion',\n    'abrasive',\n    'abreast',\n    'abridge',\n    'abroad',\n    'abruptly',\n    'absence',\n    'absentee',\n    'absently',\n    'absinthe',\n    'absolute',\n    'absolve',\n    'abstain',\n    'abstract',\n    'absurd',\n    'accent',\n    'acclaim',\n    'acclimate',\n    'accompany',\n    'account',\n    'accuracy',\n    'accurate',\n    'accustom',\n    'acetone',\n    'achiness',\n    'aching',\n    'acid',\n    'acorn',\n    'acquaint',\n    'acquire',\n    'acre',\n    'acrobat',\n    'acronym',\n    'acting',\n    'action',\n    'activate',\n    'activator',\n    'active',\n    'activism',\n    'activist',\n    'activity',\n    'actress',\n    'acts',\n    'acutely',\n    'acuteness',\n    'aeration',\n    'aerobics',\n    'aerosol',\n    'aerospace',\n    'afar',\n    'affair',\n    'affected',\n    'affecting',\n    'affection',\n    'affidavit',\n    'affiliate',\n    'affirm',\n    'affix',\n    'afflicted',\n    'affluent',\n    'afford',\n    'affront',\n    'aflame',\n    'afloat',\n    'aflutter',\n    'afoot',\n    'afraid',\n    'afterglow',\n    'afterlife',\n    'aftermath',\n    'aftermost',\n    'afternoon',\n    'aged',\n    'ageless',\n    'agency',\n    'agenda',\n    'agent',\n    'aggregate',\n    'aghast',\n    'agile',\n    'agility',\n    'aging',\n    'agnostic',\n    'agonize',\n    'agonizing',\n    'agony',\n    'agreeable',\n    'agreeably',\n    'agreed',\n    'agreeing',\n    'agreement',\n    'aground',\n    'ahead',\n    'ahoy',\n    'aide',\n    'aids',\n    'aim',\n    'ajar',\n    'alabaster',\n    'alarm',\n    'albatross',\n    'album',\n    'alfalfa',\n    'algebra',\n    'algorithm',\n    'alias',\n    'alibi',\n    'alienable',\n    'alienate',\n    'aliens',\n    'alike',\n    'alive',\n    'alkaline',\n    'alkalize',\n    'almanac',\n    'almighty',\n    'almost',\n    'aloe',\n    'aloft',\n    'aloha',\n    'alone',\n    'alongside',\n    'aloof',\n    'alphabet',\n    'alright',\n    'although',\n    'altitude',\n    'alto',\n    'aluminum',\n    'alumni',\n    'always',\n    'amaretto',\n    'amaze',\n    'amazingly',\n    'amber',\n    'ambiance',\n    'ambiguity',\n    'ambiguous',\n    'ambition',\n    'ambitious',\n    'ambulance',\n    'ambush',\n    'amendable',\n    'amendment',\n    'amends',\n    'amenity',\n    'amiable',\n    'amicably',\n    'amid',\n    'amigo',\n    'amino',\n    'amiss',\n    'ammonia',\n    'ammonium',\n    'amnesty',\n    'amniotic',\n    'among',\n    'amount',\n    'amperage',\n    'ample',\n    'amplifier',\n    'amplify',\n    'amply',\n    'amuck',\n    'amulet',\n    'amusable',\n    'amused',\n    'amusement',\n    'amuser',\n    'amusing',\n    'anaconda',\n    'anaerobic',\n    'anagram',\n    'anatomist',\n    'anatomy',\n    'anchor',\n    'anchovy',\n    'ancient',\n    'android',\n    'anemia',\n    'anemic',\n    'aneurism',\n    'anew',\n    'angelfish',\n    'angelic',\n    'anger',\n    'angled',\n    'angler',\n    'angles',\n    'angling',\n    'angrily',\n    'angriness',\n    'anguished',\n    'angular',\n    'animal',\n    'animate',\n    'animating',\n    'animation',\n    'animator',\n    'anime',\n    'animosity',\n    'ankle',\n    'annex',\n    'annotate',\n    'announcer',\n    'annoying',\n    'annually',\n    'annuity',\n    'anointer',\n    'another',\n    'answering',\n    'antacid',\n    'antarctic',\n    'anteater',\n    'antelope',\n    'antennae',\n    'anthem',\n    'anthill',\n    'anthology',\n    'antibody',\n    'antics',\n    'antidote',\n    'antihero',\n    'antiquely',\n    'antiques',\n    'antiquity',\n    'antirust',\n    'antitoxic',\n    'antitrust',\n    'antiviral',\n    'antivirus',\n    'antler',\n    'antonym',\n    'antsy',\n    'anvil',\n    'anybody',\n    'anyhow',\n    'anymore',\n    'anyone',\n    'anyplace',\n    'anything',\n    'anytime',\n    'anyway',\n    'anywhere',\n    'aorta',\n    'apache',\n    'apostle',\n    'appealing',\n    'appear',\n    'appease',\n    'appeasing',\n    'appendage',\n    'appendix',\n    'appetite',\n    'appetizer',\n    'applaud',\n    'applause',\n    'apple',\n    'appliance',\n    'applicant',\n    'applied',\n    'apply',\n    'appointee',\n    'appraisal',\n    'appraiser',\n    'apprehend',\n    'approach',\n    'approval',\n    'approve',\n    'apricot',\n    'april',\n    'apron',\n    'aptitude',\n    'aptly',\n    'aqua',\n    'aqueduct',\n    'arbitrary',\n    'arbitrate',\n    'ardently',\n    'area',\n    'arena',\n    'arguable',\n    'arguably',\n    'argue',\n    'arise',\n    'armadillo',\n    'armband',\n    'armchair',\n    'armed',\n    'armful',\n    'armhole',\n    'arming',\n    'armless',\n    'armoire',\n    'armored',\n    'armory',\n    'armrest',\n    'army',\n    'aroma',\n    'arose',\n    'around',\n    'arousal',\n    'arrange',\n    'array',\n    'arrest',\n    'arrival',\n    'arrive',\n    'arrogance',\n    'arrogant',\n    'arson',\n    'art',\n    'ascend',\n    'ascension',\n    'ascent',\n    'ascertain',\n    'ashamed',\n    'ashen',\n    'ashes',\n    'ashy',\n    'aside',\n    'askew',\n    'asleep',\n    'asparagus',\n    'aspect',\n    'aspirate',\n    'aspire',\n    'aspirin',\n    'astonish',\n    'astound',\n    'astride',\n    'astrology',\n    'astronaut',\n    'astronomy',\n    'astute',\n    'atlantic',\n    'atlas',\n    'atom',\n    'atonable',\n    'atop',\n    'atrium',\n    'atrocious',\n    'atrophy',\n    'attach',\n    'attain',\n    'attempt',\n    'attendant',\n    'attendee',\n    'attention',\n    'attentive',\n    'attest',\n    'attic',\n    'attire',\n    'attitude',\n    'attractor',\n    'attribute',\n    'atypical',\n    'auction',\n    'audacious',\n    'audacity',\n    'audible',\n    'audibly',\n    'audience',\n    'audio',\n    'audition',\n    'augmented',\n    'august',\n    'authentic',\n    'author',\n    'autism',\n    'autistic',\n    'autograph',\n    'automaker',\n    'automated',\n    'automatic',\n    'autopilot',\n    'available',\n    'avalanche',\n    'avatar',\n    'avenge',\n    'avenging',\n    'avenue',\n    'average',\n    'aversion',\n    'avert',\n    'aviation',\n    'aviator',\n    'avid',\n    'avoid',\n    'await',\n    'awaken',\n    'award',\n    'aware',\n    'awhile',\n    'awkward',\n    'awning',\n    'awoke',\n    'awry',\n    'axis',\n    'babble',\n    'babbling',\n    'babied',\n    'baboon',\n    'backache',\n    'backboard',\n    'backboned',\n    'backdrop',\n    'backed',\n    'backer',\n    'backfield',\n    'backfire',\n    'backhand',\n    'backing',\n    'backlands',\n    'backlash',\n    'backless',\n    'backlight',\n    'backlit',\n    'backlog',\n    'backpack',\n    'backpedal',\n    'backrest',\n    'backroom',\n    'backshift',\n    'backside',\n    'backslid',\n    'backspace',\n    'backspin',\n    'backstab',\n    'backstage',\n    'backtalk',\n    'backtrack',\n    'backup',\n    'backward',\n    'backwash',\n    'backwater',\n    'backyard',\n    'bacon',\n    'bacteria',\n    'bacterium',\n    'badass',\n    'badge',\n    'badland',\n    'badly',\n    'badness',\n    'baffle',\n    'baffling',\n    'bagel',\n    'bagful',\n    'baggage',\n    'bagged',\n    'baggie',\n    'bagginess',\n    'bagging',\n    'baggy',\n    'bagpipe',\n    'baguette',\n    'baked',\n    'bakery',\n    'bakeshop',\n    'baking',\n    'balance',\n    'balancing',\n    'balcony',\n    'balmy',\n    'balsamic',\n    'bamboo',\n    'banana',\n    'banish',\n    'banister',\n    'banjo',\n    'bankable',\n    'bankbook',\n    'banked',\n    'banker',\n    'banking',\n    'banknote',\n    'bankroll',\n    'banner',\n    'bannister',\n    'banshee',\n    'banter',\n    'barbecue',\n    'barbed',\n    'barbell',\n    'barber',\n    'barcode',\n    'barge',\n    'bargraph',\n    'barista',\n    'baritone',\n    'barley',\n    'barmaid',\n    'barman',\n    'barn',\n    'barometer',\n    'barrack',\n    'barracuda',\n    'barrel',\n    'barrette',\n    'barricade',\n    'barrier',\n    'barstool',\n    'bartender',\n    'barterer',\n    'bash',\n    'basically',\n    'basics',\n    'basil',\n    'basin',\n    'basis',\n    'basket',\n    'batboy',\n    'batch',\n    'bath',\n    'baton',\n    'bats',\n    'battalion',\n    'battered',\n    'battering',\n    'battery',\n    'batting',\n    'battle',\n    'bauble',\n    'bazooka',\n    'blabber',\n    'bladder',\n    'blade',\n    'blah',\n    'blame',\n    'blaming',\n    'blanching',\n    'blandness',\n    'blank',\n    'blaspheme',\n    'blasphemy',\n    'blast',\n    'blatancy',\n    'blatantly',\n    'blazer',\n    'blazing',\n    'bleach',\n    'bleak',\n    'bleep',\n    'blemish',\n    'blend',\n    'bless',\n    'blighted',\n    'blimp',\n    'bling',\n    'blinked',\n    'blinker',\n    'blinking',\n    'blinks',\n    'blip',\n    'blissful',\n    'blitz',\n    'blizzard',\n    'bloated',\n    'bloating',\n    'blob',\n    'blog',\n    'bloomers',\n    'blooming',\n    'blooper',\n    'blot',\n    'blouse',\n    'blubber',\n    'bluff',\n    'bluish',\n    'blunderer',\n    'blunt',\n    'blurb',\n    'blurred',\n    'blurry',\n    'blurt',\n    'blush',\n    'blustery',\n    'boaster',\n    'boastful',\n    'boasting',\n    'boat',\n    'bobbed',\n    'bobbing',\n    'bobble',\n    'bobcat',\n    'bobsled',\n    'bobtail',\n    'bodacious',\n    'body',\n    'bogged',\n    'boggle',\n    'bogus',\n    'boil',\n    'bok',\n    'bolster',\n    'bolt',\n    'bonanza',\n    'bonded',\n    'bonding',\n    'bondless',\n    'boned',\n    'bonehead',\n    'boneless',\n    'bonelike',\n    'boney',\n    'bonfire',\n    'bonnet',\n    'bonsai',\n    'bonus',\n    'bony',\n    'boogeyman',\n    'boogieman',\n    'book',\n    'boondocks',\n    'booted',\n    'booth',\n    'bootie',\n    'booting',\n    'bootlace',\n    'bootleg',\n    'boots',\n    'boozy',\n    'borax',\n    'boring',\n    'borough',\n    'borrower',\n    'borrowing',\n    'boss',\n    'botanical',\n    'botanist',\n    'botany',\n    'botch',\n    'both',\n    'bottle',\n    'bottling',\n    'bottom',\n    'bounce',\n    'bouncing',\n    'bouncy',\n    'bounding',\n    'boundless',\n    'bountiful',\n    'bovine',\n    'boxcar',\n    'boxer',\n    'boxing',\n    'boxlike',\n    'boxy',\n    'breach',\n    'breath',\n    'breeches',\n    'breeching',\n    'breeder',\n    'breeding',\n    'breeze',\n    'breezy',\n    'brethren',\n    'brewery',\n    'brewing',\n    'briar',\n    'bribe',\n    'brick',\n    'bride',\n    'bridged',\n    'brigade',\n    'bright',\n    'brilliant',\n    'brim',\n    'bring',\n    'brink',\n    'brisket',\n    'briskly',\n    'briskness',\n    'bristle',\n    'brittle',\n    'broadband',\n    'broadcast',\n    'broaden',\n    'broadly',\n    'broadness',\n    'broadside',\n    'broadways',\n    'broiler',\n    'broiling',\n    'broken',\n    'broker',\n    'bronchial',\n    'bronco',\n    'bronze',\n    'bronzing',\n    'brook',\n    'broom',\n    'brought',\n    'browbeat',\n    'brownnose',\n    'browse',\n    'browsing',\n    'bruising',\n    'brunch',\n    'brunette',\n    'brunt',\n    'brush',\n    'brussels',\n    'brute',\n    'brutishly',\n    'bubble',\n    'bubbling',\n    'bubbly',\n    'buccaneer',\n    'bucked',\n    'bucket',\n    'buckle',\n    'buckshot',\n    'buckskin',\n    'bucktooth',\n    'buckwheat',\n    'buddhism',\n    'buddhist',\n    'budding',\n    'buddy',\n    'budget',\n    'buffalo',\n    'buffed',\n    'buffer',\n    'buffing',\n    'buffoon',\n    'buggy',\n    'bulb',\n    'bulge',\n    'bulginess',\n    'bulgur',\n    'bulk',\n    'bulldog',\n    'bulldozer',\n    'bullfight',\n    'bullfrog',\n    'bullhorn',\n    'bullion',\n    'bullish',\n    'bullpen',\n    'bullring',\n    'bullseye',\n    'bullwhip',\n    'bully',\n    'bunch',\n    'bundle',\n    'bungee',\n    'bunion',\n    'bunkbed',\n    'bunkhouse',\n    'bunkmate',\n    'bunny',\n    'bunt',\n    'busboy',\n    'bush',\n    'busily',\n    'busload',\n    'bust',\n    'busybody',\n    'buzz',\n    'cabana',\n    'cabbage',\n    'cabbie',\n    'cabdriver',\n    'cable',\n    'caboose',\n    'cache',\n    'cackle',\n    'cacti',\n    'cactus',\n    'caddie',\n    'caddy',\n    'cadet',\n    'cadillac',\n    'cadmium',\n    'cage',\n    'cahoots',\n    'cake',\n    'calamari',\n    'calamity',\n    'calcium',\n    'calculate',\n    'calculus',\n    'caliber',\n    'calibrate',\n    'calm',\n    'caloric',\n    'calorie',\n    'calzone',\n    'camcorder',\n    'cameo',\n    'camera',\n    'camisole',\n    'camper',\n    'campfire',\n    'camping',\n    'campsite',\n    'campus',\n    'canal',\n    'canary',\n    'cancel',\n    'candied',\n    'candle',\n    'candy',\n    'cane',\n    'canine',\n    'canister',\n    'cannabis',\n    'canned',\n    'canning',\n    'cannon',\n    'cannot',\n    'canola',\n    'canon',\n    'canopener',\n    'canopy',\n    'canteen',\n    'canyon',\n    'capable',\n    'capably',\n    'capacity',\n    'cape',\n    'capillary',\n    'capital',\n    'capitol',\n    'capped',\n    'capricorn',\n    'capsize',\n    'capsule',\n    'caption',\n    'captivate',\n    'captive',\n    'captivity',\n    'capture',\n    'caramel',\n    'carat',\n    'caravan',\n    'carbon',\n    'cardboard',\n    'carded',\n    'cardiac',\n    'cardigan',\n    'cardinal',\n    'cardstock',\n    'carefully',\n    'caregiver',\n    'careless',\n    'caress',\n    'caretaker',\n    'cargo',\n    'caring',\n    'carless',\n    'carload',\n    'carmaker',\n    'carnage',\n    'carnation',\n    'carnival',\n    'carnivore',\n    'carol',\n    'carpenter',\n    'carpentry',\n    'carpool',\n    'carport',\n    'carried',\n    'carrot',\n    'carrousel',\n    'carry',\n    'cartel',\n    'cartload',\n    'carton',\n    'cartoon',\n    'cartridge',\n    'cartwheel',\n    'carve',\n    'carving',\n    'carwash',\n    'cascade',\n    'case',\n    'cash',\n    'casing',\n    'casino',\n    'casket',\n    'cassette',\n    'casually',\n    'casualty',\n    'catacomb',\n    'catalog',\n    'catalyst',\n    'catalyze',\n    'catapult',\n    'cataract',\n    'catatonic',\n    'catcall',\n    'catchable',\n    'catcher',\n    'catching',\n    'catchy',\n    'caterer',\n    'catering',\n    'catfight',\n    'catfish',\n    'cathedral',\n    'cathouse',\n    'catlike',\n    'catnap',\n    'catnip',\n    'catsup',\n    'cattail',\n    'cattishly',\n    'cattle',\n    'catty',\n    'catwalk',\n    'caucasian',\n    'caucus',\n    'causal',\n    'causation',\n    'cause',\n    'causing',\n    'cauterize',\n    'caution',\n    'cautious',\n    'cavalier',\n    'cavalry',\n    'caviar',\n    'cavity',\n    'cedar',\n    'celery',\n    'celestial',\n    'celibacy',\n    'celibate',\n    'celtic',\n    'cement',\n    'census',\n    'ceramics',\n    'ceremony',\n    'certainly',\n    'certainty',\n    'certified',\n    'certify',\n    'cesarean',\n    'cesspool',\n    'chafe',\n    'chaffing',\n    'chain',\n    'chair',\n    'chalice',\n    'challenge',\n    'chamber',\n    'chamomile',\n    'champion',\n    'chance',\n    'change',\n    'channel',\n    'chant',\n    'chaos',\n    'chaperone',\n    'chaplain',\n    'chapped',\n    'chaps',\n    'chapter',\n    'character',\n    'charbroil',\n    'charcoal',\n    'charger',\n    'charging',\n    'chariot',\n    'charity',\n    'charm',\n    'charred',\n    'charter',\n    'charting',\n    'chase',\n    'chasing',\n    'chaste',\n    'chastise',\n    'chastity',\n    'chatroom',\n    'chatter',\n    'chatting',\n    'chatty',\n    'cheating',\n    'cheddar',\n    'cheek',\n    'cheer',\n    'cheese',\n    'cheesy',\n    'chef',\n    'chemicals',\n    'chemist',\n    'chemo',\n    'cherisher',\n    'cherub',\n    'chess',\n    'chest',\n    'chevron',\n    'chevy',\n    'chewable',\n    'chewer',\n    'chewing',\n    'chewy',\n    'chief',\n    'chihuahua',\n    'childcare',\n    'childhood',\n    'childish',\n    'childless',\n    'childlike',\n    'chili',\n    'chill',\n    'chimp',\n    'chip',\n    'chirping',\n    'chirpy',\n    'chitchat',\n    'chivalry',\n    'chive',\n    'chloride',\n    'chlorine',\n    'choice',\n    'chokehold',\n    'choking',\n    'chomp',\n    'chooser',\n    'choosing',\n    'choosy',\n    'chop',\n    'chosen',\n    'chowder',\n    'chowtime',\n    'chrome',\n    'chubby',\n    'chuck',\n    'chug',\n    'chummy',\n    'chump',\n    'chunk',\n    'churn',\n    'chute',\n    'cider',\n    'cilantro',\n    'cinch',\n    'cinema',\n    'cinnamon',\n    'circle',\n    'circling',\n    'circular',\n    'circulate',\n    'circus',\n    'citable',\n    'citadel',\n    'citation',\n    'citizen',\n    'citric',\n    'citrus',\n    'city',\n    'civic',\n    'civil',\n    'clad',\n    'claim',\n    'clambake',\n    'clammy',\n    'clamor',\n    'clamp',\n    'clamshell',\n    'clang',\n    'clanking',\n    'clapped',\n    'clapper',\n    'clapping',\n    'clarify',\n    'clarinet',\n    'clarity',\n    'clash',\n    'clasp',\n    'class',\n    'clatter',\n    'clause',\n    'clavicle',\n    'claw',\n    'clay',\n    'clean',\n    'clear',\n    'cleat',\n    'cleaver',\n    'cleft',\n    'clench',\n    'clergyman',\n    'clerical',\n    'clerk',\n    'clever',\n    'clicker',\n    'client',\n    'climate',\n    'climatic',\n    'cling',\n    'clinic',\n    'clinking',\n    'clip',\n    'clique',\n    'cloak',\n    'clobber',\n    'clock',\n    'clone',\n    'cloning',\n    'closable',\n    'closure',\n    'clothes',\n    'clothing',\n    'cloud',\n    'clover',\n    'clubbed',\n    'clubbing',\n    'clubhouse',\n    'clump',\n    'clumsily',\n    'clumsy',\n    'clunky',\n    'clustered',\n    'clutch',\n    'clutter',\n    'coach',\n    'coagulant',\n    'coastal',\n    'coaster',\n    'coasting',\n    'coastland',\n    'coastline',\n    'coat',\n    'coauthor',\n    'cobalt',\n    'cobbler',\n    'cobweb',\n    'cocoa',\n    'coconut',\n    'cod',\n    'coeditor',\n    'coerce',\n    'coexist',\n    'coffee',\n    'cofounder',\n    'cognition',\n    'cognitive',\n    'cogwheel',\n    'coherence',\n    'coherent',\n    'cohesive',\n    'coil',\n    'coke',\n    'cola',\n    'cold',\n    'coleslaw',\n    'coliseum',\n    'collage',\n    'collapse',\n    'collar',\n    'collected',\n    'collector',\n    'collide',\n    'collie',\n    'collision',\n    'colonial',\n    'colonist',\n    'colonize',\n    'colony',\n    'colossal',\n    'colt',\n    'coma',\n    'come',\n    'comfort',\n    'comfy',\n    'comic',\n    'coming',\n    'comma',\n    'commence',\n    'commend',\n    'comment',\n    'commerce',\n    'commode',\n    'commodity',\n    'commodore',\n    'common',\n    'commotion',\n    'commute',\n    'commuting',\n    'compacted',\n    'compacter',\n    'compactly',\n    'compactor',\n    'companion',\n    'company',\n    'compare',\n    'compel',\n    'compile',\n    'comply',\n    'component',\n    'composed',\n    'composer',\n    'composite',\n    'compost',\n    'composure',\n    'compound',\n    'compress',\n    'comprised',\n    'computer',\n    'computing',\n    'comrade',\n    'concave',\n    'conceal',\n    'conceded',\n    'concept',\n    'concerned',\n    'concert',\n    'conch',\n    'concierge',\n    'concise',\n    'conclude',\n    'concrete',\n    'concur',\n    'condense',\n    'condiment',\n    'condition',\n    'condone',\n    'conducive',\n    'conductor',\n    'conduit',\n    'cone',\n    'confess',\n    'confetti',\n    'confidant',\n    'confident',\n    'confider',\n    'confiding',\n    'configure',\n    'confined',\n    'confining',\n    'confirm',\n    'conflict',\n    'conform',\n    'confound',\n    'confront',\n    'confused',\n    'confusing',\n    'confusion',\n    'congenial',\n    'congested',\n    'congrats',\n    'congress',\n    'conical',\n    'conjoined',\n    'conjure',\n    'conjuror',\n    'connected',\n    'connector',\n    'consensus',\n    'consent',\n    'console',\n    'consoling',\n    'consonant',\n    'constable',\n    'constant',\n    'constrain',\n    'constrict',\n    'construct',\n    'consult',\n    'consumer',\n    'consuming',\n    'contact',\n    'container',\n    'contempt',\n    'contend',\n    'contented',\n    'contently',\n    'contents',\n    'contest',\n    'context',\n    'contort',\n    'contour',\n    'contrite',\n    'control',\n    'contusion',\n    'convene',\n    'convent',\n    'copartner',\n    'cope',\n    'copied',\n    'copier',\n    'copilot',\n    'coping',\n    'copious',\n    'copper',\n    'copy',\n    'coral',\n    'cork',\n    'cornball',\n    'cornbread',\n    'corncob',\n    'cornea',\n    'corned',\n    'corner',\n    'cornfield',\n    'cornflake',\n    'cornhusk',\n    'cornmeal',\n    'cornstalk',\n    'corny',\n    'coronary',\n    'coroner',\n    'corporal',\n    'corporate',\n    'corral',\n    'correct',\n    'corridor',\n    'corrode',\n    'corroding',\n    'corrosive',\n    'corsage',\n    'corset',\n    'cortex',\n    'cosigner',\n    'cosmetics',\n    'cosmic',\n    'cosmos',\n    'cosponsor',\n    'cost',\n    'cottage',\n    'cotton',\n    'couch',\n    'cough',\n    'could',\n    'countable',\n    'countdown',\n    'counting',\n    'countless',\n    'country',\n    'county',\n    'courier',\n    'covenant',\n    'cover',\n    'coveted',\n    'coveting',\n    'coyness',\n    'cozily',\n    'coziness',\n    'cozy',\n    'crabbing',\n    'crabgrass',\n    'crablike',\n    'crabmeat',\n    'cradle',\n    'cradling',\n    'crafter',\n    'craftily',\n    'craftsman',\n    'craftwork',\n    'crafty',\n    'cramp',\n    'cranberry',\n    'crane',\n    'cranial',\n    'cranium',\n    'crank',\n    'crate',\n    'crave',\n    'craving',\n    'crawfish',\n    'crawlers',\n    'crawling',\n    'crayfish',\n    'crayon',\n    'crazed',\n    'crazily',\n    'craziness',\n    'crazy',\n    'creamed',\n    'creamer',\n    'creamlike',\n    'crease',\n    'creasing',\n    'creatable',\n    'create',\n    'creation',\n    'creative',\n    'creature',\n    'credible',\n    'credibly',\n    'credit',\n    'creed',\n    'creme',\n    'creole',\n    'crepe',\n    'crept',\n    'crescent',\n    'crested',\n    'cresting',\n    'crestless',\n    'crevice',\n    'crewless',\n    'crewman',\n    'crewmate',\n    'crib',\n    'cricket',\n    'cried',\n    'crier',\n    'crimp',\n    'crimson',\n    'cringe',\n    'cringing',\n    'crinkle',\n    'crinkly',\n    'crisped',\n    'crisping',\n    'crisply',\n    'crispness',\n    'crispy',\n    'criteria',\n    'critter',\n    'croak',\n    'crock',\n    'crook',\n    'croon',\n    'crop',\n    'cross',\n    'crouch',\n    'crouton',\n    'crowbar',\n    'crowd',\n    'crown',\n    'crucial',\n    'crudely',\n    'crudeness',\n    'cruelly',\n    'cruelness',\n    'cruelty',\n    'crumb',\n    'crummiest',\n    'crummy',\n    'crumpet',\n    'crumpled',\n    'cruncher',\n    'crunching',\n    'crunchy',\n    'crusader',\n    'crushable',\n    'crushed',\n    'crusher',\n    'crushing',\n    'crust',\n    'crux',\n    'crying',\n    'cryptic',\n    'crystal',\n    'cubbyhole',\n    'cube',\n    'cubical',\n    'cubicle',\n    'cucumber',\n    'cuddle',\n    'cuddly',\n    'cufflink',\n    'culinary',\n    'culminate',\n    'culpable',\n    'culprit',\n    'cultivate',\n    'cultural',\n    'culture',\n    'cupbearer',\n    'cupcake',\n    'cupid',\n    'cupped',\n    'cupping',\n    'curable',\n    'curator',\n    'curdle',\n    'cure',\n    'curfew',\n    'curing',\n    'curled',\n    'curler',\n    'curliness',\n    'curling',\n    'curly',\n    'curry',\n    'curse',\n    'cursive',\n    'cursor',\n    'curtain',\n    'curtly',\n    'curtsy',\n    'curvature',\n    'curve',\n    'curvy',\n    'cushy',\n    'cusp',\n    'cussed',\n    'custard',\n    'custodian',\n    'custody',\n    'customary',\n    'customer',\n    'customize',\n    'customs',\n    'cut',\n    'cycle',\n    'cyclic',\n    'cycling',\n    'cyclist',\n    'cylinder',\n    'cymbal',\n    'cytoplasm',\n    'cytoplast',\n    'dab',\n    'dad',\n    'daffodil',\n    'dagger',\n    'daily',\n    'daintily',\n    'dainty',\n    'dairy',\n    'daisy',\n    'dallying',\n    'dance',\n    'dancing',\n    'dandelion',\n    'dander',\n    'dandruff',\n    'dandy',\n    'danger',\n    'dangle',\n    'dangling',\n    'daredevil',\n    'dares',\n    'daringly',\n    'darkened',\n    'darkening',\n    'darkish',\n    'darkness',\n    'darkroom',\n    'darling',\n    'darn',\n    'dart',\n    'darwinism',\n    'dash',\n    'dastardly',\n    'data',\n    'datebook',\n    'dating',\n    'daughter',\n    'daunting',\n    'dawdler',\n    'dawn',\n    'daybed',\n    'daybreak',\n    'daycare',\n    'daydream',\n    'daylight',\n    'daylong',\n    'dayroom',\n    'daytime',\n    'dazzler',\n    'dazzling',\n    'deacon',\n    'deafening',\n    'deafness',\n    'dealer',\n    'dealing',\n    'dealmaker',\n    'dealt',\n    'dean',\n    'debatable',\n    'debate',\n    'debating',\n    'debit',\n    'debrief',\n    'debtless',\n    'debtor',\n    'debug',\n    'debunk',\n    'decade',\n    'decaf',\n    'decal',\n    'decathlon',\n    'decay',\n    'deceased',\n    'deceit',\n    'deceiver',\n    'deceiving',\n    'december',\n    'decency',\n    'decent',\n    'deception',\n    'deceptive',\n    'decibel',\n    'decidable',\n    'decimal',\n    'decimeter',\n    'decipher',\n    'deck',\n    'declared',\n    'decline',\n    'decode',\n    'decompose',\n    'decorated',\n    'decorator',\n    'decoy',\n    'decrease',\n    'decree',\n    'dedicate',\n    'dedicator',\n    'deduce',\n    'deduct',\n    'deed',\n    'deem',\n    'deepen',\n    'deeply',\n    'deepness',\n    'deface',\n    'defacing',\n    'defame',\n    'default',\n    'defeat',\n    'defection',\n    'defective',\n    'defendant',\n    'defender',\n    'defense',\n    'defensive',\n    'deferral',\n    'deferred',\n    'defiance',\n    'defiant',\n    'defile',\n    'defiling',\n    'define',\n    'definite',\n    'deflate',\n    'deflation',\n    'deflator',\n    'deflected',\n    'deflector',\n    'defog',\n    'deforest',\n    'defraud',\n    'defrost',\n    'deftly',\n    'defuse',\n    'defy',\n    'degraded',\n    'degrading',\n    'degrease',\n    'degree',\n    'dehydrate',\n    'deity',\n    'dejected',\n    'delay',\n    'delegate',\n    'delegator',\n    'delete',\n    'deletion',\n    'delicacy',\n    'delicate',\n    'delicious',\n    'delighted',\n    'delirious',\n    'delirium',\n    'deliverer',\n    'delivery',\n    'delouse',\n    'delta',\n    'deluge',\n    'delusion',\n    'deluxe',\n    'demanding',\n    'demeaning',\n    'demeanor',\n    'demise',\n    'democracy',\n    'democrat',\n    'demote',\n    'demotion',\n    'demystify',\n    'denatured',\n    'deniable',\n    'denial',\n    'denim',\n    'denote',\n    'dense',\n    'density',\n    'dental',\n    'dentist',\n    'denture',\n    'deny',\n    'deodorant',\n    'deodorize',\n    'departed',\n    'departure',\n    'depict',\n    'deplete',\n    'depletion',\n    'deplored',\n    'deploy',\n    'deport',\n    'depose',\n    'depraved',\n    'depravity',\n    'deprecate',\n    'depress',\n    'deprive',\n    'depth',\n    'deputize',\n    'deputy',\n    'derail',\n    'deranged',\n    'derby',\n    'derived',\n    'desecrate',\n    'deserve',\n    'deserving',\n    'designate',\n    'designed',\n    'designer',\n    'designing',\n    'deskbound',\n    'desktop',\n    'deskwork',\n    'desolate',\n    'despair',\n    'despise',\n    'despite',\n    'destiny',\n    'destitute',\n    'destruct',\n    'detached',\n    'detail',\n    'detection',\n    'detective',\n    'detector',\n    'detention',\n    'detergent',\n    'detest',\n    'detonate',\n    'detonator',\n    'detoxify',\n    'detract',\n    'deuce',\n    'devalue',\n    'deviancy',\n    'deviant',\n    'deviate',\n    'deviation',\n    'deviator',\n    'device',\n    'devious',\n    'devotedly',\n    'devotee',\n    'devotion',\n    'devourer',\n    'devouring',\n    'devoutly',\n    'dexterity',\n    'dexterous',\n    'diabetes',\n    'diabetic',\n    'diabolic',\n    'diagnoses',\n    'diagnosis',\n    'diagram',\n    'dial',\n    'diameter',\n    'diaper',\n    'diaphragm',\n    'diary',\n    'dice',\n    'dicing',\n    'dictate',\n    'dictation',\n    'dictator',\n    'difficult',\n    'diffused',\n    'diffuser',\n    'diffusion',\n    'diffusive',\n    'dig',\n    'dilation',\n    'diligence',\n    'diligent',\n    'dill',\n    'dilute',\n    'dime',\n    'diminish',\n    'dimly',\n    'dimmed',\n    'dimmer',\n    'dimness',\n    'dimple',\n    'diner',\n    'dingbat',\n    'dinghy',\n    'dinginess',\n    'dingo',\n    'dingy',\n    'dining',\n    'dinner',\n    'diocese',\n    'dioxide',\n    'diploma',\n    'dipped',\n    'dipper',\n    'dipping',\n    'directed',\n    'direction',\n    'directive',\n    'directly',\n    'directory',\n    'direness',\n    'dirtiness',\n    'disabled',\n    'disagree',\n    'disallow',\n    'disarm',\n    'disarray',\n    'disaster',\n    'disband',\n    'disbelief',\n    'disburse',\n    'discard',\n    'discern',\n    'discharge',\n    'disclose',\n    'discolor',\n    'discount',\n    'discourse',\n    'discover',\n    'discuss',\n    'disdain',\n    'disengage',\n    'disfigure',\n    'disgrace',\n    'dish',\n    'disinfect',\n    'disjoin',\n    'disk',\n    'dislike',\n    'disliking',\n    'dislocate',\n    'dislodge',\n    'disloyal',\n    'dismantle',\n    'dismay',\n    'dismiss',\n    'dismount',\n    'disobey',\n    'disorder',\n    'disown',\n    'disparate',\n    'disparity',\n    'dispatch',\n    'dispense',\n    'dispersal',\n    'dispersed',\n    'disperser',\n    'displace',\n    'display',\n    'displease',\n    'disposal',\n    'dispose',\n    'disprove',\n    'dispute',\n    'disregard',\n    'disrupt',\n    'dissuade',\n    'distance',\n    'distant',\n    'distaste',\n    'distill',\n    'distinct',\n    'distort',\n    'distract',\n    'distress',\n    'district',\n    'distrust',\n    'ditch',\n    'ditto',\n    'ditzy',\n    'dividable',\n    'divided',\n    'dividend',\n    'dividers',\n    'dividing',\n    'divinely',\n    'diving',\n    'divinity',\n    'divisible',\n    'divisibly',\n    'division',\n    'divisive',\n    'divorcee',\n    'dizziness',\n    'dizzy',\n    'doable',\n    'docile',\n    'dock',\n    'doctrine',\n    'document',\n    'dodge',\n    'dodgy',\n    'doily',\n    'doing',\n    'dole',\n    'dollar',\n    'dollhouse',\n    'dollop',\n    'dolly',\n    'dolphin',\n    'domain',\n    'domelike',\n    'domestic',\n    'dominion',\n    'dominoes',\n    'donated',\n    'donation',\n    'donator',\n    'donor',\n    'donut',\n    'doodle',\n    'doorbell',\n    'doorframe',\n    'doorknob',\n    'doorman',\n    'doormat',\n    'doornail',\n    'doorpost',\n    'doorstep',\n    'doorstop',\n    'doorway',\n    'doozy',\n    'dork',\n    'dormitory',\n    'dorsal',\n    'dosage',\n    'dose',\n    'dotted',\n    'doubling',\n    'douche',\n    'dove',\n    'down',\n    'dowry',\n    'doze',\n    'drab',\n    'dragging',\n    'dragonfly',\n    'dragonish',\n    'dragster',\n    'drainable',\n    'drainage',\n    'drained',\n    'drainer',\n    'drainpipe',\n    'dramatic',\n    'dramatize',\n    'drank',\n    'drapery',\n    'drastic',\n    'draw',\n    'dreaded',\n    'dreadful',\n    'dreadlock',\n    'dreamboat',\n    'dreamily',\n    'dreamland',\n    'dreamless',\n    'dreamlike',\n    'dreamt',\n    'dreamy',\n    'drearily',\n    'dreary',\n    'drench',\n    'dress',\n    'drew',\n    'dribble',\n    'dried',\n    'drier',\n    'drift',\n    'driller',\n    'drilling',\n    'drinkable',\n    'drinking',\n    'dripping',\n    'drippy',\n    'drivable',\n    'driven',\n    'driver',\n    'driveway',\n    'driving',\n    'drizzle',\n    'drizzly',\n    'drone',\n    'drool',\n    'droop',\n    'drop-down',\n    'dropbox',\n    'dropkick',\n    'droplet',\n    'dropout',\n    'dropper',\n    'drove',\n    'drown',\n    'drowsily',\n    'drudge',\n    'drum',\n    'dry',\n    'dubbed',\n    'dubiously',\n    'duchess',\n    'duckbill',\n    'ducking',\n    'duckling',\n    'ducktail',\n    'ducky',\n    'duct',\n    'dude',\n    'duffel',\n    'dugout',\n    'duh',\n    'duke',\n    'duller',\n    'dullness',\n    'duly',\n    'dumping',\n    'dumpling',\n    'dumpster',\n    'duo',\n    'dupe',\n    'duplex',\n    'duplicate',\n    'duplicity',\n    'durable',\n    'durably',\n    'duration',\n    'duress',\n    'during',\n    'dusk',\n    'dust',\n    'dutiful',\n    'duty',\n    'duvet',\n    'dwarf',\n    'dweeb',\n    'dwelled',\n    'dweller',\n    'dwelling',\n    'dwindle',\n    'dwindling',\n    'dynamic',\n    'dynamite',\n    'dynasty',\n    'dyslexia',\n    'dyslexic',\n    'each',\n    'eagle',\n    'earache',\n    'eardrum',\n    'earflap',\n    'earful',\n    'earlobe',\n    'early',\n    'earmark',\n    'earmuff',\n    'earphone',\n    'earpiece',\n    'earplugs',\n    'earring',\n    'earshot',\n    'earthen',\n    'earthlike',\n    'earthling',\n    'earthly',\n    'earthworm',\n    'earthy',\n    'earwig',\n    'easeful',\n    'easel',\n    'easiest',\n    'easily',\n    'easiness',\n    'easing',\n    'eastbound',\n    'eastcoast',\n    'easter',\n    'eastward',\n    'eatable',\n    'eaten',\n    'eatery',\n    'eating',\n    'eats',\n    'ebay',\n    'ebony',\n    'ebook',\n    'ecard',\n    'eccentric',\n    'echo',\n    'eclair',\n    'eclipse',\n    'ecologist',\n    'ecology',\n    'economic',\n    'economist',\n    'economy',\n    'ecosphere',\n    'ecosystem',\n    'edge',\n    'edginess',\n    'edging',\n    'edgy',\n    'edition',\n    'editor',\n    'educated',\n    'education',\n    'educator',\n    'eel',\n    'effective',\n    'effects',\n    'efficient',\n    'effort',\n    'eggbeater',\n    'egging',\n    'eggnog',\n    'eggplant',\n    'eggshell',\n    'egomaniac',\n    'egotism',\n    'egotistic',\n    'either',\n    'eject',\n    'elaborate',\n    'elastic',\n    'elated',\n    'elbow',\n    'eldercare',\n    'elderly',\n    'eldest',\n    'electable',\n    'election',\n    'elective',\n    'elephant',\n    'elevate',\n    'elevating',\n    'elevation',\n    'elevator',\n    'eleven',\n    'elf',\n    'eligible',\n    'eligibly',\n    'eliminate',\n    'elite',\n    'elitism',\n    'elixir',\n    'elk',\n    'ellipse',\n    'elliptic',\n    'elm',\n    'elongated',\n    'elope',\n    'eloquence',\n    'eloquent',\n    'elsewhere',\n    'elude',\n    'elusive',\n    'elves',\n    'email',\n    'embargo',\n    'embark',\n    'embassy',\n    'embattled',\n    'embellish',\n    'ember',\n    'embezzle',\n    'emblaze',\n    'emblem',\n    'embody',\n    'embolism',\n    'emboss',\n    'embroider',\n    'emcee',\n    'emerald',\n    'emergency',\n    'emission',\n    'emit',\n    'emote',\n    'emoticon',\n    'emotion',\n    'empathic',\n    'empathy',\n    'emperor',\n    'emphases',\n    'emphasis',\n    'emphasize',\n    'emphatic',\n    'empirical',\n    'employed',\n    'employee',\n    'employer',\n    'emporium',\n    'empower',\n    'emptier',\n    'emptiness',\n    'empty',\n    'emu',\n    'enable',\n    'enactment',\n    'enamel',\n    'enchanted',\n    'enchilada',\n    'encircle',\n    'enclose',\n    'enclosure',\n    'encode',\n    'encore',\n    'encounter',\n    'encourage',\n    'encroach',\n    'encrust',\n    'encrypt',\n    'endanger',\n    'endeared',\n    'endearing',\n    'ended',\n    'ending',\n    'endless',\n    'endnote',\n    'endocrine',\n    'endorphin',\n    'endorse',\n    'endowment',\n    'endpoint',\n    'endurable',\n    'endurance',\n    'enduring',\n    'energetic',\n    'energize',\n    'energy',\n    'enforced',\n    'enforcer',\n    'engaged',\n    'engaging',\n    'engine',\n    'engorge',\n    'engraved',\n    'engraver',\n    'engraving',\n    'engross',\n    'engulf',\n    'enhance',\n    'enigmatic',\n    'enjoyable',\n    'enjoyably',\n    'enjoyer',\n    'enjoying',\n    'enjoyment',\n    'enlarged',\n    'enlarging',\n    'enlighten',\n    'enlisted',\n    'enquirer',\n    'enrage',\n    'enrich',\n    'enroll',\n    'enslave',\n    'ensnare',\n    'ensure',\n    'entail',\n    'entangled',\n    'entering',\n    'entertain',\n    'enticing',\n    'entire',\n    'entitle',\n    'entity',\n    'entomb',\n    'entourage',\n    'entrap',\n    'entree',\n    'entrench',\n    'entrust',\n    'entryway',\n    'entwine',\n    'enunciate',\n    'envelope',\n    'enviable',\n    'enviably',\n    'envious',\n    'envision',\n    'envoy',\n    'envy',\n    'enzyme',\n    'epic',\n    'epidemic',\n    'epidermal',\n    'epidermis',\n    'epidural',\n    'epilepsy',\n    'epileptic',\n    'epilogue',\n    'epiphany',\n    'episode',\n    'equal',\n    'equate',\n    'equation',\n    'equator',\n    'equinox',\n    'equipment',\n    'equity',\n    'equivocal',\n    'eradicate',\n    'erasable',\n    'erased',\n    'eraser',\n    'erasure',\n    'ergonomic',\n    'errand',\n    'errant',\n    'erratic',\n    'error',\n    'erupt',\n    'escalate',\n    'escalator',\n    'escapable',\n    'escapade',\n    'escapist',\n    'escargot',\n    'eskimo',\n    'esophagus',\n    'espionage',\n    'espresso',\n    'esquire',\n    'essay',\n    'essence',\n    'essential',\n    'establish',\n    'estate',\n    'esteemed',\n    'estimate',\n    'estimator',\n    'estranged',\n    'estrogen',\n    'etching',\n    'eternal',\n    'eternity',\n    'ethanol',\n    'ether',\n    'ethically',\n    'ethics',\n    'euphemism',\n    'evacuate',\n    'evacuee',\n    'evade',\n    'evaluate',\n    'evaluator',\n    'evaporate',\n    'evasion',\n    'evasive',\n    'even',\n    'everglade',\n    'evergreen',\n    'everybody',\n    'everyday',\n    'everyone',\n    'evict',\n    'evidence',\n    'evident',\n    'evil',\n    'evoke',\n    'evolution',\n    'evolve',\n    'exact',\n    'exalted',\n    'example',\n    'excavate',\n    'excavator',\n    'exceeding',\n    'exception',\n    'excess',\n    'exchange',\n    'excitable',\n    'exciting',\n    'exclaim',\n    'exclude',\n    'excluding',\n    'exclusion',\n    'exclusive',\n    'excretion',\n    'excretory',\n    'excursion',\n    'excusable',\n    'excusably',\n    'excuse',\n    'exemplary',\n    'exemplify',\n    'exemption',\n    'exerciser',\n    'exert',\n    'exes',\n    'exfoliate',\n    'exhale',\n    'exhaust',\n    'exhume',\n    'exile',\n    'existing',\n    'exit',\n    'exodus',\n    'exonerate',\n    'exorcism',\n    'exorcist',\n    'expand',\n    'expanse',\n    'expansion',\n    'expansive',\n    'expectant',\n    'expedited',\n    'expediter',\n    'expel',\n    'expend',\n    'expenses',\n    'expensive',\n    'expert',\n    'expire',\n    'expiring',\n    'explain',\n    'expletive',\n    'explicit',\n    'explode',\n    'exploit',\n    'explore',\n    'exploring',\n    'exponent',\n    'exporter',\n    'exposable',\n    'expose',\n    'exposure',\n    'express',\n    'expulsion',\n    'exquisite',\n    'extended',\n    'extending',\n    'extent',\n    'extenuate',\n    'exterior',\n    'external',\n    'extinct',\n    'extortion',\n    'extradite',\n    'extras',\n    'extrovert',\n    'extrude',\n    'extruding',\n    'exuberant',\n    'fable',\n    'fabric',\n    'fabulous',\n    'facebook',\n    'facecloth',\n    'facedown',\n    'faceless',\n    'facelift',\n    'faceplate',\n    'faceted',\n    'facial',\n    'facility',\n    'facing',\n    'facsimile',\n    'faction',\n    'factoid',\n    'factor',\n    'factsheet',\n    'factual',\n    'faculty',\n    'fade',\n    'fading',\n    'failing',\n    'falcon',\n    'fall',\n    'false',\n    'falsify',\n    'fame',\n    'familiar',\n    'family',\n    'famine',\n    'famished',\n    'fanatic',\n    'fancied',\n    'fanciness',\n    'fancy',\n    'fanfare',\n    'fang',\n    'fanning',\n    'fantasize',\n    'fantastic',\n    'fantasy',\n    'fascism',\n    'fastball',\n    'faster',\n    'fasting',\n    'fastness',\n    'faucet',\n    'favorable',\n    'favorably',\n    'favored',\n    'favoring',\n    'favorite',\n    'fax',\n    'feast',\n    'federal',\n    'fedora',\n    'feeble',\n    'feed',\n    'feel',\n    'feisty',\n    'feline',\n    'felt-tip',\n    'feminine',\n    'feminism',\n    'feminist',\n    'feminize',\n    'femur',\n    'fence',\n    'fencing',\n    'fender',\n    'ferment',\n    'fernlike',\n    'ferocious',\n    'ferocity',\n    'ferret',\n    'ferris',\n    'ferry',\n    'fervor',\n    'fester',\n    'festival',\n    'festive',\n    'festivity',\n    'fetal',\n    'fetch',\n    'fever',\n    'fiber',\n    'fiction',\n    'fiddle',\n    'fiddling',\n    'fidelity',\n    'fidgeting',\n    'fidgety',\n    'fifteen',\n    'fifth',\n    'fiftieth',\n    'fifty',\n    'figment',\n    'figure',\n    'figurine',\n    'filing',\n    'filled',\n    'filler',\n    'filling',\n    'film',\n    'filter',\n    'filth',\n    'filtrate',\n    'finale',\n    'finalist',\n    'finalize',\n    'finally',\n    'finance',\n    'financial',\n    'finch',\n    'fineness',\n    'finer',\n    'finicky',\n    'finished',\n    'finisher',\n    'finishing',\n    'finite',\n    'finless',\n    'finlike',\n    'fiscally',\n    'fit',\n    'five',\n    'flaccid',\n    'flagman',\n    'flagpole',\n    'flagship',\n    'flagstick',\n    'flagstone',\n    'flail',\n    'flakily',\n    'flaky',\n    'flame',\n    'flammable',\n    'flanked',\n    'flanking',\n    'flannels',\n    'flap',\n    'flaring',\n    'flashback',\n    'flashbulb',\n    'flashcard',\n    'flashily',\n    'flashing',\n    'flashy',\n    'flask',\n    'flatbed',\n    'flatfoot',\n    'flatly',\n    'flatness',\n    'flatten',\n    'flattered',\n    'flatterer',\n    'flattery',\n    'flattop',\n    'flatware',\n    'flatworm',\n    'flavored',\n    'flavorful',\n    'flavoring',\n    'flaxseed',\n    'fled',\n    'fleshed',\n    'fleshy',\n    'flick',\n    'flier',\n    'flight',\n    'flinch',\n    'fling',\n    'flint',\n    'flip',\n    'flirt',\n    'float',\n    'flock',\n    'flogging',\n    'flop',\n    'floral',\n    'florist',\n    'floss',\n    'flounder',\n    'flyable',\n    'flyaway',\n    'flyer',\n    'flying',\n    'flyover',\n    'flypaper',\n    'foam',\n    'foe',\n    'fog',\n    'foil',\n    'folic',\n    'folk',\n    'follicle',\n    'follow',\n    'fondling',\n    'fondly',\n    'fondness',\n    'fondue',\n    'font',\n    'food',\n    'fool',\n    'footage',\n    'football',\n    'footbath',\n    'footboard',\n    'footer',\n    'footgear',\n    'foothill',\n    'foothold',\n    'footing',\n    'footless',\n    'footman',\n    'footnote',\n    'footpad',\n    'footpath',\n    'footprint',\n    'footrest',\n    'footsie',\n    'footsore',\n    'footwear',\n    'footwork',\n    'fossil',\n    'foster',\n    'founder',\n    'founding',\n    'fountain',\n    'fox',\n    'foyer',\n    'fraction',\n    'fracture',\n    'fragile',\n    'fragility',\n    'fragment',\n    'fragrance',\n    'fragrant',\n    'frail',\n    'frame',\n    'framing',\n    'frantic',\n    'fraternal',\n    'frayed',\n    'fraying',\n    'frays',\n    'freckled',\n    'freckles',\n    'freebase',\n    'freebee',\n    'freebie',\n    'freedom',\n    'freefall',\n    'freehand',\n    'freeing',\n    'freeload',\n    'freely',\n    'freemason',\n    'freeness',\n    'freestyle',\n    'freeware',\n    'freeway',\n    'freewill',\n    'freezable',\n    'freezing',\n    'freight',\n    'french',\n    'frenzied',\n    'frenzy',\n    'frequency',\n    'frequent',\n    'fresh',\n    'fretful',\n    'fretted',\n    'friction',\n    'friday',\n    'fridge',\n    'fried',\n    'friend',\n    'frighten',\n    'frightful',\n    'frigidity',\n    'frigidly',\n    'frill',\n    'fringe',\n    'frisbee',\n    'frisk',\n    'fritter',\n    'frivolous',\n    'frolic',\n    'from',\n    'front',\n    'frostbite',\n    'frosted',\n    'frostily',\n    'frosting',\n    'frostlike',\n    'frosty',\n    'froth',\n    'frown',\n    'frozen',\n    'fructose',\n    'frugality',\n    'frugally',\n    'fruit',\n    'frustrate',\n    'frying',\n    'gab',\n    'gaffe',\n    'gag',\n    'gainfully',\n    'gaining',\n    'gains',\n    'gala',\n    'gallantly',\n    'galleria',\n    'gallery',\n    'galley',\n    'gallon',\n    'gallows',\n    'gallstone',\n    'galore',\n    'galvanize',\n    'gambling',\n    'game',\n    'gaming',\n    'gamma',\n    'gander',\n    'gangly',\n    'gangrene',\n    'gangway',\n    'gap',\n    'garage',\n    'garbage',\n    'garden',\n    'gargle',\n    'garland',\n    'garlic',\n    'garment',\n    'garnet',\n    'garnish',\n    'garter',\n    'gas',\n    'gatherer',\n    'gathering',\n    'gating',\n    'gauging',\n    'gauntlet',\n    'gauze',\n    'gave',\n    'gawk',\n    'gazing',\n    'gear',\n    'gecko',\n    'geek',\n    'geiger',\n    'gem',\n    'gender',\n    'generic',\n    'generous',\n    'genetics',\n    'genre',\n    'gentile',\n    'gentleman',\n    'gently',\n    'gents',\n    'geography',\n    'geologic',\n    'geologist',\n    'geology',\n    'geometric',\n    'geometry',\n    'geranium',\n    'gerbil',\n    'geriatric',\n    'germicide',\n    'germinate',\n    'germless',\n    'germproof',\n    'gestate',\n    'gestation',\n    'gesture',\n    'getaway',\n    'getting',\n    'getup',\n    'giant',\n    'gibberish',\n    'giblet',\n    'giddily',\n    'giddiness',\n    'giddy',\n    'gift',\n    'gigabyte',\n    'gigahertz',\n    'gigantic',\n    'giggle',\n    'giggling',\n    'giggly',\n    'gigolo',\n    'gilled',\n    'gills',\n    'gimmick',\n    'girdle',\n    'giveaway',\n    'given',\n    'giver',\n    'giving',\n    'gizmo',\n    'gizzard',\n    'glacial',\n    'glacier',\n    'glade',\n    'gladiator',\n    'gladly',\n    'glamorous',\n    'glamour',\n    'glance',\n    'glancing',\n    'glandular',\n    'glare',\n    'glaring',\n    'glass',\n    'glaucoma',\n    'glazing',\n    'gleaming',\n    'gleeful',\n    'glider',\n    'gliding',\n    'glimmer',\n    'glimpse',\n    'glisten',\n    'glitch',\n    'glitter',\n    'glitzy',\n    'gloater',\n    'gloating',\n    'gloomily',\n    'gloomy',\n    'glorified',\n    'glorifier',\n    'glorify',\n    'glorious',\n    'glory',\n    'gloss',\n    'glove',\n    'glowing',\n    'glowworm',\n    'glucose',\n    'glue',\n    'gluten',\n    'glutinous',\n    'glutton',\n    'gnarly',\n    'gnat',\n    'goal',\n    'goatskin',\n    'goes',\n    'goggles',\n    'going',\n    'goldfish',\n    'goldmine',\n    'goldsmith',\n    'golf',\n    'goliath',\n    'gonad',\n    'gondola',\n    'gone',\n    'gong',\n    'good',\n    'gooey',\n    'goofball',\n    'goofiness',\n    'goofy',\n    'google',\n    'goon',\n    'gopher',\n    'gore',\n    'gorged',\n    'gorgeous',\n    'gory',\n    'gosling',\n    'gossip',\n    'gothic',\n    'gotten',\n    'gout',\n    'gown',\n    'grab',\n    'graceful',\n    'graceless',\n    'gracious',\n    'gradation',\n    'graded',\n    'grader',\n    'gradient',\n    'grading',\n    'gradually',\n    'graduate',\n    'graffiti',\n    'grafted',\n    'grafting',\n    'grain',\n    'granddad',\n    'grandkid',\n    'grandly',\n    'grandma',\n    'grandpa',\n    'grandson',\n    'granite',\n    'granny',\n    'granola',\n    'grant',\n    'granular',\n    'grape',\n    'graph',\n    'grapple',\n    'grappling',\n    'grasp',\n    'grass',\n    'gratified',\n    'gratify',\n    'grating',\n    'gratitude',\n    'gratuity',\n    'gravel',\n    'graveness',\n    'graves',\n    'graveyard',\n    'gravitate',\n    'gravity',\n    'gravy',\n    'gray',\n    'grazing',\n    'greasily',\n    'greedily',\n    'greedless',\n    'greedy',\n    'green',\n    'greeter',\n    'greeting',\n    'grew',\n    'greyhound',\n    'grid',\n    'grief',\n    'grievance',\n    'grieving',\n    'grievous',\n    'grill',\n    'grimace',\n    'grimacing',\n    'grime',\n    'griminess',\n    'grimy',\n    'grinch',\n    'grinning',\n    'grip',\n    'gristle',\n    'grit',\n    'groggily',\n    'groggy',\n    'groin',\n    'groom',\n    'groove',\n    'grooving',\n    'groovy',\n    'grope',\n    'ground',\n    'grouped',\n    'grout',\n    'grove',\n    'grower',\n    'growing',\n    'growl',\n    'grub',\n    'grudge',\n    'grudging',\n    'grueling',\n    'gruffly',\n    'grumble',\n    'grumbling',\n    'grumbly',\n    'grumpily',\n    'grunge',\n    'grunt',\n    'guacamole',\n    'guidable',\n    'guidance',\n    'guide',\n    'guiding',\n    'guileless',\n    'guise',\n    'gulf',\n    'gullible',\n    'gully',\n    'gulp',\n    'gumball',\n    'gumdrop',\n    'gumminess',\n    'gumming',\n    'gummy',\n    'gurgle',\n    'gurgling',\n    'guru',\n    'gush',\n    'gusto',\n    'gusty',\n    'gutless',\n    'guts',\n    'gutter',\n    'guy',\n    'guzzler',\n    'gyration',\n    'habitable',\n    'habitant',\n    'habitat',\n    'habitual',\n    'hacked',\n    'hacker',\n    'hacking',\n    'hacksaw',\n    'had',\n    'haggler',\n    'haiku',\n    'half',\n    'halogen',\n    'halt',\n    'halved',\n    'halves',\n    'hamburger',\n    'hamlet',\n    'hammock',\n    'hamper',\n    'hamster',\n    'hamstring',\n    'handbag',\n    'handball',\n    'handbook',\n    'handbrake',\n    'handcart',\n    'handclap',\n    'handclasp',\n    'handcraft',\n    'handcuff',\n    'handed',\n    'handful',\n    'handgrip',\n    'handgun',\n    'handheld',\n    'handiness',\n    'handiwork',\n    'handlebar',\n    'handled',\n    'handler',\n    'handling',\n    'handmade',\n    'handoff',\n    'handpick',\n    'handprint',\n    'handrail',\n    'handsaw',\n    'handset',\n    'handsfree',\n    'handshake',\n    'handstand',\n    'handwash',\n    'handwork',\n    'handwoven',\n    'handwrite',\n    'handyman',\n    'hangnail',\n    'hangout',\n    'hangover',\n    'hangup',\n    'hankering',\n    'hankie',\n    'hanky',\n    'haphazard',\n    'happening',\n    'happier',\n    'happiest',\n    'happily',\n    'happiness',\n    'happy',\n    'harbor',\n    'hardcopy',\n    'hardcore',\n    'hardcover',\n    'harddisk',\n    'hardened',\n    'hardener',\n    'hardening',\n    'hardhat',\n    'hardhead',\n    'hardiness',\n    'hardly',\n    'hardness',\n    'hardship',\n    'hardware',\n    'hardwired',\n    'hardwood',\n    'hardy',\n    'harmful',\n    'harmless',\n    'harmonica',\n    'harmonics',\n    'harmonize',\n    'harmony',\n    'harness',\n    'harpist',\n    'harsh',\n    'harvest',\n    'hash',\n    'hassle',\n    'haste',\n    'hastily',\n    'hastiness',\n    'hasty',\n    'hatbox',\n    'hatchback',\n    'hatchery',\n    'hatchet',\n    'hatching',\n    'hatchling',\n    'hate',\n    'hatless',\n    'hatred',\n    'haunt',\n    'haven',\n    'hazard',\n    'hazelnut',\n    'hazily',\n    'haziness',\n    'hazing',\n    'hazy',\n    'headache',\n    'headband',\n    'headboard',\n    'headcount',\n    'headdress',\n    'headed',\n    'header',\n    'headfirst',\n    'headgear',\n    'heading',\n    'headlamp',\n    'headless',\n    'headlock',\n    'headphone',\n    'headpiece',\n    'headrest',\n    'headroom',\n    'headscarf',\n    'headset',\n    'headsman',\n    'headstand',\n    'headstone',\n    'headway',\n    'headwear',\n    'heap',\n    'heat',\n    'heave',\n    'heavily',\n    'heaviness',\n    'heaving',\n    'hedge',\n    'hedging',\n    'heftiness',\n    'hefty',\n    'helium',\n    'helmet',\n    'helper',\n    'helpful',\n    'helping',\n    'helpless',\n    'helpline',\n    'hemlock',\n    'hemstitch',\n    'hence',\n    'henchman',\n    'henna',\n    'herald',\n    'herbal',\n    'herbicide',\n    'herbs',\n    'heritage',\n    'hermit',\n    'heroics',\n    'heroism',\n    'herring',\n    'herself',\n    'hertz',\n    'hesitancy',\n    'hesitant',\n    'hesitate',\n    'hexagon',\n    'hexagram',\n    'hubcap',\n    'huddle',\n    'huddling',\n    'huff',\n    'hug',\n    'hula',\n    'hulk',\n    'hull',\n    'human',\n    'humble',\n    'humbling',\n    'humbly',\n    'humid',\n    'humiliate',\n    'humility',\n    'humming',\n    'hummus',\n    'humongous',\n    'humorist',\n    'humorless',\n    'humorous',\n    'humpback',\n    'humped',\n    'humvee',\n    'hunchback',\n    'hundredth',\n    'hunger',\n    'hungrily',\n    'hungry',\n    'hunk',\n    'hunter',\n    'hunting',\n    'huntress',\n    'huntsman',\n    'hurdle',\n    'hurled',\n    'hurler',\n    'hurling',\n    'hurray',\n    'hurricane',\n    'hurried',\n    'hurry',\n    'hurt',\n    'husband',\n    'hush',\n    'husked',\n    'huskiness',\n    'hut',\n    'hybrid',\n    'hydrant',\n    'hydrated',\n    'hydration',\n    'hydrogen',\n    'hydroxide',\n    'hyperlink',\n    'hypertext',\n    'hyphen',\n    'hypnoses',\n    'hypnosis',\n    'hypnotic',\n    'hypnotism',\n    'hypnotist',\n    'hypnotize',\n    'hypocrisy',\n    'hypocrite',\n    'ibuprofen',\n    'ice',\n    'iciness',\n    'icing',\n    'icky',\n    'icon',\n    'icy',\n    'idealism',\n    'idealist',\n    'idealize',\n    'ideally',\n    'idealness',\n    'identical',\n    'identify',\n    'identity',\n    'ideology',\n    'idiocy',\n    'idiom',\n    'idly',\n    'igloo',\n    'ignition',\n    'ignore',\n    'iguana',\n    'illicitly',\n    'illusion',\n    'illusive',\n    'image',\n    'imaginary',\n    'imagines',\n    'imaging',\n    'imbecile',\n    'imitate',\n    'imitation',\n    'immature',\n    'immerse',\n    'immersion',\n    'imminent',\n    'immobile',\n    'immodest',\n    'immorally',\n    'immortal',\n    'immovable',\n    'immovably',\n    'immunity',\n    'immunize',\n    'impaired',\n    'impale',\n    'impart',\n    'impatient',\n    'impeach',\n    'impeding',\n    'impending',\n    'imperfect',\n    'imperial',\n    'impish',\n    'implant',\n    'implement',\n    'implicate',\n    'implicit',\n    'implode',\n    'implosion',\n    'implosive',\n    'imply',\n    'impolite',\n    'important',\n    'importer',\n    'impose',\n    'imposing',\n    'impotence',\n    'impotency',\n    'impotent',\n    'impound',\n    'imprecise',\n    'imprint',\n    'imprison',\n    'impromptu',\n    'improper',\n    'improve',\n    'improving',\n    'improvise',\n    'imprudent',\n    'impulse',\n    'impulsive',\n    'impure',\n    'impurity',\n    'iodine',\n    'iodize',\n    'ion',\n    'ipad',\n    'iphone',\n    'ipod',\n    'irate',\n    'irk',\n    'iron',\n    'irregular',\n    'irrigate',\n    'irritable',\n    'irritably',\n    'irritant',\n    'irritate',\n    'islamic',\n    'islamist',\n    'isolated',\n    'isolating',\n    'isolation',\n    'isotope',\n    'issue',\n    'issuing',\n    'italicize',\n    'italics',\n    'item',\n    'itinerary',\n    'itunes',\n    'ivory',\n    'ivy',\n    'jab',\n    'jackal',\n    'jacket',\n    'jackknife',\n    'jackpot',\n    'jailbird',\n    'jailbreak',\n    'jailer',\n    'jailhouse',\n    'jalapeno',\n    'jam',\n    'janitor',\n    'january',\n    'jargon',\n    'jarring',\n    'jasmine',\n    'jaundice',\n    'jaunt',\n    'java',\n    'jawed',\n    'jawless',\n    'jawline',\n    'jaws',\n    'jaybird',\n    'jaywalker',\n    'jazz',\n    'jeep',\n    'jeeringly',\n    'jellied',\n    'jelly',\n    'jersey',\n    'jester',\n    'jet',\n    'jiffy',\n    'jigsaw',\n    'jimmy',\n    'jingle',\n    'jingling',\n    'jinx',\n    'jitters',\n    'jittery',\n    'job',\n    'jockey',\n    'jockstrap',\n    'jogger',\n    'jogging',\n    'john',\n    'joining',\n    'jokester',\n    'jokingly',\n    'jolliness',\n    'jolly',\n    'jolt',\n    'jot',\n    'jovial',\n    'joyfully',\n    'joylessly',\n    'joyous',\n    'joyride',\n    'joystick',\n    'jubilance',\n    'jubilant',\n    'judge',\n    'judgingly',\n    'judicial',\n    'judiciary',\n    'judo',\n    'juggle',\n    'juggling',\n    'jugular',\n    'juice',\n    'juiciness',\n    'juicy',\n    'jujitsu',\n    'jukebox',\n    'july',\n    'jumble',\n    'jumbo',\n    'jump',\n    'junction',\n    'juncture',\n    'june',\n    'junior',\n    'juniper',\n    'junkie',\n    'junkman',\n    'junkyard',\n    'jurist',\n    'juror',\n    'jury',\n    'justice',\n    'justifier',\n    'justify',\n    'justly',\n    'justness',\n    'juvenile',\n    'kabob',\n    'kangaroo',\n    'karaoke',\n    'karate',\n    'karma',\n    'kebab',\n    'keenly',\n    'keenness',\n    'keep',\n    'keg',\n    'kelp',\n    'kennel',\n    'kept',\n    'kerchief',\n    'kerosene',\n    'kettle',\n    'kick',\n    'kiln',\n    'kilobyte',\n    'kilogram',\n    'kilometer',\n    'kilowatt',\n    'kilt',\n    'kimono',\n    'kindle',\n    'kindling',\n    'kindly',\n    'kindness',\n    'kindred',\n    'kinetic',\n    'kinfolk',\n    'king',\n    'kinship',\n    'kinsman',\n    'kinswoman',\n    'kissable',\n    'kisser',\n    'kissing',\n    'kitchen',\n    'kite',\n    'kitten',\n    'kitty',\n    'kiwi',\n    'kleenex',\n    'knapsack',\n    'knee',\n    'knelt',\n    'knickers',\n    'knoll',\n    'koala',\n    'kooky',\n    'kosher',\n    'krypton',\n    'kudos',\n    'kung',\n    'labored',\n    'laborer',\n    'laboring',\n    'laborious',\n    'labrador',\n    'ladder',\n    'ladies',\n    'ladle',\n    'ladybug',\n    'ladylike',\n    'lagged',\n    'lagging',\n    'lagoon',\n    'lair',\n    'lake',\n    'lance',\n    'landed',\n    'landfall',\n    'landfill',\n    'landing',\n    'landlady',\n    'landless',\n    'landline',\n    'landlord',\n    'landmark',\n    'landmass',\n    'landmine',\n    'landowner',\n    'landscape',\n    'landside',\n    'landslide',\n    'language',\n    'lankiness',\n    'lanky',\n    'lantern',\n    'lapdog',\n    'lapel',\n    'lapped',\n    'lapping',\n    'laptop',\n    'lard',\n    'large',\n    'lark',\n    'lash',\n    'lasso',\n    'last',\n    'latch',\n    'late',\n    'lather',\n    'latitude',\n    'latrine',\n    'latter',\n    'latticed',\n    'launch',\n    'launder',\n    'laundry',\n    'laurel',\n    'lavender',\n    'lavish',\n    'laxative',\n    'lazily',\n    'laziness',\n    'lazy',\n    'lecturer',\n    'left',\n    'legacy',\n    'legal',\n    'legend',\n    'legged',\n    'leggings',\n    'legible',\n    'legibly',\n    'legislate',\n    'lego',\n    'legroom',\n    'legume',\n    'legwarmer',\n    'legwork',\n    'lemon',\n    'lend',\n    'length',\n    'lens',\n    'lent',\n    'leotard',\n    'lesser',\n    'letdown',\n    'lethargic',\n    'lethargy',\n    'letter',\n    'lettuce',\n    'level',\n    'leverage',\n    'levers',\n    'levitate',\n    'levitator',\n    'liability',\n    'liable',\n    'liberty',\n    'librarian',\n    'library',\n    'licking',\n    'licorice',\n    'lid',\n    'life',\n    'lifter',\n    'lifting',\n    'liftoff',\n    'ligament',\n    'likely',\n    'likeness',\n    'likewise',\n    'liking',\n    'lilac',\n    'lilly',\n    'lily',\n    'limb',\n    'limeade',\n    'limelight',\n    'limes',\n    'limit',\n    'limping',\n    'limpness',\n    'line',\n    'lingo',\n    'linguini',\n    'linguist',\n    'lining',\n    'linked',\n    'linoleum',\n    'linseed',\n    'lint',\n    'lion',\n    'lip',\n    'liquefy',\n    'liqueur',\n    'liquid',\n    'lisp',\n    'list',\n    'litigate',\n    'litigator',\n    'litmus',\n    'litter',\n    'little',\n    'livable',\n    'lived',\n    'lively',\n    'liver',\n    'livestock',\n    'lividly',\n    'living',\n    'lizard',\n    'lubricant',\n    'lubricate',\n    'lucid',\n    'luckily',\n    'luckiness',\n    'luckless',\n    'lucrative',\n    'ludicrous',\n    'lugged',\n    'lukewarm',\n    'lullaby',\n    'lumber',\n    'luminance',\n    'luminous',\n    'lumpiness',\n    'lumping',\n    'lumpish',\n    'lunacy',\n    'lunar',\n    'lunchbox',\n    'luncheon',\n    'lunchroom',\n    'lunchtime',\n    'lung',\n    'lurch',\n    'lure',\n    'luridness',\n    'lurk',\n    'lushly',\n    'lushness',\n    'luster',\n    'lustfully',\n    'lustily',\n    'lustiness',\n    'lustrous',\n    'lusty',\n    'luxurious',\n    'luxury',\n    'lying',\n    'lyrically',\n    'lyricism',\n    'lyricist',\n    'lyrics',\n    'macarena',\n    'macaroni',\n    'macaw',\n    'mace',\n    'machine',\n    'machinist',\n    'magazine',\n    'magenta',\n    'maggot',\n    'magical',\n    'magician',\n    'magma',\n    'magnesium',\n    'magnetic',\n    'magnetism',\n    'magnetize',\n    'magnifier',\n    'magnify',\n    'magnitude',\n    'magnolia',\n    'mahogany',\n    'maimed',\n    'majestic',\n    'majesty',\n    'majorette',\n    'majority',\n    'makeover',\n    'maker',\n    'makeshift',\n    'making',\n    'malformed',\n    'malt',\n    'mama',\n    'mammal',\n    'mammary',\n    'mammogram',\n    'manager',\n    'managing',\n    'manatee',\n    'mandarin',\n    'mandate',\n    'mandatory',\n    'mandolin',\n    'manger',\n    'mangle',\n    'mango',\n    'mangy',\n    'manhandle',\n    'manhole',\n    'manhood',\n    'manhunt',\n    'manicotti',\n    'manicure',\n    'manifesto',\n    'manila',\n    'mankind',\n    'manlike',\n    'manliness',\n    'manly',\n    'manmade',\n    'manned',\n    'mannish',\n    'manor',\n    'manpower',\n    'mantis',\n    'mantra',\n    'manual',\n    'many',\n    'map',\n    'marathon',\n    'marauding',\n    'marbled',\n    'marbles',\n    'marbling',\n    'march',\n    'mardi',\n    'margarine',\n    'margarita',\n    'margin',\n    'marigold',\n    'marina',\n    'marine',\n    'marital',\n    'maritime',\n    'marlin',\n    'marmalade',\n    'maroon',\n    'married',\n    'marrow',\n    'marry',\n    'marshland',\n    'marshy',\n    'marsupial',\n    'marvelous',\n    'marxism',\n    'mascot',\n    'masculine',\n    'mashed',\n    'mashing',\n    'massager',\n    'masses',\n    'massive',\n    'mastiff',\n    'matador',\n    'matchbook',\n    'matchbox',\n    'matcher',\n    'matching',\n    'matchless',\n    'material',\n    'maternal',\n    'maternity',\n    'math',\n    'mating',\n    'matriarch',\n    'matrimony',\n    'matrix',\n    'matron',\n    'matted',\n    'matter',\n    'maturely',\n    'maturing',\n    'maturity',\n    'mauve',\n    'maverick',\n    'maximize',\n    'maximum',\n    'maybe',\n    'mayday',\n    'mayflower',\n    'moaner',\n    'moaning',\n    'mobile',\n    'mobility',\n    'mobilize',\n    'mobster',\n    'mocha',\n    'mocker',\n    'mockup',\n    'modified',\n    'modify',\n    'modular',\n    'modulator',\n    'module',\n    'moisten',\n    'moistness',\n    'moisture',\n    'molar',\n    'molasses',\n    'mold',\n    'molecular',\n    'molecule',\n    'molehill',\n    'mollusk',\n    'mom',\n    'monastery',\n    'monday',\n    'monetary',\n    'monetize',\n    'moneybags',\n    'moneyless',\n    'moneywise',\n    'mongoose',\n    'mongrel',\n    'monitor',\n    'monkhood',\n    'monogamy',\n    'monogram',\n    'monologue',\n    'monopoly',\n    'monorail',\n    'monotone',\n    'monotype',\n    'monoxide',\n    'monsieur',\n    'monsoon',\n    'monstrous',\n    'monthly',\n    'monument',\n    'moocher',\n    'moodiness',\n    'moody',\n    'mooing',\n    'moonbeam',\n    'mooned',\n    'moonlight',\n    'moonlike',\n    'moonlit',\n    'moonrise',\n    'moonscape',\n    'moonshine',\n    'moonstone',\n    'moonwalk',\n    'mop',\n    'morale',\n    'morality',\n    'morally',\n    'morbidity',\n    'morbidly',\n    'morphine',\n    'morphing',\n    'morse',\n    'mortality',\n    'mortally',\n    'mortician',\n    'mortified',\n    'mortify',\n    'mortuary',\n    'mosaic',\n    'mossy',\n    'most',\n    'mothball',\n    'mothproof',\n    'motion',\n    'motivate',\n    'motivator',\n    'motive',\n    'motocross',\n    'motor',\n    'motto',\n    'mountable',\n    'mountain',\n    'mounted',\n    'mounting',\n    'mourner',\n    'mournful',\n    'mouse',\n    'mousiness',\n    'moustache',\n    'mousy',\n    'mouth',\n    'movable',\n    'move',\n    'movie',\n    'moving',\n    'mower',\n    'mowing',\n    'much',\n    'muck',\n    'mud',\n    'mug',\n    'mulberry',\n    'mulch',\n    'mule',\n    'mulled',\n    'mullets',\n    'multiple',\n    'multiply',\n    'multitask',\n    'multitude',\n    'mumble',\n    'mumbling',\n    'mumbo',\n    'mummified',\n    'mummify',\n    'mummy',\n    'mumps',\n    'munchkin',\n    'mundane',\n    'municipal',\n    'muppet',\n    'mural',\n    'murkiness',\n    'murky',\n    'murmuring',\n    'muscular',\n    'museum',\n    'mushily',\n    'mushiness',\n    'mushroom',\n    'mushy',\n    'music',\n    'musket',\n    'muskiness',\n    'musky',\n    'mustang',\n    'mustard',\n    'muster',\n    'mustiness',\n    'musty',\n    'mutable',\n    'mutate',\n    'mutation',\n    'mute',\n    'mutilated',\n    'mutilator',\n    'mutiny',\n    'mutt',\n    'mutual',\n    'muzzle',\n    'myself',\n    'myspace',\n    'mystified',\n    'mystify',\n    'myth',\n    'nacho',\n    'nag',\n    'nail',\n    'name',\n    'naming',\n    'nanny',\n    'nanometer',\n    'nape',\n    'napkin',\n    'napped',\n    'napping',\n    'nappy',\n    'narrow',\n    'nastily',\n    'nastiness',\n    'national',\n    'native',\n    'nativity',\n    'natural',\n    'nature',\n    'naturist',\n    'nautical',\n    'navigate',\n    'navigator',\n    'navy',\n    'nearby',\n    'nearest',\n    'nearly',\n    'nearness',\n    'neatly',\n    'neatness',\n    'nebula',\n    'nebulizer',\n    'nectar',\n    'negate',\n    'negation',\n    'negative',\n    'neglector',\n    'negligee',\n    'negligent',\n    'negotiate',\n    'nemeses',\n    'nemesis',\n    'neon',\n    'nephew',\n    'nerd',\n    'nervous',\n    'nervy',\n    'nest',\n    'net',\n    'neurology',\n    'neuron',\n    'neurosis',\n    'neurotic',\n    'neuter',\n    'neutron',\n    'never',\n    'next',\n    'nibble',\n    'nickname',\n    'nicotine',\n    'niece',\n    'nifty',\n    'nimble',\n    'nimbly',\n    'nineteen',\n    'ninetieth',\n    'ninja',\n    'nintendo',\n    'ninth',\n    'nuclear',\n    'nuclei',\n    'nucleus',\n    'nugget',\n    'nullify',\n    'number',\n    'numbing',\n    'numbly',\n    'numbness',\n    'numeral',\n    'numerate',\n    'numerator',\n    'numeric',\n    'numerous',\n    'nuptials',\n    'nursery',\n    'nursing',\n    'nurture',\n    'nutcase',\n    'nutlike',\n    'nutmeg',\n    'nutrient',\n    'nutshell',\n    'nuttiness',\n    'nutty',\n    'nuzzle',\n    'nylon',\n    'oaf',\n    'oak',\n    'oasis',\n    'oat',\n    'obedience',\n    'obedient',\n    'obituary',\n    'object',\n    'obligate',\n    'obliged',\n    'oblivion',\n    'oblivious',\n    'oblong',\n    'obnoxious',\n    'oboe',\n    'obscure',\n    'obscurity',\n    'observant',\n    'observer',\n    'observing',\n    'obsessed',\n    'obsession',\n    'obsessive',\n    'obsolete',\n    'obstacle',\n    'obstinate',\n    'obstruct',\n    'obtain',\n    'obtrusive',\n    'obtuse',\n    'obvious',\n    'occultist',\n    'occupancy',\n    'occupant',\n    'occupier',\n    'occupy',\n    'ocean',\n    'ocelot',\n    'octagon',\n    'octane',\n    'october',\n    'octopus',\n    'ogle',\n    'oil',\n    'oink',\n    'ointment',\n    'okay',\n    'old',\n    'olive',\n    'olympics',\n    'omega',\n    'omen',\n    'ominous',\n    'omission',\n    'omit',\n    'omnivore',\n    'onboard',\n    'oncoming',\n    'ongoing',\n    'onion',\n    'online',\n    'onlooker',\n    'only',\n    'onscreen',\n    'onset',\n    'onshore',\n    'onslaught',\n    'onstage',\n    'onto',\n    'onward',\n    'onyx',\n    'oops',\n    'ooze',\n    'oozy',\n    'opacity',\n    'opal',\n    'open',\n    'operable',\n    'operate',\n    'operating',\n    'operation',\n    'operative',\n    'operator',\n    'opium',\n    'opossum',\n    'opponent',\n    'oppose',\n    'opposing',\n    'opposite',\n    'oppressed',\n    'oppressor',\n    'opt',\n    'opulently',\n    'osmosis',\n    'other',\n    'otter',\n    'ouch',\n    'ought',\n    'ounce',\n    'outage',\n    'outback',\n    'outbid',\n    'outboard',\n    'outbound',\n    'outbreak',\n    'outburst',\n    'outcast',\n    'outclass',\n    'outcome',\n    'outdated',\n    'outdoors',\n    'outer',\n    'outfield',\n    'outfit',\n    'outflank',\n    'outgoing',\n    'outgrow',\n    'outhouse',\n    'outing',\n    'outlast',\n    'outlet',\n    'outline',\n    'outlook',\n    'outlying',\n    'outmatch',\n    'outmost',\n    'outnumber',\n    'outplayed',\n    'outpost',\n    'outpour',\n    'output',\n    'outrage',\n    'outrank',\n    'outreach',\n    'outright',\n    'outscore',\n    'outsell',\n    'outshine',\n    'outshoot',\n    'outsider',\n    'outskirts',\n    'outsmart',\n    'outsource',\n    'outspoken',\n    'outtakes',\n    'outthink',\n    'outward',\n    'outweigh',\n    'outwit',\n    'oval',\n    'ovary',\n    'oven',\n    'overact',\n    'overall',\n    'overarch',\n    'overbid',\n    'overbill',\n    'overbite',\n    'overblown',\n    'overboard',\n    'overbook',\n    'overbuilt',\n    'overcast',\n    'overcoat',\n    'overcome',\n    'overcook',\n    'overcrowd',\n    'overdraft',\n    'overdrawn',\n    'overdress',\n    'overdrive',\n    'overdue',\n    'overeager',\n    'overeater',\n    'overexert',\n    'overfed',\n    'overfeed',\n    'overfill',\n    'overflow',\n    'overfull',\n    'overgrown',\n    'overhand',\n    'overhang',\n    'overhaul',\n    'overhead',\n    'overhear',\n    'overheat',\n    'overhung',\n    'overjoyed',\n    'overkill',\n    'overlabor',\n    'overlaid',\n    'overlap',\n    'overlay',\n    'overload',\n    'overlook',\n    'overlord',\n    'overlying',\n    'overnight',\n    'overpass',\n    'overpay',\n    'overplant',\n    'overplay',\n    'overpower',\n    'overprice',\n    'overrate',\n    'overreach',\n    'overreact',\n    'override',\n    'overripe',\n    'overrule',\n    'overrun',\n    'overshoot',\n    'overshot',\n    'oversight',\n    'oversized',\n    'oversleep',\n    'oversold',\n    'overspend',\n    'overstate',\n    'overstay',\n    'overstep',\n    'overstock',\n    'overstuff',\n    'oversweet',\n    'overtake',\n    'overthrow',\n    'overtime',\n    'overtly',\n    'overtone',\n    'overture',\n    'overturn',\n    'overuse',\n    'overvalue',\n    'overview',\n    'overwrite',\n    'owl',\n    'oxford',\n    'oxidant',\n    'oxidation',\n    'oxidize',\n    'oxidizing',\n    'oxygen',\n    'oxymoron',\n    'oyster',\n    'ozone',\n    'paced',\n    'pacemaker',\n    'pacific',\n    'pacifier',\n    'pacifism',\n    'pacifist',\n    'pacify',\n    'padded',\n    'padding',\n    'paddle',\n    'paddling',\n    'padlock',\n    'pagan',\n    'pager',\n    'paging',\n    'pajamas',\n    'palace',\n    'palatable',\n    'palm',\n    'palpable',\n    'palpitate',\n    'paltry',\n    'pampered',\n    'pamperer',\n    'pampers',\n    'pamphlet',\n    'panama',\n    'pancake',\n    'pancreas',\n    'panda',\n    'pandemic',\n    'pang',\n    'panhandle',\n    'panic',\n    'panning',\n    'panorama',\n    'panoramic',\n    'panther',\n    'pantomime',\n    'pantry',\n    'pants',\n    'pantyhose',\n    'paparazzi',\n    'papaya',\n    'paper',\n    'paprika',\n    'papyrus',\n    'parabola',\n    'parachute',\n    'parade',\n    'paradox',\n    'paragraph',\n    'parakeet',\n    'paralegal',\n    'paralyses',\n    'paralysis',\n    'paralyze',\n    'paramedic',\n    'parameter',\n    'paramount',\n    'parasail',\n    'parasite',\n    'parasitic',\n    'parcel',\n    'parched',\n    'parchment',\n    'pardon',\n    'parish',\n    'parka',\n    'parking',\n    'parkway',\n    'parlor',\n    'parmesan',\n    'parole',\n    'parrot',\n    'parsley',\n    'parsnip',\n    'partake',\n    'parted',\n    'parting',\n    'partition',\n    'partly',\n    'partner',\n    'partridge',\n    'party',\n    'passable',\n    'passably',\n    'passage',\n    'passcode',\n    'passenger',\n    'passerby',\n    'passing',\n    'passion',\n    'passive',\n    'passivism',\n    'passover',\n    'passport',\n    'password',\n    'pasta',\n    'pasted',\n    'pastel',\n    'pastime',\n    'pastor',\n    'pastrami',\n    'pasture',\n    'pasty',\n    'patchwork',\n    'patchy',\n    'paternal',\n    'paternity',\n    'path',\n    'patience',\n    'patient',\n    'patio',\n    'patriarch',\n    'patriot',\n    'patrol',\n    'patronage',\n    'patronize',\n    'pauper',\n    'pavement',\n    'paver',\n    'pavestone',\n    'pavilion',\n    'paving',\n    'pawing',\n    'payable',\n    'payback',\n    'paycheck',\n    'payday',\n    'payee',\n    'payer',\n    'paying',\n    'payment',\n    'payphone',\n    'payroll',\n    'pebble',\n    'pebbly',\n    'pecan',\n    'pectin',\n    'peculiar',\n    'peddling',\n    'pediatric',\n    'pedicure',\n    'pedigree',\n    'pedometer',\n    'pegboard',\n    'pelican',\n    'pellet',\n    'pelt',\n    'pelvis',\n    'penalize',\n    'penalty',\n    'pencil',\n    'pendant',\n    'pending',\n    'penholder',\n    'penknife',\n    'pennant',\n    'penniless',\n    'penny',\n    'penpal',\n    'pension',\n    'pentagon',\n    'pentagram',\n    'pep',\n    'perceive',\n    'percent',\n    'perch',\n    'percolate',\n    'perennial',\n    'perfected',\n    'perfectly',\n    'perfume',\n    'periscope',\n    'perish',\n    'perjurer',\n    'perjury',\n    'perkiness',\n    'perky',\n    'perm',\n    'peroxide',\n    'perpetual',\n    'perplexed',\n    'persecute',\n    'persevere',\n    'persuaded',\n    'persuader',\n    'pesky',\n    'peso',\n    'pessimism',\n    'pessimist',\n    'pester',\n    'pesticide',\n    'petal',\n    'petite',\n    'petition',\n    'petri',\n    'petroleum',\n    'petted',\n    'petticoat',\n    'pettiness',\n    'petty',\n    'petunia',\n    'phantom',\n    'phobia',\n    'phoenix',\n    'phonebook',\n    'phoney',\n    'phonics',\n    'phoniness',\n    'phony',\n    'phosphate',\n    'photo',\n    'phrase',\n    'phrasing',\n    'placard',\n    'placate',\n    'placidly',\n    'plank',\n    'planner',\n    'plant',\n    'plasma',\n    'plaster',\n    'plastic',\n    'plated',\n    'platform',\n    'plating',\n    'platinum',\n    'platonic',\n    'platter',\n    'platypus',\n    'plausible',\n    'plausibly',\n    'playable',\n    'playback',\n    'player',\n    'playful',\n    'playgroup',\n    'playhouse',\n    'playing',\n    'playlist',\n    'playmaker',\n    'playmate',\n    'playoff',\n    'playpen',\n    'playroom',\n    'playset',\n    'plaything',\n    'playtime',\n    'plaza',\n    'pleading',\n    'pleat',\n    'pledge',\n    'plentiful',\n    'plenty',\n    'plethora',\n    'plexiglas',\n    'pliable',\n    'plod',\n    'plop',\n    'plot',\n    'plow',\n    'ploy',\n    'pluck',\n    'plug',\n    'plunder',\n    'plunging',\n    'plural',\n    'plus',\n    'plutonium',\n    'plywood',\n    'poach',\n    'pod',\n    'poem',\n    'poet',\n    'pogo',\n    'pointed',\n    'pointer',\n    'pointing',\n    'pointless',\n    'pointy',\n    'poise',\n    'poison',\n    'poker',\n    'poking',\n    'polar',\n    'police',\n    'policy',\n    'polio',\n    'polish',\n    'politely',\n    'polka',\n    'polo',\n    'polyester',\n    'polygon',\n    'polygraph',\n    'polymer',\n    'poncho',\n    'pond',\n    'pony',\n    'popcorn',\n    'pope',\n    'poplar',\n    'popper',\n    'poppy',\n    'popsicle',\n    'populace',\n    'popular',\n    'populate',\n    'porcupine',\n    'pork',\n    'porous',\n    'porridge',\n    'portable',\n    'portal',\n    'portfolio',\n    'porthole',\n    'portion',\n    'portly',\n    'portside',\n    'poser',\n    'posh',\n    'posing',\n    'possible',\n    'possibly',\n    'possum',\n    'postage',\n    'postal',\n    'postbox',\n    'postcard',\n    'posted',\n    'poster',\n    'posting',\n    'postnasal',\n    'posture',\n    'postwar',\n    'pouch',\n    'pounce',\n    'pouncing',\n    'pound',\n    'pouring',\n    'pout',\n    'powdered',\n    'powdering',\n    'powdery',\n    'power',\n    'powwow',\n    'pox',\n    'praising',\n    'prance',\n    'prancing',\n    'pranker',\n    'prankish',\n    'prankster',\n    'prayer',\n    'praying',\n    'preacher',\n    'preaching',\n    'preachy',\n    'preamble',\n    'precinct',\n    'precise',\n    'precision',\n    'precook',\n    'precut',\n    'predator',\n    'predefine',\n    'predict',\n    'preface',\n    'prefix',\n    'preflight',\n    'preformed',\n    'pregame',\n    'pregnancy',\n    'pregnant',\n    'preheated',\n    'prelaunch',\n    'prelaw',\n    'prelude',\n    'premiere',\n    'premises',\n    'premium',\n    'prenatal',\n    'preoccupy',\n    'preorder',\n    'prepaid',\n    'prepay',\n    'preplan',\n    'preppy',\n    'preschool',\n    'prescribe',\n    'preseason',\n    'preset',\n    'preshow',\n    'president',\n    'presoak',\n    'press',\n    'presume',\n    'presuming',\n    'preteen',\n    'pretended',\n    'pretender',\n    'pretense',\n    'pretext',\n    'pretty',\n    'pretzel',\n    'prevail',\n    'prevalent',\n    'prevent',\n    'preview',\n    'previous',\n    'prewar',\n    'prewashed',\n    'prideful',\n    'pried',\n    'primal',\n    'primarily',\n    'primary',\n    'primate',\n    'primer',\n    'primp',\n    'princess',\n    'print',\n    'prior',\n    'prism',\n    'prison',\n    'prissy',\n    'pristine',\n    'privacy',\n    'private',\n    'privatize',\n    'prize',\n    'proactive',\n    'probable',\n    'probably',\n    'probation',\n    'probe',\n    'probing',\n    'probiotic',\n    'problem',\n    'procedure',\n    'process',\n    'proclaim',\n    'procreate',\n    'procurer',\n    'prodigal',\n    'prodigy',\n    'produce',\n    'product',\n    'profane',\n    'profanity',\n    'professed',\n    'professor',\n    'profile',\n    'profound',\n    'profusely',\n    'progeny',\n    'prognosis',\n    'program',\n    'progress',\n    'projector',\n    'prologue',\n    'prolonged',\n    'promenade',\n    'prominent',\n    'promoter',\n    'promotion',\n    'prompter',\n    'promptly',\n    'prone',\n    'prong',\n    'pronounce',\n    'pronto',\n    'proofing',\n    'proofread',\n    'proofs',\n    'propeller',\n    'properly',\n    'property',\n    'proponent',\n    'proposal',\n    'propose',\n    'props',\n    'prorate',\n    'protector',\n    'protegee',\n    'proton',\n    'prototype',\n    'protozoan',\n    'protract',\n    'protrude',\n    'proud',\n    'provable',\n    'proved',\n    'proven',\n    'provided',\n    'provider',\n    'providing',\n    'province',\n    'proving',\n    'provoke',\n    'provoking',\n    'provolone',\n    'prowess',\n    'prowler',\n    'prowling',\n    'proximity',\n    'proxy',\n    'prozac',\n    'prude',\n    'prudishly',\n    'prune',\n    'pruning',\n    'pry',\n    'psychic',\n    'public',\n    'publisher',\n    'pucker',\n    'pueblo',\n    'pug',\n    'pull',\n    'pulmonary',\n    'pulp',\n    'pulsate',\n    'pulse',\n    'pulverize',\n    'puma',\n    'pumice',\n    'pummel',\n    'punch',\n    'punctual',\n    'punctuate',\n    'punctured',\n    'pungent',\n    'punisher',\n    'punk',\n    'pupil',\n    'puppet',\n    'puppy',\n    'purchase',\n    'pureblood',\n    'purebred',\n    'purely',\n    'pureness',\n    'purgatory',\n    'purge',\n    'purging',\n    'purifier',\n    'purify',\n    'purist',\n    'puritan',\n    'purity',\n    'purple',\n    'purplish',\n    'purposely',\n    'purr',\n    'purse',\n    'pursuable',\n    'pursuant',\n    'pursuit',\n    'purveyor',\n    'pushcart',\n    'pushchair',\n    'pusher',\n    'pushiness',\n    'pushing',\n    'pushover',\n    'pushpin',\n    'pushup',\n    'pushy',\n    'putdown',\n    'putt',\n    'puzzle',\n    'puzzling',\n    'pyramid',\n    'pyromania',\n    'python',\n    'quack',\n    'quadrant',\n    'quail',\n    'quaintly',\n    'quake',\n    'quaking',\n    'qualified',\n    'qualifier',\n    'qualify',\n    'quality',\n    'qualm',\n    'quantum',\n    'quarrel',\n    'quarry',\n    'quartered',\n    'quarterly',\n    'quarters',\n    'quartet',\n    'quench',\n    'query',\n    'quicken',\n    'quickly',\n    'quickness',\n    'quicksand',\n    'quickstep',\n    'quiet',\n    'quill',\n    'quilt',\n    'quintet',\n    'quintuple',\n    'quirk',\n    'quit',\n    'quiver',\n    'quizzical',\n    'quotable',\n    'quotation',\n    'quote',\n    'rabid',\n    'race',\n    'racing',\n    'racism',\n    'rack',\n    'racoon',\n    'radar',\n    'radial',\n    'radiance',\n    'radiantly',\n    'radiated',\n    'radiation',\n    'radiator',\n    'radio',\n    'radish',\n    'raffle',\n    'raft',\n    'rage',\n    'ragged',\n    'raging',\n    'ragweed',\n    'raider',\n    'railcar',\n    'railing',\n    'railroad',\n    'railway',\n    'raisin',\n    'rake',\n    'raking',\n    'rally',\n    'ramble',\n    'rambling',\n    'ramp',\n    'ramrod',\n    'ranch',\n    'rancidity',\n    'random',\n    'ranged',\n    'ranger',\n    'ranging',\n    'ranked',\n    'ranking',\n    'ransack',\n    'ranting',\n    'rants',\n    'rare',\n    'rarity',\n    'rascal',\n    'rash',\n    'rasping',\n    'ravage',\n    'raven',\n    'ravine',\n    'raving',\n    'ravioli',\n    'ravishing',\n    'reabsorb',\n    'reach',\n    'reacquire',\n    'reaction',\n    'reactive',\n    'reactor',\n    'reaffirm',\n    'ream',\n    'reanalyze',\n    'reappear',\n    'reapply',\n    'reappoint',\n    'reapprove',\n    'rearrange',\n    'rearview',\n    'reason',\n    'reassign',\n    'reassure',\n    'reattach',\n    'reawake',\n    'rebalance',\n    'rebate',\n    'rebel',\n    'rebirth',\n    'reboot',\n    'reborn',\n    'rebound',\n    'rebuff',\n    'rebuild',\n    'rebuilt',\n    'reburial',\n    'rebuttal',\n    'recall',\n    'recant',\n    'recapture',\n    'recast',\n    'recede',\n    'recent',\n    'recess',\n    'recharger',\n    'recipient',\n    'recital',\n    'recite',\n    'reckless',\n    'reclaim',\n    'recliner',\n    'reclining',\n    'recluse',\n    'reclusive',\n    'recognize',\n    'recoil',\n    'recollect',\n    'recolor',\n    'reconcile',\n    'reconfirm',\n    'reconvene',\n    'recopy',\n    'record',\n    'recount',\n    'recoup',\n    'recovery',\n    'recreate',\n    'rectal',\n    'rectangle',\n    'rectified',\n    'rectify',\n    'recycled',\n    'recycler',\n    'recycling',\n    'reemerge',\n    'reenact',\n    'reenter',\n    'reentry',\n    'reexamine',\n    'referable',\n    'referee',\n    'reference',\n    'refill',\n    'refinance',\n    'refined',\n    'refinery',\n    'refining',\n    'refinish',\n    'reflected',\n    'reflector',\n    'reflex',\n    'reflux',\n    'refocus',\n    'refold',\n    'reforest',\n    'reformat',\n    'reformed',\n    'reformer',\n    'reformist',\n    'refract',\n    'refrain',\n    'refreeze',\n    'refresh',\n    'refried',\n    'refueling',\n    'refund',\n    'refurbish',\n    'refurnish',\n    'refusal',\n    'refuse',\n    'refusing',\n    'refutable',\n    'refute',\n    'regain',\n    'regalia',\n    'regally',\n    'reggae',\n    'regime',\n    'region',\n    'register',\n    'registrar',\n    'registry',\n    'regress',\n    'regretful',\n    'regroup',\n    'regular',\n    'regulate',\n    'regulator',\n    'rehab',\n    'reheat',\n    'rehire',\n    'rehydrate',\n    'reimburse',\n    'reissue',\n    'reiterate',\n    'rejoice',\n    'rejoicing',\n    'rejoin',\n    'rekindle',\n    'relapse',\n    'relapsing',\n    'relatable',\n    'related',\n    'relation',\n    'relative',\n    'relax',\n    'relay',\n    'relearn',\n    'release',\n    'relenting',\n    'reliable',\n    'reliably',\n    'reliance',\n    'reliant',\n    'relic',\n    'relieve',\n    'relieving',\n    'relight',\n    'relish',\n    'relive',\n    'reload',\n    'relocate',\n    'relock',\n    'reluctant',\n    'rely',\n    'remake',\n    'remark',\n    'remarry',\n    'rematch',\n    'remedial',\n    'remedy',\n    'remember',\n    'reminder',\n    'remindful',\n    'remission',\n    'remix',\n    'remnant',\n    'remodeler',\n    'remold',\n    'remorse',\n    'remote',\n    'removable',\n    'removal',\n    'removed',\n    'remover',\n    'removing',\n    'rename',\n    'renderer',\n    'rendering',\n    'rendition',\n    'renegade',\n    'renewable',\n    'renewably',\n    'renewal',\n    'renewed',\n    'renounce',\n    'renovate',\n    'renovator',\n    'rentable',\n    'rental',\n    'rented',\n    'renter',\n    'reoccupy',\n    'reoccur',\n    'reopen',\n    'reorder',\n    'repackage',\n    'repacking',\n    'repaint',\n    'repair',\n    'repave',\n    'repaying',\n    'repayment',\n    'repeal',\n    'repeated',\n    'repeater',\n    'repent',\n    'rephrase',\n    'replace',\n    'replay',\n    'replica',\n    'reply',\n    'reporter',\n    'repose',\n    'repossess',\n    'repost',\n    'repressed',\n    'reprimand',\n    'reprint',\n    'reprise',\n    'reproach',\n    'reprocess',\n    'reproduce',\n    'reprogram',\n    'reps',\n    'reptile',\n    'reptilian',\n    'repugnant',\n    'repulsion',\n    'repulsive',\n    'repurpose',\n    'reputable',\n    'reputably',\n    'request',\n    'require',\n    'requisite',\n    'reroute',\n    'rerun',\n    'resale',\n    'resample',\n    'rescuer',\n    'reseal',\n    'research',\n    'reselect',\n    'reseller',\n    'resemble',\n    'resend',\n    'resent',\n    'reset',\n    'reshape',\n    'reshoot',\n    'reshuffle',\n    'residence',\n    'residency',\n    'resident',\n    'residual',\n    'residue',\n    'resigned',\n    'resilient',\n    'resistant',\n    'resisting',\n    'resize',\n    'resolute',\n    'resolved',\n    'resonant',\n    'resonate',\n    'resort',\n    'resource',\n    'respect',\n    'resubmit',\n    'result',\n    'resume',\n    'resupply',\n    'resurface',\n    'resurrect',\n    'retail',\n    'retainer',\n    'retaining',\n    'retake',\n    'retaliate',\n    'retention',\n    'rethink',\n    'retinal',\n    'retired',\n    'retiree',\n    'retiring',\n    'retold',\n    'retool',\n    'retorted',\n    'retouch',\n    'retrace',\n    'retract',\n    'retrain',\n    'retread',\n    'retreat',\n    'retrial',\n    'retrieval',\n    'retriever',\n    'retry',\n    'return',\n    'retying',\n    'retype',\n    'reunion',\n    'reunite',\n    'reusable',\n    'reuse',\n    'reveal',\n    'reveler',\n    'revenge',\n    'revenue',\n    'reverb',\n    'revered',\n    'reverence',\n    'reverend',\n    'reversal',\n    'reverse',\n    'reversing',\n    'reversion',\n    'revert',\n    'revisable',\n    'revise',\n    'revision',\n    'revisit',\n    'revivable',\n    'revival',\n    'reviver',\n    'reviving',\n    'revocable',\n    'revoke',\n    'revolt',\n    'revolver',\n    'revolving',\n    'reward',\n    'rewash',\n    'rewind',\n    'rewire',\n    'reword',\n    'rework',\n    'rewrap',\n    'rewrite',\n    'rhyme',\n    'ribbon',\n    'ribcage',\n    'rice',\n    'riches',\n    'richly',\n    'richness',\n    'rickety',\n    'ricotta',\n    'riddance',\n    'ridden',\n    'ride',\n    'riding',\n    'rifling',\n    'rift',\n    'rigging',\n    'rigid',\n    'rigor',\n    'rimless',\n    'rimmed',\n    'rind',\n    'rink',\n    'rinse',\n    'rinsing',\n    'riot',\n    'ripcord',\n    'ripeness',\n    'ripening',\n    'ripping',\n    'ripple',\n    'rippling',\n    'riptide',\n    'rise',\n    'rising',\n    'risk',\n    'risotto',\n    'ritalin',\n    'ritzy',\n    'rival',\n    'riverbank',\n    'riverbed',\n    'riverboat',\n    'riverside',\n    'riveter',\n    'riveting',\n    'roamer',\n    'roaming',\n    'roast',\n    'robbing',\n    'robe',\n    'robin',\n    'robotics',\n    'robust',\n    'rockband',\n    'rocker',\n    'rocket',\n    'rockfish',\n    'rockiness',\n    'rocking',\n    'rocklike',\n    'rockslide',\n    'rockstar',\n    'rocky',\n    'rogue',\n    'roman',\n    'romp',\n    'rope',\n    'roping',\n    'roster',\n    'rosy',\n    'rotten',\n    'rotting',\n    'rotunda',\n    'roulette',\n    'rounding',\n    'roundish',\n    'roundness',\n    'roundup',\n    'roundworm',\n    'routine',\n    'routing',\n    'rover',\n    'roving',\n    'royal',\n    'rubbed',\n    'rubber',\n    'rubbing',\n    'rubble',\n    'rubdown',\n    'ruby',\n    'ruckus',\n    'rudder',\n    'rug',\n    'ruined',\n    'rule',\n    'rumble',\n    'rumbling',\n    'rummage',\n    'rumor',\n    'runaround',\n    'rundown',\n    'runner',\n    'running',\n    'runny',\n    'runt',\n    'runway',\n    'rupture',\n    'rural',\n    'ruse',\n    'rush',\n    'rust',\n    'rut',\n    'sabbath',\n    'sabotage',\n    'sacrament',\n    'sacred',\n    'sacrifice',\n    'sadden',\n    'saddlebag',\n    'saddled',\n    'saddling',\n    'sadly',\n    'sadness',\n    'safari',\n    'safeguard',\n    'safehouse',\n    'safely',\n    'safeness',\n    'saffron',\n    'saga',\n    'sage',\n    'sagging',\n    'saggy',\n    'said',\n    'saint',\n    'sake',\n    'salad',\n    'salami',\n    'salaried',\n    'salary',\n    'saline',\n    'salon',\n    'saloon',\n    'salsa',\n    'salt',\n    'salutary',\n    'salute',\n    'salvage',\n    'salvaging',\n    'salvation',\n    'same',\n    'sample',\n    'sampling',\n    'sanction',\n    'sanctity',\n    'sanctuary',\n    'sandal',\n    'sandbag',\n    'sandbank',\n    'sandbar',\n    'sandblast',\n    'sandbox',\n    'sanded',\n    'sandfish',\n    'sanding',\n    'sandlot',\n    'sandpaper',\n    'sandpit',\n    'sandstone',\n    'sandstorm',\n    'sandworm',\n    'sandy',\n    'sanitary',\n    'sanitizer',\n    'sank',\n    'santa',\n    'sapling',\n    'sappiness',\n    'sappy',\n    'sarcasm',\n    'sarcastic',\n    'sardine',\n    'sash',\n    'sasquatch',\n    'sassy',\n    'satchel',\n    'satiable',\n    'satin',\n    'satirical',\n    'satisfied',\n    'satisfy',\n    'saturate',\n    'saturday',\n    'sauciness',\n    'saucy',\n    'sauna',\n    'savage',\n    'savanna',\n    'saved',\n    'savings',\n    'savior',\n    'savor',\n    'saxophone',\n    'say',\n    'scabbed',\n    'scabby',\n    'scalded',\n    'scalding',\n    'scale',\n    'scaling',\n    'scallion',\n    'scallop',\n    'scalping',\n    'scam',\n    'scandal',\n    'scanner',\n    'scanning',\n    'scant',\n    'scapegoat',\n    'scarce',\n    'scarcity',\n    'scarecrow',\n    'scared',\n    'scarf',\n    'scarily',\n    'scariness',\n    'scarring',\n    'scary',\n    'scavenger',\n    'scenic',\n    'schedule',\n    'schematic',\n    'scheme',\n    'scheming',\n    'schilling',\n    'schnapps',\n    'scholar',\n    'science',\n    'scientist',\n    'scion',\n    'scoff',\n    'scolding',\n    'scone',\n    'scoop',\n    'scooter',\n    'scope',\n    'scorch',\n    'scorebook',\n    'scorecard',\n    'scored',\n    'scoreless',\n    'scorer',\n    'scoring',\n    'scorn',\n    'scorpion',\n    'scotch',\n    'scoundrel',\n    'scoured',\n    'scouring',\n    'scouting',\n    'scouts',\n    'scowling',\n    'scrabble',\n    'scraggly',\n    'scrambled',\n    'scrambler',\n    'scrap',\n    'scratch',\n    'scrawny',\n    'screen',\n    'scribble',\n    'scribe',\n    'scribing',\n    'scrimmage',\n    'script',\n    'scroll',\n    'scrooge',\n    'scrounger',\n    'scrubbed',\n    'scrubber',\n    'scruffy',\n    'scrunch',\n    'scrutiny',\n    'scuba',\n    'scuff',\n    'sculptor',\n    'sculpture',\n    'scurvy',\n    'scuttle',\n    'secluded',\n    'secluding',\n    'seclusion',\n    'second',\n    'secrecy',\n    'secret',\n    'sectional',\n    'sector',\n    'secular',\n    'securely',\n    'security',\n    'sedan',\n    'sedate',\n    'sedation',\n    'sedative',\n    'sediment',\n    'seduce',\n    'seducing',\n    'segment',\n    'seismic',\n    'seizing',\n    'seldom',\n    'selected',\n    'selection',\n    'selective',\n    'selector',\n    'self',\n    'seltzer',\n    'semantic',\n    'semester',\n    'semicolon',\n    'semifinal',\n    'seminar',\n    'semisoft',\n    'semisweet',\n    'senate',\n    'senator',\n    'send',\n    'senior',\n    'senorita',\n    'sensation',\n    'sensitive',\n    'sensitize',\n    'sensually',\n    'sensuous',\n    'sepia',\n    'september',\n    'septic',\n    'septum',\n    'sequel',\n    'sequence',\n    'sequester',\n    'series',\n    'sermon',\n    'serotonin',\n    'serpent',\n    'serrated',\n    'serve',\n    'service',\n    'serving',\n    'sesame',\n    'sessions',\n    'setback',\n    'setting',\n    'settle',\n    'settling',\n    'setup',\n    'sevenfold',\n    'seventeen',\n    'seventh',\n    'seventy',\n    'severity',\n    'shabby',\n    'shack',\n    'shaded',\n    'shadily',\n    'shadiness',\n    'shading',\n    'shadow',\n    'shady',\n    'shaft',\n    'shakable',\n    'shakily',\n    'shakiness',\n    'shaking',\n    'shaky',\n    'shale',\n    'shallot',\n    'shallow',\n    'shame',\n    'shampoo',\n    'shamrock',\n    'shank',\n    'shanty',\n    'shape',\n    'shaping',\n    'share',\n    'sharpener',\n    'sharper',\n    'sharpie',\n    'sharply',\n    'sharpness',\n    'shawl',\n    'sheath',\n    'shed',\n    'sheep',\n    'sheet',\n    'shelf',\n    'shell',\n    'shelter',\n    'shelve',\n    'shelving',\n    'sherry',\n    'shield',\n    'shifter',\n    'shifting',\n    'shiftless',\n    'shifty',\n    'shimmer',\n    'shimmy',\n    'shindig',\n    'shine',\n    'shingle',\n    'shininess',\n    'shining',\n    'shiny',\n    'ship',\n    'shirt',\n    'shivering',\n    'shock',\n    'shone',\n    'shoplift',\n    'shopper',\n    'shopping',\n    'shoptalk',\n    'shore',\n    'shortage',\n    'shortcake',\n    'shortcut',\n    'shorten',\n    'shorter',\n    'shorthand',\n    'shortlist',\n    'shortly',\n    'shortness',\n    'shorts',\n    'shortwave',\n    'shorty',\n    'shout',\n    'shove',\n    'showbiz',\n    'showcase',\n    'showdown',\n    'shower',\n    'showgirl',\n    'showing',\n    'showman',\n    'shown',\n    'showoff',\n    'showpiece',\n    'showplace',\n    'showroom',\n    'showy',\n    'shrank',\n    'shrapnel',\n    'shredder',\n    'shredding',\n    'shrewdly',\n    'shriek',\n    'shrill',\n    'shrimp',\n    'shrine',\n    'shrink',\n    'shrivel',\n    'shrouded',\n    'shrubbery',\n    'shrubs',\n    'shrug',\n    'shrunk',\n    'shucking',\n    'shudder',\n    'shuffle',\n    'shuffling',\n    'shun',\n    'shush',\n    'shut',\n    'shy',\n    'siamese',\n    'siberian',\n    'sibling',\n    'siding',\n    'sierra',\n    'siesta',\n    'sift',\n    'sighing',\n    'silenced',\n    'silencer',\n    'silent',\n    'silica',\n    'silicon',\n    'silk',\n    'silliness',\n    'silly',\n    'silo',\n    'silt',\n    'silver',\n    'similarly',\n    'simile',\n    'simmering',\n    'simple',\n    'simplify',\n    'simply',\n    'sincere',\n    'sincerity',\n    'singer',\n    'singing',\n    'single',\n    'singular',\n    'sinister',\n    'sinless',\n    'sinner',\n    'sinuous',\n    'sip',\n    'siren',\n    'sister',\n    'sitcom',\n    'sitter',\n    'sitting',\n    'situated',\n    'situation',\n    'sixfold',\n    'sixteen',\n    'sixth',\n    'sixties',\n    'sixtieth',\n    'sixtyfold',\n    'sizable',\n    'sizably',\n    'size',\n    'sizing',\n    'sizzle',\n    'sizzling',\n    'skater',\n    'skating',\n    'skedaddle',\n    'skeletal',\n    'skeleton',\n    'skeptic',\n    'sketch',\n    'skewed',\n    'skewer',\n    'skid',\n    'skied',\n    'skier',\n    'skies',\n    'skiing',\n    'skilled',\n    'skillet',\n    'skillful',\n    'skimmed',\n    'skimmer',\n    'skimming',\n    'skimpily',\n    'skincare',\n    'skinhead',\n    'skinless',\n    'skinning',\n    'skinny',\n    'skintight',\n    'skipper',\n    'skipping',\n    'skirmish',\n    'skirt',\n    'skittle',\n    'skydiver',\n    'skylight',\n    'skyline',\n    'skype',\n    'skyrocket',\n    'skyward',\n    'slab',\n    'slacked',\n    'slacker',\n    'slacking',\n    'slackness',\n    'slacks',\n    'slain',\n    'slam',\n    'slander',\n    'slang',\n    'slapping',\n    'slapstick',\n    'slashed',\n    'slashing',\n    'slate',\n    'slather',\n    'slaw',\n    'sled',\n    'sleek',\n    'sleep',\n    'sleet',\n    'sleeve',\n    'slept',\n    'sliceable',\n    'sliced',\n    'slicer',\n    'slicing',\n    'slick',\n    'slider',\n    'slideshow',\n    'sliding',\n    'slighted',\n    'slighting',\n    'slightly',\n    'slimness',\n    'slimy',\n    'slinging',\n    'slingshot',\n    'slinky',\n    'slip',\n    'slit',\n    'sliver',\n    'slobbery',\n    'slogan',\n    'sloped',\n    'sloping',\n    'sloppily',\n    'sloppy',\n    'slot',\n    'slouching',\n    'slouchy',\n    'sludge',\n    'slug',\n    'slum',\n    'slurp',\n    'slush',\n    'sly',\n    'small',\n    'smartly',\n    'smartness',\n    'smasher',\n    'smashing',\n    'smashup',\n    'smell',\n    'smelting',\n    'smile',\n    'smilingly',\n    'smirk',\n    'smite',\n    'smith',\n    'smitten',\n    'smock',\n    'smog',\n    'smoked',\n    'smokeless',\n    'smokiness',\n    'smoking',\n    'smoky',\n    'smolder',\n    'smooth',\n    'smother',\n    'smudge',\n    'smudgy',\n    'smuggler',\n    'smuggling',\n    'smugly',\n    'smugness',\n    'snack',\n    'snagged',\n    'snaking',\n    'snap',\n    'snare',\n    'snarl',\n    'snazzy',\n    'sneak',\n    'sneer',\n    'sneeze',\n    'sneezing',\n    'snide',\n    'sniff',\n    'snippet',\n    'snipping',\n    'snitch',\n    'snooper',\n    'snooze',\n    'snore',\n    'snoring',\n    'snorkel',\n    'snort',\n    'snout',\n    'snowbird',\n    'snowboard',\n    'snowbound',\n    'snowcap',\n    'snowdrift',\n    'snowdrop',\n    'snowfall',\n    'snowfield',\n    'snowflake',\n    'snowiness',\n    'snowless',\n    'snowman',\n    'snowplow',\n    'snowshoe',\n    'snowstorm',\n    'snowsuit',\n    'snowy',\n    'snub',\n    'snuff',\n    'snuggle',\n    'snugly',\n    'snugness',\n    'speak',\n    'spearfish',\n    'spearhead',\n    'spearman',\n    'spearmint',\n    'species',\n    'specimen',\n    'specked',\n    'speckled',\n    'specks',\n    'spectacle',\n    'spectator',\n    'spectrum',\n    'speculate',\n    'speech',\n    'speed',\n    'spellbind',\n    'speller',\n    'spelling',\n    'spendable',\n    'spender',\n    'spending',\n    'spent',\n    'spew',\n    'sphere',\n    'spherical',\n    'sphinx',\n    'spider',\n    'spied',\n    'spiffy',\n    'spill',\n    'spilt',\n    'spinach',\n    'spinal',\n    'spindle',\n    'spinner',\n    'spinning',\n    'spinout',\n    'spinster',\n    'spiny',\n    'spiral',\n    'spirited',\n    'spiritism',\n    'spirits',\n    'spiritual',\n    'splashed',\n    'splashing',\n    'splashy',\n    'splatter',\n    'spleen',\n    'splendid',\n    'splendor',\n    'splice',\n    'splicing',\n    'splinter',\n    'splotchy',\n    'splurge',\n    'spoilage',\n    'spoiled',\n    'spoiler',\n    'spoiling',\n    'spoils',\n    'spoken',\n    'spokesman',\n    'sponge',\n    'spongy',\n    'sponsor',\n    'spoof',\n    'spookily',\n    'spooky',\n    'spool',\n    'spoon',\n    'spore',\n    'sporting',\n    'sports',\n    'sporty',\n    'spotless',\n    'spotlight',\n    'spotted',\n    'spotter',\n    'spotting',\n    'spotty',\n    'spousal',\n    'spouse',\n    'spout',\n    'sprain',\n    'sprang',\n    'sprawl',\n    'spray',\n    'spree',\n    'sprig',\n    'spring',\n    'sprinkled',\n    'sprinkler',\n    'sprint',\n    'sprite',\n    'sprout',\n    'spruce',\n    'sprung',\n    'spry',\n    'spud',\n    'spur',\n    'sputter',\n    'spyglass',\n    'squabble',\n    'squad',\n    'squall',\n    'squander',\n    'squash',\n    'squatted',\n    'squatter',\n    'squatting',\n    'squeak',\n    'squealer',\n    'squealing',\n    'squeamish',\n    'squeegee',\n    'squeeze',\n    'squeezing',\n    'squid',\n    'squiggle',\n    'squiggly',\n    'squint',\n    'squire',\n    'squirt',\n    'squishier',\n    'squishy',\n    'stability',\n    'stabilize',\n    'stable',\n    'stack',\n    'stadium',\n    'staff',\n    'stage',\n    'staging',\n    'stagnant',\n    'stagnate',\n    'stainable',\n    'stained',\n    'staining',\n    'stainless',\n    'stalemate',\n    'staleness',\n    'stalling',\n    'stallion',\n    'stamina',\n    'stammer',\n    'stamp',\n    'stand',\n    'stank',\n    'staple',\n    'stapling',\n    'starboard',\n    'starch',\n    'stardom',\n    'stardust',\n    'starfish',\n    'stargazer',\n    'staring',\n    'stark',\n    'starless',\n    'starlet',\n    'starlight',\n    'starlit',\n    'starring',\n    'starry',\n    'starship',\n    'starter',\n    'starting',\n    'startle',\n    'startling',\n    'startup',\n    'starved',\n    'starving',\n    'stash',\n    'state',\n    'static',\n    'statistic',\n    'statue',\n    'stature',\n    'status',\n    'statute',\n    'statutory',\n    'staunch',\n    'stays',\n    'steadfast',\n    'steadier',\n    'steadily',\n    'steadying',\n    'steam',\n    'steed',\n    'steep',\n    'steerable',\n    'steering',\n    'steersman',\n    'stegosaur',\n    'stellar',\n    'stem',\n    'stench',\n    'stencil',\n    'step',\n    'stereo',\n    'sterile',\n    'sterility',\n    'sterilize',\n    'sterling',\n    'sternness',\n    'sternum',\n    'stew',\n    'stick',\n    'stiffen',\n    'stiffly',\n    'stiffness',\n    'stifle',\n    'stifling',\n    'stillness',\n    'stilt',\n    'stimulant',\n    'stimulate',\n    'stimuli',\n    'stimulus',\n    'stinger',\n    'stingily',\n    'stinging',\n    'stingray',\n    'stingy',\n    'stinking',\n    'stinky',\n    'stipend',\n    'stipulate',\n    'stir',\n    'stitch',\n    'stock',\n    'stoic',\n    'stoke',\n    'stole',\n    'stomp',\n    'stonewall',\n    'stoneware',\n    'stonework',\n    'stoning',\n    'stony',\n    'stood',\n    'stooge',\n    'stool',\n    'stoop',\n    'stoplight',\n    'stoppable',\n    'stoppage',\n    'stopped',\n    'stopper',\n    'stopping',\n    'stopwatch',\n    'storable',\n    'storage',\n    'storeroom',\n    'storewide',\n    'storm',\n    'stout',\n    'stove',\n    'stowaway',\n    'stowing',\n    'straddle',\n    'straggler',\n    'strained',\n    'strainer',\n    'straining',\n    'strangely',\n    'stranger',\n    'strangle',\n    'strategic',\n    'strategy',\n    'stratus',\n    'straw',\n    'stray',\n    'streak',\n    'stream',\n    'street',\n    'strength',\n    'strenuous',\n    'strep',\n    'stress',\n    'stretch',\n    'strewn',\n    'stricken',\n    'strict',\n    'stride',\n    'strife',\n    'strike',\n    'striking',\n    'strive',\n    'striving',\n    'strobe',\n    'strode',\n    'stroller',\n    'strongbox',\n    'strongly',\n    'strongman',\n    'struck',\n    'structure',\n    'strudel',\n    'struggle',\n    'strum',\n    'strung',\n    'strut',\n    'stubbed',\n    'stubble',\n    'stubbly',\n    'stubborn',\n    'stucco',\n    'stuck',\n    'student',\n    'studied',\n    'studio',\n    'study',\n    'stuffed',\n    'stuffing',\n    'stuffy',\n    'stumble',\n    'stumbling',\n    'stump',\n    'stung',\n    'stunned',\n    'stunner',\n    'stunning',\n    'stunt',\n    'stupor',\n    'sturdily',\n    'sturdy',\n    'styling',\n    'stylishly',\n    'stylist',\n    'stylized',\n    'stylus',\n    'suave',\n    'subarctic',\n    'subatomic',\n    'subdivide',\n    'subdued',\n    'subduing',\n    'subfloor',\n    'subgroup',\n    'subheader',\n    'subject',\n    'sublease',\n    'sublet',\n    'sublevel',\n    'sublime',\n    'submarine',\n    'submerge',\n    'submersed',\n    'submitter',\n    'subpanel',\n    'subpar',\n    'subplot',\n    'subprime',\n    'subscribe',\n    'subscript',\n    'subsector',\n    'subside',\n    'subsiding',\n    'subsidize',\n    'subsidy',\n    'subsoil',\n    'subsonic',\n    'substance',\n    'subsystem',\n    'subtext',\n    'subtitle',\n    'subtly',\n    'subtotal',\n    'subtract',\n    'subtype',\n    'suburb',\n    'subway',\n    'subwoofer',\n    'subzero',\n    'succulent',\n    'such',\n    'suction',\n    'sudden',\n    'sudoku',\n    'suds',\n    'sufferer',\n    'suffering',\n    'suffice',\n    'suffix',\n    'suffocate',\n    'suffrage',\n    'sugar',\n    'suggest',\n    'suing',\n    'suitable',\n    'suitably',\n    'suitcase',\n    'suitor',\n    'sulfate',\n    'sulfide',\n    'sulfite',\n    'sulfur',\n    'sulk',\n    'sullen',\n    'sulphate',\n    'sulphuric',\n    'sultry',\n    'superbowl',\n    'superglue',\n    'superhero',\n    'superior',\n    'superjet',\n    'superman',\n    'supermom',\n    'supernova',\n    'supervise',\n    'supper',\n    'supplier',\n    'supply',\n    'support',\n    'supremacy',\n    'supreme',\n    'surcharge',\n    'surely',\n    'sureness',\n    'surface',\n    'surfacing',\n    'surfboard',\n    'surfer',\n    'surgery',\n    'surgical',\n    'surging',\n    'surname',\n    'surpass',\n    'surplus',\n    'surprise',\n    'surreal',\n    'surrender',\n    'surrogate',\n    'surround',\n    'survey',\n    'survival',\n    'survive',\n    'surviving',\n    'survivor',\n    'sushi',\n    'suspect',\n    'suspend',\n    'suspense',\n    'sustained',\n    'sustainer',\n    'swab',\n    'swaddling',\n    'swagger',\n    'swampland',\n    'swan',\n    'swapping',\n    'swarm',\n    'sway',\n    'swear',\n    'sweat',\n    'sweep',\n    'swell',\n    'swept',\n    'swerve',\n    'swifter',\n    'swiftly',\n    'swiftness',\n    'swimmable',\n    'swimmer',\n    'swimming',\n    'swimsuit',\n    'swimwear',\n    'swinger',\n    'swinging',\n    'swipe',\n    'swirl',\n    'switch',\n    'swivel',\n    'swizzle',\n    'swooned',\n    'swoop',\n    'swoosh',\n    'swore',\n    'sworn',\n    'swung',\n    'sycamore',\n    'sympathy',\n    'symphonic',\n    'symphony',\n    'symptom',\n    'synapse',\n    'syndrome',\n    'synergy',\n    'synopses',\n    'synopsis',\n    'synthesis',\n    'synthetic',\n    'syrup',\n    'system',\n    't-shirt',\n    'tabasco',\n    'tabby',\n    'tableful',\n    'tables',\n    'tablet',\n    'tableware',\n    'tabloid',\n    'tackiness',\n    'tacking',\n    'tackle',\n    'tackling',\n    'tacky',\n    'taco',\n    'tactful',\n    'tactical',\n    'tactics',\n    'tactile',\n    'tactless',\n    'tadpole',\n    'taekwondo',\n    'tag',\n    'tainted',\n    'take',\n    'taking',\n    'talcum',\n    'talisman',\n    'tall',\n    'talon',\n    'tamale',\n    'tameness',\n    'tamer',\n    'tamper',\n    'tank',\n    'tanned',\n    'tannery',\n    'tanning',\n    'tantrum',\n    'tapeless',\n    'tapered',\n    'tapering',\n    'tapestry',\n    'tapioca',\n    'tapping',\n    'taps',\n    'tarantula',\n    'target',\n    'tarmac',\n    'tarnish',\n    'tarot',\n    'tartar',\n    'tartly',\n    'tartness',\n    'task',\n    'tassel',\n    'taste',\n    'tastiness',\n    'tasting',\n    'tasty',\n    'tattered',\n    'tattle',\n    'tattling',\n    'tattoo',\n    'taunt',\n    'tavern',\n    'thank',\n    'that',\n    'thaw',\n    'theater',\n    'theatrics',\n    'thee',\n    'theft',\n    'theme',\n    'theology',\n    'theorize',\n    'thermal',\n    'thermos',\n    'thesaurus',\n    'these',\n    'thesis',\n    'thespian',\n    'thicken',\n    'thicket',\n    'thickness',\n    'thieving',\n    'thievish',\n    'thigh',\n    'thimble',\n    'thing',\n    'think',\n    'thinly',\n    'thinner',\n    'thinness',\n    'thinning',\n    'thirstily',\n    'thirsting',\n    'thirsty',\n    'thirteen',\n    'thirty',\n    'thong',\n    'thorn',\n    'those',\n    'thousand',\n    'thrash',\n    'thread',\n    'threaten',\n    'threefold',\n    'thrift',\n    'thrill',\n    'thrive',\n    'thriving',\n    'throat',\n    'throbbing',\n    'throng',\n    'throttle',\n    'throwaway',\n    'throwback',\n    'thrower',\n    'throwing',\n    'thud',\n    'thumb',\n    'thumping',\n    'thursday',\n    'thus',\n    'thwarting',\n    'thyself',\n    'tiara',\n    'tibia',\n    'tidal',\n    'tidbit',\n    'tidiness',\n    'tidings',\n    'tidy',\n    'tiger',\n    'tighten',\n    'tightly',\n    'tightness',\n    'tightrope',\n    'tightwad',\n    'tigress',\n    'tile',\n    'tiling',\n    'till',\n    'tilt',\n    'timid',\n    'timing',\n    'timothy',\n    'tinderbox',\n    'tinfoil',\n    'tingle',\n    'tingling',\n    'tingly',\n    'tinker',\n    'tinkling',\n    'tinsel',\n    'tinsmith',\n    'tint',\n    'tinwork',\n    'tiny',\n    'tipoff',\n    'tipped',\n    'tipper',\n    'tipping',\n    'tiptoeing',\n    'tiptop',\n    'tiring',\n    'tissue',\n    'trace',\n    'tracing',\n    'track',\n    'traction',\n    'tractor',\n    'trade',\n    'trading',\n    'tradition',\n    'traffic',\n    'tragedy',\n    'trailing',\n    'trailside',\n    'train',\n    'traitor',\n    'trance',\n    'tranquil',\n    'transfer',\n    'transform',\n    'translate',\n    'transpire',\n    'transport',\n    'transpose',\n    'trapdoor',\n    'trapeze',\n    'trapezoid',\n    'trapped',\n    'trapper',\n    'trapping',\n    'traps',\n    'trash',\n    'travel',\n    'traverse',\n    'travesty',\n    'tray',\n    'treachery',\n    'treading',\n    'treadmill',\n    'treason',\n    'treat',\n    'treble',\n    'tree',\n    'trekker',\n    'tremble',\n    'trembling',\n    'tremor',\n    'trench',\n    'trend',\n    'trespass',\n    'triage',\n    'trial',\n    'triangle',\n    'tribesman',\n    'tribunal',\n    'tribune',\n    'tributary',\n    'tribute',\n    'triceps',\n    'trickery',\n    'trickily',\n    'tricking',\n    'trickle',\n    'trickster',\n    'tricky',\n    'tricolor',\n    'tricycle',\n    'trident',\n    'tried',\n    'trifle',\n    'trifocals',\n    'trillion',\n    'trilogy',\n    'trimester',\n    'trimmer',\n    'trimming',\n    'trimness',\n    'trinity',\n    'trio',\n    'tripod',\n    'tripping',\n    'triumph',\n    'trivial',\n    'trodden',\n    'trolling',\n    'trombone',\n    'trophy',\n    'tropical',\n    'tropics',\n    'trouble',\n    'troubling',\n    'trough',\n    'trousers',\n    'trout',\n    'trowel',\n    'truce',\n    'truck',\n    'truffle',\n    'trump',\n    'trunks',\n    'trustable',\n    'trustee',\n    'trustful',\n    'trusting',\n    'trustless',\n    'truth',\n    'try',\n    'tubby',\n    'tubeless',\n    'tubular',\n    'tucking',\n    'tuesday',\n    'tug',\n    'tuition',\n    'tulip',\n    'tumble',\n    'tumbling',\n    'tummy',\n    'turban',\n    'turbine',\n    'turbofan',\n    'turbojet',\n    'turbulent',\n    'turf',\n    'turkey',\n    'turmoil',\n    'turret',\n    'turtle',\n    'tusk',\n    'tutor',\n    'tutu',\n    'tux',\n    'tweak',\n    'tweed',\n    'tweet',\n    'tweezers',\n    'twelve',\n    'twentieth',\n    'twenty',\n    'twerp',\n    'twice',\n    'twiddle',\n    'twiddling',\n    'twig',\n    'twilight',\n    'twine',\n    'twins',\n    'twirl',\n    'twistable',\n    'twisted',\n    'twister',\n    'twisting',\n    'twisty',\n    'twitch',\n    'twitter',\n    'tycoon',\n    'tying',\n    'tyke',\n    'udder',\n    'ultimate',\n    'ultimatum',\n    'ultra',\n    'umbilical',\n    'umbrella',\n    'umpire',\n    'unabashed',\n    'unable',\n    'unadorned',\n    'unadvised',\n    'unafraid',\n    'unaired',\n    'unaligned',\n    'unaltered',\n    'unarmored',\n    'unashamed',\n    'unaudited',\n    'unawake',\n    'unaware',\n    'unbaked',\n    'unbalance',\n    'unbeaten',\n    'unbend',\n    'unbent',\n    'unbiased',\n    'unbitten',\n    'unblended',\n    'unblessed',\n    'unblock',\n    'unbolted',\n    'unbounded',\n    'unboxed',\n    'unbraided',\n    'unbridle',\n    'unbroken',\n    'unbuckled',\n    'unbundle',\n    'unburned',\n    'unbutton',\n    'uncanny',\n    'uncapped',\n    'uncaring',\n    'uncertain',\n    'unchain',\n    'unchanged',\n    'uncharted',\n    'uncheck',\n    'uncivil',\n    'unclad',\n    'unclaimed',\n    'unclamped',\n    'unclasp',\n    'uncle',\n    'unclip',\n    'uncloak',\n    'unclog',\n    'unclothed',\n    'uncoated',\n    'uncoiled',\n    'uncolored',\n    'uncombed',\n    'uncommon',\n    'uncooked',\n    'uncork',\n    'uncorrupt',\n    'uncounted',\n    'uncouple',\n    'uncouth',\n    'uncover',\n    'uncross',\n    'uncrown',\n    'uncrushed',\n    'uncured',\n    'uncurious',\n    'uncurled',\n    'uncut',\n    'undamaged',\n    'undated',\n    'undaunted',\n    'undead',\n    'undecided',\n    'undefined',\n    'underage',\n    'underarm',\n    'undercoat',\n    'undercook',\n    'undercut',\n    'underdog',\n    'underdone',\n    'underfed',\n    'underfeed',\n    'underfoot',\n    'undergo',\n    'undergrad',\n    'underhand',\n    'underline',\n    'underling',\n    'undermine',\n    'undermost',\n    'underpaid',\n    'underpass',\n    'underpay',\n    'underrate',\n    'undertake',\n    'undertone',\n    'undertook',\n    'undertow',\n    'underuse',\n    'underwear',\n    'underwent',\n    'underwire',\n    'undesired',\n    'undiluted',\n    'undivided',\n    'undocked',\n    'undoing',\n    'undone',\n    'undrafted',\n    'undress',\n    'undrilled',\n    'undusted',\n    'undying',\n    'unearned',\n    'unearth',\n    'unease',\n    'uneasily',\n    'uneasy',\n    'uneatable',\n    'uneaten',\n    'unedited',\n    'unelected',\n    'unending',\n    'unengaged',\n    'unenvied',\n    'unequal',\n    'unethical',\n    'uneven',\n    'unexpired',\n    'unexposed',\n    'unfailing',\n    'unfair',\n    'unfasten',\n    'unfazed',\n    'unfeeling',\n    'unfiled',\n    'unfilled',\n    'unfitted',\n    'unfitting',\n    'unfixable',\n    'unfixed',\n    'unflawed',\n    'unfocused',\n    'unfold',\n    'unfounded',\n    'unframed',\n    'unfreeze',\n    'unfrosted',\n    'unfrozen',\n    'unfunded',\n    'unglazed',\n    'ungloved',\n    'unglue',\n    'ungodly',\n    'ungraded',\n    'ungreased',\n    'unguarded',\n    'unguided',\n    'unhappily',\n    'unhappy',\n    'unharmed',\n    'unhealthy',\n    'unheard',\n    'unhearing',\n    'unheated',\n    'unhelpful',\n    'unhidden',\n    'unhinge',\n    'unhitched',\n    'unholy',\n    'unhook',\n    'unicorn',\n    'unicycle',\n    'unified',\n    'unifier',\n    'uniformed',\n    'uniformly',\n    'unify',\n    'unimpeded',\n    'uninjured',\n    'uninstall',\n    'uninsured',\n    'uninvited',\n    'union',\n    'uniquely',\n    'unisexual',\n    'unison',\n    'unissued',\n    'unit',\n    'universal',\n    'universe',\n    'unjustly',\n    'unkempt',\n    'unkind',\n    'unknotted',\n    'unknowing',\n    'unknown',\n    'unlaced',\n    'unlatch',\n    'unlawful',\n    'unleaded',\n    'unlearned',\n    'unleash',\n    'unless',\n    'unleveled',\n    'unlighted',\n    'unlikable',\n    'unlimited',\n    'unlined',\n    'unlinked',\n    'unlisted',\n    'unlit',\n    'unlivable',\n    'unloaded',\n    'unloader',\n    'unlocked',\n    'unlocking',\n    'unlovable',\n    'unloved',\n    'unlovely',\n    'unloving',\n    'unluckily',\n    'unlucky',\n    'unmade',\n    'unmanaged',\n    'unmanned',\n    'unmapped',\n    'unmarked',\n    'unmasked',\n    'unmasking',\n    'unmatched',\n    'unmindful',\n    'unmixable',\n    'unmixed',\n    'unmolded',\n    'unmoral',\n    'unmovable',\n    'unmoved',\n    'unmoving',\n    'unnamable',\n    'unnamed',\n    'unnatural',\n    'unneeded',\n    'unnerve',\n    'unnerving',\n    'unnoticed',\n    'unopened',\n    'unopposed',\n    'unpack',\n    'unpadded',\n    'unpaid',\n    'unpainted',\n    'unpaired',\n    'unpaved',\n    'unpeeled',\n    'unpicked',\n    'unpiloted',\n    'unpinned',\n    'unplanned',\n    'unplanted',\n    'unpleased',\n    'unpledged',\n    'unplowed',\n    'unplug',\n    'unpopular',\n    'unproven',\n    'unquote',\n    'unranked',\n    'unrated',\n    'unraveled',\n    'unreached',\n    'unread',\n    'unreal',\n    'unreeling',\n    'unrefined',\n    'unrelated',\n    'unrented',\n    'unrest',\n    'unretired',\n    'unrevised',\n    'unrigged',\n    'unripe',\n    'unrivaled',\n    'unroasted',\n    'unrobed',\n    'unroll',\n    'unruffled',\n    'unruly',\n    'unrushed',\n    'unsaddle',\n    'unsafe',\n    'unsaid',\n    'unsalted',\n    'unsaved',\n    'unsavory',\n    'unscathed',\n    'unscented',\n    'unscrew',\n    'unsealed',\n    'unseated',\n    'unsecured',\n    'unseeing',\n    'unseemly',\n    'unseen',\n    'unselect',\n    'unselfish',\n    'unsent',\n    'unsettled',\n    'unshackle',\n    'unshaken',\n    'unshaved',\n    'unshaven',\n    'unsheathe',\n    'unshipped',\n    'unsightly',\n    'unsigned',\n    'unskilled',\n    'unsliced',\n    'unsmooth',\n    'unsnap',\n    'unsocial',\n    'unsoiled',\n    'unsold',\n    'unsolved',\n    'unsorted',\n    'unspoiled',\n    'unspoken',\n    'unstable',\n    'unstaffed',\n    'unstamped',\n    'unsteady',\n    'unsterile',\n    'unstirred',\n    'unstitch',\n    'unstopped',\n    'unstuck',\n    'unstuffed',\n    'unstylish',\n    'unsubtle',\n    'unsubtly',\n    'unsuited',\n    'unsure',\n    'unsworn',\n    'untagged',\n    'untainted',\n    'untaken',\n    'untamed',\n    'untangled',\n    'untapped',\n    'untaxed',\n    'unthawed',\n    'unthread',\n    'untidy',\n    'untie',\n    'until',\n    'untimed',\n    'untimely',\n    'untitled',\n    'untoasted',\n    'untold',\n    'untouched',\n    'untracked',\n    'untrained',\n    'untreated',\n    'untried',\n    'untrimmed',\n    'untrue',\n    'untruth',\n    'unturned',\n    'untwist',\n    'untying',\n    'unusable',\n    'unused',\n    'unusual',\n    'unvalued',\n    'unvaried',\n    'unvarying',\n    'unveiled',\n    'unveiling',\n    'unvented',\n    'unviable',\n    'unvisited',\n    'unvocal',\n    'unwanted',\n    'unwarlike',\n    'unwary',\n    'unwashed',\n    'unwatched',\n    'unweave',\n    'unwed',\n    'unwelcome',\n    'unwell',\n    'unwieldy',\n    'unwilling',\n    'unwind',\n    'unwired',\n    'unwitting',\n    'unwomanly',\n    'unworldly',\n    'unworn',\n    'unworried',\n    'unworthy',\n    'unwound',\n    'unwoven',\n    'unwrapped',\n    'unwritten',\n    'unzip',\n    'upbeat',\n    'upchuck',\n    'upcoming',\n    'upcountry',\n    'update',\n    'upfront',\n    'upgrade',\n    'upheaval',\n    'upheld',\n    'uphill',\n    'uphold',\n    'uplifted',\n    'uplifting',\n    'upload',\n    'upon',\n    'upper',\n    'upright',\n    'uprising',\n    'upriver',\n    'uproar',\n    'uproot',\n    'upscale',\n    'upside',\n    'upstage',\n    'upstairs',\n    'upstart',\n    'upstate',\n    'upstream',\n    'upstroke',\n    'upswing',\n    'uptake',\n    'uptight',\n    'uptown',\n    'upturned',\n    'upward',\n    'upwind',\n    'uranium',\n    'urban',\n    'urchin',\n    'urethane',\n    'urgency',\n    'urgent',\n    'urging',\n    'urologist',\n    'urology',\n    'usable',\n    'usage',\n    'useable',\n    'used',\n    'uselessly',\n    'user',\n    'usher',\n    'usual',\n    'utensil',\n    'utility',\n    'utilize',\n    'utmost',\n    'utopia',\n    'utter',\n    'vacancy',\n    'vacant',\n    'vacate',\n    'vacation',\n    'vagabond',\n    'vagrancy',\n    'vagrantly',\n    'vaguely',\n    'vagueness',\n    'valiant',\n    'valid',\n    'valium',\n    'valley',\n    'valuables',\n    'value',\n    'vanilla',\n    'vanish',\n    'vanity',\n    'vanquish',\n    'vantage',\n    'vaporizer',\n    'variable',\n    'variably',\n    'varied',\n    'variety',\n    'various',\n    'varmint',\n    'varnish',\n    'varsity',\n    'varying',\n    'vascular',\n    'vaseline',\n    'vastly',\n    'vastness',\n    'veal',\n    'vegan',\n    'veggie',\n    'vehicular',\n    'velcro',\n    'velocity',\n    'velvet',\n    'vendetta',\n    'vending',\n    'vendor',\n    'veneering',\n    'vengeful',\n    'venomous',\n    'ventricle',\n    'venture',\n    'venue',\n    'venus',\n    'verbalize',\n    'verbally',\n    'verbose',\n    'verdict',\n    'verify',\n    'verse',\n    'version',\n    'versus',\n    'vertebrae',\n    'vertical',\n    'vertigo',\n    'very',\n    'vessel',\n    'vest',\n    'veteran',\n    'veto',\n    'vexingly',\n    'viability',\n    'viable',\n    'vibes',\n    'vice',\n    'vicinity',\n    'victory',\n    'video',\n    'viewable',\n    'viewer',\n    'viewing',\n    'viewless',\n    'viewpoint',\n    'vigorous',\n    'village',\n    'villain',\n    'vindicate',\n    'vineyard',\n    'vintage',\n    'violate',\n    'violation',\n    'violator',\n    'violet',\n    'violin',\n    'viper',\n    'viral',\n    'virtual',\n    'virtuous',\n    'virus',\n    'visa',\n    'viscosity',\n    'viscous',\n    'viselike',\n    'visible',\n    'visibly',\n    'vision',\n    'visiting',\n    'visitor',\n    'visor',\n    'vista',\n    'vitality',\n    'vitalize',\n    'vitally',\n    'vitamins',\n    'vivacious',\n    'vividly',\n    'vividness',\n    'vixen',\n    'vocalist',\n    'vocalize',\n    'vocally',\n    'vocation',\n    'voice',\n    'voicing',\n    'void',\n    'volatile',\n    'volley',\n    'voltage',\n    'volumes',\n    'voter',\n    'voting',\n    'voucher',\n    'vowed',\n    'vowel',\n    'voyage',\n    'wackiness',\n    'wad',\n    'wafer',\n    'waffle',\n    'waged',\n    'wager',\n    'wages',\n    'waggle',\n    'wagon',\n    'wake',\n    'waking',\n    'walk',\n    'walmart',\n    'walnut',\n    'walrus',\n    'waltz',\n    'wand',\n    'wannabe',\n    'wanted',\n    'wanting',\n    'wasabi',\n    'washable',\n    'washbasin',\n    'washboard',\n    'washbowl',\n    'washcloth',\n    'washday',\n    'washed',\n    'washer',\n    'washhouse',\n    'washing',\n    'washout',\n    'washroom',\n    'washstand',\n    'washtub',\n    'wasp',\n    'wasting',\n    'watch',\n    'water',\n    'waviness',\n    'waving',\n    'wavy',\n    'whacking',\n    'whacky',\n    'wham',\n    'wharf',\n    'wheat',\n    'whenever',\n    'whiff',\n    'whimsical',\n    'whinny',\n    'whiny',\n    'whisking',\n    'whoever',\n    'whole',\n    'whomever',\n    'whoopee',\n    'whooping',\n    'whoops',\n    'why',\n    'wick',\n    'widely',\n    'widen',\n    'widget',\n    'widow',\n    'width',\n    'wieldable',\n    'wielder',\n    'wife',\n    'wifi',\n    'wikipedia',\n    'wildcard',\n    'wildcat',\n    'wilder',\n    'wildfire',\n    'wildfowl',\n    'wildland',\n    'wildlife',\n    'wildly',\n    'wildness',\n    'willed',\n    'willfully',\n    'willing',\n    'willow',\n    'willpower',\n    'wilt',\n    'wimp',\n    'wince',\n    'wincing',\n    'wind',\n    'wing',\n    'winking',\n    'winner',\n    'winnings',\n    'winter',\n    'wipe',\n    'wired',\n    'wireless',\n    'wiring',\n    'wiry',\n    'wisdom',\n    'wise',\n    'wish',\n    'wisplike',\n    'wispy',\n    'wistful',\n    'wizard',\n    'wobble',\n    'wobbling',\n    'wobbly',\n    'wok',\n    'wolf',\n    'wolverine',\n    'womanhood',\n    'womankind',\n    'womanless',\n    'womanlike',\n    'womanly',\n    'womb',\n    'woof',\n    'wooing',\n    'wool',\n    'woozy',\n    'word',\n    'work',\n    'worried',\n    'worrier',\n    'worrisome',\n    'worry',\n    'worsening',\n    'worshiper',\n    'worst',\n    'wound',\n    'woven',\n    'wow',\n    'wrangle',\n    'wrath',\n    'wreath',\n    'wreckage',\n    'wrecker',\n    'wrecking',\n    'wrench',\n    'wriggle',\n    'wriggly',\n    'wrinkle',\n    'wrinkly',\n    'wrist',\n    'writing',\n    'written',\n    'wrongdoer',\n    'wronged',\n    'wrongful',\n    'wrongly',\n    'wrongness',\n    'wrought',\n    'xbox',\n    'xerox',\n    'yahoo',\n    'yam',\n    'yanking',\n    'yapping',\n    'yard',\n    'yarn',\n    'yeah',\n    'yearbook',\n    'yearling',\n    'yearly',\n    'yearning',\n    'yeast',\n    'yelling',\n    'yelp',\n    'yen',\n    'yesterday',\n    'yiddish',\n    'yield',\n    'yin',\n    'yippee',\n    'yo-yo',\n    'yodel',\n    'yoga',\n    'yogurt',\n    'yonder',\n    'yoyo',\n    'yummy',\n    'zap',\n    'zealous',\n    'zebra',\n    'zen',\n    'zeppelin',\n    'zero',\n    'zestfully',\n    'zesty',\n    'zigzagged',\n    'zipfile',\n    'zipping',\n    'zippy',\n    'zips',\n    'zit',\n    'zodiac',\n    'zombie',\n    'zone',\n    'zoning',\n    'zookeeper',\n    'zoologist',\n    'zoology',\n    'zoom',\n];\n","import { EnvironmentUrls } from '../models/domain/environmentUrls';\n\nimport { ConstantsService } from './constants.service';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { EnvironmentService as EnvironmentServiceAbstraction } from '../abstractions/environment.service';\nimport { NotificationsService } from '../abstractions/notifications.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n    baseUrl: string;\n    webVaultUrl: string;\n    apiUrl: string;\n    identityUrl: string;\n    iconsUrl: string;\n    notificationsUrl: string;\n    eventsUrl: string;\n    enterpriseUrl: string;\n\n    constructor(private apiService: ApiService, private storageService: StorageService,\n        private notificationsService: NotificationsService) { }\n\n    getWebVaultUrl(): string {\n        if (this.webVaultUrl != null) {\n            return this.webVaultUrl;\n        } else if (this.baseUrl) {\n            return this.baseUrl;\n        }\n        return null;\n    }\n\n    async setUrlsFromStorage(): Promise<void> {\n        const urlsObj: any = await this.storageService.get(ConstantsService.environmentUrlsKey);\n        const urls = urlsObj || {\n            base: null,\n            api: null,\n            identity: null,\n            icons: null,\n            notifications: null,\n            events: null,\n            webVault: null,\n            enterprise: null,\n        };\n\n        const envUrls = new EnvironmentUrls();\n\n        if (urls.base) {\n            this.baseUrl = envUrls.base = urls.base;\n            this.apiService.setUrls(envUrls);\n            return;\n        }\n\n        this.webVaultUrl = urls.webVault;\n        this.apiUrl = envUrls.api = urls.api;\n        this.identityUrl = envUrls.identity = urls.identity;\n        this.iconsUrl = urls.icons;\n        this.notificationsUrl = urls.notifications;\n        this.eventsUrl = envUrls.events = urls.events;\n        this.enterpriseUrl = urls.enterprise;\n        this.apiService.setUrls(envUrls);\n    }\n\n    async setUrls(urls: any): Promise<any> {\n        urls.base = this.formatUrl(urls.base);\n        urls.webVault = this.formatUrl(urls.webVault);\n        urls.api = this.formatUrl(urls.api);\n        urls.identity = this.formatUrl(urls.identity);\n        urls.icons = this.formatUrl(urls.icons);\n        urls.notifications = this.formatUrl(urls.notifications);\n        urls.events = this.formatUrl(urls.events);\n        urls.enterprise = this.formatUrl(urls.enterprise);\n\n        await this.storageService.save(ConstantsService.environmentUrlsKey, {\n            base: urls.base,\n            api: urls.api,\n            identity: urls.identity,\n            webVault: urls.webVault,\n            icons: urls.icons,\n            notifications: urls.notifications,\n            events: urls.events,\n            enterprise: urls.enterprise,\n        });\n\n        this.baseUrl = urls.base;\n        this.webVaultUrl = urls.webVault;\n        this.apiUrl = urls.api;\n        this.identityUrl = urls.identity;\n        this.iconsUrl = urls.icons;\n        this.notificationsUrl = urls.notifications;\n        this.eventsUrl = urls.events;\n        this.enterpriseUrl = urls.enterprise;\n\n        const envUrls = new EnvironmentUrls();\n        if (this.baseUrl) {\n            envUrls.base = this.baseUrl;\n        } else {\n            envUrls.api = this.apiUrl;\n            envUrls.identity = this.identityUrl;\n            envUrls.events = this.eventsUrl;\n        }\n\n        this.apiService.setUrls(envUrls);\n        if (this.notificationsService != null) {\n            this.notificationsService.init(this);\n        }\n        return urls;\n    }\n\n    private formatUrl(url: string): string {\n        if (url == null || url === '') {\n            return null;\n        }\n\n        url = url.replace(/\\/+$/g, '');\n        if (!url.startsWith('http://') && !url.startsWith('https://')) {\n            url = 'https://' + url;\n        }\n\n        return url.trim();\n    }\n}\n","import { FolderData } from '../models/data/folderData';\n\nimport { Folder } from '../models/domain/folder';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { FolderRequest } from '../models/request/folderRequest';\n\nimport { FolderResponse } from '../models/response/folderResponse';\n\nimport { FolderView } from '../models/view/folderView';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService as FolderServiceAbstraction } from '../abstractions/folder.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\nimport { CipherData } from '../models/data/cipherData';\n\nimport { ServiceUtils } from '../misc/serviceUtils';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    foldersPrefix: 'folders_',\n    ciphersPrefix: 'ciphers_',\n};\nconst NestingDelimiter = '/';\n\nexport class FolderService implements FolderServiceAbstraction {\n    decryptedFolderCache: FolderView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private apiService: ApiService, private storageService: StorageService,\n        private i18nService: I18nService, private cipherService: CipherService) { }\n\n    clearCache(): void {\n        this.decryptedFolderCache = null;\n    }\n\n    async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n        const folder = new Folder();\n        folder.id = model.id;\n        folder.name = await this.cryptoService.encrypt(model.name, key);\n        return folder;\n    }\n\n    async get(id: string): Promise<Folder> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null || !folders.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Folder(folders[id]);\n    }\n\n    async getAll(): Promise<Folder[]> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        const response: Folder[] = [];\n        for (const id in folders) {\n            if (folders.hasOwnProperty(id)) {\n                response.push(new Folder(folders[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<FolderView[]> {\n        if (this.decryptedFolderCache != null) {\n            return this.decryptedFolderCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const decFolders: FolderView[] = [];\n        const promises: Promise<any>[] = [];\n        const folders = await this.getAll();\n        folders.forEach(folder => {\n            promises.push(folder.decrypt().then(f => decFolders.push(f)));\n        });\n\n        await Promise.all(promises);\n        decFolders.sort(Utils.getSortFunction(this.i18nService, 'name'));\n\n        const noneFolder = new FolderView();\n        noneFolder.name = this.i18nService.t('noneFolder');\n        decFolders.push(noneFolder);\n\n        this.decryptedFolderCache = decFolders;\n        return this.decryptedFolderCache;\n    }\n\n    async getAllNested(): Promise<TreeNode<FolderView>[]> {\n        const folders = await this.getAllDecrypted();\n        const nodes: TreeNode<FolderView>[] = [];\n        folders.forEach(f => {\n            const folderCopy = new FolderView();\n            folderCopy.id = f.id;\n            folderCopy.revisionDate = f.revisionDate;\n            const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, '').split(NestingDelimiter) : [];\n            ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n        });\n        return nodes;\n    }\n\n    async getNested(id: string): Promise<TreeNode<FolderView>> {\n        const folders = await this.getAllNested();\n        return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n    }\n\n    async saveWithServer(folder: Folder): Promise<any> {\n        const request = new FolderRequest(folder);\n\n        let response: FolderResponse;\n        if (folder.id == null) {\n            response = await this.apiService.postFolder(request);\n            folder.id = response.id;\n        } else {\n            response = await this.apiService.putFolder(folder.id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new FolderData(response, userId);\n        await this.upsert(data);\n    }\n\n    async upsert(folder: FolderData | FolderData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null) {\n            folders = {};\n        }\n\n        if (folder instanceof FolderData) {\n            const f = folder as FolderData;\n            folders[f.id] = f;\n        } else {\n            (folder as FolderData[]).forEach(f => {\n                folders[f.id] = f;\n            });\n        }\n\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n    }\n\n    async replace(folders: { [id: string]: FolderData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.foldersPrefix + userId);\n        this.decryptedFolderCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            if (folders[id] == null) {\n                return;\n            }\n            delete folders[id];\n        } else {\n            (id as string[]).forEach(i => {\n                delete folders[i];\n            });\n        }\n\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n\n        // Items in a deleted folder are re-assigned to \"No Folder\"\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(Keys.ciphersPrefix + userId);\n        if (ciphers != null) {\n            const updates: CipherData[] = [];\n            for (const cId in ciphers) {\n                if (ciphers[cId].folderId === id) {\n                    ciphers[cId].folderId = null;\n                    updates.push(ciphers[cId]);\n                }\n            }\n            if (updates.length > 0) {\n                this.cipherService.upsert(updates);\n            }\n        }\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteFolder(id);\n        await this.delete(id);\n    }\n}\n","import { I18nService as I18nServiceAbstraction } from '../abstractions/i18n.service';\n\nexport class I18nService implements I18nServiceAbstraction {\n    locale: string;\n    // First locale is the default (English)\n    supportedTranslationLocales: string[] = ['en'];\n    translationLocale: string;\n    collator: Intl.Collator;\n    localeNames = new Map<string, string>([\n        ['af', 'Afrikaans'],\n        ['be', 'Беларуская'],\n        ['bg', 'български'],\n        ['ca', 'català'],\n        ['cs', 'čeština'],\n        ['da', 'dansk'],\n        ['de', 'Deutsch'],\n        ['el', 'Ελληνικά'],\n        ['en', 'English'],\n        ['en-GB', 'English (British)'],\n        ['eo', 'Esperanto'],\n        ['es', 'español'],\n        ['et', 'eesti'],\n        ['fa', 'فارسی'],\n        ['fi', 'suomi'],\n        ['fr', 'français'],\n        ['he', 'עברית'],\n        ['hi', 'हिन्दी'],\n        ['hr', 'hrvatski'],\n        ['hu', 'magyar'],\n        ['id', 'Bahasa Indonesia'],\n        ['it', 'italiano'],\n        ['ja', '日本語'],\n        ['ko', '한국어'],\n        ['lv', 'Latvietis'],\n        ['ml', 'മലയാളം'],\n        ['nb', 'norsk (bokmål)'],\n        ['nl', 'Nederlands'],\n        ['pl', 'polski'],\n        ['pt-BR', 'português do Brasil'],\n        ['pt-PT', 'português'],\n        ['ro', 'română'],\n        ['ru', 'русский'],\n        ['sk', 'slovenčina'],\n        ['sr', 'Српски'],\n        ['sv', 'svenska'],\n        ['th', 'ไทย'],\n        ['tr', 'Türkçe'],\n        ['uk', 'українська'],\n        ['vi', 'Tiếng Việt'],\n        ['zh-CN', '中文（中国大陆）'],\n        ['zh-TW', '中文（台灣）'],\n    ]);\n\n    protected inited: boolean;\n    protected defaultMessages: any = {};\n    protected localeMessages: any = {};\n\n    constructor(protected systemLanguage: string, protected localesDirectory: string,\n        protected getLocalesJson: (formattedLocale: string) => Promise<any>) {\n        this.systemLanguage = systemLanguage.replace('_', '-');\n    }\n\n    async init(locale?: string) {\n        if (this.inited) {\n            throw new Error('i18n already initialized.');\n        }\n        if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n            throw new Error('supportedTranslationLocales not set.');\n        }\n\n        this.inited = true;\n        this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n        try {\n            this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: 'base' });\n        } catch {\n            this.collator = null;\n        }\n\n        if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n            this.translationLocale = this.translationLocale.slice(0, 2);\n\n            if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n                this.translationLocale = this.supportedTranslationLocales[0];\n            }\n        }\n\n        if (this.localesDirectory != null) {\n            await this.loadMessages(this.translationLocale, this.localeMessages);\n            if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n                await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n            }\n        }\n    }\n\n    t(id: string, p1?: string, p2?: string, p3?: string): string {\n        return this.translate(id, p1, p2, p3);\n    }\n\n    translate(id: string, p1?: string, p2?: string, p3?: string): string {\n        let result: string;\n        if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n            result = this.localeMessages[id];\n        } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n            result = this.defaultMessages[id];\n        } else {\n            result = '';\n        }\n\n        if (result !== '') {\n            if (p1 != null) {\n                result = result.split('__$1__').join(p1);\n            }\n            if (p2 != null) {\n                result = result.split('__$2__').join(p2);\n            }\n            if (p3 != null) {\n                result = result.split('__$3__').join(p3);\n            }\n        }\n\n        return result;\n    }\n\n    private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n        const formattedLocale = locale.replace('-', '_');\n        const locales = await this.getLocalesJson(formattedLocale);\n        for (const prop in locales) {\n            if (!locales.hasOwnProperty(prop)) {\n                continue;\n            }\n            messagesObj[prop] = locales[prop].message;\n\n            if (locales[prop].placeholders) {\n                for (const placeProp in locales[prop].placeholders) {\n                    if (!locales[prop].placeholders.hasOwnProperty(placeProp) ||\n                        !locales[prop].placeholders[placeProp].content) {\n                        continue;\n                    }\n\n                    const replaceToken = '\\\\$' + placeProp.toUpperCase() + '\\\\$';\n                    let replaceContent = locales[prop].placeholders[placeProp].content;\n                    if (replaceContent === '$1' || replaceContent === '$2' || replaceContent === '$3') {\n                        replaceContent = '__$' + replaceContent + '__';\n                    }\n                    messagesObj[prop] = messagesObj[prop].replace(new RegExp(replaceToken, 'g'), replaceContent);\n                }\n            }\n        }\n    }\n\n}\n","import * as zxcvbn from 'zxcvbn';\n\nimport { EncString } from '../models/domain/encString';\nimport { GeneratedPasswordHistory } from '../models/domain/generatedPasswordHistory';\nimport { PasswordGeneratorPolicyOptions } from '../models/domain/passwordGeneratorPolicyOptions';\nimport { Policy } from '../models/domain/policy';\n\nimport { CryptoService } from '../abstractions/crypto.service';\nimport {\n    PasswordGenerationService as PasswordGenerationServiceAbstraction,\n} from '../abstractions/passwordGeneration.service';\nimport { PolicyService } from '../abstractions/policy.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nimport { EEFLongWordList } from '../misc/wordlist';\n\nimport { PolicyType } from '../enums/policyType';\n\nconst DefaultOptions = {\n    length: 14,\n    ambiguous: false,\n    number: true,\n    minNumber: 1,\n    uppercase: true,\n    minUppercase: 0,\n    lowercase: true,\n    minLowercase: 0,\n    special: false,\n    minSpecial: 1,\n    type: 'password',\n    numWords: 3,\n    wordSeparator: '-',\n    capitalize: false,\n    includeNumber: false,\n};\n\nconst Keys = {\n    options: 'passwordGenerationOptions',\n    history: 'generatedPasswordHistory',\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n    private optionsCache: any;\n    private history: GeneratedPasswordHistory[];\n\n    constructor(private cryptoService: CryptoService, private storageService: StorageService,\n        private policyService: PolicyService) { }\n\n    async generatePassword(options: any): Promise<string> {\n        // overload defaults with given options\n        const o = Object.assign({}, DefaultOptions, options);\n\n        if (o.type === 'passphrase') {\n            return this.generatePassphrase(options);\n        }\n\n        // sanitize\n        this.sanitizePasswordLength(o, true);\n\n        const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n        if (o.length < minLength) {\n            o.length = minLength;\n        }\n\n        const positions: string[] = [];\n        if (o.lowercase && o.minLowercase > 0) {\n            for (let i = 0; i < o.minLowercase; i++) {\n                positions.push('l');\n            }\n        }\n        if (o.uppercase && o.minUppercase > 0) {\n            for (let i = 0; i < o.minUppercase; i++) {\n                positions.push('u');\n            }\n        }\n        if (o.number && o.minNumber > 0) {\n            for (let i = 0; i < o.minNumber; i++) {\n                positions.push('n');\n            }\n        }\n        if (o.special && o.minSpecial > 0) {\n            for (let i = 0; i < o.minSpecial; i++) {\n                positions.push('s');\n            }\n        }\n        while (positions.length < o.length) {\n            positions.push('a');\n        }\n\n        // shuffle\n        await this.shuffleArray(positions);\n\n        // build out the char sets\n        let allCharSet = '';\n\n        let lowercaseCharSet = 'abcdefghijkmnopqrstuvwxyz';\n        if (o.ambiguous) {\n            lowercaseCharSet += 'l';\n        }\n        if (o.lowercase) {\n            allCharSet += lowercaseCharSet;\n        }\n\n        let uppercaseCharSet = 'ABCDEFGHJKLMNPQRSTUVWXYZ';\n        if (o.ambiguous) {\n            uppercaseCharSet += 'IO';\n        }\n        if (o.uppercase) {\n            allCharSet += uppercaseCharSet;\n        }\n\n        let numberCharSet = '23456789';\n        if (o.ambiguous) {\n            numberCharSet += '01';\n        }\n        if (o.number) {\n            allCharSet += numberCharSet;\n        }\n\n        const specialCharSet = '!@#$%^&*';\n        if (o.special) {\n            allCharSet += specialCharSet;\n        }\n\n        let password = '';\n        for (let i = 0; i < o.length; i++) {\n            let positionChars: string;\n            switch (positions[i]) {\n                case 'l':\n                    positionChars = lowercaseCharSet;\n                    break;\n                case 'u':\n                    positionChars = uppercaseCharSet;\n                    break;\n                case 'n':\n                    positionChars = numberCharSet;\n                    break;\n                case 's':\n                    positionChars = specialCharSet;\n                    break;\n                case 'a':\n                    positionChars = allCharSet;\n                    break;\n                default:\n                    break;\n            }\n\n            const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n            password += positionChars.charAt(randomCharIndex);\n        }\n\n        return password;\n    }\n\n    async generatePassphrase(options: any): Promise<string> {\n        const o = Object.assign({}, DefaultOptions, options);\n\n        if (o.numWords == null || o.numWords <= 2) {\n            o.numWords = DefaultOptions.numWords;\n        }\n        if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n            o.wordSeparator = ' ';\n        }\n        if (o.capitalize == null) {\n            o.capitalize = false;\n        }\n        if (o.includeNumber == null) {\n            o.includeNumber = false;\n        }\n\n        const listLength = EEFLongWordList.length - 1;\n        const wordList = new Array(o.numWords);\n        for (let i = 0; i < o.numWords; i++) {\n            const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n            if (o.capitalize) {\n                wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n            } else {\n                wordList[i] = EEFLongWordList[wordIndex];\n            }\n        }\n\n        if (o.includeNumber) {\n            await this.appendRandomNumberToRandomWord(wordList);\n        }\n        return wordList.join(o.wordSeparator);\n    }\n\n    async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n        if (this.optionsCache == null) {\n            const options = await this.storageService.get(Keys.options);\n            if (options == null) {\n                this.optionsCache = DefaultOptions;\n            } else {\n                this.optionsCache = Object.assign({}, DefaultOptions, options);\n            }\n        }\n        const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(this.optionsCache);\n        this.optionsCache = enforcedOptions[0];\n        return [this.optionsCache, enforcedOptions[1]];\n    }\n\n    async enforcePasswordGeneratorPoliciesOnOptions(options: any): Promise<[any, PasswordGeneratorPolicyOptions]> {\n        let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n        if (enforcedPolicyOptions != null) {\n            if (options.length < enforcedPolicyOptions.minLength) {\n                options.length = enforcedPolicyOptions.minLength;\n            }\n\n            if (enforcedPolicyOptions.useUppercase) {\n                options.uppercase = true;\n            }\n\n            if (enforcedPolicyOptions.useLowercase) {\n                options.lowercase = true;\n            }\n\n            if (enforcedPolicyOptions.useNumbers) {\n                options.number = true;\n            }\n\n            if (options.minNumber < enforcedPolicyOptions.numberCount) {\n                options.minNumber = enforcedPolicyOptions.numberCount;\n            }\n\n            if (enforcedPolicyOptions.useSpecial) {\n                options.special = true;\n            }\n\n            if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n                options.minSpecial = enforcedPolicyOptions.specialCount;\n            }\n\n            // Must normalize these fields because the receiving call expects all options to pass the current rules\n            if (options.minSpecial + options.minNumber > options.length) {\n                options.minSpecial = options.length - options.minNumber;\n            }\n\n            if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n                options.numWords = enforcedPolicyOptions.minNumberWords;\n            }\n\n            if (enforcedPolicyOptions.capitalize) {\n                options.capitalize = true;\n            }\n\n            if (enforcedPolicyOptions.includeNumber) {\n                options.includeNumber = true;\n            }\n\n            // Force default type if password/passphrase selected via policy\n            if (enforcedPolicyOptions.defaultType === 'password' ||\n                enforcedPolicyOptions.defaultType === 'passphrase') {\n                options.type = enforcedPolicyOptions.defaultType;\n            }\n        } else { // UI layer expects an instantiated object to prevent more explicit null checks\n            enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n        }\n        return [options, enforcedPolicyOptions];\n    }\n\n    async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n        const policies: Policy[] = this.policyService == null ? null :\n            await this.policyService.getAll(PolicyType.PasswordGenerator);\n        let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n        if (policies == null || policies.length === 0) {\n            return enforcedOptions;\n        }\n\n        policies.forEach(currentPolicy => {\n            if (!currentPolicy.enabled || currentPolicy.data == null) {\n                return;\n            }\n\n            if (enforcedOptions == null) {\n                enforcedOptions = new PasswordGeneratorPolicyOptions();\n            }\n\n            // Password wins in multi-org collisions\n            if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== 'password') {\n                enforcedOptions.defaultType = currentPolicy.data.defaultType;\n            }\n\n            if (currentPolicy.data.minLength != null\n                && currentPolicy.data.minLength > enforcedOptions.minLength) {\n                enforcedOptions.minLength = currentPolicy.data.minLength;\n            }\n\n            if (currentPolicy.data.useUpper) {\n                enforcedOptions.useUppercase = true;\n            }\n\n            if (currentPolicy.data.useLower) {\n                enforcedOptions.useLowercase = true;\n            }\n\n            if (currentPolicy.data.useNumbers) {\n                enforcedOptions.useNumbers = true;\n            }\n\n            if (currentPolicy.data.minNumbers != null\n                && currentPolicy.data.minNumbers > enforcedOptions.numberCount) {\n                enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n            }\n\n            if (currentPolicy.data.useSpecial) {\n                enforcedOptions.useSpecial = true;\n            }\n\n            if (currentPolicy.data.minSpecial != null\n                && currentPolicy.data.minSpecial > enforcedOptions.specialCount) {\n                enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n            }\n\n            if (currentPolicy.data.minNumberWords != null\n                && currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords) {\n                enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n            }\n\n            if (currentPolicy.data.capitalize) {\n                enforcedOptions.capitalize = true;\n            }\n\n            if (currentPolicy.data.includeNumber) {\n                enforcedOptions.includeNumber = true;\n            }\n        });\n\n        return enforcedOptions;\n    }\n\n    async saveOptions(options: any) {\n        await this.storageService.save(Keys.options, options);\n        this.optionsCache = options;\n    }\n\n    async getHistory(): Promise<GeneratedPasswordHistory[]> {\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            return new Array<GeneratedPasswordHistory>();\n        }\n\n        if (!this.history) {\n            const encrypted = await this.storageService.get<GeneratedPasswordHistory[]>(Keys.history);\n            this.history = await this.decryptHistory(encrypted);\n        }\n\n        return this.history || new Array<GeneratedPasswordHistory>();\n    }\n\n    async addHistory(password: string): Promise<any> {\n        // Cannot add new history if no key is available\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            return;\n        }\n\n        const currentHistory = await this.getHistory();\n\n        // Prevent duplicates\n        if (this.matchesPrevious(password, currentHistory)) {\n            return;\n        }\n\n        currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n        // Remove old items.\n        if (currentHistory.length > MaxPasswordsInHistory) {\n            currentHistory.pop();\n        }\n\n        const newHistory = await this.encryptHistory(currentHistory);\n        return await this.storageService.save(Keys.history, newHistory);\n    }\n\n    async clear(): Promise<any> {\n        this.history = [];\n        return await this.storageService.remove(Keys.history);\n    }\n\n    passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n        if (password == null || password.length === 0) {\n            return null;\n        }\n        let globalUserInputs = ['bitwarden', 'bit', 'warden'];\n        if (userInputs != null && userInputs.length > 0) {\n            globalUserInputs = globalUserInputs.concat(userInputs);\n        }\n        // Use a hash set to get rid of any duplicate user inputs\n        const finalUserInputs = Array.from(new Set(globalUserInputs));\n        const result = zxcvbn(password, finalUserInputs);\n        return result;\n    }\n\n    normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n        options.minLowercase = 0;\n        options.minUppercase = 0;\n\n        if (!options.length || options.length < 5) {\n            options.length = 5;\n        } else if (options.length > 128) {\n            options.length = 128;\n        }\n\n        if (options.length < enforcedPolicyOptions.minLength) {\n            options.length = enforcedPolicyOptions.minLength;\n        }\n\n        if (!options.minNumber) {\n            options.minNumber = 0;\n        } else if (options.minNumber > options.length) {\n            options.minNumber = options.length;\n        } else if (options.minNumber > 9) {\n            options.minNumber = 9;\n        }\n\n        if (options.minNumber < enforcedPolicyOptions.numberCount) {\n            options.minNumber = enforcedPolicyOptions.numberCount;\n        }\n\n        if (!options.minSpecial) {\n            options.minSpecial = 0;\n        } else if (options.minSpecial > options.length) {\n            options.minSpecial = options.length;\n        } else if (options.minSpecial > 9) {\n            options.minSpecial = 9;\n        }\n\n        if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n            options.minSpecial = enforcedPolicyOptions.specialCount;\n        }\n\n        if (options.minSpecial + options.minNumber > options.length) {\n            options.minSpecial = options.length - options.minNumber;\n        }\n\n        if (options.numWords == null || options.length < 3) {\n            options.numWords = 3;\n        } else if (options.numWords > 20) {\n            options.numWords = 20;\n        }\n\n        if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n            options.numWords = enforcedPolicyOptions.minNumberWords;\n        }\n\n        if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n            options.wordSeparator = options.wordSeparator[0];\n        }\n\n        this.sanitizePasswordLength(options, false);\n    }\n\n    private capitalize(str: string) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n    private async appendRandomNumberToRandomWord(wordList: string[]) {\n        if (wordList == null || wordList.length <= 0) {\n            return;\n        }\n        const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n        const num = await this.cryptoService.randomNumber(0, 9);\n        wordList[index] = wordList[index] + num;\n    }\n\n    private async encryptHistory(history: GeneratedPasswordHistory[]): Promise<GeneratedPasswordHistory[]> {\n        if (history == null || history.length === 0) {\n            return Promise.resolve([]);\n        }\n\n        const promises = history.map(async item => {\n            const encrypted = await this.cryptoService.encrypt(item.password);\n            return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n        });\n\n        return await Promise.all(promises);\n    }\n\n    private async decryptHistory(history: GeneratedPasswordHistory[]): Promise<GeneratedPasswordHistory[]> {\n        if (history == null || history.length === 0) {\n            return Promise.resolve([]);\n        }\n\n        const promises = history.map(async item => {\n            const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n            return new GeneratedPasswordHistory(decrypted, item.date);\n        });\n\n        return await Promise.all(promises);\n    }\n\n    private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n        if (history == null || history.length === 0) {\n            return false;\n        }\n\n        return history[history.length - 1].password === password;\n    }\n\n    // ref: https://stackoverflow.com/a/12646864/1090359\n    private async shuffleArray(array: string[]) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = await this.cryptoService.randomNumber(0, i);\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    }\n\n    private sanitizePasswordLength(options: any, forGeneration: boolean) {\n        let minUppercaseCalc = 0;\n        let minLowercaseCalc = 0;\n        let minNumberCalc: number = options.minNumber;\n        let minSpecialCalc: number = options.minSpecial;\n\n        if (options.uppercase && options.minUppercase <= 0) {\n            minUppercaseCalc = 1;\n        } else if (!options.uppercase) {\n            minUppercaseCalc = 0;\n        }\n\n        if (options.lowercase && options.minLowercase <= 0) {\n            minLowercaseCalc = 1;\n        } else if (!options.lowercase) {\n            minLowercaseCalc = 0;\n        }\n\n        if (options.number && options.minNumber <= 0) {\n            minNumberCalc = 1;\n        } else if (!options.number) {\n            minNumberCalc = 0;\n        }\n\n        if (options.special && options.minSpecial <= 0) {\n            minSpecialCalc = 1;\n        } else if (!options.special) {\n            minSpecialCalc = 0;\n        }\n\n        // This should never happen but is a final safety net\n        if (!options.length || options.length < 1) {\n            options.length = 10;\n        }\n\n        const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n        // Normalize and Generation both require this modification\n        if (options.length < minLength) {\n            options.length = minLength;\n        }\n\n        // Apply other changes if the options object passed in is for generation\n        if (forGeneration) {\n            options.minUppercase = minUppercaseCalc;\n            options.minLowercase = minLowercaseCalc;\n            options.minNumber = minNumberCalc;\n            options.minSpecial = minSpecialCalc;\n        }\n    }\n}\n","import { SettingsService as SettingsServiceAbstraction } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nconst Keys = {\n    settingsPrefix: 'settings_',\n    equivalentDomains: 'equivalentDomains',\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n    private settingsCache: any;\n\n    constructor(private userService: UserService, private storageService: StorageService) {\n    }\n\n    clearCache(): void {\n        this.settingsCache = null;\n    }\n\n    getEquivalentDomains(): Promise<any> {\n        return this.getSettingsKey(Keys.equivalentDomains);\n    }\n\n    async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n        await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n    }\n\n    async clear(userId: string): Promise<void> {\n        await this.storageService.remove(Keys.settingsPrefix + userId);\n        this.clearCache();\n    }\n\n    // Helpers\n\n    private async getSettings(): Promise<any> {\n        if (this.settingsCache == null) {\n            const userId = await this.userService.getUserId();\n            this.settingsCache = this.storageService.get(Keys.settingsPrefix + userId);\n        }\n        return this.settingsCache;\n    }\n\n    private async getSettingsKey(key: string): Promise<any> {\n        const settings = await this.getSettings();\n        if (settings != null && settings[key]) {\n            return settings[key];\n        }\n        return null;\n    }\n\n    private async setSettingsKey(key: string, value: any): Promise<void> {\n        const userId = await this.userService.getUserId();\n        let settings = await this.getSettings();\n        if (!settings) {\n            settings = {};\n        }\n\n        settings[key] = value;\n        await this.storageService.save(Keys.settingsPrefix + userId, settings);\n        this.settingsCache = settings;\n    }\n}\n","import { StateService as StateServiceAbstraction } from '../abstractions/state.service';\n\nexport class StateService implements StateServiceAbstraction {\n    private state: any = {};\n\n    get<T>(key: string): Promise<T> {\n        if (this.state.hasOwnProperty(key)) {\n            return Promise.resolve(this.state[key]);\n        }\n        return Promise.resolve(null);\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        this.state[key] = obj;\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        delete this.state[key];\n        return Promise.resolve();\n    }\n\n    purge(): Promise<any> {\n        this.state = {};\n        return Promise.resolve();\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PolicyService } from '../abstractions/policy.service';\nimport { SendService } from '../abstractions/send.service';\nimport { SettingsService } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { SyncService as SyncServiceAbstraction } from '../abstractions/sync.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { CipherData } from '../models/data/cipherData';\nimport { CollectionData } from '../models/data/collectionData';\nimport { FolderData } from '../models/data/folderData';\nimport { OrganizationData } from '../models/data/organizationData';\nimport { PolicyData } from '../models/data/policyData';\nimport { SendData } from '../models/data/sendData';\n\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport { CollectionDetailsResponse } from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    SyncCipherNotification,\n    SyncFolderNotification,\n    SyncSendNotification,\n} from '../models/response/notificationResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { SendResponse } from '../models/response/sendResponse';\n\nconst Keys = {\n    lastSyncPrefix: 'lastSync_',\n};\n\nexport class SyncService implements SyncServiceAbstraction {\n    syncInProgress: boolean = false;\n\n    constructor(private userService: UserService, private apiService: ApiService,\n        private settingsService: SettingsService, private folderService: FolderService,\n        private cipherService: CipherService, private cryptoService: CryptoService,\n        private collectionService: CollectionService, private storageService: StorageService,\n        private messagingService: MessagingService, private policyService: PolicyService,\n        private sendService: SendService, private logoutCallback: (expired: boolean) => Promise<void>) {\n    }\n\n    async getLastSync(): Promise<Date> {\n        const userId = await this.userService.getUserId();\n        if (userId == null) {\n            return null;\n        }\n\n        const lastSync = await this.storageService.get<any>(Keys.lastSyncPrefix + userId);\n        if (lastSync) {\n            return new Date(lastSync);\n        }\n\n        return null;\n    }\n\n    async setLastSync(date: Date): Promise<any> {\n        const userId = await this.userService.getUserId();\n        if (userId == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.lastSyncPrefix + userId, date.toJSON());\n    }\n\n    async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n        this.syncStarted();\n        const isAuthenticated = await this.userService.isAuthenticated();\n        if (!isAuthenticated) {\n            return this.syncCompleted(false);\n        }\n\n        const now = new Date();\n        let needsSync = false;\n        try {\n            needsSync = await this.needsSyncing(forceSync);\n        } catch (e) {\n            if (allowThrowOnError) {\n                throw e;\n            }\n        }\n\n        if (!needsSync) {\n            await this.setLastSync(now);\n            return this.syncCompleted(false);\n        }\n\n        const userId = await this.userService.getUserId();\n        try {\n            const response = await this.apiService.getSync();\n\n            await this.syncProfile(response.profile);\n            await this.syncFolders(userId, response.folders);\n            await this.syncCollections(response.collections);\n            await this.syncCiphers(userId, response.ciphers);\n            await this.syncSends(userId, response.sends);\n            await this.syncSettings(userId, response.domains);\n            await this.syncPolicies(response.policies);\n\n            await this.setLastSync(now);\n            return this.syncCompleted(true);\n        } catch (e) {\n            if (allowThrowOnError) {\n                throw e;\n            } else {\n                return this.syncCompleted(false);\n            }\n        }\n    }\n\n    async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            try {\n                const localFolder = await this.folderService.get(notification.id);\n                if ((!isEdit && localFolder == null) ||\n                    (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)) {\n                    const remoteFolder = await this.apiService.getFolder(notification.id);\n                    if (remoteFolder != null) {\n                        const userId = await this.userService.getUserId();\n                        await this.folderService.upsert(new FolderData(remoteFolder, userId));\n                        this.messagingService.send('syncedUpsertedFolder', { folderId: notification.id });\n                        return this.syncCompleted(true);\n                    }\n                }\n            } catch { }\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            await this.folderService.delete(notification.id);\n            this.messagingService.send('syncedDeletedFolder', { folderId: notification.id });\n            this.syncCompleted(true);\n            return true;\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            try {\n                let shouldUpdate = true;\n                const localCipher = await this.cipherService.get(notification.id);\n                if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n                    shouldUpdate = false;\n                }\n\n                let checkCollections = false;\n                if (shouldUpdate) {\n                    if (isEdit) {\n                        shouldUpdate = localCipher != null;\n                        checkCollections = true;\n                    } else {\n                        if (notification.collectionIds == null || notification.organizationId == null) {\n                            shouldUpdate = localCipher == null;\n                        } else {\n                            shouldUpdate = false;\n                            checkCollections = true;\n                        }\n                    }\n                }\n\n                if (!shouldUpdate && checkCollections && notification.organizationId != null &&\n                    notification.collectionIds != null && notification.collectionIds.length > 0) {\n                    const collections = await this.collectionService.getAll();\n                    if (collections != null) {\n                        for (let i = 0; i < collections.length; i++) {\n                            if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                                shouldUpdate = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (shouldUpdate) {\n                    const remoteCipher = await this.apiService.getCipher(notification.id);\n                    if (remoteCipher != null) {\n                        const userId = await this.userService.getUserId();\n                        await this.cipherService.upsert(new CipherData(remoteCipher, userId));\n                        this.messagingService.send('syncedUpsertedCipher', { cipherId: notification.id });\n                        return this.syncCompleted(true);\n                    }\n                }\n            } catch (e) {\n                if (e != null && e.statusCode === 404 && isEdit) {\n                    await this.cipherService.delete(notification.id);\n                    this.messagingService.send('syncedDeletedCipher', { cipherId: notification.id });\n                    return this.syncCompleted(true);\n                }\n            }\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            await this.cipherService.delete(notification.id);\n            this.messagingService.send('syncedDeletedCipher', { cipherId: notification.id });\n            return this.syncCompleted(true);\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            try {\n                const localSend = await this.sendService.get(notification.id);\n                if ((!isEdit && localSend == null) ||\n                    (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)) {\n                    const remoteSend = await this.apiService.getSend(notification.id);\n                    if (remoteSend != null) {\n                        const userId = await this.userService.getUserId();\n                        await this.sendService.upsert(new SendData(remoteSend, userId));\n                        this.messagingService.send('syncedUpsertedSend', { sendId: notification.id });\n                        return this.syncCompleted(true);\n                    }\n                }\n            } catch { }\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            await this.sendService.delete(notification.id);\n            this.messagingService.send('syncedDeletedSend', { sendId: notification.id });\n            this.syncCompleted(true);\n            return true;\n        }\n        return this.syncCompleted(false);\n    }\n\n    // Helpers\n\n    private syncStarted() {\n        this.syncInProgress = true;\n        this.messagingService.send('syncStarted');\n    }\n\n    private syncCompleted(successfully: boolean): boolean {\n        this.syncInProgress = false;\n        this.messagingService.send('syncCompleted', { successfully: successfully });\n        return successfully;\n    }\n\n    private async needsSyncing(forceSync: boolean) {\n        if (forceSync) {\n            return true;\n        }\n\n        const lastSync = await this.getLastSync();\n        if (lastSync == null || lastSync.getTime() === 0) {\n            return true;\n        }\n\n        const response = await this.apiService.getAccountRevisionDate();\n        if (new Date(response) <= lastSync) {\n            return false;\n        }\n        return true;\n    }\n\n    private async syncProfile(response: ProfileResponse) {\n        const stamp = await this.userService.getSecurityStamp();\n        if (stamp != null && stamp !== response.securityStamp) {\n            if (this.logoutCallback != null) {\n                await this.logoutCallback(true);\n            }\n\n            throw new Error('Stamp has changed');\n        }\n\n        await this.cryptoService.setEncKey(response.key);\n        await this.cryptoService.setEncPrivateKey(response.privateKey);\n        await this.cryptoService.setOrgKeys(response.organizations);\n        await this.userService.setSecurityStamp(response.securityStamp);\n        await this.userService.setEmailVerified(response.emailVerified);\n\n        const organizations: { [id: string]: OrganizationData; } = {};\n        response.organizations.forEach(o => {\n            organizations[o.id] = new OrganizationData(o);\n        });\n        return await this.userService.replaceOrganizations(organizations);\n    }\n\n    private async syncFolders(userId: string, response: FolderResponse[]) {\n        const folders: { [id: string]: FolderData; } = {};\n        response.forEach(f => {\n            folders[f.id] = new FolderData(f, userId);\n        });\n        return await this.folderService.replace(folders);\n    }\n\n    private async syncCollections(response: CollectionDetailsResponse[]) {\n        const collections: { [id: string]: CollectionData; } = {};\n        response.forEach(c => {\n            collections[c.id] = new CollectionData(c);\n        });\n        return await this.collectionService.replace(collections);\n    }\n\n    private async syncCiphers(userId: string, response: CipherResponse[]) {\n        const ciphers: { [id: string]: CipherData; } = {};\n        response.forEach(c => {\n            ciphers[c.id] = new CipherData(c, userId);\n        });\n        return await this.cipherService.replace(ciphers);\n    }\n\n    private async syncSends(userId: string, response: SendResponse[]) {\n        const sends: { [id: string]: SendData; } = {};\n        response.forEach(s => {\n            sends[s.id] = new SendData(s, userId);\n        });\n        return await this.sendService.replace(sends);\n    }\n\n    private async syncSettings(userId: string, response: DomainsResponse) {\n        let eqDomains: string[][] = [];\n        if (response != null && response.equivalentDomains != null) {\n            eqDomains = eqDomains.concat(response.equivalentDomains);\n        }\n\n        if (response != null && response.globalEquivalentDomains != null) {\n            response.globalEquivalentDomains.forEach(global => {\n                if (global.domains.length > 0) {\n                    eqDomains.push(global.domains);\n                }\n            });\n        }\n\n        return this.settingsService.setEquivalentDomains(eqDomains);\n    }\n\n    private async syncPolicies(response: PolicyResponse[]) {\n        const policies: { [id: string]: PolicyData; } = {};\n        if (response != null) {\n            response.forEach(p => {\n                policies[p.id] = new PolicyData(p);\n            });\n        }\n        return await this.policyService.replace(policies);\n    }\n}\n","import { SendType } from '../../enums/sendType';\n\nimport { SendFileData } from './sendFileData';\nimport { SendTextData } from './sendTextData';\n\nimport { SendResponse } from '../response/sendResponse';\n\nexport class SendData {\n    id: string;\n    accessId: string;\n    userId: string;\n    type: SendType;\n    name: string;\n    notes: string;\n    file: SendFileData;\n    text: SendTextData;\n    key: string;\n    maxAccessCount?: number;\n    accessCount: number;\n    revisionDate: string;\n    expirationDate: string;\n    deletionDate: string;\n    password: string;\n    disabled: boolean;\n    hideEmail: boolean;\n\n    constructor(response?: SendResponse, userId?: string) {\n        if (response == null) {\n            return;\n        }\n\n        this.id = response.id;\n        this.accessId = response.accessId;\n        this.userId = userId;\n        this.type = response.type;\n        this.name = response.name;\n        this.notes = response.notes;\n        this.key = response.key;\n        this.maxAccessCount = response.maxAccessCount;\n        this.accessCount = response.accessCount;\n        this.revisionDate = response.revisionDate;\n        this.expirationDate = response.expirationDate;\n        this.deletionDate = response.deletionDate;\n        this.password = response.password;\n        this.disabled = response.disable;\n        this.hideEmail = response.hideEmail;\n\n        switch (this.type) {\n            case SendType.Text:\n                this.text = new SendTextData(response.text);\n                break;\n            case SendType.File:\n                this.file = new SendFileData(response.file);\n                break;\n            default:\n                break;\n        }\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { StorageService } from '../abstractions/storage.service';\nimport { TokenService as TokenServiceAbstraction } from '../abstractions/token.service';\n\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    accessToken: 'accessToken',\n    refreshToken: 'refreshToken',\n    twoFactorTokenPrefix: 'twoFactorToken_',\n};\n\nexport class TokenService implements TokenServiceAbstraction {\n    token: string;\n    decodedToken: any;\n    refreshToken: string;\n\n    constructor(private storageService: StorageService) {\n    }\n\n    async setTokens(accessToken: string, refreshToken: string): Promise<any> {\n        await this.setToken(accessToken);\n        await this.setRefreshToken(refreshToken);\n    }\n\n    async setToken(token: string): Promise<any> {\n        this.token = token;\n        this.decodedToken = null;\n\n        if (await this.skipTokenStorage()) {\n            // if we have a vault timeout and the action is log out, don't store token\n            return;\n        }\n\n        return this.storageService.save(Keys.accessToken, token);\n    }\n\n    async getToken(): Promise<string> {\n        if (this.token != null) {\n            return this.token;\n        }\n\n        this.token = await this.storageService.get<string>(Keys.accessToken);\n        return this.token;\n    }\n\n    async setRefreshToken(refreshToken: string): Promise<any> {\n        this.refreshToken = refreshToken;\n\n        if (await this.skipTokenStorage()) {\n            // if we have a vault timeout and the action is log out, don't store token\n            return;\n        }\n\n        return this.storageService.save(Keys.refreshToken, refreshToken);\n    }\n\n    async getRefreshToken(): Promise<string> {\n        if (this.refreshToken != null) {\n            return this.refreshToken;\n        }\n\n        this.refreshToken = await this.storageService.get<string>(Keys.refreshToken);\n        return this.refreshToken;\n    }\n\n    async toggleTokens(): Promise<any> {\n        const token = await this.getToken();\n        const refreshToken = await this.getRefreshToken();\n        const timeout = await this.storageService.get(ConstantsService.vaultTimeoutKey);\n        const action = await this.storageService.get(ConstantsService.vaultTimeoutActionKey);\n        if ((timeout != null || timeout === 0) && action === 'logOut') {\n            // if we have a vault timeout and the action is log out, reset tokens\n            await this.clearToken();\n            this.token = token;\n            this.refreshToken = refreshToken;\n            return;\n        }\n\n        await this.setToken(token);\n        await this.setRefreshToken(refreshToken);\n    }\n\n    setTwoFactorToken(token: string, email: string): Promise<any> {\n        return this.storageService.save(Keys.twoFactorTokenPrefix + email, token);\n    }\n\n    getTwoFactorToken(email: string): Promise<string> {\n        return this.storageService.get<string>(Keys.twoFactorTokenPrefix + email);\n    }\n\n    clearTwoFactorToken(email: string): Promise<any> {\n        return this.storageService.remove(Keys.twoFactorTokenPrefix + email);\n    }\n\n    async clearToken(): Promise<any> {\n        this.token = null;\n        this.decodedToken = null;\n        this.refreshToken = null;\n\n        await this.storageService.remove(Keys.accessToken);\n        await this.storageService.remove(Keys.refreshToken);\n    }\n\n    // jwthelper methods\n    // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n    decodeToken(): any {\n        if (this.decodedToken) {\n            return this.decodedToken;\n        }\n\n        if (this.token == null) {\n            throw new Error('Token not found.');\n        }\n\n        const parts = this.token.split('.');\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n\n        const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n        if (decoded == null) {\n            throw new Error('Cannot decode the token');\n        }\n\n        this.decodedToken = JSON.parse(decoded);\n        return this.decodedToken;\n    }\n\n    getTokenExpirationDate(): Date {\n        const decoded = this.decodeToken();\n        if (typeof decoded.exp === 'undefined') {\n            return null;\n        }\n\n        const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n        d.setUTCSeconds(decoded.exp);\n        return d;\n    }\n\n    tokenSecondsRemaining(offsetSeconds: number = 0): number {\n        const d = this.getTokenExpirationDate();\n        if (d == null) {\n            return 0;\n        }\n\n        const msRemaining = d.valueOf() - (new Date().valueOf() + (offsetSeconds * 1000));\n        return Math.round(msRemaining / 1000);\n    }\n\n    tokenNeedsRefresh(minutes: number = 5): boolean {\n        const sRemaining = this.tokenSecondsRemaining();\n        return sRemaining < (60 * minutes);\n    }\n\n    getUserId(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.sub === 'undefined') {\n            throw new Error('No user id found');\n        }\n\n        return decoded.sub as string;\n    }\n\n    getEmail(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.email === 'undefined') {\n            throw new Error('No email found');\n        }\n\n        return decoded.email as string;\n    }\n\n    getEmailVerified(): boolean {\n        const decoded = this.decodeToken();\n        if (typeof decoded.email_verified === 'undefined') {\n            throw new Error('No email verification found');\n        }\n\n        return decoded.email_verified as boolean;\n    }\n\n    getName(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.name === 'undefined') {\n            return null;\n        }\n\n        return decoded.name as string;\n    }\n\n    getPremium(): boolean {\n        const decoded = this.decodeToken();\n        if (typeof decoded.premium === 'undefined') {\n            return false;\n        }\n\n        return decoded.premium as boolean;\n    }\n\n    getIssuer(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.iss === 'undefined') {\n            throw new Error('No issuer found');\n        }\n\n        return decoded.iss as string;\n    }\n\n    private async skipTokenStorage(): Promise<boolean> {\n        const timeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n        const action = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\n        return timeout != null && action === 'logOut';\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { TotpService as TotpServiceAbstraction } from '../abstractions/totp.service';\n\nimport { Utils } from '../misc/utils';\n\nconst B32Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\nconst SteamChars = '23456789BCDFGHJKMNPQRTVWXY';\n\nexport class TotpService implements TotpServiceAbstraction {\n    constructor(private storageService: StorageService, private cryptoFunctionService: CryptoFunctionService) { }\n\n    async getCode(key: string): Promise<string> {\n        if (key == null) {\n            return null;\n        }\n        let period = 30;\n        let alg: 'sha1' | 'sha256' | 'sha512' = 'sha1';\n        let digits = 6;\n        let keyB32 = key;\n        const isOtpAuth = key.toLowerCase().indexOf('otpauth://') === 0;\n        const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf('steam://') === 0;\n        if (isOtpAuth) {\n            const params = Utils.getQueryParams(key);\n            if (params.has('digits') && params.get('digits') != null) {\n                try {\n                    const digitParams = parseInt(params.get('digits').trim(), null);\n                    if (digitParams > 10) {\n                        digits = 10;\n                    } else if (digitParams > 0) {\n                        digits = digitParams;\n                    }\n                } catch { }\n            }\n            if (params.has('period') && params.get('period') != null) {\n                try {\n                    const periodParam = parseInt(params.get('period').trim(), null);\n                    if (periodParam > 0) {\n                        period = periodParam;\n                    }\n                } catch { }\n            }\n            if (params.has('secret') && params.get('secret') != null) {\n                keyB32 = params.get('secret');\n            }\n            if (params.has('algorithm') && params.get('algorithm') != null) {\n                const algParam = params.get('algorithm').toLowerCase();\n                if (algParam === 'sha1' || algParam === 'sha256' || algParam === 'sha512') {\n                    alg = algParam;\n                }\n            }\n        } else if (isSteamAuth) {\n            keyB32 = key.substr('steam://'.length);\n            digits = 5;\n        }\n\n        const epoch = Math.round(new Date().getTime() / 1000.0);\n        const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, '0');\n        const timeBytes = Utils.fromHexToArray(timeHex);\n        const keyBytes = this.b32ToBytes(keyB32);\n\n        if (!keyBytes.length || !timeBytes.length) {\n            return null;\n        }\n\n        const hash = await this.sign(keyBytes, timeBytes, alg);\n        if (hash.length === 0) {\n            return null;\n        }\n\n        /* tslint:disable */\n        const offset = (hash[hash.length - 1] & 0xf);\n        const binary = ((hash[offset] & 0x7f) << 24) | ((hash[offset + 1] & 0xff) << 16) |\n            ((hash[offset + 2] & 0xff) << 8) | (hash[offset + 3] & 0xff);\n        /* tslint:enable */\n\n        let otp = '';\n        if (isSteamAuth) {\n            // tslint:disable-next-line\n            let fullCode = binary & 0x7fffffff;\n            for (let i = 0; i < digits; i++) {\n                otp += SteamChars[fullCode % SteamChars.length];\n                fullCode = Math.trunc(fullCode / SteamChars.length);\n            }\n        } else {\n            otp = (binary % Math.pow(10, digits)).toString();\n            otp = this.leftPad(otp, digits, '0');\n        }\n\n        return otp;\n    }\n\n    getTimeInterval(key: string): number {\n        let period = 30;\n        if (key != null && key.toLowerCase().indexOf('otpauth://') === 0) {\n            const params = Utils.getQueryParams(key);\n            if (params.has('period') && params.get('period') != null) {\n                try {\n                    period = parseInt(params.get('period').trim(), null);\n                } catch { }\n            }\n        }\n        return period;\n    }\n\n    async isAutoCopyEnabled(): Promise<boolean> {\n        return !(await this.storageService.get<boolean>(ConstantsService.disableAutoTotpCopyKey));\n    }\n\n    // Helpers\n\n    private leftPad(s: string, l: number, p: string): string {\n        if (l + 1 >= s.length) {\n            s = Array(l + 1 - s.length).join(p) + s;\n        }\n        return s;\n    }\n\n    private decToHex(d: number): string {\n        return (d < 15.5 ? '0' : '') + Math.round(d).toString(16);\n    }\n\n    private b32ToHex(s: string): string {\n        s = s.toUpperCase();\n        let cleanedInput = '';\n\n        for (let i = 0; i < s.length; i++) {\n            if (B32Chars.indexOf(s[i]) < 0) {\n                continue;\n            }\n\n            cleanedInput += s[i];\n        }\n        s = cleanedInput;\n\n        let bits = '';\n        let hex = '';\n        for (let i = 0; i < s.length; i++) {\n            const byteIndex = B32Chars.indexOf(s.charAt(i));\n            if (byteIndex < 0) {\n                continue;\n            }\n            bits += this.leftPad(byteIndex.toString(2), 5, '0');\n        }\n        for (let i = 0; i + 4 <= bits.length; i += 4) {\n            const chunk = bits.substr(i, 4);\n            hex = hex + parseInt(chunk, 2).toString(16);\n        }\n        return hex;\n    }\n\n    private b32ToBytes(s: string): Uint8Array {\n        return Utils.fromHexToArray(this.b32ToHex(s));\n    }\n\n    private async sign(keyBytes: Uint8Array, timeBytes: Uint8Array, alg: 'sha1' | 'sha256' | 'sha512') {\n        const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n        return new Uint8Array(signature);\n    }\n}\n","import { StorageService } from '../abstractions/storage.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService as UserServiceAbstraction } from '../abstractions/user.service';\n\nimport { OrganizationData } from '../models/data/organizationData';\nimport { Organization } from '../models/domain/organization';\n\nimport { KdfType } from '../enums/kdfType';\n\nconst Keys = {\n    userId: 'userId',\n    userEmail: 'userEmail',\n    stamp: 'securityStamp',\n    kdf: 'kdf',\n    kdfIterations: 'kdfIterations',\n    organizationsPrefix: 'organizations_',\n    emailVerified: 'emailVerified',\n};\n\nexport class UserService implements UserServiceAbstraction {\n    private userId: string;\n    private email: string;\n    private stamp: string;\n    private kdf: KdfType;\n    private kdfIterations: number;\n    private emailVerified: boolean;\n\n    constructor(private tokenService: TokenService, private storageService: StorageService) { }\n\n    async setInformation(userId: string, email: string, kdf: KdfType, kdfIterations: number): Promise<any> {\n        this.email = email;\n        this.userId = userId;\n        this.kdf = kdf;\n        this.kdfIterations = kdfIterations;\n\n        await this.storageService.save(Keys.userEmail, email);\n        await this.storageService.save(Keys.userId, userId);\n        await this.storageService.save(Keys.kdf, kdf);\n        await this.storageService.save(Keys.kdfIterations, kdfIterations);\n    }\n\n    setSecurityStamp(stamp: string): Promise<any> {\n        this.stamp = stamp;\n        return this.storageService.save(Keys.stamp, stamp);\n    }\n\n    setEmailVerified(emailVerified: boolean) {\n        this.emailVerified = emailVerified;\n        return this.storageService.save(Keys.emailVerified, emailVerified);\n    }\n\n    async getUserId(): Promise<string> {\n        if (this.userId == null) {\n            this.userId = await this.storageService.get<string>(Keys.userId);\n        }\n        return this.userId;\n    }\n\n    async getEmail(): Promise<string> {\n        if (this.email == null) {\n            this.email = await this.storageService.get<string>(Keys.userEmail);\n        }\n        return this.email;\n    }\n\n    async getSecurityStamp(): Promise<string> {\n        if (this.stamp == null) {\n            this.stamp = await this.storageService.get<string>(Keys.stamp);\n        }\n        return this.stamp;\n    }\n\n    async getKdf(): Promise<KdfType> {\n        if (this.kdf == null) {\n            this.kdf = await this.storageService.get<KdfType>(Keys.kdf);\n        }\n        return this.kdf;\n    }\n\n    async getKdfIterations(): Promise<number> {\n        if (this.kdfIterations == null) {\n            this.kdfIterations = await this.storageService.get<number>(Keys.kdfIterations);\n        }\n        return this.kdfIterations;\n    }\n\n    async getEmailVerified(): Promise<boolean> {\n        if (this.emailVerified == null) {\n            this.emailVerified = await this.storageService.get<boolean>(Keys.emailVerified);\n        }\n        return this.emailVerified;\n    }\n\n    async clear(): Promise<any> {\n        const userId = await this.getUserId();\n\n        await this.storageService.remove(Keys.userId);\n        await this.storageService.remove(Keys.userEmail);\n        await this.storageService.remove(Keys.stamp);\n        await this.storageService.remove(Keys.kdf);\n        await this.storageService.remove(Keys.kdfIterations);\n        await this.clearOrganizations(userId);\n\n        this.userId = this.email = this.stamp = null;\n        this.kdf = null;\n        this.kdfIterations = null;\n    }\n\n    async isAuthenticated(): Promise<boolean> {\n        const token = await this.tokenService.getToken();\n        if (token == null) {\n            return false;\n        }\n\n        const userId = await this.getUserId();\n        return userId != null;\n    }\n\n    async canAccessPremium(): Promise<boolean> {\n        const authed = await this.isAuthenticated();\n        if (!authed) {\n            return false;\n        }\n\n        const tokenPremium = this.tokenService.getPremium();\n        if (tokenPremium) {\n            return true;\n        }\n\n        const orgs = await this.getAllOrganizations();\n        for (let i = 0; i < orgs.length; i++) {\n            if (orgs[i].usersGetPremium && orgs[i].enabled) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    async getOrganization(id: string): Promise<Organization> {\n        const userId = await this.getUserId();\n        const organizations = await this.storageService.get<{ [id: string]: OrganizationData; }>(\n            Keys.organizationsPrefix + userId);\n        if (organizations == null || !organizations.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Organization(organizations[id]);\n    }\n\n    async getAllOrganizations(): Promise<Organization[]> {\n        const userId = await this.getUserId();\n        const organizations = await this.storageService.get<{ [id: string]: OrganizationData; }>(\n            Keys.organizationsPrefix + userId);\n        const response: Organization[] = [];\n        for (const id in organizations) {\n            if (organizations.hasOwnProperty(id)) {\n                response.push(new Organization(organizations[id]));\n            }\n        }\n        return response;\n    }\n\n    async replaceOrganizations(organizations: { [id: string]: OrganizationData; }): Promise<any> {\n        const userId = await this.getUserId();\n        await this.storageService.save(Keys.organizationsPrefix + userId, organizations);\n    }\n\n    async clearOrganizations(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.organizationsPrefix + userId);\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { SearchService } from '../abstractions/search.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService } from '../abstractions/user.service';\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from '../abstractions/vaultTimeout.service';\n\nimport { EncString } from '../models/domain/encString';\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n    pinProtectedKey: EncString = null;\n    biometricLocked: boolean = true;\n    everBeenUnlocked: boolean = false;\n\n    private inited = false;\n\n    constructor(private cipherService: CipherService, private folderService: FolderService,\n        private collectionService: CollectionService, private cryptoService: CryptoService,\n        protected platformUtilsService: PlatformUtilsService, private storageService: StorageService,\n        private messagingService: MessagingService, private searchService: SearchService,\n        private userService: UserService, private tokenService: TokenService,\n        private lockedCallback: () => Promise<void> = null, private loggedOutCallback: () => Promise<void> = null) {\n    }\n\n    init(checkOnInterval: boolean) {\n        if (this.inited) {\n            return;\n        }\n\n        this.inited = true;\n        if (checkOnInterval) {\n            this.startCheck();\n        }\n    }\n\n    startCheck() {\n        this.checkVaultTimeout();\n        setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n    }\n\n    // Keys aren't stored for a device that is locked or logged out.\n    async isLocked(): Promise<boolean> {\n        // Handle never lock startup situation\n        if (await this.cryptoService.hasKeyStored('auto') && !this.everBeenUnlocked) {\n            await this.cryptoService.getKey('auto');\n        }\n\n        return !this.cryptoService.hasKeyInMemory();\n    }\n\n    async checkVaultTimeout(): Promise<void> {\n        if (await this.platformUtilsService.isViewOpen()) {\n            // Do not lock\n            return;\n        }\n\n        // \"is logged out check\" - similar to isLocked, below\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n\n        if (await this.isLocked()) {\n            return;\n        }\n\n        // This has the potential to be removed. Evaluate after all platforms complete with auto-logout\n        let vaultTimeout = this.platformUtilsService.lockTimeout();\n        if (vaultTimeout == null) {\n            vaultTimeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n        }\n\n        if (vaultTimeout == null || vaultTimeout < 0) {\n            return;\n        }\n\n        const lastActive = await this.storageService.get<number>(ConstantsService.lastActiveKey);\n        if (lastActive == null) {\n            return;\n        }\n\n        const vaultTimeoutSeconds = vaultTimeout * 60;\n        const diffSeconds = ((new Date()).getTime() - lastActive) / 1000;\n        if (diffSeconds >= vaultTimeoutSeconds) {\n            // Pivot based on the saved vault timeout action\n            const timeoutAction = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\n            timeoutAction === 'logOut' ? await this.logOut() : await this.lock(true);\n        }\n    }\n\n    async lock(allowSoftLock = false): Promise<void> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n\n        this.biometricLocked = true;\n        this.everBeenUnlocked = true;\n        await this.cryptoService.clearKey(false);\n        await this.cryptoService.clearOrgKeys(true);\n        await this.cryptoService.clearKeyPair(true);\n        await this.cryptoService.clearEncKey(true);\n\n        this.folderService.clearCache();\n        this.cipherService.clearCache();\n        this.collectionService.clearCache();\n        this.searchService.clearIndex();\n        this.messagingService.send('locked');\n        if (this.lockedCallback != null) {\n            await this.lockedCallback();\n        }\n    }\n\n    async logOut(): Promise<void> {\n        if (this.loggedOutCallback != null) {\n            await this.loggedOutCallback();\n        }\n    }\n\n    async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n        await this.storageService.save(ConstantsService.vaultTimeoutKey, timeout);\n        await this.storageService.save(ConstantsService.vaultTimeoutActionKey, action);\n        await this.cryptoService.toggleKey();\n        await this.tokenService.toggleTokens();\n    }\n\n    async isPinLockSet(): Promise<[boolean, boolean]> {\n        const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n        const pinProtectedKey = await this.storageService.get<string>(ConstantsService.pinProtectedKey);\n        return [protectedPin != null, pinProtectedKey != null];\n    }\n\n    async isBiometricLockSet(): Promise<boolean> {\n        return await this.storageService.get<boolean>(ConstantsService.biometricUnlockKey);\n    }\n\n    clear(): Promise<any> {\n        this.everBeenUnlocked = false;\n        this.pinProtectedKey = null;\n        return this.storageService.remove(ConstantsService.protectedPin);\n    }\n}\n","import { LogLevelType } from '../enums/logLevelType';\n\nimport { LogService as LogServiceAbstraction } from '../abstractions/log.service';\n\nimport * as hrtime from 'browser-hrtime';\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n    protected timersMap: Map<string, [number, number]> = new Map();\n\n    constructor(protected isDev: boolean, protected filter: (level: LogLevelType) => boolean = null) { }\n\n    debug(message: string) {\n        if (!this.isDev) {\n            return;\n        }\n        this.write(LogLevelType.Debug, message);\n    }\n\n    info(message: string) {\n        this.write(LogLevelType.Info, message);\n    }\n\n    warning(message: string) {\n        this.write(LogLevelType.Warning, message);\n    }\n\n    error(message: string) {\n        this.write(LogLevelType.Error, message);\n    }\n\n    write(level: LogLevelType, message: string) {\n        if (this.filter != null && this.filter(level)) {\n            return;\n        }\n\n        switch (level) {\n            case LogLevelType.Debug:\n                // tslint:disable-next-line\n                console.log(message);\n                break;\n            case LogLevelType.Info:\n                // tslint:disable-next-line\n                console.log(message);\n                break;\n            case LogLevelType.Warning:\n                // tslint:disable-next-line\n                console.warn(message);\n                break;\n            case LogLevelType.Error:\n                // tslint:disable-next-line\n                console.error(message);\n                break;\n            default:\n                break;\n        }\n    }\n\n    time(label: string = 'default') {\n        if (!this.timersMap.has(label)) {\n            this.timersMap.set(label, hrtime());\n        }\n    }\n\n    timeEnd(label: string = 'default'): [number, number] {\n        const elapsed = hrtime(this.timersMap.get(label));\n        this.timersMap.delete(label);\n        this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n        return elapsed;\n    }\n}\n","export enum LogLevelType {\n    Debug,\n    Info,\n    Warning,\n    Error,\n}\n","import { Cipher } from './cipher';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Cipher as CipherDomain } from '../domain/cipher';\n\nexport class CipherWithIds extends Cipher {\n    id: string;\n    collectionIds: string[];\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CipherView | CipherDomain) {\n        this.id = o.id;\n        super.build(o);\n        this.collectionIds = o.collectionIds;\n    }\n}\n","import { Collection } from './collection';\n\nimport { CollectionView } from '../view/collectionView';\n\nimport { Collection as CollectionDomain } from '../domain/collection';\n\nexport class CollectionWithId extends Collection {\n    id: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CollectionView | CollectionDomain) {\n        this.id = o.id;\n        super.build(o);\n    }\n}\n","import { Folder } from './folder';\n\nimport { FolderView } from '../view/folderView';\n\nimport { Folder as FolderDomain } from '../domain/folder';\n\nexport class FolderWithId extends Folder {\n    id: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: FolderView | FolderDomain) {\n        this.id = o.id;\n        super.build(o);\n    }\n}\n","import { ImportResult } from '../../models/domain/importResult';\nimport { BaseImporter } from '../baseImporter';\nimport { Importer } from '../importer';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { FieldType } from '../../enums/fieldType';\nimport { CipherView } from '../../models/view';\nimport { CipherImportContext } from './cipherImportContext';\n\nexport const IgnoredProperties = ['ainfo', 'autosubmit', 'notesplain', 'ps', 'scope', 'tags', 'title', 'uuid', 'notes'];\n\nexport abstract class OnePasswordCsvImporter extends BaseImporter implements Importer {\n    protected loginPropertyParsers = [this.setLoginUsername, this.setLoginPassword, this.setLoginUris];\n    protected creditCardPropertyParsers = [this.setCreditCardNumber, this.setCreditCardVerification, this.setCreditCardCardholderName, this.setCreditCardExpiry];\n    protected identityPropertyParsers = [this.setIdentityFirstName, this.setIdentityInitial, this.setIdentityLastName, this.setIdentityUserName, this.setIdentityEmail, this.setIdentityPhone, this.setIdentityCompany];\n\n    abstract setCipherType(value: any, cipher: CipherView): void;\n\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true, {\n            quoteChar: '\"',\n            escapeChar: '\\\\',\n        });\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (this.isNullOrWhitespace(this.getProp(value, 'title'))) {\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(this.getProp(value, 'title'), '--');\n\n            this.setNotes(value, cipher);\n\n            this.setCipherType(value, cipher);\n\n            let altUsername: string = null;\n            for (const property in value) {\n                if (!value.hasOwnProperty(property) || this.isNullOrWhitespace(value[property])) {\n                    continue;\n                }\n\n                const context = new CipherImportContext(value, property, cipher);\n                if (cipher.type === CipherType.Login && this.setKnownLoginValue(context)) {\n                    continue;\n                } else if (cipher.type === CipherType.Card && this.setKnownCreditCardValue(context)) {\n                    continue;\n                } else if (cipher.type === CipherType.Identity && this.setKnownIdentityValue(context)) {\n                    continue;\n                }\n\n                altUsername = this.setUnknownValue(context, altUsername);\n            }\n\n            if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(altUsername) &&\n                this.isNullOrWhitespace(cipher.login.username) && altUsername.indexOf('://') === -1) {\n                cipher.login.username = altUsername;\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    protected getProp(obj: any, name: string): any {\n        const lowerObj = Object.entries(obj).reduce((agg: any, entry: [string, any]) => {\n            agg[entry[0].toLowerCase()] = entry[1];\n            return agg;\n        }, {});\n        return lowerObj[name.toLowerCase()];\n    }\n\n    protected getPropByRegexp(obj: any, regexp: RegExp): any {\n        const matchingKeys = Object.keys(obj).reduce((agg: string[], key: string) => {\n            if (key.match(regexp)) {\n                agg.push(key);\n            }\n            return agg;\n        }, []);\n        if (matchingKeys.length === 0) {\n            return null;\n        } else {\n            return obj[matchingKeys[0]];\n        }\n    }\n\n    protected getPropIncluding(obj: any, name: string): any {\n        const includesMap = Object.keys(obj).reduce((agg: string[], entry: string) => {\n            if (entry.toLowerCase().includes(name.toLowerCase())) {\n                agg.push(entry);\n            }\n            return agg;\n        }, []);\n        if (includesMap.length === 0) {\n            return null;\n        } else {\n            return obj[includesMap[0]];\n        }\n    }\n\n    protected setNotes(importRecord: any, cipher: CipherView) {\n        cipher.notes = this.getValueOrDefault(this.getProp(importRecord, 'notesPlain'), '') + '\\n' +\n            this.getValueOrDefault(this.getProp(importRecord, 'notes'), '') + '\\n';\n        cipher.notes.trim();\n\n    }\n\n    protected setKnownLoginValue(context: CipherImportContext): boolean {\n        return this.loginPropertyParsers.reduce((agg: boolean, func) => {\n            if (!agg) {\n                agg = func.bind(this)(context);\n            }\n            return agg;\n        }, false);\n    }\n\n    protected setKnownCreditCardValue(context: CipherImportContext): boolean {\n        return this.creditCardPropertyParsers.reduce((agg: boolean, func) => {\n            if (!agg) {\n                agg = func.bind(this)(context);\n            }\n            return agg;\n        }, false);\n    }\n\n    protected setKnownIdentityValue(context: CipherImportContext): boolean {\n        return this.identityPropertyParsers.reduce((agg: boolean, func) => {\n            if (!agg) {\n                agg = func.bind(this)(context);\n            }\n            return agg;\n        }, false);\n    }\n\n    protected setUnknownValue(context: CipherImportContext, altUsername: string): string {\n        if (IgnoredProperties.indexOf(context.lowerProperty) === -1 && !context.lowerProperty.startsWith('section:') &&\n            !context.lowerProperty.startsWith('section ')) {\n            if (altUsername == null && context.lowerProperty === 'email') {\n                return context.importRecord[context.property];\n            }\n            else if (context.lowerProperty === 'created date' || context.lowerProperty === 'modified date') {\n                const readableDate = new Date(parseInt(context.importRecord[context.property], 10) * 1000).toUTCString();\n                this.processKvp(context.cipher, '1Password ' + context.property, readableDate);\n                return null;\n            }\n            if (context.lowerProperty.includes('password') || context.lowerProperty.includes('key') || context.lowerProperty.includes('secret')) {\n                this.processKvp(context.cipher, context.property, context.importRecord[context.property], FieldType.Hidden);\n            } else {\n                this.processKvp(context.cipher, context.property, context.importRecord[context.property]);\n            }\n        }\n        return null;\n    }\n\n    protected setIdentityFirstName(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.firstName) && context.lowerProperty.includes('first name')) {\n            context.cipher.identity.firstName = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityInitial(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.middleName) && context.lowerProperty.includes('initial')) {\n            context.cipher.identity.middleName = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityLastName(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.lastName) && context.lowerProperty.includes('last name')) {\n            context.cipher.identity.lastName = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityUserName(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.username) && context.lowerProperty.includes('username')) {\n            context.cipher.identity.username = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityCompany(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.company) && context.lowerProperty.includes('company')) {\n            context.cipher.identity.company = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityPhone(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.phone) && context.lowerProperty.includes('default phone')) {\n            context.cipher.identity.phone = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityEmail(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.email) && context.lowerProperty.includes('email')) {\n            context.cipher.identity.email = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setCreditCardNumber(context: CipherImportContext): boolean {\n        if (this.isNullOrWhitespace(context.cipher.card.number) && context.lowerProperty.includes('number')) {\n            context.cipher.card.number = context.importRecord[context.property];\n            context.cipher.card.brand = this.getCardBrand(context.cipher.card.number);\n            return true;\n        }\n        return false;\n    }\n\n    protected setCreditCardVerification(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.card.code) && context.lowerProperty.includes('verification number')) {\n            context.cipher.card.code = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setCreditCardCardholderName(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.card.cardholderName) && context.lowerProperty.includes('cardholder name')) {\n            context.cipher.card.cardholderName = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setCreditCardExpiry(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.card.expiration) && context.lowerProperty.includes('expiry date') &&\n            context.importRecord[context.property].length === 7) {\n            context.cipher.card.expMonth = (context.importRecord[context.property] as string).substr(0, 2);\n            if (context.cipher.card.expMonth[0] === '0') {\n                context.cipher.card.expMonth = context.cipher.card.expMonth.substr(1, 1);\n            }\n            context.cipher.card.expYear = (context.importRecord[context.property] as string).substr(3, 4);\n            return true;\n        }\n        return false;\n    }\n\n    protected setLoginPassword(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.login.password) && context.lowerProperty === 'password') {\n            context.cipher.login.password = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setLoginUsername(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.login.username) && context.lowerProperty === 'username') {\n            context.cipher.login.username = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setLoginUris(context: CipherImportContext) {\n        if ((context.cipher.login.uris == null || context.cipher.login.uris.length === 0) && context.lowerProperty === 'urls') {\n            const urls = context.importRecord[context.property].split(this.newLineRegex);\n            context.cipher.login.uris = this.makeUriArray(urls);\n            return true;\n        } else if ((context.lowerProperty === 'url')) {\n            if (context.cipher.login.uris == null) {\n                context.cipher.login.uris = [];\n            }\n            context.cipher.login.uris.concat(this.makeUriArray(context.importRecord[context.property]));\n            return true;\n        }\n        return false;\n    }\n}\n","export { AttachmentView } from './attachmentView';\nexport { CardView } from './cardView';\nexport { CipherView } from './cipherView';\nexport { FieldView } from './fieldView';\nexport { IdentityView } from './identityView';\nexport { LoginUriView } from './loginUriView';\nexport { LoginView } from './loginView';\nexport { SecureNoteView } from './secureNoteView';\nexport { View } from './view';\n","export enum NotificationType {\n    SyncCipherUpdate = 0,\n    SyncCipherCreate = 1,\n    SyncLoginDelete = 2,\n    SyncFolderDelete = 3,\n    SyncCiphers = 4,\n\n    SyncVault = 5,\n    SyncOrgKeys = 6,\n    SyncFolderCreate = 7,\n    SyncFolderUpdate = 8,\n    SyncCipherDelete = 9,\n    SyncSettings = 10,\n\n    LogOut = 11,\n\n    SyncSendCreate = 12,\n    SyncSendUpdate = 13,\n    SyncSendDelete = 14,\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport 'bootstrap';\nimport 'jquery';\nimport 'popper.js';\n\n// tslint:disable-next-line\nrequire('../../../src/scss/styles.scss');\n\nimport { AppModule } from './app.module';\n\nif (process.env.ENV === 'production') {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","// extracted by mini-css-extract-plugin\nexport {};","import { ToasterModule } from 'angular2-toaster';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { OssModule } from './oss.module';\nimport { ServicesModule } from './services/services.module';\n\n@NgModule({\n    imports: [\n        OssModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ServicesModule,\n        ToasterModule.forRoot(),\n        InfiniteScrollModule,\n        DragDropModule,\n        AppRoutingModule,\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport {\n    RouterModule,\n    Routes,\n} from '@angular/router';\n\nimport { FrontendLayoutComponent } from './layouts/frontend-layout.component';\nimport { OrganizationLayoutComponent } from './layouts/organization-layout.component';\nimport { UserLayoutComponent } from './layouts/user-layout.component';\n\nimport { AcceptEmergencyComponent } from './accounts/accept-emergency.component';\nimport { AcceptOrganizationComponent } from './accounts/accept-organization.component';\nimport { HintComponent } from './accounts/hint.component';\nimport { LockComponent } from './accounts/lock.component';\nimport { LoginComponent } from './accounts/login.component';\nimport { RecoverDeleteComponent } from './accounts/recover-delete.component';\nimport { RecoverTwoFactorComponent } from './accounts/recover-two-factor.component';\nimport { RegisterComponent } from './accounts/register.component';\nimport { SetPasswordComponent } from './accounts/set-password.component';\nimport { SsoComponent } from './accounts/sso.component';\nimport { TwoFactorComponent } from './accounts/two-factor.component';\nimport { VerifyEmailTokenComponent } from './accounts/verify-email-token.component';\nimport { VerifyRecoverDeleteComponent } from './accounts/verify-recover-delete.component';\n\nimport { CollectionsComponent as OrgManageCollectionsComponent } from './organizations/manage/collections.component';\nimport { EventsComponent as OrgEventsComponent } from './organizations/manage/events.component';\nimport { GroupsComponent as OrgGroupsComponent } from './organizations/manage/groups.component';\nimport { ManageComponent as OrgManageComponent } from './organizations/manage/manage.component';\nimport { PeopleComponent as OrgPeopleComponent } from './organizations/manage/people.component';\nimport { PoliciesComponent as OrgPoliciesComponent } from './organizations/manage/policies.component';\n\nimport { AccountComponent as OrgAccountComponent } from './organizations/settings/account.component';\nimport { OrganizationBillingComponent } from './organizations/settings/organization-billing.component';\nimport { OrganizationSubscriptionComponent } from './organizations/settings/organization-subscription.component';\nimport { SettingsComponent as OrgSettingsComponent } from './organizations/settings/settings.component';\nimport {\n    TwoFactorSetupComponent as OrgTwoFactorSetupComponent,\n} from './organizations/settings/two-factor-setup.component';\n\nimport { ExportComponent as OrgExportComponent } from './organizations/tools/export.component';\nimport {\n    ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent,\n} from './organizations/tools/exposed-passwords-report.component';\nimport { ImportComponent as OrgImportComponent } from './organizations/tools/import.component';\nimport {\n    InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent,\n} from './organizations/tools/inactive-two-factor-report.component';\nimport {\n    ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent,\n} from './organizations/tools/reused-passwords-report.component';\nimport { ToolsComponent as OrgToolsComponent } from './organizations/tools/tools.component';\nimport {\n    UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent,\n} from './organizations/tools/unsecured-websites-report.component';\nimport {\n    WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent,\n} from './organizations/tools/weak-passwords-report.component';\n\nimport { VaultComponent as OrgVaultComponent } from './organizations/vault/vault.component';\n\nimport { AccessComponent } from './send/access.component';\nimport { SendComponent } from './send/send.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { CreateOrganizationComponent } from './settings/create-organization.component';\nimport { DomainRulesComponent } from './settings/domain-rules.component';\nimport { OptionsComponent } from './settings/options.component';\nimport { OrganizationsComponent } from './settings/organizations.component';\nimport { PremiumComponent } from './settings/premium.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { TwoFactorSetupComponent } from './settings/two-factor-setup.component';\nimport { UserBillingComponent } from './settings/user-billing.component';\nimport { UserSubscriptionComponent } from './settings/user-subscription.component';\n\nimport { BreachReportComponent } from './tools/breach-report.component';\nimport { ExportComponent } from './tools/export.component';\nimport { ExposedPasswordsReportComponent } from './tools/exposed-passwords-report.component';\nimport { ImportComponent } from './tools/import.component';\nimport { InactiveTwoFactorReportComponent } from './tools/inactive-two-factor-report.component';\nimport { PasswordGeneratorComponent } from './tools/password-generator.component';\nimport { ReusedPasswordsReportComponent } from './tools/reused-passwords-report.component';\nimport { ToolsComponent } from './tools/tools.component';\nimport { UnsecuredWebsitesReportComponent } from './tools/unsecured-websites-report.component';\nimport { WeakPasswordsReportComponent } from './tools/weak-passwords-report.component';\n\nimport { VaultComponent } from './vault/vault.component';\n\nimport { OrganizationGuardService } from './services/organization-guard.service';\nimport { OrganizationTypeGuardService } from './services/organization-type-guard.service';\n\nimport { AuthGuardService } from 'jslib-angular/services/auth-guard.service';\nimport { LockGuardService } from 'jslib-angular/services/lock-guard.service';\nimport { UnauthGuardService } from 'jslib-angular/services/unauth-guard.service';\n\nimport { Permissions } from 'jslib-common/enums/permissions';\n\nimport { EmergencyAccessViewComponent } from './settings/emergency-access-view.component';\nimport { EmergencyAccessComponent } from './settings/emergency-access.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FrontendLayoutComponent,\n        children: [\n            { path: '', pathMatch: 'full', component: LoginComponent, canActivate: [UnauthGuardService] },\n            { path: '2fa', component: TwoFactorComponent, canActivate: [UnauthGuardService] },\n            {\n                path: 'register', component: RegisterComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'createAccount' },\n            },\n            {\n                path: 'sso', component: SsoComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'enterpriseSingleSignOn' },\n            },\n            {\n                path: 'set-password', component: SetPasswordComponent,\n                data: { titleId: 'setMasterPassword' },\n            },\n            {\n                path: 'hint', component: HintComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'passwordHint' },\n            },\n            {\n                path: 'lock',\n                component: LockComponent,\n                canActivate: [LockGuardService],\n            },\n            { path: 'verify-email', component: VerifyEmailTokenComponent },\n            {\n                path: 'accept-organization',\n                component: AcceptOrganizationComponent,\n                data: { titleId: 'joinOrganization' },\n            },\n            {\n                path: 'accept-emergency',\n                component: AcceptEmergencyComponent,\n                data: { titleId: 'acceptEmergency' },\n            },\n            { path: 'recover', pathMatch: 'full', redirectTo: 'recover-2fa' },\n            {\n                path: 'recover-2fa',\n                component: RecoverTwoFactorComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'recoverAccountTwoStep' },\n            },\n            {\n                path: 'recover-delete',\n                component: RecoverDeleteComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'deleteAccount' },\n            },\n            {\n                path: 'verify-recover-delete',\n                component: VerifyRecoverDeleteComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'deleteAccount' },\n            },\n            {\n                path: 'send/:sendId/:key',\n                component: AccessComponent,\n                data: { title: 'Bitwarden Send' },\n            },\n        ],\n    },\n    {\n        path: '',\n        component: UserLayoutComponent,\n        canActivate: [AuthGuardService],\n        children: [\n            { path: 'vault', component: VaultComponent, data: { titleId: 'myVault' } },\n            { path: 'sends', component: SendComponent, data: { title: 'Send' } },\n            {\n                path: 'settings',\n                component: SettingsComponent,\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'account' },\n                    { path: 'account', component: AccountComponent, data: { titleId: 'myAccount' } },\n                    { path: 'options', component: OptionsComponent, data: { titleId: 'options' } },\n                    { path: 'domain-rules', component: DomainRulesComponent, data: { titleId: 'domainRules' } },\n                    { path: 'two-factor', component: TwoFactorSetupComponent, data: { titleId: 'twoStepLogin' } },\n                    { path: 'premium', component: PremiumComponent, data: { titleId: 'goPremium' } },\n                    { path: 'billing', component: UserBillingComponent, data: { titleId: 'billing' } },\n                    {\n                        path: 'subscription',\n                        component: UserSubscriptionComponent,\n                        data: { titleId: 'premiumMembership' },\n                    },\n                    { path: 'organizations', component: OrganizationsComponent, data: { titleId: 'organizations' } },\n                    {\n                        path: 'create-organization',\n                        component: CreateOrganizationComponent,\n                        data: { titleId: 'newOrganization' },\n                    },\n                    {\n                        path: 'emergency-access',\n                        children: [\n                            {\n                                path: '',\n                                component: EmergencyAccessComponent,\n                                data: { titleId: 'emergencyAccess' },\n                            },\n                            {\n                                path: ':id',\n                                component: EmergencyAccessViewComponent,\n                                data: { titleId: 'emergencyAccess' },\n                            },\n                        ],\n                    },\n                ],\n            },\n            {\n                path: 'tools',\n                component: ToolsComponent,\n                canActivate: [AuthGuardService],\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'generator' },\n                    { path: 'import', component: ImportComponent, data: { titleId: 'importData' } },\n                    { path: 'export', component: ExportComponent, data: { titleId: 'exportVault' } },\n                    {\n                        path: 'generator',\n                        component: PasswordGeneratorComponent,\n                        data: { titleId: 'passwordGenerator' },\n                    },\n                    { path: 'breach-report', component: BreachReportComponent, data: { titleId: 'dataBreachReport' } },\n                    {\n                        path: 'reused-passwords-report',\n                        component: ReusedPasswordsReportComponent,\n                        data: { titleId: 'reusedPasswordsReport' },\n                    },\n                    {\n                        path: 'unsecured-websites-report',\n                        component: UnsecuredWebsitesReportComponent,\n                        data: { titleId: 'unsecuredWebsitesReport' },\n                    },\n                    {\n                        path: 'weak-passwords-report',\n                        component: WeakPasswordsReportComponent,\n                        data: { titleId: 'weakPasswordsReport' },\n                    },\n                    {\n                        path: 'exposed-passwords-report',\n                        component: ExposedPasswordsReportComponent,\n                        data: { titleId: 'exposedPasswordsReport' },\n                    },\n                    {\n                        path: 'inactive-two-factor-report',\n                        component: InactiveTwoFactorReportComponent,\n                        data: { titleId: 'inactive2faReport' },\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        path: 'organizations/:organizationId',\n        component: OrganizationLayoutComponent,\n        canActivate: [AuthGuardService, OrganizationGuardService],\n        children: [\n            { path: '', pathMatch: 'full', redirectTo: 'vault' },\n            { path: 'vault', component: OrgVaultComponent, data: { titleId: 'vault' } },\n            {\n                path: 'tools',\n                component: OrgToolsComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: { permissions: [Permissions.AccessImportExport, Permissions.AccessReports] },\n                children: [\n                    {\n                        path: '',\n                        pathMatch: 'full',\n                        redirectTo: 'import',\n                    },\n                    {\n                        path: 'import',\n                        component: OrgImportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'importData',\n                            permissions: [Permissions.AccessImportExport],\n                        },\n                    },\n                    {\n                        path: 'export',\n                        component: OrgExportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'exportVault',\n                            permissions: [Permissions.AccessImportExport],\n                        },\n                    },\n                    {\n                        path: 'exposed-passwords-report',\n                        component: OrgExposedPasswordsReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'exposedPasswordsReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                    {\n                        path: 'inactive-two-factor-report',\n                        component: OrgInactiveTwoFactorReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'inactive2faReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                    {\n                        path: 'reused-passwords-report',\n                        component: OrgReusedPasswordsReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'reusedPasswordsReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                    {\n                        path: 'unsecured-websites-report',\n                        component: OrgUnsecuredWebsitesReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'unsecuredWebsitesReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                    {\n                        path: 'weak-passwords-report',\n                        component: OrgWeakPasswordsReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'weakPasswordsReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                ],\n            },\n            {\n                path: 'manage',\n                component: OrgManageComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: {\n                    permissions: [\n                        Permissions.ManageAssignedCollections,\n                        Permissions.ManageAllCollections,\n                        Permissions.AccessEventLogs,\n                        Permissions.ManageGroups,\n                        Permissions.ManageUsers,\n                        Permissions.ManagePolicies,\n                    ],\n                },\n                children: [\n                    {\n                        path: '',\n                        pathMatch: 'full',\n                        redirectTo: 'people',\n                    },\n                    {\n                        path: 'collections',\n                        component: OrgManageCollectionsComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'collections',\n                            permissions: [Permissions.ManageAssignedCollections, Permissions.ManageAllCollections],\n                        },\n                    },\n                    {\n                        path: 'events',\n                        component: OrgEventsComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'eventLogs',\n                            permissions: [Permissions.AccessEventLogs],\n                        },\n                    },\n                    {\n                        path: 'groups',\n                        component: OrgGroupsComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'groups',\n                            permissions: [Permissions.ManageGroups],\n                        },\n                    },\n                    {\n                        path: 'people',\n                        component: OrgPeopleComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'people',\n                            permissions: [Permissions.ManageUsers, Permissions.ManageUsersPassword],\n                        },\n                    },\n                    {\n                        path: 'policies',\n                        component: OrgPoliciesComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'policies',\n                            permissions: [Permissions.ManagePolicies],\n                        },\n                    },\n                ],\n            },\n            {\n                path: 'settings',\n                component: OrgSettingsComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: { permissions: [Permissions.ManageOrganization] },\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'account' },\n                    { path: 'account', component: OrgAccountComponent, data: { titleId: 'myOrganization' } },\n                    { path: 'two-factor', component: OrgTwoFactorSetupComponent, data: { titleId: 'twoStepLogin' } },\n                    {\n                        path: 'billing',\n                        component: OrganizationBillingComponent,\n                        data: { titleId: 'billing' },\n                    },\n                    {\n                        path: 'subscription',\n                        component: OrganizationSubscriptionComponent,\n                        data: { titleId: 'subscription' },\n                    },\n                ],\n            },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {\n        useHash: true,\n        paramsInheritanceStrategy: 'always',\n        /*enableTracing: true,*/\n    })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { BroadcasterService as BroadcasterServiceAbstraction } from '../abstractions/broadcaster.service';\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n    subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n    send(message: any, id?: string) {\n        if (id != null) {\n            if (this.subscribers.has(id)) {\n                this.subscribers.get(id)(message);\n            }\n            return;\n        }\n\n        this.subscribers.forEach(value => {\n            value(message);\n        });\n    }\n\n    subscribe(id: string, messageCallback: (message: any) => any) {\n        this.subscribers.set(id, messageCallback);\n    }\n\n    unsubscribe(id: string) {\n        if (this.subscribers.has(id)) {\n            this.subscribers.delete(id);\n        }\n    }\n}\n","export function getDomain(host: string): string | null {\n    return null;\n}\n\nexport function isValid(host: string): boolean {\n    return true;\n}\n","export class EmergencyAccessAcceptRequest {\n    token: string;\n}\n","export class OrganizationUserAcceptRequest {\n    token: string;\n}\n","import { Router } from '@angular/router';\n\nimport { PasswordHintRequest } from 'jslib-common/models/request/passwordHintRequest';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nexport class HintComponent {\n    email: string = '';\n    formPromise: Promise<any>;\n\n    protected successRoute = 'login';\n    protected onSuccessfulSubmit: () => void;\n\n    constructor(protected router: Router, protected i18nService: I18nService,\n        protected apiService: ApiService, protected platformUtilsService: PlatformUtilsService) { }\n\n    async submit() {\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n            await this.formPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('masterPassSent'));\n            if (this.onSuccessfulSubmit != null) {\n                this.onSuccessfulSubmit();\n            } else if (this.router != null) {\n                this.router.navigate([this.successRoute]);\n            }\n        } catch { }\n    }\n}\n","export class PasswordHintRequest {\n    email: string;\n\n    constructor(email: string) {\n        this.email = email;\n    }\n}\n","import { Directive, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { HashPurpose } from 'jslib-common/enums/hashPurpose';\n\n@Directive()\nexport class LockComponent implements OnInit {\n    masterPassword: string = '';\n    pin: string = '';\n    showPassword: boolean = false;\n    email: string;\n    pinLock: boolean = false;\n    webVaultHostname: string = '';\n    formPromise: Promise<any>;\n    supportsBiometric: boolean;\n    biometricLock: boolean;\n    biometricText: string;\n\n    protected successRoute: string = 'vault';\n    protected onSuccessfulSubmit: () => void;\n\n    private invalidPinAttempts = 0;\n    private pinSet: [boolean, boolean];\n\n    constructor(protected router: Router, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected messagingService: MessagingService,\n        protected userService: UserService, protected cryptoService: CryptoService,\n        protected storageService: StorageService, protected vaultTimeoutService: VaultTimeoutService,\n        protected environmentService: EnvironmentService, protected stateService: StateService,\n        protected apiService: ApiService) { }\n\n    async ngOnInit() {\n        this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n        this.pinLock = (this.pinSet[0] && this.vaultTimeoutService.pinProtectedKey != null) || this.pinSet[1];\n        this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n        this.biometricLock = await this.vaultTimeoutService.isBiometricLockSet() &&\n            (await this.cryptoService.hasKeyStored('biometric') || !this.platformUtilsService.supportsSecureStorage());\n        this.biometricText = await this.storageService.get(ConstantsService.biometricText);\n        this.email = await this.userService.getEmail();\n        let vaultUrl = this.environmentService.getWebVaultUrl();\n        if (vaultUrl == null) {\n            vaultUrl = 'https://bitwarden.com';\n        }\n        this.webVaultHostname = Utils.getHostname(vaultUrl);\n    }\n\n    async submit() {\n        if (this.pinLock && (this.pin == null || this.pin === '')) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('pinRequired'));\n            return;\n        }\n        if (!this.pinLock && (this.masterPassword == null || this.masterPassword === '')) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const kdf = await this.userService.getKdf();\n        const kdfIterations = await this.userService.getKdfIterations();\n\n        if (this.pinLock) {\n            let failed = true;\n            try {\n                if (this.pinSet[0]) {\n                    const key = await this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfIterations,\n                        this.vaultTimeoutService.pinProtectedKey);\n                    const encKey = await this.cryptoService.getEncKey(key);\n                    const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n                    const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n                    failed = decPin !== this.pin;\n                    if (!failed) {\n                        await this.setKeyAndContinue(key);\n                    }\n                } else {\n                    const key = await this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfIterations);\n                    failed = false;\n                    await this.setKeyAndContinue(key);\n                }\n            } catch {\n                failed = true;\n            }\n\n            if (failed) {\n                this.invalidPinAttempts++;\n                if (this.invalidPinAttempts >= 5) {\n                    this.messagingService.send('logout');\n                    return;\n                }\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('invalidPin'));\n            }\n        } else {\n            const key = await this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfIterations);\n            const storedKeyHash = await this.cryptoService.getKeyHash();\n\n            let passwordValid = false;\n\n            if (storedKeyHash != null) {\n                passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n            } else {\n                const request = new PasswordVerificationRequest();\n                const serverKeyHash = await this.cryptoService.hashPassword(this.masterPassword, key,\n                    HashPurpose.ServerAuthorization);\n                request.masterPasswordHash = serverKeyHash;\n                try {\n                    this.formPromise = this.apiService.postAccountVerifyPassword(request);\n                    await this.formPromise;\n                    passwordValid = true;\n                    const localKeyHash = await this.cryptoService.hashPassword(this.masterPassword, key,\n                        HashPurpose.LocalAuthorization);\n                    await this.cryptoService.setKeyHash(localKeyHash);\n                } catch { }\n            }\n\n            if (passwordValid) {\n                if (this.pinSet[0]) {\n                    const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n                    const encKey = await this.cryptoService.getEncKey(key);\n                    const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n                    const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n                    this.vaultTimeoutService.pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\n                }\n                this.setKeyAndContinue(key);\n            } else {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('invalidMasterPassword'));\n            }\n        }\n    }\n\n    async logOut() {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'),\n            this.i18nService.t('logOut'), this.i18nService.t('logOut'), this.i18nService.t('cancel'));\n        if (confirmed) {\n            this.messagingService.send('logout');\n        }\n    }\n\n    async unlockBiometric() {\n        if (!this.biometricLock) {\n            return;\n        }\n\n        const success = (await this.cryptoService.getKey('biometric')) != null;\n\n        if (success) {\n            await this.doContinue();\n        }\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById(this.pinLock ? 'pin' : 'masterPassword').focus();\n    }\n\n    private async setKeyAndContinue(key: SymmetricCryptoKey) {\n        await this.cryptoService.setKey(key);\n        this.doContinue();\n    }\n\n    private async doContinue() {\n        this.vaultTimeoutService.biometricLocked = false;\n        this.vaultTimeoutService.everBeenUnlocked = true;\n        const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n        this.messagingService.send('unlocked');\n        if (this.onSuccessfulSubmit != null) {\n            this.onSuccessfulSubmit();\n        } else if (this.router != null) {\n            this.router.navigate([this.successRoute]);\n        }\n    }\n}\n","import {\n    Directive,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport { AuthResult } from 'jslib-common/models/domain/authResult';\n\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nconst Keys = {\n    rememberedEmail: 'rememberedEmail',\n    rememberEmail: 'rememberEmail',\n};\n\n@Directive()\nexport class LoginComponent implements OnInit {\n    @Input() email: string = '';\n    @Input() rememberEmail = true;\n\n    masterPassword: string = '';\n    showPassword: boolean = false;\n    formPromise: Promise<AuthResult>;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n    onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n\n    protected twoFactorRoute = '2fa';\n    protected successRoute = 'vault';\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        protected stateService: StateService, protected environmentService: EnvironmentService,\n        protected passwordGenerationService: PasswordGenerationService,\n        protected cryptoFunctionService: CryptoFunctionService, private storageService: StorageService) { }\n\n    async ngOnInit() {\n        if (this.email == null || this.email === '') {\n            this.email = await this.storageService.get<string>(Keys.rememberedEmail);\n            if (this.email == null) {\n                this.email = '';\n            }\n        }\n        this.rememberEmail = await this.storageService.get<boolean>(Keys.rememberEmail);\n        if (this.rememberEmail == null) {\n            this.rememberEmail = true;\n        }\n        if (Utils.isBrowser && !Utils.isNode) {\n            this.focusInput();\n        }\n    }\n\n    async submit() {\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.authService.logIn(this.email, this.masterPassword);\n            const response = await this.formPromise;\n            await this.storageService.save(Keys.rememberEmail, this.rememberEmail);\n            if (this.rememberEmail) {\n                await this.storageService.save(Keys.rememberedEmail, this.email);\n            } else {\n                await this.storageService.remove(Keys.rememberedEmail);\n            }\n            if (response.twoFactor) {\n                if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n                    this.onSuccessfulLoginTwoFactorNavigate();\n                } else {\n                    this.router.navigate([this.twoFactorRoute]);\n                }\n            } else {\n                const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n                await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n                if (this.onSuccessfulLogin != null) {\n                    this.onSuccessfulLogin();\n                }\n                if (this.onSuccessfulLoginNavigate != null) {\n                    this.onSuccessfulLoginNavigate();\n                } else {\n                    this.router.navigate([this.successRoute]);\n                }\n            }\n        } catch { }\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('masterPassword').focus();\n    }\n\n    async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n        // Generate necessary sso params\n        const passwordOptions: any = {\n            type: 'password',\n            length: 64,\n            uppercase: true,\n            lowercase: true,\n            numbers: true,\n            special: false,\n        };\n        const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n        const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n        const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, 'sha256');\n        const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n        // Save sso params\n        await this.storageService.save(ConstantsService.ssoStateKey, state);\n        await this.storageService.save(ConstantsService.ssoCodeVerifierKey, ssoCodeVerifier);\n\n        // Build URI\n        const webUrl = this.environmentService.getWebVaultUrl() == null ? 'https://vault.bitwarden.com' :\n            this.environmentService.getWebVaultUrl();\n\n        // Launch browser\n        this.platformUtilsService.launchUri(webUrl + '/#/sso?clientId=' + clientId +\n            '&redirectUri=' + encodeURIComponent(ssoRedirectUri) +\n            '&state=' + state + '&codeChallenge=' + codeChallenge);\n    }\n\n    protected focusInput() {\n        document.getElementById(this.email == null || this.email === '' ? 'email' : 'masterPassword').focus();\n    }\n}\n","export class DeleteRecoverRequest {\n    email: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class TwoFactorRecoveryRequest extends PasswordVerificationRequest {\n    recoveryCode: string;\n    email: string;\n}\n","import { Router } from '@angular/router';\n\nimport { KeysRequest } from 'jslib-common/models/request/keysRequest';\nimport { ReferenceEventRequest } from 'jslib-common/models/request/referenceEventRequest';\nimport { RegisterRequest } from 'jslib-common/models/request/registerRequest';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\n\nimport { KdfType } from 'jslib-common/enums/kdfType';\n\nexport class RegisterComponent {\n    name: string = '';\n    email: string = '';\n    masterPassword: string = '';\n    confirmMasterPassword: string = '';\n    hint: string = '';\n    showPassword: boolean = false;\n    formPromise: Promise<any>;\n    masterPasswordScore: number;\n    referenceData: ReferenceEventRequest;\n    showTerms = true;\n    acceptPolicies: boolean = false;\n\n    protected successRoute = 'login';\n    private masterPasswordStrengthTimeout: any;\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected cryptoService: CryptoService,\n        protected apiService: ApiService, protected stateService: StateService,\n        protected platformUtilsService: PlatformUtilsService,\n        protected passwordGenerationService: PasswordGenerationService) {\n        this.showTerms = !platformUtilsService.isSelfHost();\n    }\n\n    get masterPasswordScoreWidth() {\n        return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n    }\n\n    get masterPasswordScoreColor() {\n        switch (this.masterPasswordScore) {\n            case 4:\n                return 'success';\n            case 3:\n                return 'primary';\n            case 2:\n                return 'warning';\n            default:\n                return 'danger';\n        }\n    }\n\n    get masterPasswordScoreText() {\n        switch (this.masterPasswordScore) {\n            case 4:\n                return this.i18nService.t('strong');\n            case 3:\n                return this.i18nService.t('good');\n            case 2:\n                return this.i18nService.t('weak');\n            default:\n                return this.masterPasswordScore != null ? this.i18nService.t('weak') : null;\n        }\n    }\n\n    async submit() {\n        if (!this.acceptPolicies && this.showTerms) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('acceptPoliciesError'));\n            return;\n        }\n\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n        if (this.masterPassword.length < 8) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return;\n        }\n        if (this.masterPassword !== this.confirmMasterPassword) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassDoesntMatch'));\n            return;\n        }\n\n        const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n            this.getPasswordStrengthUserInput());\n        if (strengthResult != null && strengthResult.score < 3) {\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\n                'warning');\n            if (!result) {\n                return;\n            }\n        }\n\n        if (this.hint === this.masterPassword) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('hintEqualsPassword'));\n            return;\n        }\n\n        this.name = this.name === '' ? null : this.name;\n        this.email = this.email.trim().toLowerCase();\n        const kdf = KdfType.PBKDF2_SHA256;\n        const useLowerKdf = this.platformUtilsService.isIE();\n        const kdfIterations = useLowerKdf ? 10000 : 100000;\n        const key = await this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfIterations);\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const hashedPassword = await this.cryptoService.hashPassword(this.masterPassword, key);\n        const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n        const request = new RegisterRequest(this.email, this.name, hashedPassword,\n            this.hint, encKey[1].encryptedString, kdf, kdfIterations, this.referenceData);\n        request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n        const orgInvite = await this.stateService.get<any>('orgInvitation');\n        if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n            request.token = orgInvite.token;\n            request.organizationUserId = orgInvite.organizationUserId;\n        }\n\n        try {\n            this.formPromise = this.apiService.postRegister(request);\n            await this.formPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('newAccountCreated'));\n            this.router.navigate([this.successRoute], { queryParams: { email: this.email } });\n        } catch { }\n    }\n\n    togglePassword(confirmField: boolean) {\n        this.showPassword = !this.showPassword;\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\n    }\n\n    updatePasswordStrength() {\n        if (this.masterPasswordStrengthTimeout != null) {\n            clearTimeout(this.masterPasswordStrengthTimeout);\n        }\n        this.masterPasswordStrengthTimeout = setTimeout(() => {\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n                this.getPasswordStrengthUserInput());\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n        }, 300);\n    }\n\n    private getPasswordStrengthUserInput() {\n        let userInput: string[] = [];\n        const atPosition = this.email.indexOf('@');\n        if (atPosition > -1) {\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\n        }\n        if (this.name != null && this.name !== '') {\n            userInput = userInput.concat(this.name.trim().toLowerCase().split(' '));\n        }\n        return userInput;\n    }\n}\n","import { KeysRequest } from './keysRequest';\nimport { ReferenceEventRequest } from './referenceEventRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class RegisterRequest {\n    name: string;\n    email: string;\n    masterPasswordHash: string;\n    masterPasswordHint: string;\n    key: string;\n    keys: KeysRequest;\n    token: string;\n    organizationUserId: string;\n    kdf: KdfType;\n    kdfIterations: number;\n    referenceData: ReferenceEventRequest;\n\n    constructor(email: string, name: string, masterPasswordHash: string, masterPasswordHint: string, key: string,\n        kdf: KdfType, kdfIterations: number, referenceData: ReferenceEventRequest) {\n        this.name = name;\n        this.email = email;\n        this.masterPasswordHash = masterPasswordHash;\n        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n        this.key = key;\n        this.kdf = kdf;\n        this.kdfIterations = kdfIterations;\n        this.referenceData = referenceData;\n    }\n}\n","export class ReferenceEventRequest {\n    id: string;\n    layout: string;\n    flow: string;\n}\n","import { Directive } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { KeysRequest } from 'jslib-common/models/request/keysRequest';\nimport { SetPasswordRequest } from 'jslib-common/models/request/setPasswordRequest';\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from './change-password.component';\n\nimport { HashPurpose } from 'jslib-common/enums/hashPurpose';\nimport { KdfType } from 'jslib-common/enums/kdfType';\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n    syncLoading: boolean = true;\n    showPassword: boolean = false;\n    hint: string = '';\n    identifier: string = null;\n\n    onSuccessfulChangePassword: () => Promise<any>;\n    successRoute = 'vault';\n\n    constructor(i18nService: I18nService, cryptoService: CryptoService, messagingService: MessagingService,\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService, private router: Router,\n        private apiService: ApiService, private syncService: SyncService, private route: ActivatedRoute) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    async ngOnInit() {\n        await this.syncService.fullSync(true);\n        this.syncLoading = false;\n\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.identifier != null) {\n                this.identifier = qParams.identifier;\n            }\n\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n\n        super.ngOnInit();\n    }\n\n    async setupSubmitActions() {\n        this.kdf = KdfType.PBKDF2_SHA256;\n        const useLowerKdf = this.platformUtilsService.isIE();\n        this.kdfIterations = useLowerKdf ? 10000 : 100000;\n        return true;\n    }\n\n    async performSubmitActions(masterPasswordHash: string, key: SymmetricCryptoKey,\n        encKey: [SymmetricCryptoKey, EncString]) {\n        const request = new SetPasswordRequest();\n        request.masterPasswordHash = masterPasswordHash;\n        request.key = encKey[1].encryptedString;\n        request.masterPasswordHint = this.hint;\n        request.kdf = this.kdf;\n        request.kdfIterations = this.kdfIterations;\n        request.orgIdentifier = this.identifier;\n\n        const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n        request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n\n        try {\n            this.formPromise = this.apiService.setPassword(request);\n            await this.formPromise;\n\n            await this.userService.setInformation(await this.userService.getUserId(), await this.userService.getEmail(),\n                this.kdf, this.kdfIterations);\n            await this.cryptoService.setKey(key);\n            await this.cryptoService.setEncKey(encKey[1].encryptedString);\n            await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n            const localKeyHash = await this.cryptoService.hashPassword(this.masterPassword, key,\n                HashPurpose.LocalAuthorization);\n            await this.cryptoService.setKeyHash(localKeyHash);\n\n            if (this.onSuccessfulChangePassword != null) {\n                this.onSuccessfulChangePassword();\n            } else {\n                this.router.navigate([this.successRoute]);\n            }\n        } catch {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n    }\n\n    togglePassword(confirmField: boolean) {\n        this.showPassword = !this.showPassword;\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\n    }\n}\n","import { KeysRequest } from './keysRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class SetPasswordRequest {\n    masterPasswordHash: string;\n    key: string;\n    masterPasswordHint: string;\n    keys: KeysRequest;\n    kdf: KdfType;\n    kdfIterations: number;\n    orgIdentifier: string;\n}\n","import {\n    Directive,\n    EventEmitter,\n    OnInit,\n    Output,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n    @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n    @Output() onRecoverSelected = new EventEmitter();\n\n    providers: any[] = [];\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected win: Window) { }\n\n    ngOnInit() {\n        this.providers = this.authService.getSupportedTwoFactorProviders(this.win);\n    }\n\n    choose(p: any) {\n        this.onProviderSelected.emit(p.type);\n    }\n\n    recover() {\n        this.platformUtilsService.launchUri('https://help.bitwarden.com/article/lost-two-step-device/');\n        this.onRecoverSelected.emit();\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    EventEmitter,\n    OnDestroy,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\n\n@Component({\n    selector: 'app-modal',\n    template: `<ng-template #container></ng-template>`,\n})\nexport class ModalComponent implements OnDestroy {\n    @Output() onClose = new EventEmitter();\n    @Output() onClosed = new EventEmitter();\n    @Output() onShow = new EventEmitter();\n    @Output() onShown = new EventEmitter();\n    @ViewChild('container', { read: ViewContainerRef, static: true }) container: ViewContainerRef;\n    parentContainer: ViewContainerRef = null;\n    fade: boolean = true;\n\n    constructor(protected componentFactoryResolver: ComponentFactoryResolver,\n        protected messagingService: MessagingService) { }\n\n    ngOnDestroy() {\n        document.body.classList.remove('modal-open');\n        document.body.removeChild(document.querySelector('.modal-backdrop'));\n    }\n\n    show<T>(type: Type<T>, parentContainer: ViewContainerRef, fade: boolean = true,\n        setComponentParameters: (component: T) => void = null): T {\n        this.onShow.emit();\n        this.messagingService.send('modalShow');\n        this.parentContainer = parentContainer;\n        this.fade = fade;\n\n        document.body.classList.add('modal-open');\n        const backdrop = document.createElement('div');\n        backdrop.className = 'modal-backdrop' + (this.fade ? ' fade' : '');\n        document.body.appendChild(backdrop);\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory<T>(type);\n        const componentRef = this.container.createComponent<T>(factory);\n        if (setComponentParameters != null) {\n            setComponentParameters(componentRef.instance);\n        }\n\n        document.querySelector('.modal-dialog').addEventListener('click', (e: Event) => {\n            e.stopPropagation();\n        });\n\n        const modals = Array.from(document.querySelectorAll('.modal, .modal *[data-dismiss=\"modal\"]'));\n        for (const closeElement of modals) {\n            closeElement.addEventListener('click', event => {\n                this.close();\n            });\n        }\n\n        this.onShown.emit();\n        this.messagingService.send('modalShown');\n        return componentRef.instance;\n    }\n\n    close() {\n        this.onClose.emit();\n        this.messagingService.send('modalClose');\n        this.onClosed.emit();\n        this.messagingService.send('modalClosed');\n        if (this.parentContainer != null) {\n            this.parentContainer.clear();\n        }\n    }\n}\n","import { Directive, OnDestroy, OnInit } from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorEmailRequest } from 'jslib-common/models/request/twoFactorEmailRequest';\n\nimport { AuthResult } from 'jslib-common/models/domain';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { TwoFactorProviders } from 'jslib-common/services/auth.service';\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport * as DuoWebSDK from 'duo_web_sdk';\nimport { WebAuthn } from 'jslib-common/misc/webauthn';\n\n@Directive()\nexport class TwoFactorComponent implements OnInit, OnDestroy {\n    token: string = '';\n    remember: boolean = false;\n    webAuthnReady: boolean = false;\n    webAuthnNewTab: boolean = false;\n    providers = TwoFactorProviders;\n    providerType = TwoFactorProviderType;\n    selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n    webAuthnSupported: boolean = false;\n    webAuthn: WebAuthn = null;\n    title: string = '';\n    twoFactorEmail: string = null;\n    formPromise: Promise<any>;\n    emailPromise: Promise<any>;\n    identifier: string = null;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n\n    protected loginRoute = 'login';\n    protected successRoute = 'vault';\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected apiService: ApiService,\n        protected platformUtilsService: PlatformUtilsService, protected win: Window,\n        protected environmentService: EnvironmentService, protected stateService: StateService,\n        protected storageService: StorageService, protected route: ActivatedRoute) {\n        this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n    }\n\n    async ngOnInit() {\n        if (!this.authing || this.authService.twoFactorProvidersData == null) {\n            this.router.navigate([this.loginRoute]);\n            return;\n        }\n\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.identifier != null) {\n                this.identifier = qParams.identifier;\n            }\n\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n\n        if (this.needsLock) {\n            this.successRoute = 'lock';\n        }\n\n        if (this.win != null && this.webAuthnSupported) {\n            let webVaultUrl = this.environmentService.getWebVaultUrl();\n            if (webVaultUrl == null) {\n                webVaultUrl = 'https://vault.bitwarden.com';\n            }\n            this.webAuthn = new WebAuthn(this.win, webVaultUrl, this.webAuthnNewTab, this.platformUtilsService,\n                this.i18nService, (token: string) => {\n                    this.token = token;\n                    this.submit();\n                }, (error: string) => {\n                    this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), error);\n                }, (info: string) => {\n                    if (info === 'ready') {\n                        this.webAuthnReady = true;\n                    }\n                }\n            );\n        }\n\n        this.selectedProviderType = this.authService.getDefaultTwoFactorProvider(this.webAuthnSupported);\n        await this.init();\n    }\n\n    ngOnDestroy(): void {\n        this.cleanupWebAuthn();\n        this.webAuthn = null;\n    }\n\n    async init() {\n        if (this.selectedProviderType == null) {\n            this.title = this.i18nService.t('loginUnavailable');\n            return;\n        }\n\n        this.cleanupWebAuthn();\n        this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n        const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);\n        switch (this.selectedProviderType) {\n            case TwoFactorProviderType.WebAuthn:\n                if (!this.webAuthnNewTab) {\n                    setTimeout(() => {\n                        this.authWebAuthn();\n                    }, 500);\n                }\n                break;\n            case TwoFactorProviderType.Duo:\n            case TwoFactorProviderType.OrganizationDuo:\n                setTimeout(() => {\n                    DuoWebSDK.init({\n                        iframe: undefined,\n                        host: providerData.Host,\n                        sig_request: providerData.Signature,\n                        submit_callback: async (f: HTMLFormElement) => {\n                            const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n                            if (sig != null) {\n                                this.token = sig.value;\n                                await this.submit();\n                            }\n                        },\n                    });\n                }, 0);\n                break;\n            case TwoFactorProviderType.Email:\n                this.twoFactorEmail = providerData.Email;\n                if (this.authService.twoFactorProvidersData.size > 1) {\n                    await this.sendEmail(false);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    async submit() {\n        if (this.token == null || this.token === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('verificationCodeRequired'));\n            return;\n        }\n\n        if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n            if (this.webAuthn != null) {\n                this.webAuthn.stop();\n            } else {\n                return;\n            }\n        } else if (this.selectedProviderType === TwoFactorProviderType.Email ||\n            this.selectedProviderType === TwoFactorProviderType.Authenticator) {\n            this.token = this.token.replace(' ', '').trim();\n        }\n\n        try {\n            await this.doSubmit();\n        } catch {\n            if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n                this.webAuthn.start();\n            }\n        }\n    }\n\n    async doSubmit() {\n        this.formPromise = this.authService.logInTwoFactor(this.selectedProviderType, this.token, this.remember);\n        const response: AuthResult = await this.formPromise;\n        const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n            this.onSuccessfulLogin();\n        }\n        if (response.resetMasterPassword) {\n            this.successRoute = 'set-password';\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n            this.onSuccessfulLoginNavigate();\n        } else {\n            this.router.navigate([this.successRoute], {\n                queryParams: {\n                    identifier: this.identifier,\n                },\n            });\n        }\n    }\n\n    async sendEmail(doToast: boolean) {\n        if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n            return;\n        }\n\n        if (this.emailPromise != null) {\n            return;\n        }\n\n        try {\n            const request = new TwoFactorEmailRequest(this.authService.email, this.authService.masterPasswordHash);\n            this.emailPromise = this.apiService.postTwoFactorEmail(request);\n            await this.emailPromise;\n            if (doToast) {\n                this.platformUtilsService.showToast('success', null,\n                    this.i18nService.t('verificationCodeEmailSent', this.twoFactorEmail));\n            }\n        } catch { }\n\n        this.emailPromise = null;\n    }\n\n    authWebAuthn() {\n        const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);\n\n        if (!this.webAuthnSupported || this.webAuthn == null) {\n            return;\n        }\n\n        this.webAuthn.init(providerData);\n    }\n\n    private cleanupWebAuthn() {\n        if (this.webAuthn != null) {\n            this.webAuthn.stop();\n            this.webAuthn.cleanup();\n        }\n    }\n\n    get authing(): boolean {\n        return this.authService.authingWithPassword() || this.authService.authingWithSso() || this.authService.authingWithApiKey();\n    }\n\n    get needsLock(): boolean {\n        return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n    }\n}\n","import { DeviceType } from '../../enums/deviceType';\n\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nexport class DeviceRequest {\n    type: DeviceType;\n    name: string;\n    identifier: string;\n    pushToken?: string;\n\n    constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n        this.type = platformUtilsService.getDevice();\n        this.name = platformUtilsService.getDeviceString();\n        this.identifier = appId;\n        this.pushToken = null;\n    }\n}\n","export class PreloginRequest {\n    email: string;\n\n    constructor(email: string) {\n        this.email = email;\n    }\n}\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nimport { DeviceRequest } from './deviceRequest';\n\nexport class TokenRequest {\n    email: string;\n    masterPasswordHash: string;\n    code: string;\n    codeVerifier: string;\n    redirectUri: string;\n    clientId: string;\n    clientSecret: string;\n    token: string;\n    provider: TwoFactorProviderType;\n    remember: boolean;\n    device?: DeviceRequest;\n\n    constructor(credentials: string[], codes: string[], clientIdClientSecret: string[], provider: TwoFactorProviderType,\n        token: string, remember: boolean, device?: DeviceRequest) {\n        if (credentials != null && credentials.length > 1) {\n            this.email = credentials[0];\n            this.masterPasswordHash = credentials[1];\n        } else if (codes != null && codes.length > 2) {\n            this.code = codes[0];\n            this.codeVerifier = codes[1];\n            this.redirectUri = codes[2];\n        } else if (clientIdClientSecret != null && clientIdClientSecret.length > 1) {\n            this.clientId = clientIdClientSecret[0];\n            this.clientSecret = clientIdClientSecret[1];\n        }\n        this.token = token;\n        this.provider = provider;\n        this.remember = remember;\n        this.device = device != null ? device : null;\n    }\n\n    toIdentityToken(clientId: string) {\n        const obj: any = {\n            scope: 'api offline_access',\n            client_id: clientId,\n        };\n\n        if (this.clientSecret != null) {\n            obj.scope = clientId.startsWith('organization') ? 'api.organization' : 'api';\n            obj.grant_type = 'client_credentials';\n            obj.client_secret = this.clientSecret;\n        } else if (this.masterPasswordHash != null && this.email != null) {\n            obj.grant_type = 'password';\n            obj.username = this.email;\n            obj.password = this.masterPasswordHash;\n        } else if (this.code != null && this.codeVerifier != null && this.redirectUri != null) {\n            obj.grant_type = 'authorization_code';\n            obj.code = this.code;\n            obj.code_verifier = this.codeVerifier;\n            obj.redirect_uri = this.redirectUri;\n        } else {\n            throw new Error('must provide credentials or codes');\n        }\n\n        if (this.device) {\n            obj.deviceType = this.device.type;\n            obj.deviceIdentifier = this.device.identifier;\n            obj.deviceName = this.device.name;\n            // no push tokens for browser apps yet\n            // obj.devicePushToken = this.device.pushToken;\n        }\n\n        if (this.token && this.provider != null) {\n            obj.twoFactorToken = this.token;\n            obj.twoFactorProvider = this.provider;\n            obj.twoFactorRemember = this.remember ? '1' : '0';\n        }\n\n        return obj;\n    }\n\n    alterIdentityTokenHeaders(headers: Headers) {\n        if (this.clientSecret == null && this.masterPasswordHash != null && this.email != null) {\n            headers.set('Auth-Email', this.email);\n        }\n    }\n}\n","import { I18nService } from '../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\n\nexport class WebAuthn {\n    private iframe: HTMLIFrameElement = null;\n    private connectorLink: HTMLAnchorElement;\n    private parseFunction = this.parseMessage.bind(this);\n\n    constructor(private win: Window, private webVaultUrl: string, private webAuthnNewTab: boolean,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private successCallback: Function, private errorCallback: Function, private infoCallback: Function) {\n        this.connectorLink = win.document.createElement('a');\n    }\n\n    init(data: any): void {\n        const params = new URLSearchParams({\n            data: this.base64Encode(JSON.stringify(data)),\n            parent: encodeURIComponent(this.win.document.location.href),\n            btnText: encodeURIComponent(this.i18nService.t('webAuthnAuthenticate')),\n            v: '1',\n        });\n\n        if (this.webAuthnNewTab) {\n            // Firefox fallback which opens the webauthn page in a new tab\n            params.append('locale', this.i18nService.translationLocale);\n            this.platformUtilsService.launchUri(`${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`);\n        } else {\n            this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n            this.iframe = this.win.document.getElementById('webauthn_iframe') as HTMLIFrameElement;\n            this.iframe.allow = 'publickey-credentials-get ' + new URL(this.webVaultUrl).origin;\n            this.iframe.src = this.connectorLink.href;\n\n            this.win.addEventListener('message', this.parseFunction, false);\n        }\n    }\n\n    stop() {\n        this.sendMessage('stop');\n    }\n\n    start() {\n        this.sendMessage('start');\n    }\n\n    sendMessage(message: any) {\n        if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n            return;\n        }\n\n        this.iframe.contentWindow.postMessage(message, this.iframe.src);\n    }\n\n    base64Encode(str: string): string {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n            return String.fromCharCode(('0x' + p1) as any);\n        }));\n    }\n\n    cleanup() {\n        this.win.removeEventListener('message', this.parseFunction, false);\n    }\n\n    private parseMessage(event: MessageEvent) {\n        if (!this.validMessage(event)) {\n            return;\n        }\n\n        const parts: string[] = event.data.split('|');\n        if (parts[0] === 'success' && this.successCallback) {\n            this.successCallback(parts[1]);\n        } else if (parts[0] === 'error' && this.errorCallback) {\n            this.errorCallback(parts[1]);\n        } else if (parts[0] === 'info' && this.infoCallback) {\n            this.infoCallback(parts[1]);\n        }\n    }\n\n    private validMessage(event: MessageEvent) {\n        if (event.origin == null || event.origin === '' || event.origin !== (this.connectorLink as any).origin ||\n            event.data == null || typeof (event.data) !== 'string') {\n            return false;\n        }\n\n        return event.data.indexOf('success|') === 0 || event.data.indexOf('error|') === 0 ||\n            event.data.indexOf('info|') === 0;\n    }\n}\n","export class VerifyEmailRequest {\n    userId: string;\n    token: string;\n\n    constructor(userId: string, token: string) {\n        this.userId = userId;\n        this.token = token;\n    }\n}\n","export class VerifyDeleteRecoverRequest {\n    userId: string;\n    token: string;\n\n    constructor(userId: string, token: string) {\n        this.userId = userId;\n        this.token = token;\n    }\n}\n","import { EventType } from '../../enums/eventType';\n\nexport class EventView {\n    message: string;\n    humanReadableMessage: string;\n    appIcon: string;\n    appName: string;\n    userId: string;\n    userName: string;\n    userEmail: string;\n    date: string;\n    ip: string;\n    type: EventType;\n\n    constructor(data: Required<EventView>) {\n        this.message = data.message;\n        this.humanReadableMessage = data.humanReadableMessage;\n        this.appIcon = data.appIcon;\n        this.appName = data.appName;\n        this.userId = data.userId;\n        this.userName = data.userName;\n        this.userEmail = data.userEmail;\n        this.date = data.date;\n        this.ip = data.ip;\n        this.type = data.type;\n    }\n}\n","import { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class GroupRequest {\n    name: string;\n    accessAll: boolean;\n    externalId: string;\n    collections: SelectionReadOnlyRequest[] = [];\n}\n","export class OrganizationUserConfirmRequest {\n    key: string;\n}\n","type OrganizationUserBulkRequestEntry = {\n    id: string;\n    key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n    keys: OrganizationUserBulkRequestEntry[];\n\n    constructor(keys: OrganizationUserBulkRequestEntry[]) {\n        this.keys = keys;\n    }\n}\n","export class OrganizationUserResetPasswordRequest {\n    newMasterPasswordHash: string;\n    key: string;\n}\n","import { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class OrganizationUserInviteRequest {\n    emails: string[] = [];\n    type: OrganizationUserType;\n    accessAll: boolean;\n    collections: SelectionReadOnlyRequest[] = [];\n    permissions: PermissionsApi;\n}\n","import { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class OrganizationUserUpdateRequest {\n    type: OrganizationUserType;\n    accessAll: boolean;\n    collections: SelectionReadOnlyRequest[] = [];\n    permissions: PermissionsApi;\n}\n","export class OrganizationUserUpdateGroupsRequest {\n    groupIds: string[] = [];\n}\n","export abstract class AppIdService {\n    getAppId: () => Promise<string>;\n    getAnonymousAppId: () => Promise<string>;\n}\n","import { LogLevelType } from '../enums/logLevelType';\n\nexport abstract class LogService {\n    debug: (message: string) => void;\n    info: (message: string) => void;\n    warning: (message: string) => void;\n    error: (message: string) => void;\n    write: (level: LogLevelType, message: string) => void;\n    time: (label: string) => void;\n    timeEnd: (label: string) => [number, number];\n}\n","import { PolicyType } from '../../enums/policyType';\n\nexport class PolicyRequest {\n    type: PolicyType;\n    enabled: boolean;\n    data: any;\n}\n","import { OrganizationKeysRequest } from './organizationKeysRequest';\n\nexport class OrganizationUpdateRequest {\n    name: string;\n    identifier: string;\n    businessName: string;\n    billingEmail: string;\n    keys: OrganizationKeysRequest;\n}\n","export enum TransactionType {\n    Charge = 0,\n    Credit = 1,\n    PromotionalCredit = 2,\n    ReferralCredit = 3,\n    Refund = 4,\n}\n","export class VerifyBankRequest {\n    amount1: number;\n    amount2: number;\n}\n","export class BitPayInvoiceRequest {\n    userId: string;\n    organizationId: string;\n    credit: boolean;\n    amount: number;\n    returnUrl: string;\n    name: string;\n    email: string;\n}\n","import { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { OrganizationTaxInfoUpdateRequest } from '../request/organizationTaxInfoUpdateRequest';\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n    paymentMethodType: PaymentMethodType;\n    paymentToken: string;\n}\n","import { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { PlanType } from '../../enums/planType';\n\nimport { OrganizationKeysRequest } from './organizationKeysRequest';\n\nexport class OrganizationCreateRequest {\n    name: string;\n    businessName: string;\n    billingEmail: string;\n    planType: PlanType;\n    key: string;\n    keys: OrganizationKeysRequest;\n    paymentMethodType: PaymentMethodType;\n    paymentToken: string;\n    additionalSeats: number;\n    additionalStorageGb: number;\n    premiumAccessAddon: boolean;\n    collectionName: string;\n    taxIdNumber: string;\n    billingAddressLine1: string;\n    billingAddressLine2: string;\n    billingAddressCity: string;\n    billingAddressState: string;\n    billingAddressPostalCode: string;\n    billingAddressCountry: string;\n}\n","import { PlanType } from '../../enums/planType';\n\nimport { OrganizationKeysRequest } from './organizationKeysRequest';\n\nexport class OrganizationUpgradeRequest {\n    businessName: string;\n    planType: PlanType;\n    additionalSeats: number;\n    additionalStorageGb: number;\n    premiumAccessAddon: boolean;\n    billingAddressCountry: string;\n    billingAddressPostalCode: string;\n    keys: OrganizationKeysRequest;\n}\n","export class SeatRequest {\n    seatAdjustment: number;\n}\n","export class StorageRequest {\n    storageGbAdjustment: number;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorDuoRequest extends PasswordVerificationRequest {\n    integrationKey: string;\n    secretKey: string;\n    host: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class TwoFactorProviderRequest extends PasswordVerificationRequest {\n    type: TwoFactorProviderType;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorAuthenticatorRequest extends PasswordVerificationRequest {\n    token: string;\n    key: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorEmailRequest extends PasswordVerificationRequest {\n    token: string;\n    email: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends PasswordVerificationRequest {\n    id: number;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorWebAuthnRequest extends PasswordVerificationRequest {\n    deviceResponse: PublicKeyCredential;\n    name: string;\n    id: number;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorYubioOtpRequest extends PasswordVerificationRequest {\n    key1: string;\n    key2: string;\n    key3: string;\n    key4: string;\n    key5: string;\n    nfc: boolean;\n}\n","import {\n    Directive,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { EventType } from 'jslib-common/enums/eventType';\nimport { HashPurpose } from 'jslib-common/enums/hashPurpose';\n\n@Directive()\nexport class ExportComponent {\n    @Output() onSaved = new EventEmitter();\n\n    formPromise: Promise<string>;\n    masterPassword: string;\n    format: 'json' | 'encrypted_json' | 'csv' = 'json';\n    showPassword = false;\n\n    constructor(protected cryptoService: CryptoService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected exportService: ExportService,\n        protected eventService: EventService, protected win: Window) { }\n\n    get encryptedFormat() {\n        return this.format === 'encrypted_json';\n    }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidMasterPassword'));\n            return;\n        }\n\n        const acceptedWarning = await this.warningDialog();\n        if (!acceptedWarning) {\n            return;\n        }\n\n        const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null);\n        if (passwordValid) {\n            try {\n                this.formPromise = this.getExportData();\n                const data = await this.formPromise;\n                this.downloadFile(data);\n                this.saved();\n                await this.collectEvent();\n            } catch { }\n        } else {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidMasterPassword'));\n        }\n    }\n\n    async warningDialog() {\n        if (this.encryptedFormat) {\n            return await this.platformUtilsService.showDialog(\n                '<p>' + this.i18nService.t('encExportKeyWarningDesc') +\n                '<p>' + this.i18nService.t('encExportAccountWarningDesc'),\n                this.i18nService.t('confirmVaultExport'), this.i18nService.t('exportVault'),\n                this.i18nService.t('cancel'), 'warning',\n                true);\n        } else {\n            return await this.platformUtilsService.showDialog(\n                this.i18nService.t('exportWarningDesc'),\n                this.i18nService.t('confirmVaultExport'), this.i18nService.t('exportVault'),\n                this.i18nService.t('cancel'), 'warning');\n        }\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('masterPassword').focus();\n    }\n\n    protected saved() {\n        this.onSaved.emit();\n    }\n\n    protected getExportData() {\n        return this.exportService.getExport(this.format);\n    }\n\n    protected getFileName(prefix?: string) {\n        let extension = this.format;\n        if (this.format === 'encrypted_json') {\n            if (prefix == null) {\n                prefix = 'encrypted';\n            } else {\n                prefix = 'encrypted_' + prefix;\n            }\n            extension = 'json';\n        }\n        return this.exportService.getFileName(prefix, extension);\n    }\n\n    protected async collectEvent(): Promise<any> {\n        await this.eventService.collect(EventType.User_ClientExportedVault);\n    }\n\n    private downloadFile(csv: string): void {\n        const fileName = this.getFileName();\n        this.platformUtilsService.saveFile(this.win, csv, { type: 'text/plain' }, fileName);\n    }\n}\n","export class AttachmentRequest {\n    fileName: string;\n    key: string;\n    fileSize: number;\n    adminRequest: boolean;\n}\n","import {\n    CdkDragDrop,\n    moveItemInArray,\n} from '@angular/cdk/drag-drop';\nimport {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { CipherRepromptType } from 'jslib-common/enums/cipherRepromptType';\nimport { CipherType } from 'jslib-common/enums/cipherType';\nimport { EventType } from 'jslib-common/enums/eventType';\nimport { FieldType } from 'jslib-common/enums/fieldType';\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { SecureNoteType } from 'jslib-common/enums/secureNoteType';\nimport { UriMatchType } from 'jslib-common/enums/uriMatchType';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\nimport { CardView } from 'jslib-common/models/view/cardView';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\nimport { FieldView } from 'jslib-common/models/view/fieldView';\nimport { FolderView } from 'jslib-common/models/view/folderView';\nimport { IdentityView } from 'jslib-common/models/view/identityView';\nimport { LoginUriView } from 'jslib-common/models/view/loginUriView';\nimport { LoginView } from 'jslib-common/models/view/loginView';\nimport { SecureNoteView } from 'jslib-common/models/view/secureNoteView';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n    @Input() cloneMode: boolean = false;\n    @Input() folderId: string = null;\n    @Input() cipherId: string;\n    @Input() type: CipherType;\n    @Input() collectionIds: string[];\n    @Input() organizationId: string = null;\n    @Output() onSavedCipher = new EventEmitter<CipherView>();\n    @Output() onDeletedCipher = new EventEmitter<CipherView>();\n    @Output() onRestoredCipher = new EventEmitter<CipherView>();\n    @Output() onCancelled = new EventEmitter<CipherView>();\n    @Output() onEditAttachments = new EventEmitter<CipherView>();\n    @Output() onShareCipher = new EventEmitter<CipherView>();\n    @Output() onEditCollections = new EventEmitter<CipherView>();\n    @Output() onGeneratePassword = new EventEmitter();\n\n    editMode: boolean = false;\n    cipher: CipherView;\n    folders: FolderView[];\n    collections: CollectionView[] = [];\n    title: string;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    restorePromise: Promise<any>;\n    checkPasswordPromise: Promise<number>;\n    showPassword: boolean = false;\n    showCardNumber: boolean = false;\n    showCardCode: boolean = false;\n    cipherType = CipherType;\n    fieldType = FieldType;\n    addFieldType: FieldType = FieldType.Text;\n    typeOptions: any[];\n    cardBrandOptions: any[];\n    cardExpMonthOptions: any[];\n    identityTitleOptions: any[];\n    addFieldTypeOptions: any[];\n    uriMatchOptions: any[];\n    ownershipOptions: any[] = [];\n    autofillOnPageLoadOptions: any[];\n    currentDate = new Date();\n    allowPersonal = true;\n    reprompt: boolean = false;\n\n    protected writeableCollections: CollectionView[];\n    private previousCipherId: string;\n\n    constructor(protected cipherService: CipherService, protected folderService: FolderService,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected auditService: AuditService, protected stateService: StateService,\n        protected userService: UserService, protected collectionService: CollectionService,\n        protected messagingService: MessagingService, protected eventService: EventService,\n        protected policyService: PolicyService) {\n        this.typeOptions = [\n            { name: i18nService.t('typeLogin'), value: CipherType.Login },\n            { name: i18nService.t('typeCard'), value: CipherType.Card },\n            { name: i18nService.t('typeIdentity'), value: CipherType.Identity },\n            { name: i18nService.t('typeSecureNote'), value: CipherType.SecureNote },\n        ];\n        this.cardBrandOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: 'Visa', value: 'Visa' },\n            { name: 'Mastercard', value: 'Mastercard' },\n            { name: 'American Express', value: 'Amex' },\n            { name: 'Discover', value: 'Discover' },\n            { name: 'Diners Club', value: 'Diners Club' },\n            { name: 'JCB', value: 'JCB' },\n            { name: 'Maestro', value: 'Maestro' },\n            { name: 'UnionPay', value: 'UnionPay' },\n            { name: i18nService.t('other'), value: 'Other' },\n        ];\n        this.cardExpMonthOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: '01 - ' + i18nService.t('january'), value: '1' },\n            { name: '02 - ' + i18nService.t('february'), value: '2' },\n            { name: '03 - ' + i18nService.t('march'), value: '3' },\n            { name: '04 - ' + i18nService.t('april'), value: '4' },\n            { name: '05 - ' + i18nService.t('may'), value: '5' },\n            { name: '06 - ' + i18nService.t('june'), value: '6' },\n            { name: '07 - ' + i18nService.t('july'), value: '7' },\n            { name: '08 - ' + i18nService.t('august'), value: '8' },\n            { name: '09 - ' + i18nService.t('september'), value: '9' },\n            { name: '10 - ' + i18nService.t('october'), value: '10' },\n            { name: '11 - ' + i18nService.t('november'), value: '11' },\n            { name: '12 - ' + i18nService.t('december'), value: '12' },\n        ];\n        this.identityTitleOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: i18nService.t('mr'), value: i18nService.t('mr') },\n            { name: i18nService.t('mrs'), value: i18nService.t('mrs') },\n            { name: i18nService.t('ms'), value: i18nService.t('ms') },\n            { name: i18nService.t('dr'), value: i18nService.t('dr') },\n        ];\n        this.addFieldTypeOptions = [\n            { name: i18nService.t('cfTypeText'), value: FieldType.Text },\n            { name: i18nService.t('cfTypeHidden'), value: FieldType.Hidden },\n            { name: i18nService.t('cfTypeBoolean'), value: FieldType.Boolean },\n        ];\n        this.uriMatchOptions = [\n            { name: i18nService.t('defaultMatchDetection'), value: null },\n            { name: i18nService.t('baseDomain'), value: UriMatchType.Domain },\n            { name: i18nService.t('host'), value: UriMatchType.Host },\n            { name: i18nService.t('startsWith'), value: UriMatchType.StartsWith },\n            { name: i18nService.t('regEx'), value: UriMatchType.RegularExpression },\n            { name: i18nService.t('exact'), value: UriMatchType.Exact },\n            { name: i18nService.t('never'), value: UriMatchType.Never },\n        ];\n        this.autofillOnPageLoadOptions = [\n            { name: i18nService.t('autoFillOnPageLoadUseDefault'), value: null },\n            { name: i18nService.t('autoFillOnPageLoadYes'), value: true },\n            { name: i18nService.t('autoFillOnPageLoadNo'), value: false },\n        ];\n    }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async init() {\n        const policies = await this.policyService.getAll(PolicyType.PersonalOwnership);\n        const myEmail = await this.userService.getEmail();\n        this.ownershipOptions.push({ name: myEmail, value: null });\n        const orgs = await this.userService.getAllOrganizations();\n        orgs.sort(Utils.getSortFunction(this.i18nService, 'name')).forEach(o => {\n            if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n                this.ownershipOptions.push({ name: o.name, value: o.id });\n                if (policies != null && o.usePolicies && !o.canManagePolicies && this.allowPersonal) {\n                    for (const policy of policies) {\n                        if (policy.organizationId === o.id && policy.enabled) {\n                            this.allowPersonal = false;\n                            this.ownershipOptions.splice(0, 1);\n                            // Default to the organization who owns this policy for now (if necessary)\n                            if (this.organizationId == null) {\n                                this.organizationId = o.id;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        });\n        this.writeableCollections = await this.loadCollections();\n    }\n\n    async load() {\n        this.editMode = this.cipherId != null;\n        if (this.editMode) {\n            this.editMode = true;\n            if (this.cloneMode) {\n                this.cloneMode = true;\n                this.title = this.i18nService.t('addItem');\n            } else {\n                this.title = this.i18nService.t('editItem');\n            }\n        } else {\n            this.title = this.i18nService.t('addItem');\n        }\n\n        const addEditCipherInfo: any = await this.stateService.get<any>('addEditCipherInfo');\n        if (addEditCipherInfo != null) {\n            this.cipher = addEditCipherInfo.cipher;\n            this.collectionIds = addEditCipherInfo.collectionIds;\n        }\n        await this.stateService.remove('addEditCipherInfo');\n\n        if (this.cipher == null) {\n            if (this.editMode) {\n                const cipher = await this.loadCipher();\n                this.cipher = await cipher.decrypt();\n\n                // Adjust Cipher Name if Cloning\n                if (this.cloneMode) {\n                    this.cipher.name += ' - ' + this.i18nService.t('clone');\n                    // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n                    if (this.cipher.organizationId == null && !this.allowPersonal) {\n                        this.cipher.organizationId = this.organizationId;\n                    }\n                }\n            } else {\n                this.cipher = new CipherView();\n                this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n                this.cipher.folderId = this.folderId;\n                this.cipher.type = this.type == null ? CipherType.Login : this.type;\n                this.cipher.login = new LoginView();\n                this.cipher.login.uris = [new LoginUriView()];\n                this.cipher.card = new CardView();\n                this.cipher.identity = new IdentityView();\n                this.cipher.secureNote = new SecureNoteView();\n                this.cipher.secureNote.type = SecureNoteType.Generic;\n                this.cipher.reprompt = CipherRepromptType.None;\n            }\n        }\n\n        if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n            await this.organizationChanged();\n            if (this.collectionIds != null && this.collectionIds.length > 0 && this.collections.length > 0) {\n                this.collections.forEach(c => {\n                    if (this.collectionIds.indexOf(c.id) > -1) {\n                        (c as any).checked = true;\n                    }\n                });\n            }\n        }\n\n        this.folders = await this.folderService.getAllDecrypted();\n\n        if (this.editMode && this.previousCipherId !== this.cipherId) {\n            this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n        }\n        this.previousCipherId = this.cipherId;\n        this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.cipher.isDeleted) {\n            return this.restore();\n        }\n\n        if (this.cipher.name == null || this.cipher.name === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        if ((!this.editMode || this.cloneMode) && !this.allowPersonal && this.cipher.organizationId == null) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('personalOwnershipSubmitError'));\n            return false;\n        }\n\n        if ((!this.editMode || this.cloneMode) && this.cipher.type === CipherType.Login &&\n            this.cipher.login.uris != null && this.cipher.login.uris.length === 1 &&\n            (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === '')) {\n            this.cipher.login.uris = null;\n        }\n\n        // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n        if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n            this.cipher.collectionIds = this.collections == null ? [] :\n                this.collections.filter(c => (c as any).checked).map(c => c.id);\n        }\n\n        // Clear current Cipher Id to trigger \"Add\" cipher flow\n        if (this.cloneMode) {\n            this.cipher.id = null;\n        }\n\n        const cipher = await this.encryptCipher();\n        try {\n            this.formPromise = this.saveCipher(cipher);\n            await this.formPromise;\n            this.cipher.id = cipher.id;\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.editMode && !this.cloneMode ? 'editedItem' : 'addedItem'));\n            this.onSavedCipher.emit(this.cipher);\n            this.messagingService.send(this.editMode && !this.cloneMode ? 'editedCipher' : 'addedCipher');\n            return true;\n        } catch { }\n\n        return false;\n    }\n\n    addUri() {\n        if (this.cipher.type !== CipherType.Login) {\n            return;\n        }\n\n        if (this.cipher.login.uris == null) {\n            this.cipher.login.uris = [];\n        }\n\n        this.cipher.login.uris.push(new LoginUriView());\n    }\n\n    removeUri(uri: LoginUriView) {\n        if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n            return;\n        }\n\n        const i = this.cipher.login.uris.indexOf(uri);\n        if (i > -1) {\n            this.cipher.login.uris.splice(i, 1);\n        }\n    }\n\n    addField() {\n        if (this.cipher.fields == null) {\n            this.cipher.fields = [];\n        }\n\n        const f = new FieldView();\n        f.type = this.addFieldType;\n        f.newField = true;\n        this.cipher.fields.push(f);\n    }\n\n    removeField(field: FieldView) {\n        const i = this.cipher.fields.indexOf(field);\n        if (i > -1) {\n            this.cipher.fields.splice(i, 1);\n        }\n    }\n\n    trackByFunction(index: number, item: any) {\n        return index;\n    }\n\n    cancel() {\n        this.onCancelled.emit(this.cipher);\n    }\n\n    attachments() {\n        this.onEditAttachments.emit(this.cipher);\n    }\n\n    share() {\n        this.onShareCipher.emit(this.cipher);\n    }\n\n    editCollections() {\n        this.onEditCollections.emit(this.cipher);\n    }\n\n    async delete(): Promise<boolean> {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.cipher.isDeleted ? 'permanentlyDeleteItemConfirmation' : 'deleteItemConfirmation'),\n            this.i18nService.t('deleteItem'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.deleteCipher();\n            await this.deletePromise;\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.cipher.isDeleted ? 'permanentlyDeletedItem' : 'deletedItem'));\n            this.onDeletedCipher.emit(this.cipher);\n            this.messagingService.send(this.cipher.isDeleted ? 'permanentlyDeletedCipher' : 'deletedCipher');\n        } catch { }\n\n        return true;\n    }\n\n    async restore(): Promise<boolean> {\n        if (!this.cipher.isDeleted) {\n            return false;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('restoreItemConfirmation'), this.i18nService.t('restoreItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.restorePromise = this.restoreCipher();\n            await this.restorePromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('restoredItem'));\n            this.onRestoredCipher.emit(this.cipher);\n            this.messagingService.send('restoredCipher');\n        } catch { }\n\n        return true;\n    }\n\n    async generatePassword(): Promise<boolean> {\n        if (this.cipher.login != null && this.cipher.login.password != null && this.cipher.login.password.length) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('overwritePasswordConfirmation'), this.i18nService.t('overwritePassword'),\n                this.i18nService.t('yes'), this.i18nService.t('no'));\n            if (!confirmed) {\n                return false;\n            }\n        }\n\n        this.onGeneratePassword.emit();\n        return true;\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('loginPassword').focus();\n        if (this.editMode && this.showPassword) {\n            this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n        }\n    }\n\n    async toggleCardNumber() {\n        this.showCardNumber = !this.showCardNumber;\n        if (this.showCardNumber) {\n            this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n        }\n    }\n\n    toggleCardCode() {\n        this.showCardCode = !this.showCardCode;\n        document.getElementById('cardCode').focus();\n        if (this.editMode && this.showCardCode) {\n            this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n        }\n    }\n\n    toggleFieldValue(field: FieldView) {\n        const f = (field as any);\n        f.showValue = !f.showValue;\n        if (this.editMode && f.showValue) {\n            this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n        }\n    }\n\n    toggleUriOptions(uri: LoginUriView) {\n        const u = (uri as any);\n        u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n    }\n\n    loginUriMatchChanged(uri: LoginUriView) {\n        const u = (uri as any);\n        u.showOptions = u.showOptions == null ? true : u.showOptions;\n    }\n\n    drop(event: CdkDragDrop<string[]>) {\n        moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n    }\n\n    async organizationChanged() {\n        if (this.writeableCollections != null) {\n            this.writeableCollections.forEach(c => (c as any).checked = false);\n        }\n        if (this.cipher.organizationId != null) {\n            this.collections = this.writeableCollections.filter(c => c.organizationId === this.cipher.organizationId);\n            const org = await this.userService.getOrganization(this.cipher.organizationId);\n            if (org != null) {\n                this.cipher.organizationUseTotp = org.useTotp;\n            }\n        } else {\n            this.collections = [];\n        }\n    }\n\n    async checkPassword() {\n        if (this.checkPasswordPromise != null) {\n            return;\n        }\n\n        if (this.cipher.login == null || this.cipher.login.password == null || this.cipher.login.password === '') {\n            return;\n        }\n\n        this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n        const matches = await this.checkPasswordPromise;\n        this.checkPasswordPromise = null;\n\n        if (matches > 0) {\n            this.platformUtilsService.showToast('warning', null,\n                this.i18nService.t('passwordExposed', matches.toString()));\n        } else {\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('passwordSafe'));\n        }\n    }\n\n    repromptChanged() {\n        this.reprompt = !this.reprompt;\n        if (this.reprompt) {\n            this.cipher.reprompt = CipherRepromptType.Password;\n        } else {\n            this.cipher.reprompt = CipherRepromptType.None;\n        }\n    }\n\n    protected async loadCollections() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        return allCollections.filter(c => !c.readOnly);\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected encryptCipher() {\n        return this.cipherService.encrypt(this.cipher);\n    }\n\n    protected saveCipher(cipher: Cipher) {\n        return this.cipherService.saveWithServer(cipher);\n    }\n\n    protected deleteCipher() {\n        return this.cipher.isDeleted ? this.cipherService.deleteWithServer(this.cipher.id)\n            : this.cipherService.softDeleteWithServer(this.cipher.id);\n    }\n\n    protected restoreCipher() {\n        return this.cipherService.restoreWithServer(this.cipher.id);\n    }\n}\n","export { AttachmentResponse } from './attachmentResponse';\nexport { CipherResponse } from './cipherResponse';\nexport { CollectionResponse } from './collectionResponse';\nexport { DeviceResponse } from './deviceResponse';\nexport { DomainsResponse } from './domainsResponse';\nexport { ErrorResponse } from './errorResponse';\nexport { FolderResponse } from './folderResponse';\nexport { GlobalDomainResponse } from './globalDomainResponse';\nexport { IdentityTokenResponse } from './identityTokenResponse';\nexport { IdentityTwoFactorResponse } from './identityTwoFactorResponse';\nexport { KeysResponse } from './keysResponse';\nexport { ListResponse } from './listResponse';\nexport { ProfileOrganizationResponse } from './profileOrganizationResponse';\nexport { ProfileResponse } from './profileResponse';\nexport { SyncResponse } from './syncResponse';\n","import { BaseResponse } from './baseResponse';\n\nexport class PasswordHistoryResponse extends BaseResponse {\n    password: string;\n    lastUsedDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.password = this.getResponseProperty('Password');\n        this.lastUsedDate = this.getResponseProperty('LastUsedDate');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { DeviceType } from '../../enums/deviceType';\n\nexport class DeviceResponse extends BaseResponse {\n    id: string;\n    name: number;\n    identifier: string;\n    type: DeviceType;\n    creationDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.identifier = this.getResponseProperty('Identifier');\n        this.type = this.getResponseProperty('Type');\n        this.creationDate = this.getResponseProperty('CreationDate');\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { SearchService } from 'jslib-common/abstractions/search.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Directive()\nexport class CiphersComponent {\n    @Input() activeCipherId: string = null;\n    @Output() onCipherClicked = new EventEmitter<CipherView>();\n    @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n    @Output() onAddCipher = new EventEmitter();\n    @Output() onAddCipherOptions = new EventEmitter();\n\n    loaded: boolean = false;\n    ciphers: CipherView[] = [];\n    pagedCiphers: CipherView[] = [];\n    searchText: string;\n    searchPlaceholder: string = null;\n    filter: (cipher: CipherView) => boolean = null;\n    deleted: boolean = false;\n\n    protected searchPending = false;\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private searchTimeout: any = null;\n    private pagedCiphersCount = 0;\n    private refreshing = false;\n\n    constructor(protected searchService: SearchService) { }\n\n    async load(filter: (cipher: CipherView) => boolean = null, deleted: boolean = false) {\n        this.deleted = deleted || false;\n        await this.applyFilter(filter);\n        this.loaded = true;\n    }\n\n    loadMore() {\n        if (this.ciphers.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedCiphers.length;\n        let pagedSize = this.pageSize;\n        if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n            pagedSize = this.pagedCiphersCount;\n        }\n        if (this.ciphers.length > pagedLength) {\n            this.pagedCiphers = this.pagedCiphers.concat(this.ciphers.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedCiphersCount = this.pagedCiphers.length;\n        this.didScroll = this.pagedCiphers.length > this.pageSize;\n    }\n\n    async reload(filter: (cipher: CipherView) => boolean = null, deleted: boolean = false) {\n        this.loaded = false;\n        this.ciphers = [];\n        await this.load(filter, deleted);\n    }\n\n    async refresh() {\n        try {\n            this.refreshing = true;\n            await this.reload(this.filter, this.deleted);\n        } finally {\n            this.refreshing = false;\n        }\n    }\n\n    async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n        this.filter = filter;\n        await this.search(null);\n    }\n\n    async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n        this.searchPending = false;\n        if (this.searchTimeout != null) {\n            clearTimeout(this.searchTimeout);\n        }\n        const deletedFilter: (cipher: CipherView) => boolean = c => c.isDeleted === this.deleted;\n        if (timeout == null) {\n            this.ciphers = await this.searchService.searchCiphers(this.searchText, [this.filter, deletedFilter], indexedCiphers);\n            await this.resetPaging();\n            return;\n        }\n        this.searchPending = true;\n        this.searchTimeout = setTimeout(async () => {\n            this.ciphers = await this.searchService.searchCiphers(this.searchText, [this.filter, deletedFilter], indexedCiphers);\n            await this.resetPaging();\n            this.searchPending = false;\n        }, timeout);\n    }\n\n    selectCipher(cipher: CipherView) {\n        this.onCipherClicked.emit(cipher);\n    }\n\n    rightClickCipher(cipher: CipherView) {\n        this.onCipherRightClicked.emit(cipher);\n    }\n\n    addCipher() {\n        this.onAddCipher.emit();\n    }\n\n    addCipherOptions() {\n        this.onAddCipherOptions.emit();\n    }\n\n    isSearching() {\n        return !this.searchPending && this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.ciphers.length > this.pageSize;\n    }\n\n    async resetPaging() {\n        this.pagedCiphers = [];\n        this.loadMore();\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n    @Input() cipherId: string;\n    @Input() allowSelectNone = false;\n    @Output() onSavedCollections = new EventEmitter();\n\n    formPromise: Promise<any>;\n    cipher: CipherView;\n    collectionIds: string[];\n    collections: CollectionView[] = [];\n\n    protected cipherDomain: Cipher;\n\n    constructor(protected collectionService: CollectionService, protected platformUtilsService: PlatformUtilsService,\n        protected i18nService: I18nService, protected cipherService: CipherService) { }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    async load() {\n        this.cipherDomain = await this.loadCipher();\n        this.collectionIds = this.loadCipherCollections();\n        this.cipher = await this.cipherDomain.decrypt();\n        this.collections = await this.loadCollections();\n\n        this.collections.forEach(c => (c as any).checked = false);\n        if (this.collectionIds != null) {\n            this.collections.forEach(c => {\n                (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n            });\n        }\n    }\n\n    async submit() {\n        const selectedCollectionIds = this.collections\n            .filter(c => !!(c as any).checked)\n            .map(c => c.id);\n        if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectOneCollection'));\n            return;\n        }\n        this.cipherDomain.collectionIds = selectedCollectionIds;\n        try {\n            this.formPromise = this.saveCollections();\n            await this.formPromise;\n            this.onSavedCollections.emit();\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('editedItem'));\n        } catch { }\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected loadCipherCollections() {\n        return this.cipherDomain.collectionIds;\n    }\n\n    protected async loadCollections() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        return allCollections.filter(c => !c.readOnly && c.organizationId === this.cipher.organizationId);\n    }\n\n    protected saveCollections() {\n        return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\nimport { FolderView } from 'jslib-common/models/view/folderView';\n\nimport { TreeNode } from 'jslib-common/models/domain/treeNode';\n\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\n@Directive()\nexport class GroupingsComponent {\n    @Input() showFolders = true;\n    @Input() showCollections = true;\n    @Input() showFavorites = true;\n    @Input() showTrash = true;\n\n    @Output() onAllClicked = new EventEmitter();\n    @Output() onFavoritesClicked = new EventEmitter();\n    @Output() onTrashClicked = new EventEmitter();\n    @Output() onCipherTypeClicked = new EventEmitter<CipherType>();\n    @Output() onFolderClicked = new EventEmitter<FolderView>();\n    @Output() onAddFolder = new EventEmitter();\n    @Output() onEditFolder = new EventEmitter<FolderView>();\n    @Output() onCollectionClicked = new EventEmitter<CollectionView>();\n\n    folders: FolderView[];\n    nestedFolders: TreeNode<FolderView>[];\n    collections: CollectionView[];\n    nestedCollections: TreeNode<CollectionView>[];\n    loaded: boolean = false;\n    cipherType = CipherType;\n    selectedAll: boolean = false;\n    selectedFavorites: boolean = false;\n    selectedTrash: boolean = false;\n    selectedType: CipherType = null;\n    selectedFolder: boolean = false;\n    selectedFolderId: string = null;\n    selectedCollectionId: string = null;\n\n    private collapsedGroupings: Set<string>;\n    private collapsedGroupingsKey: string;\n\n    constructor(protected collectionService: CollectionService, protected folderService: FolderService,\n        protected storageService: StorageService, protected userService: UserService) { }\n\n    async load(setLoaded = true) {\n        const userId = await this.userService.getUserId();\n        this.collapsedGroupingsKey = ConstantsService.collapsedGroupingsKey + '_' + userId;\n        const collapsedGroupings = await this.storageService.get<string[]>(this.collapsedGroupingsKey);\n        if (collapsedGroupings == null) {\n            this.collapsedGroupings = new Set<string>();\n        } else {\n            this.collapsedGroupings = new Set(collapsedGroupings);\n        }\n\n        await this.loadFolders();\n        await this.loadCollections();\n\n        if (setLoaded) {\n            this.loaded = true;\n        }\n    }\n\n    async loadCollections(organizationId?: string) {\n        if (!this.showCollections) {\n            return;\n        }\n        const collections = await this.collectionService.getAllDecrypted();\n        if (organizationId != null) {\n            this.collections = collections.filter(c => c.organizationId === organizationId);\n        } else {\n            this.collections = collections;\n        }\n        this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n    }\n\n    async loadFolders() {\n        if (!this.showFolders) {\n            return;\n        }\n        this.folders = await this.folderService.getAllDecrypted();\n        this.nestedFolders = await this.folderService.getAllNested();\n    }\n\n    selectAll() {\n        this.clearSelections();\n        this.selectedAll = true;\n        this.onAllClicked.emit();\n    }\n\n    selectFavorites() {\n        this.clearSelections();\n        this.selectedFavorites = true;\n        this.onFavoritesClicked.emit();\n    }\n\n    selectTrash() {\n        this.clearSelections();\n        this.selectedTrash = true;\n        this.onTrashClicked.emit();\n    }\n\n    selectType(type: CipherType) {\n        this.clearSelections();\n        this.selectedType = type;\n        this.onCipherTypeClicked.emit(type);\n    }\n\n    selectFolder(folder: FolderView) {\n        this.clearSelections();\n        this.selectedFolder = true;\n        this.selectedFolderId = folder.id;\n        this.onFolderClicked.emit(folder);\n    }\n\n    addFolder() {\n        this.onAddFolder.emit();\n    }\n\n    editFolder(folder: FolderView) {\n        this.onEditFolder.emit(folder);\n    }\n\n    selectCollection(collection: CollectionView) {\n        this.clearSelections();\n        this.selectedCollectionId = collection.id;\n        this.onCollectionClicked.emit(collection);\n    }\n\n    clearSelections() {\n        this.selectedAll = false;\n        this.selectedFavorites = false;\n        this.selectedTrash = false;\n        this.selectedType = null;\n        this.selectedFolder = false;\n        this.selectedFolderId = null;\n        this.selectedCollectionId = null;\n    }\n\n    collapse(grouping: FolderView | CollectionView, idPrefix = '') {\n        if (grouping.id == null) {\n            return;\n        }\n        const id = idPrefix + grouping.id;\n        if (this.isCollapsed(grouping, idPrefix)) {\n            this.collapsedGroupings.delete(id);\n        } else {\n            this.collapsedGroupings.add(id);\n        }\n        this.storageService.save(this.collapsedGroupingsKey, this.collapsedGroupings);\n    }\n\n    isCollapsed(grouping: FolderView | CollectionView, idPrefix = '') {\n        return this.collapsedGroupings.has(idPrefix + grouping.id);\n    }\n}\n","import { SendType } from '../../enums/sendType';\n\nimport { SendAccessResponse } from '../response/sendAccessResponse';\n\nimport { SendAccessView } from '../view/sendAccessView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SendFile } from './sendFile';\nimport { SendText } from './sendText';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class SendAccess extends Domain {\n    id: string;\n    type: SendType;\n    name: EncString;\n    file: SendFile;\n    text: SendText;\n    expirationDate: Date;\n    creatorIdentifier: string;\n\n    constructor(obj?: SendAccessResponse, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            name: null,\n            expirationDate: null,\n            creatorIdentifier: null,\n        }, alreadyEncrypted, ['id', 'expirationDate', 'creatorIdentifier']);\n\n        this.type = obj.type;\n\n        switch (this.type) {\n            case SendType.Text:\n                this.text = new SendText(obj.text, alreadyEncrypted);\n                break;\n            case SendType.File:\n                this.file = new SendFile(obj.file, alreadyEncrypted);\n                break;\n            default:\n                break;\n        }\n    }\n\n    async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n        const model = new SendAccessView(this);\n\n        await this.decryptObj(model, {\n            name: null,\n        }, null, key);\n\n        switch (this.type) {\n            case SendType.File:\n                model.file = await this.file.decrypt(key);\n                break;\n            case SendType.Text:\n                model.text = await this.text.decrypt(key);\n                break;\n            default:\n                break;\n        }\n\n        return model;\n    }\n}\n","import { SendType } from '../../enums/sendType';\n\nimport { SendAccess } from '../domain/sendAccess';\n\nimport { SendFileView } from './sendFileView';\nimport { SendTextView } from './sendTextView';\nimport { View } from './view';\n\nexport class SendAccessView implements View {\n    id: string = null;\n    name: string = null;\n    type: SendType = null;\n    text = new SendTextView();\n    file = new SendFileView();\n    expirationDate: Date = null;\n    creatorIdentifier: string = null;\n\n    constructor(s?: SendAccess) {\n        if (!s) {\n            return;\n        }\n\n        this.id = s.id;\n        this.type = s.type;\n        this.expirationDate = s.expirationDate;\n        this.creatorIdentifier = s.creatorIdentifier;\n    }\n}\n","export class SendAccessRequest {\n    password: string;\n}\n","import {\n    Directive,\n    NgZone,\n    OnInit,\n} from '@angular/core';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { SendType } from 'jslib-common/enums/sendType';\n\nimport { SendView } from 'jslib-common/models/view/sendView';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Directive()\nexport class SendComponent implements OnInit {\n\n    disableSend = false;\n    sendType = SendType;\n    loaded = false;\n    loading = true;\n    refreshing = false;\n    expired: boolean = false;\n    type: SendType = null;\n    sends: SendView[] = [];\n    filteredSends: SendView[] = [];\n    searchText: string;\n    selectedType: SendType;\n    selectedAll: boolean;\n    searchPlaceholder: string;\n    filter: (cipher: SendView) => boolean;\n    searchPending = false;\n    hasSearched = false; // search() function called - returns true if text qualifies for search\n\n    actionPromise: any;\n    onSuccessfulRemovePassword: () => Promise<any>;\n    onSuccessfulDelete: () => Promise<any>;\n    onSuccessfulLoad: () => Promise<any>;\n\n    private searchTimeout: any;\n\n    constructor(protected sendService: SendService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected environmentService: EnvironmentService,\n        protected ngZone: NgZone, protected searchService: SearchService,\n        protected policyService: PolicyService, protected userService: UserService) { }\n\n    async ngOnInit() {\n        const policies = await this.policyService.getAll(PolicyType.DisableSend);\n        const organizations = await this.userService.getAllOrganizations();\n        this.disableSend = organizations.some(o => {\n            return o.enabled &&\n                o.status === OrganizationUserStatusType.Confirmed &&\n                o.usePolicies &&\n                !o.canManagePolicies &&\n                policies.some(p => p.organizationId === o.id && p.enabled);\n        });\n    }\n\n    async load(filter: (send: SendView) => boolean = null) {\n        this.loading = true;\n        const sends = await this.sendService.getAllDecrypted();\n        this.sends = sends;\n        if (this.onSuccessfulLoad != null) {\n            await this.onSuccessfulLoad();\n        } else {\n            // Default action\n            this.selectAll();\n        }\n        this.loading = false;\n        this.loaded = true;\n    }\n\n    async reload(filter: (send: SendView) => boolean = null) {\n        this.loaded = false;\n        this.sends = [];\n        await this.load(filter);\n    }\n\n    async refresh() {\n        try {\n            this.refreshing = true;\n            await this.reload(this.filter);\n        } finally {\n            this.refreshing = false;\n        }\n    }\n\n    async applyFilter(filter: (send: SendView) => boolean = null) {\n        this.filter = filter;\n        await this.search(null);\n    }\n\n    async search(timeout: number = null) {\n        this.searchPending = false;\n        if (this.searchTimeout != null) {\n            clearTimeout(this.searchTimeout);\n        }\n        if (timeout == null) {\n            this.hasSearched = this.searchService.isSearchable(this.searchText);\n            this.filteredSends = this.sends.filter(s => this.filter == null || this.filter(s));\n            this.applyTextSearch();\n            return;\n        }\n        this.searchPending = true;\n        this.searchTimeout = setTimeout(async () => {\n            this.hasSearched = this.searchService.isSearchable(this.searchText);\n            this.filteredSends = this.sends.filter(s => this.filter == null || this.filter(s));\n            this.applyTextSearch();\n            this.searchPending = false;\n        }, timeout);\n    }\n\n    async removePassword(s: SendView): Promise<boolean> {\n        if (this.actionPromise != null || s.password == null) {\n            return;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('removePasswordConfirmation'),\n            this.i18nService.t('removePassword'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n            await this.actionPromise;\n            if (this.onSuccessfulRemovePassword != null) {\n                this.onSuccessfulRemovePassword();\n            } else {\n                // Default actions\n                this.platformUtilsService.showToast('success', null, this.i18nService.t('removedPassword'));\n                await this.load();\n            }\n        } catch { }\n        this.actionPromise = null;\n    }\n\n    async delete(s: SendView): Promise<boolean> {\n        if (this.actionPromise != null) {\n            return false;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteSendConfirmation'),\n            this.i18nService.t('deleteSend'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.sendService.deleteWithServer(s.id);\n            await this.actionPromise;\n\n            if (this.onSuccessfulDelete != null) {\n                this.onSuccessfulDelete();\n            } else {\n                // Default actions\n                this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedSend'));\n                await this.refresh();\n            }\n        } catch { }\n        this.actionPromise = null;\n        return true;\n    }\n\n    copy(s: SendView) {\n        let sendLinkBaseUrl = 'https://send.bitwarden.com/#';\n        const webVaultUrl = this.environmentService.getWebVaultUrl();\n        if (webVaultUrl != null) {\n            sendLinkBaseUrl = webVaultUrl + '/#/send/';\n        }\n        const link = sendLinkBaseUrl + s.accessId + '/' + s.urlB64Key;\n        this.platformUtilsService.copyToClipboard(link);\n        this.platformUtilsService.showToast('success', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('sendLink')));\n    }\n\n    searchTextChanged() {\n        this.search(200);\n    }\n\n    selectAll() {\n        this.clearSelections();\n        this.selectedAll = true;\n        this.applyFilter(null);\n    }\n\n    selectType(type: SendType) {\n        this.clearSelections();\n        this.selectedType = type;\n        this.applyFilter(s => s.type === type);\n    }\n\n    clearSelections() {\n        this.selectedAll = false;\n        this.selectedType = null;\n    }\n\n    private applyTextSearch() {\n        if (this.searchText != null) {\n            this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n        }\n    }\n}\n","import { DatePipe } from '@angular/common';\nimport {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output\n} from '@angular/core';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { SendType } from 'jslib-common/enums/sendType';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { SendFileView } from 'jslib-common/models/view/sendFileView';\nimport { SendTextView } from 'jslib-common/models/view/sendTextView';\nimport { SendView } from 'jslib-common/models/view/sendView';\n\nimport { EncArrayBuffer } from 'jslib-common/models/domain/encArrayBuffer';\nimport { Send } from 'jslib-common/models/domain/send';\n\n// TimeOption is used for the dropdown implementation of custom times\n// Standard = displayed time; Military = stored time\ninterface TimeOption {\n    standard: string;\n    military: string;\n}\n\nenum DateField {\n    DeletionDate = 'deletion',\n    ExpriationDate = 'expiration',\n}\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n    @Input() sendId: string;\n    @Input() type: SendType;\n\n    @Output() onSavedSend = new EventEmitter<SendView>();\n    @Output() onDeletedSend = new EventEmitter<SendView>();\n    @Output() onCancelled = new EventEmitter<SendView>();\n\n    copyLink = false;\n    disableSend = false;\n    disableHideEmail = false;\n    send: SendView;\n    deletionDate: string;\n    deletionDateFallback: string;\n    deletionTimeFallback: string;\n    expirationDate: string = null;\n    expirationDateFallback: string;\n    expirationTimeFallback: string;\n    hasPassword: boolean;\n    password: string;\n    showPassword = false;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    sendType = SendType;\n    typeOptions: any[];\n    deletionDateOptions: any[];\n    expirationDateOptions: any[];\n    deletionDateSelect = 168;\n    expirationDateSelect: number = null;\n    canAccessPremium = true;\n    emailVerified = true;\n    alertShown = false;\n    showOptions = false;\n\n    safariDeletionTime: string;\n    safariExpirationTime: string;\n    safariDeletionTimeOptions: TimeOption[];\n    safariExpirationTimeOptions: TimeOption[];\n\n    private sendLinkBaseUrl: string;\n\n    constructor(protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected environmentService: EnvironmentService, protected datePipe: DatePipe,\n        protected sendService: SendService, protected userService: UserService,\n        protected messagingService: MessagingService, protected policyService: PolicyService) {\n        this.typeOptions = [\n            { name: i18nService.t('sendTypeFile'), value: SendType.File },\n            { name: i18nService.t('sendTypeText'), value: SendType.Text },\n        ];\n        this.deletionDateOptions = this.expirationDateOptions = [\n            { name: i18nService.t('oneHour'), value: 1 },\n            { name: i18nService.t('oneDay'), value: 24 },\n            { name: i18nService.t('days', '2'), value: 48 },\n            { name: i18nService.t('days', '3'), value: 72 },\n            { name: i18nService.t('days', '7'), value: 168 },\n            { name: i18nService.t('days', '30'), value: 720 },\n            { name: i18nService.t('custom'), value: 0 },\n        ];\n        this.expirationDateOptions = [\n            { name: i18nService.t('never'), value: null },\n        ].concat([...this.deletionDateOptions]);\n\n        const webVaultUrl = this.environmentService.getWebVaultUrl();\n        if (webVaultUrl == null) {\n            this.sendLinkBaseUrl = 'https://send.bitwarden.com/#';\n        } else {\n            this.sendLinkBaseUrl = webVaultUrl + '/#/send/';\n        }\n    }\n\n    get link(): string {\n        if (this.send.id != null && this.send.accessId != null) {\n            return this.sendLinkBaseUrl + this.send.accessId + '/' + this.send.urlB64Key;\n        }\n        return null;\n    }\n\n    get isSafari() {\n        return this.platformUtilsService.isSafari();\n    }\n\n    get isDateTimeLocalSupported(): boolean {\n        return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n    }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    get editMode(): boolean {\n        return this.sendId != null;\n    }\n\n    get title(): string {\n        return this.i18nService.t(\n            this.editMode ?\n                'editSend' :\n                'createSend'\n        );\n    }\n\n    get expirationDateTimeFallback() {\n        return this.nullOrWhiteSpaceCount([this.expirationDateFallback, this.expirationTimeFallback]) > 0 ?\n            null :\n            `${this.formatDateFallbacks(this.expirationDateFallback)}T${this.expirationTimeFallback}`;\n    }\n\n    get deletionDateTimeFallback() {\n        return this.nullOrWhiteSpaceCount([this.deletionDateFallback, this.deletionTimeFallback]) > 0 ?\n            null :\n            `${this.formatDateFallbacks(this.deletionDateFallback)}T${this.deletionTimeFallback}`;\n    }\n\n    async load() {\n        const disableSendPolicies = await this.policyService.getAll(PolicyType.DisableSend);\n        const organizations = await this.userService.getAllOrganizations();\n        this.disableSend = organizations.some(o => {\n            return o.enabled &&\n                o.status === OrganizationUserStatusType.Confirmed &&\n                o.usePolicies &&\n                !o.canManagePolicies &&\n                disableSendPolicies.some(p => p.organizationId === o.id && p.enabled);\n        });\n\n        const sendOptionsPolicies = await this.policyService.getAll(PolicyType.SendOptions);\n        this.disableHideEmail = await organizations.some(o => {\n            return o.enabled &&\n                o.status === OrganizationUserStatusType.Confirmed &&\n                o.usePolicies &&\n                !o.canManagePolicies &&\n                sendOptionsPolicies.some(p => p.organizationId === o.id && p.enabled && p.data.disableHideEmail);\n        });\n\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        this.emailVerified = await this.userService.getEmailVerified();\n        if (!this.canAccessPremium || !this.emailVerified) {\n            this.type = SendType.Text;\n        }\n\n        if (this.send == null) {\n            if (this.editMode) {\n                const send = await this.loadSend();\n                this.send = await send.decrypt();\n            } else {\n                this.send = new SendView();\n                this.send.type = this.type == null ? SendType.File : this.type;\n                this.send.file = new SendFileView();\n                this.send.text = new SendTextView();\n                this.send.deletionDate = new Date();\n                this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n            }\n        }\n\n        this.hasPassword = this.send.password != null && this.send.password.trim() !== '';\n\n        // Parse dates\n        if (!this.isDateTimeLocalSupported) {\n            const deletionDateParts = this.dateToSplitString(this.send.deletionDate);\n            if (deletionDateParts !== undefined && deletionDateParts.length > 0) {\n                this.deletionDateFallback = deletionDateParts[0];\n                this.deletionTimeFallback = deletionDateParts[1];\n                if (this.isSafari) {\n                    this.safariDeletionTime = this.deletionTimeFallback;\n                }\n            }\n\n            const expirationDateParts = this.dateToSplitString(this.send.expirationDate);\n            if (expirationDateParts !== undefined && expirationDateParts.length > 0) {\n                this.expirationDateFallback = expirationDateParts[0];\n                this.expirationTimeFallback = expirationDateParts[1];\n                if (this.isSafari) {\n                    this.safariExpirationTime = this.expirationTimeFallback;\n                }\n            }\n        } else {\n            this.deletionDate = this.dateToString(this.send.deletionDate);\n            this.expirationDate = this.dateToString(this.send.expirationDate);\n        }\n\n        if (this.isSafari) {\n            this.safariDeletionTimeOptions = this.safariTimeOptions(DateField.DeletionDate);\n            this.safariExpirationTimeOptions = this.safariTimeOptions(DateField.ExpriationDate);\n        }\n    }\n\n    async submit(): Promise<boolean> {\n        if (!this.isDateTimeLocalSupported) {\n            if (this.isSafari) {\n                this.expirationTimeFallback = this.safariExpirationTime ?? this.expirationTimeFallback;\n                this.deletionTimeFallback = this.safariDeletionTime ?? this.deletionTimeFallback;\n            }\n            this.deletionDate = this.deletionDateTimeFallback;\n            if (this.expirationDateTimeFallback != null && isNaN(Date.parse(this.expirationDateTimeFallback))) {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('expirationDateIsInvalid'));\n                return;\n            }\n            if (isNaN(Date.parse(this.deletionDateTimeFallback))) {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('deletionDateIsInvalid'));\n                return;\n            }\n            if (this.nullOrWhiteSpaceCount([this.expirationDateFallback, this.expirationTimeFallback]) === 1) {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('expirationDateAndTimeRequired'));\n                return;\n            }\n            if (this.editMode || this.expirationDateSelect === 0) {\n                this.expirationDate = this.expirationDateTimeFallback;\n            }\n        }\n\n        if (this.disableSend) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('sendDisabledWarning'));\n            return false;\n        }\n\n        if (this.send.name == null || this.send.name === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        let file: File = null;\n        if (this.send.type === SendType.File && !this.editMode) {\n            const fileEl = document.getElementById('file') as HTMLInputElement;\n            const files = fileEl.files;\n            if (files == null || files.length === 0) {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('selectFile'));\n                return;\n            }\n\n            file = files[0];\n            if (files[0].size > 524288000) { // 500 MB\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('maxFileSize'));\n                return;\n            }\n        }\n\n        if (!this.editMode) {\n            const now = new Date();\n            if (this.deletionDateSelect > 0) {\n                const d = new Date();\n                d.setHours(now.getHours() + this.deletionDateSelect);\n                this.deletionDate = this.dateToString(d);\n            }\n            if (this.expirationDateSelect != null && this.expirationDateSelect > 0) {\n                const d = new Date();\n                d.setHours(now.getHours() + this.expirationDateSelect);\n                this.expirationDate = this.dateToString(d);\n            }\n        }\n\n        if (this.password != null && this.password.trim() === '') {\n            this.password = null;\n        }\n\n        this.formPromise = this.encryptSend(file)\n            .then(async encSend => {\n                const uploadPromise = this.sendService.saveWithServer(encSend);\n                await uploadPromise;\n                if (this.send.id == null) {\n                    this.send.id = encSend[0].id;\n                }\n                if (this.send.accessId == null) {\n                    this.send.accessId = encSend[0].accessId;\n                }\n                this.onSavedSend.emit(this.send);\n                if (this.copyLink && this.link != null) {\n                    const copySuccess = await this.copyLinkToClipboard(this.link);\n                    if (copySuccess ?? true) {\n                        this.platformUtilsService.showToast('success', null,\n                            this.i18nService.t(this.editMode ? 'editedSend' : 'createdSend'));\n                    } else {\n                        await this.platformUtilsService.showDialog(\n                            this.i18nService.t(this.editMode ? 'editedSend' : 'createdSend'), null,\n                            this.i18nService.t('ok'), null, 'success', null);\n                        await this.copyLinkToClipboard(this.link);\n                    }\n                }\n            });\n\n        try {\n            await this.formPromise;\n            return true;\n        } catch { }\n        return false;\n    }\n\n    clearExpiration() {\n        this.expirationDate = null;\n        this.expirationDateFallback = null;\n        this.expirationTimeFallback = null;\n        this.safariExpirationTime = null;\n    }\n\n    async copyLinkToClipboard(link: string): Promise<void | boolean> {\n        return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n    }\n\n    async delete(): Promise<boolean> {\n        if (this.deletePromise != null) {\n            return false;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteSendConfirmation'),\n            this.i18nService.t('deleteSend'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n            await this.deletePromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedSend'));\n            await this.load();\n            this.onDeletedSend.emit(this.send);\n            return true;\n        } catch { }\n\n        return false;\n    }\n\n    typeChanged() {\n        if (this.send.type === SendType.File && !this.alertShown)\n        {\n            if (!this.canAccessPremium) {\n                this.alertShown = true;\n                this.messagingService.send('premiumRequired');\n            } else if (!this.emailVerified) {\n                this.alertShown = true;\n                this.messagingService.send('emailVerificationRequired');\n            }\n        }\n    }\n\n    toggleOptions() {\n        this.showOptions = !this.showOptions;\n    }\n\n    expirationDateFallbackChanged() {\n        this.isSafari ?\n            this.safariExpirationTime = this.safariExpirationTime ?? '00:00' :\n            this.expirationTimeFallback = this.expirationTimeFallback ?? this.datePipe.transform(new Date(), 'HH:mm');\n    }\n\n    protected async loadSend(): Promise<Send> {\n        return this.sendService.get(this.sendId);\n    }\n\n    protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n        const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n        // Parse dates\n        try {\n            sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n        } catch {\n            sendData[0].deletionDate = null;\n        }\n        try {\n            sendData[0].expirationDate = this.expirationDate == null ? null : new Date(this.expirationDate);\n        } catch {\n            sendData[0].expirationDate = null;\n        }\n\n        return sendData;\n    }\n\n    protected dateToString(d: Date) {\n        return d == null ? null : this.datePipe.transform(d, 'yyyy-MM-ddTHH:mm');\n    }\n\n    protected formatDateFallbacks(dateString: string) {\n        try {\n            // The Firefox date picker doesn't supply a time, safari's polyfill does.\n            // Unknown if Safari's native date picker will or not when it releases.\n            if (!this.isSafari) {\n                dateString += ' 00:00';\n            }\n            return this.datePipe.transform(new Date(dateString), 'yyyy-MM-dd');\n        } catch {\n            // this should never happen\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('dateParsingError'));\n        }\n    }\n\n    protected dateToSplitString(d: Date) {\n        if (d != null) {\n            const date = !this.isSafari ?\n                this.datePipe.transform(d, 'yyyy-MM-dd') :\n                this.datePipe.transform(d, 'MM/dd/yyyy');\n            const time = this.datePipe.transform(d, 'HH:mm');\n            return [date, time];\n        }\n    }\n\n    protected togglePasswordVisible() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('password').focus();\n    }\n\n    protected nullOrWhiteSpaceCount(strarray: string[]): number {\n        return strarray.filter(str => str == null || str.trim() === '').length;\n    }\n\n    protected safariTimeOptions(field: DateField): TimeOption[] {\n        // init individual arrays for major sort groups\n        const noon: TimeOption[] = [];\n        const midnight: TimeOption[] = [];\n        const ams: TimeOption[] = [];\n        const pms: TimeOption[] = [];\n\n        // determine minute skip (5 min, 10 min, 15 min, etc.)\n        const minuteIncrementer = 15;\n\n        // loop through each hour on a 12 hour system\n        for (let h = 1; h <= 12; h++) {\n            // loop through each minute in the hour using the skip to incriment\n            for (let m = 0; m < 60; m += minuteIncrementer) {\n                // init the final strings that will be added to the lists\n                let hour = h.toString();\n                let minutes = m.toString();\n\n                // add prepending 0s to single digit hours/minutes\n                if (h < 10) {\n                    hour = '0' + hour;\n                }\n                if (m < 10) {\n                    minutes = '0' + minutes;\n                }\n\n                // build time strings and push to relevant sort groups\n                if (h === 12) {\n                    const midnightOption: TimeOption = {\n                        standard: `${hour}:${minutes} AM`,\n                        military: `00:${minutes}`,\n                    };\n                    midnight.push(midnightOption);\n\n                    const noonOption: TimeOption = {\n                        standard: `${hour}:${minutes} PM`,\n                        military: `${hour}:${minutes}`,\n                    };\n                    noon.push(noonOption);\n                } else {\n                    const amOption: TimeOption = {\n                        standard: `${hour}:${minutes} AM`,\n                        military: `${hour}:${minutes}`,\n                    };\n                    ams.push(amOption);\n\n                    const pmOption: TimeOption = {\n                        standard: `${hour}:${minutes} PM`,\n                        military: `${h + 12}:${minutes}`,\n                    };\n                    pms.push(pmOption);\n                }\n            }\n        }\n\n        // bring all the arrays together in the right order\n        const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n        // determine if an unsupported value already exists on the send & add that to the top of the option list\n        // example: if the Send was created with a different client\n        if (field === DateField.ExpriationDate && this.expirationDateTimeFallback != null && this.editMode) {\n            const previousValue: TimeOption = {\n                standard: this.datePipe.transform(this.expirationDateTimeFallback, 'hh:mm a'),\n                military: this.datePipe.transform(this.expirationDateTimeFallback, 'HH:mm'),\n            };\n            return [previousValue, { standard: null, military: null }, ...validTimes];\n        } else if (field === DateField.DeletionDate && this.deletionDateTimeFallback != null && this.editMode) {\n            const previousValue: TimeOption = {\n                standard: this.datePipe.transform(this.deletionDateTimeFallback, 'hh:mm a'),\n                military: this.datePipe.transform(this.deletionDateTimeFallback, 'HH:mm'),\n            };\n            return [previousValue, ...validTimes];\n        } else {\n            return [{ standard: null, military: null }, ...validTimes];\n        }\n    }\n}\n","export class UpdateProfileRequest {\n    name: string;\n    masterPasswordHint: string;\n    culture = 'en-US'; // deprecated\n\n    constructor(name: string, masterPasswordHint: string) {\n        this.name = name;\n        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n    }\n}\n","import { EmailTokenRequest } from './emailTokenRequest';\n\nexport class EmailRequest extends EmailTokenRequest {\n    newMasterPasswordHash: string;\n    token: string;\n    key: string;\n}\n","import { PasswordRequest } from './passwordRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class KdfRequest extends PasswordRequest {\n    kdf: KdfType;\n    kdfIterations: number;\n}\n","export class UpdateDomainsRequest {\n    equivalentDomains: string[][];\n    excludedGlobalEquivalentDomains: number[];\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { PasswordGeneratorPolicyOptions } from 'jslib-common/models/domain/passwordGeneratorPolicyOptions';\n\n@Directive()\nexport class PasswordGeneratorComponent implements OnInit {\n    @Input() showSelect: boolean = false;\n    @Output() onSelected = new EventEmitter<string>();\n\n    passTypeOptions: any[];\n    options: any = {};\n    password: string = '-';\n    showOptions = false;\n    avoidAmbiguous = false;\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions;\n\n    constructor(protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        private win: Window) {\n            this.passTypeOptions = [\n                { name: i18nService.t('password'), value: 'password' },\n                { name: i18nService.t('passphrase'), value: 'passphrase' },\n            ];\n         }\n\n    async ngOnInit() {\n        const optionsResponse = await this.passwordGenerationService.getOptions();\n        this.options = optionsResponse[0];\n        this.enforcedPolicyOptions = optionsResponse[1];\n        this.avoidAmbiguous = !this.options.ambiguous;\n        this.options.type = this.options.type === 'passphrase' ? 'passphrase' : 'password';\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n        await this.passwordGenerationService.addHistory(this.password);\n    }\n\n    async sliderChanged() {\n        this.saveOptions(false);\n        await this.passwordGenerationService.addHistory(this.password);\n    }\n\n    async sliderInput() {\n        this.normalizeOptions();\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n    }\n\n    async saveOptions(regenerate: boolean = true) {\n        this.normalizeOptions();\n        await this.passwordGenerationService.saveOptions(this.options);\n\n        if (regenerate) {\n            await this.regenerate();\n        }\n    }\n\n    async regenerate() {\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n        await this.passwordGenerationService.addHistory(this.password);\n    }\n\n    copy() {\n        const copyOptions = this.win != null ? { window: this.win } : null;\n        this.platformUtilsService.copyToClipboard(this.password, copyOptions);\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n\n    select() {\n        this.onSelected.emit(this.password);\n    }\n\n    toggleOptions() {\n        this.showOptions = !this.showOptions;\n    }\n\n    private normalizeOptions() {\n        // Application level normalize options depedent on class variables\n        this.options.ambiguous = !this.avoidAmbiguous;\n\n        if (!this.options.uppercase && !this.options.lowercase && !this.options.number && !this.options.special) {\n            this.options.lowercase = true;\n            if (this.win != null) {\n                const lowercase = this.win.document.querySelector('#lowercase') as HTMLInputElement;\n                if (lowercase) {\n                    lowercase.checked = true;\n                }\n            }\n        }\n\n        this.passwordGenerationService.normalizeOptions(this.options, this.enforcedPolicyOptions);\n    }\n}\n","import { Directive, OnInit } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { GeneratedPasswordHistory } from 'jslib-common/models/domain/generatedPasswordHistory';\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n    history: GeneratedPasswordHistory[] = [];\n\n    constructor(protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        private win: Window) { }\n\n    async ngOnInit() {\n        this.history = await this.passwordGenerationService.getHistory();\n    }\n\n    clear() {\n        this.history = [];\n        this.passwordGenerationService.clear();\n    }\n\n    copy(password: string) {\n        const copyOptions = this.win != null ? { window: this.win } : null;\n        this.platformUtilsService.copyToClipboard(password, copyOptions);\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { FolderView } from 'jslib-common/models/view/folderView';\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n    @Input() folderId: string;\n    @Output() onSavedFolder = new EventEmitter<FolderView>();\n    @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n    editMode: boolean = false;\n    folder: FolderView = new FolderView();\n    title: string;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    constructor(protected folderService: FolderService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.folder.name == null || this.folder.name === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        try {\n            const folder = await this.folderService.encrypt(this.folder);\n            this.formPromise = this.folderService.saveWithServer(folder);\n            await this.formPromise;\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.editMode ? 'editedFolder' : 'addedFolder'));\n            this.onSavedFolder.emit(this.folder);\n            return true;\n        } catch { }\n\n        return false;\n    }\n\n    async delete(): Promise<boolean> {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteFolderConfirmation'), this.i18nService.t('deleteFolder'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.folderService.deleteWithServer(this.folder.id);\n            await this.deletePromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedFolder'));\n            this.onDeletedFolder.emit(this.folder);\n        } catch { }\n\n        return true;\n    }\n\n    protected async init() {\n        this.editMode = this.folderId != null;\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editFolder');\n            const folder = await this.folderService.get(this.folderId);\n            this.folder = await folder.decrypt();\n        } else {\n            this.title = this.i18nService.t('addFolder');\n        }\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive()\nexport class ShareComponent implements OnInit {\n    @Input() cipherId: string;\n    @Input() organizationId: string;\n    @Output() onSharedCipher = new EventEmitter();\n\n    formPromise: Promise<any>;\n    cipher: CipherView;\n    collections: CollectionView[] = [];\n    organizations: Organization[] = [];\n\n    protected writeableCollections: CollectionView[] = [];\n\n    constructor(protected collectionService: CollectionService, protected platformUtilsService: PlatformUtilsService,\n        protected i18nService: I18nService, protected userService: UserService,\n        protected cipherService: CipherService) { }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    async load() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        this.writeableCollections = allCollections.map(c => c).filter(c => !c.readOnly);\n        const orgs = await this.userService.getAllOrganizations();\n        this.organizations = orgs.sort(Utils.getSortFunction(this.i18nService, 'name'))\n            .filter(o => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n        const cipherDomain = await this.cipherService.get(this.cipherId);\n        this.cipher = await cipherDomain.decrypt();\n        if (this.organizationId == null && this.organizations.length > 0) {\n            this.organizationId = this.organizations[0].id;\n        }\n        this.filterCollections();\n    }\n\n    filterCollections() {\n        this.writeableCollections.forEach(c => (c as any).checked = false);\n        if (this.organizationId == null || this.writeableCollections.length === 0) {\n            this.collections = [];\n        } else {\n            this.collections = this.writeableCollections.filter(c => c.organizationId === this.organizationId);\n        }\n    }\n\n    async submit(): Promise<boolean> {\n        const selectedCollectionIds = this.collections\n            .filter(c => !!(c as any).checked)\n            .map(c => c.id);\n        if (selectedCollectionIds.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectOneCollection'));\n            return;\n        }\n\n        const cipherDomain = await this.cipherService.get(this.cipherId);\n        const cipherView = await cipherDomain.decrypt();\n        const orgName = this.organizations.find(o => o.id === this.organizationId)?.name ?? this.i18nService.t('organization');\n\n        try {\n            this.formPromise = this.cipherService.shareWithServer(cipherView, this.organizationId,\n                selectedCollectionIds).then(async () => {\n                    this.onSharedCipher.emit();\n                    this.platformUtilsService.showToast('success', null,\n                        this.i18nService.t('movedItemToOrg', cipherView.name, orgName));\n                });\n            await this.formPromise;\n            return true;\n        } catch { }\n        return false;\n    }\n\n    get canSave() {\n        if (this.collections != null) {\n            for (let i = 0; i < this.collections.length; i++) {\n                if ((this.collections[i] as any).checked) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n","export { AttachmentData } from './attachmentData';\nexport { CardData } from './cardData';\nexport { CipherData } from './cipherData';\nexport { CollectionData } from './collectionData';\nexport { FieldData } from './fieldData';\nexport { FolderData } from './folderData';\nexport { IdentityData } from './identityData';\nexport { LoginData } from './loginData';\nexport { LoginUriData } from './loginUriData';\nexport { SecureNoteData } from './secureNoteData';\n","export { Attachment } from './attachment';\nexport { AuthResult } from './authResult';\nexport { Card } from './card';\nexport { Cipher } from './cipher';\nexport { EncString } from './encString';\nexport { Collection } from './collection';\nexport { EncryptedObject } from './encryptedObject';\nexport { EnvironmentUrls } from './environmentUrls';\nexport { Field } from './field';\nexport { Folder } from './folder';\nexport { Identity } from './identity';\nexport { Login } from './login';\nexport { LoginUri } from './loginUri';\nexport { GeneratedPasswordHistory } from './generatedPasswordHistory';\nexport { SecureNote } from './secureNote';\nexport { SymmetricCryptoKey } from './symmetricCryptoKey';\n","export class EmergencyAccessConfirmRequest {\n    key: string;\n}\n","import { EmergencyAccessType } from '../../enums/emergencyAccessType';\n\nexport class EmergencyAccessInviteRequest {\n    email: string;\n    type: EmergencyAccessType;\n    waitTimeDays: number;\n}\n","export class EmergencyAccessPasswordRequest {\n    newMasterPasswordHash: string;\n    key: string;\n}\n","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport {\n    DatePipe,\n    registerLocaleData,\n} from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ToasterModule } from 'angular2-toaster';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { AppComponent } from './app.component';\nimport { ModalComponent } from './modal.component';\n\nimport { AvatarComponent } from './components/avatar.component';\nimport { PasswordStrengthComponent } from './components/password-strength.component';\n\nimport { FooterComponent } from './layouts/footer.component';\nimport { FrontendLayoutComponent } from './layouts/frontend-layout.component';\nimport { NavbarComponent } from './layouts/navbar.component';\nimport { OrganizationLayoutComponent } from './layouts/organization-layout.component';\nimport { UserLayoutComponent } from './layouts/user-layout.component';\n\nimport { AcceptEmergencyComponent } from './accounts/accept-emergency.component';\nimport { AcceptOrganizationComponent } from './accounts/accept-organization.component';\nimport { HintComponent } from './accounts/hint.component';\nimport { LockComponent } from './accounts/lock.component';\nimport { LoginComponent } from './accounts/login.component';\nimport { RecoverDeleteComponent } from './accounts/recover-delete.component';\nimport { RecoverTwoFactorComponent } from './accounts/recover-two-factor.component';\nimport { RegisterComponent } from './accounts/register.component';\nimport { SetPasswordComponent } from './accounts/set-password.component';\nimport { SsoComponent } from './accounts/sso.component';\nimport { TwoFactorOptionsComponent } from './accounts/two-factor-options.component';\nimport { TwoFactorComponent } from './accounts/two-factor.component';\nimport { VerifyEmailTokenComponent } from './accounts/verify-email-token.component';\nimport { VerifyRecoverDeleteComponent } from './accounts/verify-recover-delete.component';\n\nimport { BulkConfirmComponent as OrgBulkConfirmComponent } from './organizations/manage/bulk/bulk-confirm.component';\nimport { BulkRemoveComponent as OrgBulkRemoveComponent } from './organizations/manage/bulk/bulk-remove.component';\nimport { BulkStatusComponent as OrgBulkStatusComponent } from './organizations/manage/bulk/bulk-status.component';\nimport {\n    CollectionAddEditComponent as OrgCollectionAddEditComponent,\n} from './organizations/manage/collection-add-edit.component';\nimport { CollectionsComponent as OrgManageCollectionsComponent } from './organizations/manage/collections.component';\nimport { EntityEventsComponent as OrgEntityEventsComponent } from './organizations/manage/entity-events.component';\nimport { EntityUsersComponent as OrgEntityUsersComponent } from './organizations/manage/entity-users.component';\nimport { EventsComponent as OrgEventsComponent } from './organizations/manage/events.component';\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from './organizations/manage/group-add-edit.component';\nimport { GroupsComponent as OrgGroupsComponent } from './organizations/manage/groups.component';\nimport { ManageComponent as OrgManageComponent } from './organizations/manage/manage.component';\nimport { PeopleComponent as OrgPeopleComponent } from './organizations/manage/people.component';\nimport { PoliciesComponent as OrgPoliciesComponent } from './organizations/manage/policies.component';\nimport { PolicyEditComponent as OrgPolicyEditComponent } from './organizations/manage/policy-edit.component';\nimport { ResetPasswordComponent as OrgResetPasswordComponent } from './organizations/manage/reset-password.component';\nimport { UserAddEditComponent as OrgUserAddEditComponent } from './organizations/manage/user-add-edit.component';\nimport { UserConfirmComponent as OrgUserConfirmComponent } from './organizations/manage/user-confirm.component';\nimport { UserGroupsComponent as OrgUserGroupsComponent } from './organizations/manage/user-groups.component';\n\nimport { AccountComponent as OrgAccountComponent } from './organizations/settings/account.component';\nimport { AdjustSeatsComponent } from './organizations/settings/adjust-seats.component';\nimport { ChangePlanComponent } from './organizations/settings/change-plan.component';\nimport { DeleteOrganizationComponent } from './organizations/settings/delete-organization.component';\nimport { DownloadLicenseComponent } from './organizations/settings/download-license.component';\nimport { OrganizationBillingComponent } from './organizations/settings/organization-billing.component';\nimport { OrganizationSubscriptionComponent } from './organizations/settings/organization-subscription.component';\nimport { SettingsComponent as OrgSettingComponent } from './organizations/settings/settings.component';\nimport {\n    TwoFactorSetupComponent as OrgTwoFactorSetupComponent,\n} from './organizations/settings/two-factor-setup.component';\n\nimport { ExportComponent as OrgExportComponent } from './organizations/tools/export.component';\nimport {\n    ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent,\n} from './organizations/tools/exposed-passwords-report.component';\nimport { ImportComponent as OrgImportComponent } from './organizations/tools/import.component';\nimport {\n    InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent,\n} from './organizations/tools/inactive-two-factor-report.component';\nimport {\n    ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent,\n} from './organizations/tools/reused-passwords-report.component';\nimport { ToolsComponent as OrgToolsComponent } from './organizations/tools/tools.component';\nimport {\n    UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent,\n} from './organizations/tools/unsecured-websites-report.component';\nimport {\n    WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent,\n} from './organizations/tools/weak-passwords-report.component';\n\nimport { AddEditComponent as OrgAddEditComponent } from './organizations/vault/add-edit.component';\nimport { AttachmentsComponent as OrgAttachmentsComponent } from './organizations/vault/attachments.component';\nimport { CiphersComponent as OrgCiphersComponent } from './organizations/vault/ciphers.component';\nimport { CollectionsComponent as OrgCollectionsComponent } from './organizations/vault/collections.component';\nimport { GroupingsComponent as OrgGroupingsComponent } from './organizations/vault/groupings.component';\nimport { VaultComponent as OrgVaultComponent } from './organizations/vault/vault.component';\n\nimport { AccessComponent } from './send/access.component';\nimport { AddEditComponent as SendAddEditComponent } from './send/add-edit.component';\nimport { SendComponent } from './send/send.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { AddCreditComponent } from './settings/add-credit.component';\nimport { AdjustPaymentComponent } from './settings/adjust-payment.component';\nimport { AdjustStorageComponent } from './settings/adjust-storage.component';\nimport { ApiKeyComponent } from './settings/api-key.component';\nimport { ChangeEmailComponent } from './settings/change-email.component';\nimport { ChangeKdfComponent } from './settings/change-kdf.component';\nimport { ChangePasswordComponent } from './settings/change-password.component';\nimport { CreateOrganizationComponent } from './settings/create-organization.component';\nimport { DeauthorizeSessionsComponent } from './settings/deauthorize-sessions.component';\nimport { DeleteAccountComponent } from './settings/delete-account.component';\nimport { DomainRulesComponent } from './settings/domain-rules.component';\nimport { EmergencyAccessAddEditComponent } from './settings/emergency-access-add-edit.component';\nimport { EmergencyAccessAttachmentsComponent } from './settings/emergency-access-attachments.component';\nimport { EmergencyAccessConfirmComponent } from './settings/emergency-access-confirm.component';\nimport { EmergencyAccessTakeoverComponent } from './settings/emergency-access-takeover.component';\nimport { EmergencyAccessViewComponent } from './settings/emergency-access-view.component';\nimport { EmergencyAccessComponent } from './settings/emergency-access.component';\nimport { EmergencyAddEditComponent } from './settings/emergency-add-edit.component';\nimport { LinkSsoComponent } from './settings/link-sso.component';\nimport { OptionsComponent } from './settings/options.component';\nimport { OrganizationPlansComponent } from './settings/organization-plans.component';\nimport { OrganizationsComponent } from './settings/organizations.component';\nimport { PaymentComponent } from './settings/payment.component';\nimport { PremiumComponent } from './settings/premium.component';\nimport { ProfileComponent } from './settings/profile.component';\nimport { PurgeVaultComponent } from './settings/purge-vault.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { TaxInfoComponent } from './settings/tax-info.component';\nimport { TwoFactorAuthenticatorComponent } from './settings/two-factor-authenticator.component';\nimport { TwoFactorDuoComponent } from './settings/two-factor-duo.component';\nimport { TwoFactorEmailComponent } from './settings/two-factor-email.component';\nimport { TwoFactorRecoveryComponent } from './settings/two-factor-recovery.component';\nimport { TwoFactorSetupComponent } from './settings/two-factor-setup.component';\nimport { TwoFactorVerifyComponent } from './settings/two-factor-verify.component';\nimport { TwoFactorWebAuthnComponent } from './settings/two-factor-webauthn.component';\nimport { TwoFactorYubiKeyComponent } from './settings/two-factor-yubikey.component';\nimport { UpdateKeyComponent } from './settings/update-key.component';\nimport { UpdateLicenseComponent } from './settings/update-license.component';\nimport { UserBillingComponent } from './settings/user-billing.component';\nimport { UserSubscriptionComponent } from './settings/user-subscription.component';\nimport { VerifyEmailComponent } from './settings/verify-email.component';\n\nimport { BreachReportComponent } from './tools/breach-report.component';\nimport { ExportComponent } from './tools/export.component';\nimport { ExposedPasswordsReportComponent } from './tools/exposed-passwords-report.component';\nimport { ImportComponent } from './tools/import.component';\nimport { InactiveTwoFactorReportComponent } from './tools/inactive-two-factor-report.component';\nimport { PasswordGeneratorHistoryComponent } from './tools/password-generator-history.component';\nimport { PasswordGeneratorComponent } from './tools/password-generator.component';\nimport { ReusedPasswordsReportComponent } from './tools/reused-passwords-report.component';\nimport { ToolsComponent } from './tools/tools.component';\nimport { UnsecuredWebsitesReportComponent } from './tools/unsecured-websites-report.component';\nimport { WeakPasswordsReportComponent } from './tools/weak-passwords-report.component';\n\nimport { AddEditComponent } from './vault/add-edit.component';\nimport { AttachmentsComponent } from './vault/attachments.component';\nimport { BulkActionsComponent } from './vault/bulk-actions.component';\nimport { BulkDeleteComponent } from './vault/bulk-delete.component';\nimport { BulkMoveComponent } from './vault/bulk-move.component';\nimport { BulkRestoreComponent } from './vault/bulk-restore.component';\nimport { BulkShareComponent } from './vault/bulk-share.component';\nimport { CiphersComponent } from './vault/ciphers.component';\nimport { CollectionsComponent } from './vault/collections.component';\nimport { FolderAddEditComponent } from './vault/folder-add-edit.component';\nimport { GroupingsComponent } from './vault/groupings.component';\nimport { ShareComponent } from './vault/share.component';\nimport { VaultComponent } from './vault/vault.component';\n\nimport { CalloutComponent } from 'jslib-angular/components/callout.component';\nimport { IconComponent } from 'jslib-angular/components/icon.component';\n\nimport { A11yTitleDirective } from 'jslib-angular/directives/a11y-title.directive';\nimport { ApiActionDirective } from 'jslib-angular/directives/api-action.directive';\nimport { AutofocusDirective } from 'jslib-angular/directives/autofocus.directive';\nimport { BlurClickDirective } from 'jslib-angular/directives/blur-click.directive';\nimport { BoxRowDirective } from 'jslib-angular/directives/box-row.directive';\nimport { FallbackSrcDirective } from 'jslib-angular/directives/fallback-src.directive';\nimport { InputVerbatimDirective } from 'jslib-angular/directives/input-verbatim.directive';\nimport { SelectCopyDirective } from 'jslib-angular/directives/select-copy.directive';\nimport { StopClickDirective } from 'jslib-angular/directives/stop-click.directive';\nimport { StopPropDirective } from 'jslib-angular/directives/stop-prop.directive';\nimport { TrueFalseValueDirective } from 'jslib-angular/directives/true-false-value.directive';\n\nimport { ColorPasswordPipe } from 'jslib-angular/pipes/color-password.pipe';\nimport { I18nPipe } from 'jslib-angular/pipes/i18n.pipe';\nimport { SearchCiphersPipe } from 'jslib-angular/pipes/search-ciphers.pipe';\nimport { SearchPipe } from 'jslib-angular/pipes/search.pipe';\n\nimport localeAz from '@angular/common/locales/az';\nimport localeBg from '@angular/common/locales/bg';\nimport localeCa from '@angular/common/locales/ca';\nimport localeCs from '@angular/common/locales/cs';\nimport localeDa from '@angular/common/locales/da';\nimport localeDe from '@angular/common/locales/de';\nimport localeEl from '@angular/common/locales/el';\nimport localeEnGb from '@angular/common/locales/en-GB';\nimport localeEnIn from '@angular/common/locales/en-IN';\nimport localeEo from '@angular/common/locales/eo';\nimport localeEs from '@angular/common/locales/es';\nimport localeEt from '@angular/common/locales/et';\nimport localeFi from '@angular/common/locales/fi';\nimport localeFr from '@angular/common/locales/fr';\nimport localeHe from '@angular/common/locales/he';\nimport localeHr from '@angular/common/locales/hr';\nimport localeHu from '@angular/common/locales/hu';\nimport localeId from '@angular/common/locales/id';\nimport localeIt from '@angular/common/locales/it';\nimport localeJa from '@angular/common/locales/ja';\nimport localeKn from '@angular/common/locales/kn';\nimport localeKo from '@angular/common/locales/ko';\nimport localeLv from '@angular/common/locales/lv';\nimport localeMl from '@angular/common/locales/ml';\nimport localeNb from '@angular/common/locales/nb';\nimport localeNl from '@angular/common/locales/nl';\nimport localePl from '@angular/common/locales/pl';\nimport localePtBr from '@angular/common/locales/pt';\nimport localePtPt from '@angular/common/locales/pt-PT';\nimport localeRo from '@angular/common/locales/ro';\nimport localeRu from '@angular/common/locales/ru';\nimport localeSk from '@angular/common/locales/sk';\nimport localeSr from '@angular/common/locales/sr';\nimport localeSv from '@angular/common/locales/sv';\nimport localeTr from '@angular/common/locales/tr';\nimport localeUk from '@angular/common/locales/uk';\nimport localeZhCn from '@angular/common/locales/zh-Hans';\nimport localeZhTw from '@angular/common/locales/zh-Hant';\n\nregisterLocaleData(localeAz, 'az');\nregisterLocaleData(localeBg, 'bg');\nregisterLocaleData(localeCa, 'ca');\nregisterLocaleData(localeCs, 'cs');\nregisterLocaleData(localeDa, 'da');\nregisterLocaleData(localeDe, 'de');\nregisterLocaleData(localeEl, 'el');\nregisterLocaleData(localeEnGb, 'en-GB');\nregisterLocaleData(localeEnIn, 'en-IN');\nregisterLocaleData(localeEs, 'es');\nregisterLocaleData(localeEt, 'et');\nregisterLocaleData(localeEo, 'eo');\nregisterLocaleData(localeFi, 'fi');\nregisterLocaleData(localeFr, 'fr');\nregisterLocaleData(localeHe, 'he');\nregisterLocaleData(localeHr, 'hr');\nregisterLocaleData(localeHu, 'hu');\nregisterLocaleData(localeId, 'id');\nregisterLocaleData(localeIt, 'it');\nregisterLocaleData(localeJa, 'ja');\nregisterLocaleData(localeKn, 'kn');\nregisterLocaleData(localeKo, 'ko');\nregisterLocaleData(localeLv, 'lv');\nregisterLocaleData(localeMl, 'ml');\nregisterLocaleData(localeNb, 'nb');\nregisterLocaleData(localeNl, 'nl');\nregisterLocaleData(localePl, 'pl');\nregisterLocaleData(localePtBr, 'pt-BR');\nregisterLocaleData(localePtPt, 'pt-PT');\nregisterLocaleData(localeRo, 'ro');\nregisterLocaleData(localeRu, 'ru');\nregisterLocaleData(localeSk, 'sk');\nregisterLocaleData(localeSr, 'sr');\nregisterLocaleData(localeSv, 'sv');\nregisterLocaleData(localeTr, 'tr');\nregisterLocaleData(localeUk, 'uk');\nregisterLocaleData(localeZhCn, 'zh-CN');\nregisterLocaleData(localeZhTw, 'zh-TW');\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        InfiniteScrollModule,\n        DragDropModule,\n        ToasterModule.forChild(),\n        RouterModule,\n    ],\n    declarations: [\n        A11yTitleDirective,\n        AcceptEmergencyComponent,\n        AccessComponent,\n        AcceptOrganizationComponent,\n        AccountComponent,\n        SetPasswordComponent,\n        AddCreditComponent,\n        AddEditComponent,\n        AdjustPaymentComponent,\n        AdjustSeatsComponent,\n        AdjustStorageComponent,\n        ApiActionDirective,\n        ApiKeyComponent,\n        AppComponent,\n        AttachmentsComponent,\n        AutofocusDirective,\n        AvatarComponent,\n        BlurClickDirective,\n        BoxRowDirective,\n        BreachReportComponent,\n        BulkActionsComponent,\n        BulkDeleteComponent,\n        BulkMoveComponent,\n        BulkRestoreComponent,\n        BulkShareComponent,\n        CalloutComponent,\n        ChangeEmailComponent,\n        ChangeKdfComponent,\n        ChangePasswordComponent,\n        ChangePlanComponent,\n        CiphersComponent,\n        CollectionsComponent,\n        ColorPasswordPipe,\n        CreateOrganizationComponent,\n        DeauthorizeSessionsComponent,\n        DeleteAccountComponent,\n        DeleteOrganizationComponent,\n        DomainRulesComponent,\n        DownloadLicenseComponent,\n        EmergencyAccessAddEditComponent,\n        EmergencyAccessAttachmentsComponent,\n        EmergencyAccessComponent,\n        EmergencyAccessConfirmComponent,\n        EmergencyAccessTakeoverComponent,\n        EmergencyAccessViewComponent,\n        EmergencyAddEditComponent,\n        ExportComponent,\n        ExposedPasswordsReportComponent,\n        FallbackSrcDirective,\n        FolderAddEditComponent,\n        FooterComponent,\n        FrontendLayoutComponent,\n        GroupingsComponent,\n        HintComponent,\n        I18nPipe,\n        IconComponent,\n        ImportComponent,\n        InactiveTwoFactorReportComponent,\n        InputVerbatimDirective,\n        LinkSsoComponent,\n        LockComponent,\n        LoginComponent,\n        ModalComponent,\n        NavbarComponent,\n        OptionsComponent,\n        OrgAccountComponent,\n        OrgAddEditComponent,\n        OrganizationBillingComponent,\n        OrganizationPlansComponent,\n        OrganizationSubscriptionComponent,\n        OrgAttachmentsComponent,\n        OrgBulkStatusComponent,\n        OrgBulkConfirmComponent,\n        OrgBulkRemoveComponent,\n        OrgCiphersComponent,\n        OrgCollectionAddEditComponent,\n        OrgCollectionsComponent,\n        OrgEntityEventsComponent,\n        OrgEntityUsersComponent,\n        OrgEventsComponent,\n        OrgExportComponent,\n        OrgExposedPasswordsReportComponent,\n        OrgImportComponent,\n        OrgInactiveTwoFactorReportComponent,\n        OrgGroupAddEditComponent,\n        OrgGroupingsComponent,\n        OrgGroupsComponent,\n        OrgManageCollectionsComponent,\n        OrgManageComponent,\n        OrgPeopleComponent,\n        OrgPolicyEditComponent,\n        OrgPoliciesComponent,\n        OrgResetPasswordComponent,\n        OrgReusedPasswordsReportComponent,\n        OrgSettingComponent,\n        OrgToolsComponent,\n        OrgTwoFactorSetupComponent,\n        OrgUserAddEditComponent,\n        OrgUserConfirmComponent,\n        OrgUserGroupsComponent,\n        OrganizationsComponent,\n        OrganizationLayoutComponent,\n        OrgUnsecuredWebsitesReportComponent,\n        OrgVaultComponent,\n        OrgWeakPasswordsReportComponent,\n        PasswordGeneratorComponent,\n        PasswordGeneratorHistoryComponent,\n        PasswordStrengthComponent,\n        PaymentComponent,\n        PremiumComponent,\n        ProfileComponent,\n        PurgeVaultComponent,\n        RecoverDeleteComponent,\n        RecoverTwoFactorComponent,\n        RegisterComponent,\n        ReusedPasswordsReportComponent,\n        SearchCiphersPipe,\n        SearchPipe,\n        SelectCopyDirective,\n        SendAddEditComponent,\n        SendComponent,\n        SettingsComponent,\n        ShareComponent,\n        SsoComponent,\n        StopClickDirective,\n        StopPropDirective,\n        TaxInfoComponent,\n        ToolsComponent,\n        TrueFalseValueDirective,\n        TwoFactorAuthenticatorComponent,\n        TwoFactorComponent,\n        TwoFactorDuoComponent,\n        TwoFactorEmailComponent,\n        TwoFactorOptionsComponent,\n        TwoFactorRecoveryComponent,\n        TwoFactorSetupComponent,\n        TwoFactorVerifyComponent,\n        TwoFactorWebAuthnComponent,\n        TwoFactorYubiKeyComponent,\n        UnsecuredWebsitesReportComponent,\n        UpdateKeyComponent,\n        UpdateLicenseComponent,\n        UserBillingComponent,\n        UserLayoutComponent,\n        UserSubscriptionComponent,\n        VaultComponent,\n        VerifyEmailComponent,\n        VerifyEmailTokenComponent,\n        VerifyRecoverDeleteComponent,\n        WeakPasswordsReportComponent,\n    ],\n    providers: [DatePipe, SearchPipe],\n    bootstrap: [],\n})\nexport class OssModule { }\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appBlurClick]',\n})\nexport class BlurClickDirective {\n    constructor(private el: ElementRef) {\n    }\n\n    @HostListener('click') onClick() {\n        this.el.nativeElement.blur();\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n    OnInit,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appBoxRow]',\n})\nexport class BoxRowDirective implements OnInit {\n    el: HTMLElement = null;\n    formEls: Element[];\n\n    constructor(private elRef: ElementRef) {\n        this.el = elRef.nativeElement;\n    }\n\n    ngOnInit(): void {\n        this.formEls = Array.from(this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea'));\n        this.formEls.forEach(formEl => {\n            formEl.addEventListener('focus', (event: Event) => {\n                this.el.classList.add('active');\n            }, false);\n\n            formEl.addEventListener('blur', (event: Event) => {\n                this.el.classList.remove('active');\n            }, false);\n        });\n    }\n\n    @HostListener('click', ['$event']) onClick(event: Event) {\n        const target = event.target as HTMLElement;\n        if (target !== this.el && !target.classList.contains('progress') &&\n            !target.classList.contains('progress-bar')) {\n            return;\n        }\n\n        if (this.formEls.length > 0) {\n            const formEl = (this.formEls[0] as HTMLElement);\n            if (formEl.tagName.toLowerCase() === 'input') {\n                const inputEl = (formEl as HTMLInputElement);\n                if (inputEl.type != null && inputEl.type.toLowerCase() === 'checkbox') {\n                    inputEl.click();\n                    return;\n                }\n            }\n            formEl.focus();\n        }\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Pipe({\n    name: 'searchCiphers',\n})\nexport class SearchCiphersPipe implements PipeTransform {\n    transform(ciphers: CipherView[], searchText: string, deleted: boolean = false): CipherView[] {\n        if (ciphers == null || ciphers.length === 0) {\n            return [];\n        }\n\n        if (searchText == null || searchText.length < 2) {\n            return ciphers.filter(c => {\n                return deleted !== c.isDeleted;\n            });\n        }\n\n        searchText = searchText.trim().toLowerCase();\n        return ciphers.filter(c => {\n            if (deleted !== c.isDeleted) {\n                return false;\n            }\n            if (c.name != null && c.name.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (searchText.length >= 8 && c.id.startsWith(searchText)) {\n                return true;\n            }\n            if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n\n            return false;\n        });\n    }\n}\n","import {\n    APP_INITIALIZER,\n    LOCALE_ID,\n    NgModule,\n} from '@angular/core';\n\nimport { ToasterModule } from 'angular2-toaster';\n\nimport { BroadcasterMessagingService } from '../../services/broadcasterMessaging.service';\nimport { HtmlStorageService } from '../../services/htmlStorage.service';\nimport { I18nService } from '../../services/i18n.service';\nimport { MemoryStorageService } from '../../services/memoryStorage.service';\nimport { WebPlatformUtilsService } from '../../services/webPlatformUtils.service';\n\nimport { EventService } from './event.service';\nimport { OrganizationGuardService } from './organization-guard.service';\nimport { OrganizationTypeGuardService } from './organization-type-guard.service';\nimport { RouterService } from './router.service';\n\nimport { AuthGuardService } from 'jslib-angular/services/auth-guard.service';\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\nimport { LockGuardService } from 'jslib-angular/services/lock-guard.service';\nimport { UnauthGuardService } from 'jslib-angular/services/unauth-guard.service';\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport { ApiService } from 'jslib-common/services/api.service';\nimport { AppIdService } from 'jslib-common/services/appId.service';\nimport { AuditService } from 'jslib-common/services/audit.service';\nimport { AuthService } from 'jslib-common/services/auth.service';\nimport { CipherService } from 'jslib-common/services/cipher.service';\nimport { CollectionService } from 'jslib-common/services/collection.service';\nimport { ConsoleLogService } from 'jslib-common/services/consoleLog.service';\nimport { ConstantsService } from 'jslib-common/services/constants.service';\nimport { ContainerService } from 'jslib-common/services/container.service';\nimport { CryptoService } from 'jslib-common/services/crypto.service';\nimport { EnvironmentService } from 'jslib-common/services/environment.service';\nimport { EventService as EventLoggingService } from 'jslib-common/services/event.service';\nimport { ExportService } from 'jslib-common/services/export.service';\nimport { FileUploadService } from 'jslib-common/services/fileUpload.service';\nimport { FolderService } from 'jslib-common/services/folder.service';\nimport { ImportService } from 'jslib-common/services/import.service';\nimport { NotificationsService } from 'jslib-common/services/notifications.service';\nimport { PasswordGenerationService } from 'jslib-common/services/passwordGeneration.service';\nimport { PasswordRepromptService } from 'jslib-common/services/passwordReprompt.service';\nimport { PolicyService } from 'jslib-common/services/policy.service';\nimport { SearchService } from 'jslib-common/services/search.service';\nimport { SendService } from 'jslib-common/services/send.service';\nimport { SettingsService } from 'jslib-common/services/settings.service';\nimport { StateService } from 'jslib-common/services/state.service';\nimport { SyncService } from 'jslib-common/services/sync.service';\nimport { TokenService } from 'jslib-common/services/token.service';\nimport { TotpService } from 'jslib-common/services/totp.service';\nimport { UserService } from 'jslib-common/services/user.service';\nimport { VaultTimeoutService } from 'jslib-common/services/vaultTimeout.service';\nimport { WebCryptoFunctionService } from 'jslib-common/services/webCryptoFunction.service';\n\nimport { ApiService as ApiServiceAbstraction } from 'jslib-common/abstractions/api.service';\nimport { AuditService as AuditServiceAbstraction } from 'jslib-common/abstractions/audit.service';\nimport { AuthService as AuthServiceAbstraction } from 'jslib-common/abstractions/auth.service';\nimport { CipherService as CipherServiceAbstraction } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService as CollectionServiceAbstraction } from 'jslib-common/abstractions/collection.service';\nimport { CryptoService as CryptoServiceAbstraction } from 'jslib-common/abstractions/crypto.service';\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService as EnvironmentServiceAbstraction } from 'jslib-common/abstractions/environment.service';\nimport { EventService as EventLoggingServiceAbstraction } from 'jslib-common/abstractions/event.service';\nimport { ExportService as ExportServiceAbstraction } from 'jslib-common/abstractions/export.service';\nimport { FileUploadService as FileUploadServiceAbstraction }  from 'jslib-common/abstractions/fileUpload.service';\nimport { FolderService as FolderServiceAbstraction } from 'jslib-common/abstractions/folder.service';\nimport { I18nService as I18nServiceAbstraction } from 'jslib-common/abstractions/i18n.service';\nimport { ImportService as ImportServiceAbstraction } from 'jslib-common/abstractions/import.service';\nimport { MessagingService as MessagingServiceAbstraction } from 'jslib-common/abstractions/messaging.service';\nimport { NotificationsService as NotificationsServiceAbstraction } from 'jslib-common/abstractions/notifications.service';\nimport {\n    PasswordGenerationService as PasswordGenerationServiceAbstraction,\n} from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService as PolicyServiceAbstraction } from 'jslib-common/abstractions/policy.service';\nimport { SearchService as SearchServiceAbstraction } from 'jslib-common/abstractions/search.service';\nimport { SendService as SendServiceAbstraction } from 'jslib-common/abstractions/send.service';\nimport { SettingsService as SettingsServiceAbstraction } from 'jslib-common/abstractions/settings.service';\nimport { StateService as StateServiceAbstraction } from 'jslib-common/abstractions/state.service';\nimport { StorageService as StorageServiceAbstraction } from 'jslib-common/abstractions/storage.service';\nimport { SyncService as SyncServiceAbstraction } from 'jslib-common/abstractions/sync.service';\nimport { TokenService as TokenServiceAbstraction } from 'jslib-common/abstractions/token.service';\nimport { TotpService as TotpServiceAbstraction } from 'jslib-common/abstractions/totp.service';\nimport { UserService as UserServiceAbstraction } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from 'jslib-common/abstractions/vaultTimeout.service';\n\nconst i18nService = new I18nService(window.navigator.language, 'locales');\nconst stateService = new StateService();\nconst broadcasterService = new BroadcasterService();\nconst messagingService = new BroadcasterMessagingService(broadcasterService);\nconst consoleLogService = new ConsoleLogService(false);\nconst platformUtilsService = new WebPlatformUtilsService(i18nService, messagingService, consoleLogService);\nconst storageService: StorageServiceAbstraction = new HtmlStorageService(platformUtilsService);\nconst secureStorageService: StorageServiceAbstraction = new MemoryStorageService();\nconst cryptoFunctionService: CryptoFunctionServiceAbstraction = new WebCryptoFunctionService(window,\n    platformUtilsService);\nconst cryptoService = new CryptoService(storageService,\n    platformUtilsService.isDev() ? storageService : secureStorageService, cryptoFunctionService, platformUtilsService,\n    consoleLogService);\nconst tokenService = new TokenService(storageService);\nconst appIdService = new AppIdService(storageService);\nconst apiService = new ApiService(tokenService, platformUtilsService,\n    async (expired: boolean) => messagingService.send('logout', { expired: expired }));\nconst userService = new UserService(tokenService, storageService);\nconst settingsService = new SettingsService(userService, storageService);\nexport let searchService: SearchService = null;\nconst fileUploadService = new FileUploadService(consoleLogService, apiService);\nconst cipherService = new CipherService(cryptoService, userService, settingsService,\n    apiService, fileUploadService, storageService, i18nService, () => searchService);\nconst folderService = new FolderService(cryptoService, userService, apiService, storageService,\n    i18nService, cipherService);\nconst collectionService = new CollectionService(cryptoService, userService, storageService, i18nService);\nsearchService = new SearchService(cipherService, consoleLogService, i18nService);\nconst policyService = new PolicyService(userService, storageService);\nconst sendService = new SendService(cryptoService, userService, apiService, fileUploadService, storageService,\n    i18nService, cryptoFunctionService);\nconst vaultTimeoutService = new VaultTimeoutService(cipherService, folderService, collectionService,\n    cryptoService, platformUtilsService, storageService, messagingService, searchService, userService, tokenService,\n    null, async () => messagingService.send('logout', { expired: false }));\nconst syncService = new SyncService(userService, apiService, settingsService,\n    folderService, cipherService, cryptoService, collectionService, storageService, messagingService, policyService,\n    sendService, async (expired: boolean) => messagingService.send('logout', { expired: expired }));\nconst passwordGenerationService = new PasswordGenerationService(cryptoService, storageService, policyService);\nconst totpService = new TotpService(storageService, cryptoFunctionService);\nconst containerService = new ContainerService(cryptoService);\nconst authService = new AuthService(cryptoService, apiService,\n    userService, tokenService, appIdService, i18nService, platformUtilsService, messagingService, vaultTimeoutService,\n    consoleLogService);\nconst exportService = new ExportService(folderService, cipherService, apiService, cryptoService);\nconst importService = new ImportService(cipherService, folderService, apiService, i18nService, collectionService,\n    platformUtilsService, cryptoService);\nconst notificationsService = new NotificationsService(userService, syncService, appIdService,\n    apiService, vaultTimeoutService, async () => messagingService.send('logout', { expired: true }), consoleLogService);\nconst environmentService = new EnvironmentService(apiService, storageService, notificationsService);\nconst auditService = new AuditService(cryptoFunctionService, apiService);\nconst eventLoggingService = new EventLoggingService(storageService, apiService, userService, cipherService);\nconst passwordRepromptService = new PasswordRepromptService(i18nService, cryptoService, platformUtilsService);\n\ncontainerService.attachToWindow(window);\n\nexport function initFactory(): Function {\n    return async () => {\n        await (storageService as HtmlStorageService).init();\n\n        if (process.env.ENV !== 'production' || platformUtilsService.isSelfHost()) {\n            environmentService.baseUrl = window.location.origin;\n        } else {\n            environmentService.notificationsUrl = 'https://notifications.bitwarden.com';\n            environmentService.enterpriseUrl = 'https://portal.bitwarden.com';\n        }\n\n        apiService.setUrls({\n            base: window.location.origin,\n            api: null,\n            identity: null,\n            events: null,\n        });\n        setTimeout(() => notificationsService.init(environmentService), 3000);\n\n        vaultTimeoutService.init(true);\n        const locale = await storageService.get<string>(ConstantsService.localeKey);\n        await i18nService.init(locale);\n        eventLoggingService.init(true);\n        authService.init();\n        const htmlEl = window.document.documentElement;\n        htmlEl.classList.add('locale_' + i18nService.translationLocale);\n        let theme = await storageService.get<string>(ConstantsService.themeKey);\n        if (theme == null) {\n            theme = 'light';\n        }\n        htmlEl.classList.add('theme_' + theme);\n        stateService.save(ConstantsService.disableFaviconKey,\n            await storageService.get<boolean>(ConstantsService.disableFaviconKey));\n        stateService.save('enableGravatars', await storageService.get<boolean>('enableGravatars'));\n    };\n}\n\n@NgModule({\n    imports: [\n        ToasterModule,\n    ],\n    declarations: [],\n    providers: [\n        ValidationService,\n        AuthGuardService,\n        OrganizationGuardService,\n        OrganizationTypeGuardService,\n        UnauthGuardService,\n        RouterService,\n        EventService,\n        LockGuardService,\n        { provide: AuditServiceAbstraction, useValue: auditService },\n        { provide: AuthServiceAbstraction, useValue: authService },\n        { provide: CipherServiceAbstraction, useValue: cipherService },\n        { provide: FolderServiceAbstraction, useValue: folderService },\n        { provide: CollectionServiceAbstraction, useValue: collectionService },\n        { provide: EnvironmentServiceAbstraction, useValue: environmentService },\n        { provide: TotpServiceAbstraction, useValue: totpService },\n        { provide: TokenServiceAbstraction, useValue: tokenService },\n        { provide: I18nServiceAbstraction, useValue: i18nService },\n        { provide: CryptoServiceAbstraction, useValue: cryptoService },\n        { provide: PlatformUtilsServiceAbstraction, useValue: platformUtilsService },\n        { provide: PasswordGenerationServiceAbstraction, useValue: passwordGenerationService },\n        { provide: ApiServiceAbstraction, useValue: apiService },\n        { provide: FileUploadServiceAbstraction, useValue: fileUploadService },\n        { provide: SyncServiceAbstraction, useValue: syncService },\n        { provide: UserServiceAbstraction, useValue: userService },\n        { provide: MessagingServiceAbstraction, useValue: messagingService },\n        { provide: BroadcasterService, useValue: broadcasterService },\n        { provide: SettingsServiceAbstraction, useValue: settingsService },\n        { provide: VaultTimeoutServiceAbstraction, useValue: vaultTimeoutService },\n        { provide: StorageServiceAbstraction, useValue: storageService },\n        { provide: StateServiceAbstraction, useValue: stateService },\n        { provide: ExportServiceAbstraction, useValue: exportService },\n        { provide: SearchServiceAbstraction, useValue: searchService },\n        { provide: ImportServiceAbstraction, useValue: importService },\n        { provide: NotificationsServiceAbstraction, useValue: notificationsService },\n        { provide: CryptoFunctionServiceAbstraction, useValue: cryptoFunctionService },\n        { provide: EventLoggingServiceAbstraction, useValue: eventLoggingService },\n        { provide: PolicyServiceAbstraction, useValue: policyService },\n        { provide: SendServiceAbstraction, useValue: sendService },\n        { provide: PasswordRepromptServiceAbstraction, useValue: passwordRepromptService },\n        {\n            provide: APP_INITIALIZER,\n            useFactory: initFactory,\n            deps: [],\n            multi: true,\n        },\n        {\n            provide: LOCALE_ID,\n            useFactory: () => i18nService.translationLocale,\n            deps: [],\n        },\n    ],\n})\nexport class ServicesModule {\n}\n","import { MessagingService } from 'jslib-common/abstractions/messaging.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nexport class BroadcasterMessagingService implements MessagingService {\n    constructor(private broadcasterService: BroadcasterService) { }\n\n    send(subscriber: string, arg: any = {}) {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        this.broadcasterService.send(message);\n    }\n}\n","import { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { ConstantsService } from 'jslib-common/services';\n\nexport class HtmlStorageService implements StorageService {\n    private localStorageKeys = new Set(['appId', 'anonymousAppId', 'rememberedEmail', 'passwordGenerationOptions',\n        ConstantsService.disableFaviconKey, 'rememberEmail', 'enableGravatars', 'enableFullWidth',\n        ConstantsService.localeKey, ConstantsService.autoConfirmFingerprints,\n        ConstantsService.vaultTimeoutKey, ConstantsService.vaultTimeoutActionKey, ConstantsService.ssoCodeVerifierKey,\n        ConstantsService.ssoStateKey, 'ssoOrgIdentifier']);\n    private localStorageStartsWithKeys = ['twoFactorToken_', ConstantsService.collapsedGroupingsKey + '_'];\n    private memoryStorageStartsWithKeys = ['ciphers_', 'folders_', 'collections_', 'settings_', 'lastSync_'];\n    private memoryStorage = new Map<string, string>();\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    async init() {\n        // LockOption -> VaultTimeout (uses the same legacy string value for backwards compat)\n        const vaultTimeout = await this.get<number>(ConstantsService.vaultTimeoutKey);\n        if (vaultTimeout == null && !this.platformUtilsService.isDev()) {\n            await this.save(ConstantsService.vaultTimeoutKey, 15);\n        }\n\n        // Default Action to lock\n        const vaultTimeoutAction = await this.get<string>(ConstantsService.vaultTimeoutActionKey);\n        if (vaultTimeoutAction == null) {\n            await this.save(ConstantsService.vaultTimeoutActionKey, 'lock');\n        }\n    }\n\n    get<T>(key: string): Promise<T> {\n        let json: string = null;\n        if (this.isLocalStorage(key)) {\n            json = window.localStorage.getItem(key);\n        } else if (this.isMemoryStorage(key)) {\n            json = this.memoryStorage.get(key);\n        } else {\n            json = window.sessionStorage.getItem(key);\n        }\n        if (json != null) {\n            const obj = JSON.parse(json);\n            return Promise.resolve(obj as T);\n        }\n        return Promise.resolve(null);\n    }\n\n    async has(key: string): Promise<boolean> {\n        return await this.get(key) != null;\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        if (obj == null) {\n            return this.remove(key);\n        }\n\n        if (obj instanceof Set) {\n            obj = Array.from(obj);\n        }\n\n        const json = JSON.stringify(obj);\n        if (this.isLocalStorage(key)) {\n            window.localStorage.setItem(key, json);\n        } else if (this.isMemoryStorage(key)) {\n            this.memoryStorage.set(key, json);\n        } else {\n            window.sessionStorage.setItem(key, json);\n        }\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        if (this.isLocalStorage(key)) {\n            window.localStorage.removeItem(key);\n        } else if (this.isMemoryStorage(key)) {\n            this.memoryStorage.delete(key);\n        } else {\n            window.sessionStorage.removeItem(key);\n        }\n        return Promise.resolve();\n    }\n\n    private isLocalStorage(key: string): boolean {\n        if (this.localStorageKeys.has(key)) {\n            return true;\n        }\n        for (const swKey of this.localStorageStartsWithKeys) {\n            if (key.startsWith(swKey)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private isMemoryStorage(key: string): boolean {\n        for (const swKey of this.memoryStorageStartsWithKeys) {\n            if (key.startsWith(swKey)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","export { ApiService } from './api.service';\nexport { AppIdService } from './appId.service';\nexport { AuditService } from './audit.service';\nexport { AuthService } from './auth.service';\nexport { CipherService } from './cipher.service';\nexport { CollectionService } from './collection.service';\nexport { ConstantsService } from './constants.service';\nexport { ContainerService } from './container.service';\nexport { CryptoService } from './crypto.service';\nexport { EnvironmentService } from './environment.service';\nexport { FolderService } from './folder.service';\nexport { I18nService } from './i18n.service';\nexport { PasswordGenerationService } from './passwordGeneration.service';\nexport { SettingsService } from './settings.service';\nexport { StateService } from './state.service';\nexport { SyncService } from './sync.service';\nexport { TokenService } from './token.service';\nexport { TotpService } from './totp.service';\nexport { UserService } from './user.service';\nexport { VaultTimeoutService } from './vaultTimeout.service';\n","import { BaseResponse } from './baseResponse';\n\nexport class ApiKeyResponse extends BaseResponse {\n    apiKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.apiKey = this.getResponseProperty('ApiKey');\n    }\n}\n","import { FileUploadType } from '../../enums/fileUploadType';\nimport { BaseResponse } from './baseResponse';\nimport { CipherResponse } from './cipherResponse';\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n    attachmentId: string;\n    fileUploadType: FileUploadType;\n    cipherResponse: CipherResponse;\n    cipherMiniResponse: CipherResponse;\n    url: string = null;\n    constructor(response: any) {\n        super(response);\n        this.attachmentId = this.getResponseProperty('AttachmentId');\n        this.fileUploadType = this.getResponseProperty('FileUploadType');\n        const cipherResponse = this.getResponseProperty('CipherResponse');\n        const cipherMiniResponse = this.getResponseProperty('CipherMiniResponse');\n        this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n        this.cipherMiniResponse = cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n        this.url = this.getResponseProperty('Url');\n    }\n\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { TransactionType } from '../../enums/transactionType';\n\nexport class BillingResponse extends BaseResponse {\n    balance: number;\n    paymentSource: BillingSourceResponse;\n    invoices: BillingInvoiceResponse[] = [];\n    transactions: BillingTransactionResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.balance = this.getResponseProperty('Balance');\n        const paymentSource = this.getResponseProperty('PaymentSource');\n        const transactions = this.getResponseProperty('Transactions');\n        const invoices = this.getResponseProperty('Invoices');\n        this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n        if (transactions != null) {\n            this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n        }\n        if (invoices != null) {\n            this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n        }\n    }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n    type: PaymentMethodType;\n    cardBrand: string;\n    description: string;\n    needsVerification: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.cardBrand = this.getResponseProperty('CardBrand');\n        this.description = this.getResponseProperty('Description');\n        this.needsVerification = this.getResponseProperty('NeedsVerification');\n    }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n    url: string;\n    pdfUrl: string;\n    number: string;\n    paid: boolean;\n    date: string;\n    amount: number;\n\n    constructor(response: any) {\n        super(response);\n        this.url = this.getResponseProperty('Url');\n        this.pdfUrl = this.getResponseProperty('PdfUrl');\n        this.number = this.getResponseProperty('Number');\n        this.paid = this.getResponseProperty('Paid');\n        this.date = this.getResponseProperty('Date');\n        this.amount = this.getResponseProperty('Amount');\n    }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n    createdDate: string;\n    amount: number;\n    refunded: boolean;\n    partiallyRefunded: boolean;\n    refundedAmount: number;\n    type: TransactionType;\n    paymentMethodType: PaymentMethodType;\n    details: string;\n\n    constructor(response: any) {\n        super(response);\n        this.createdDate = this.getResponseProperty('CreatedDate');\n        this.amount = this.getResponseProperty('Amount');\n        this.refunded = this.getResponseProperty('Refunded');\n        this.partiallyRefunded = this.getResponseProperty('PartiallyRefunded');\n        this.refundedAmount = this.getResponseProperty('RefundedAmount');\n        this.type = this.getResponseProperty('Type');\n        this.paymentMethodType = this.getResponseProperty('PaymentMethodType');\n        this.details = this.getResponseProperty('Details');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class BreachAccountResponse extends BaseResponse {\n    addedDate: string;\n    breachDate: string;\n    dataClasses: string[];\n    description: string;\n    domain: string;\n    isActive: boolean;\n    isVerified: boolean;\n    logoPath: string;\n    modifiedDate: string;\n    name: string;\n    pwnCount: number;\n    title: string;\n\n    constructor(response: any) {\n        super(response);\n        this.addedDate = this.getResponseProperty('AddedDate');\n        this.breachDate = this.getResponseProperty('BreachDate');\n        this.dataClasses = this.getResponseProperty('DataClasses');\n        this.description = this.getResponseProperty('Description');\n        this.domain = this.getResponseProperty('Domain');\n        this.isActive = this.getResponseProperty('IsActive');\n        this.isVerified = this.getResponseProperty('IsVerified');\n        this.logoPath = this.getResponseProperty('LogoPath');\n        this.modifiedDate = this.getResponseProperty('ModifiedDate');\n        this.name = this.getResponseProperty('Name');\n        this.pwnCount = this.getResponseProperty('PwnCount');\n        this.title = this.getResponseProperty('Title');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { DeviceType } from '../../enums/deviceType';\nimport { EventType } from '../../enums/eventType';\n\nexport class EventResponse extends BaseResponse {\n    type: EventType;\n    userId: string;\n    organizationId: string;\n    cipherId: string;\n    collectionId: string;\n    groupId: string;\n    policyId: string;\n    organizationUserId: string;\n    actingUserId: string;\n    date: string;\n    deviceType: DeviceType;\n    ipAddress: string;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.userId = this.getResponseProperty('UserId');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.cipherId = this.getResponseProperty('CipherId');\n        this.collectionId = this.getResponseProperty('CollectionId');\n        this.groupId = this.getResponseProperty('GroupId');\n        this.policyId = this.getResponseProperty('PolicyId');\n        this.organizationUserId = this.getResponseProperty('OrganizationUserId');\n        this.actingUserId = this.getResponseProperty('ActingUserId');\n        this.date = this.getResponseProperty('Date');\n        this.deviceType = this.getResponseProperty('DeviceType');\n        this.ipAddress = this.getResponseProperty('IpAddress');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class GroupResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    name: string;\n    accessAll: boolean;\n    externalId: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.name = this.getResponseProperty('Name');\n        this.accessAll = this.getResponseProperty('AccessAll');\n        this.externalId = this.getResponseProperty('ExternalId');\n    }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n    collections: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n        }\n    }\n}\n","import { KeysResponse } from './keysResponse';\n\nexport class OrganizationKeysResponse extends KeysResponse {\n    constructor(response: any) {\n        super(response);\n    }\n}\n","import { OrganizationResponse } from './organizationResponse';\nimport {\n    BillingSubscriptionResponse,\n    BillingSubscriptionUpcomingInvoiceResponse,\n} from './subscriptionResponse';\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n    storageName: string;\n    storageGb: number;\n    subscription: BillingSubscriptionResponse;\n    upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n    expiration: string;\n\n    constructor(response: any) {\n        super(response);\n        this.storageName = this.getResponseProperty('StorageName');\n        this.storageGb = this.getResponseProperty('StorageGb');\n        const subscription = this.getResponseProperty('Subscription');\n        this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n        const upcomingInvoice = this.getResponseProperty('UpcomingInvoice');\n        this.upcomingInvoice = upcomingInvoice == null ? null :\n            new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n        this.expiration = this.getResponseProperty('Expiration');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n    id: string;\n    userId: string;\n    key: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.key = this.getResponseProperty('Key');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n    id: string;\n    error: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.error = this.getResponseProperty('Error');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nimport { PermissionsApi } from '../api/permissionsApi';\n\nimport { KdfType } from '../../enums/kdfType';\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nexport class OrganizationUserResponse extends BaseResponse {\n    id: string;\n    userId: string;\n    type: OrganizationUserType;\n    status: OrganizationUserStatusType;\n    accessAll: boolean;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.permissions = new PermissionsApi(this.getResponseProperty('Permissions'));\n        this.accessAll = this.getResponseProperty('AccessAll');\n        this.resetPasswordEnrolled = this.getResponseProperty('ResetPasswordEnrolled');\n    }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n    name: string;\n    email: string;\n    twoFactorEnabled: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.twoFactorEnabled = this.getResponseProperty('TwoFactorEnabled');\n    }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n    collections: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n        }\n    }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n    kdf: KdfType;\n    kdfIterations: number;\n    resetPasswordKey: string;\n    encryptedPrivateKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n        this.resetPasswordKey = this.getResponseProperty('ResetPasswordKey');\n        this.encryptedPrivateKey = this.getResponseProperty('EncryptedPrivateKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { ProfileResponse } from './profileResponse';\n\nexport class PaymentResponse extends BaseResponse {\n    userProfile: ProfileResponse;\n    paymentIntentClientSecret: string;\n    success: boolean;\n\n    constructor(response: any) {\n        super(response);\n        const userProfile = this.getResponseProperty('UserProfile');\n        if (userProfile != null) {\n            this.userProfile = new ProfileResponse(userProfile);\n        }\n        this.paymentIntentClientSecret = this.getResponseProperty('PaymentIntentClientSecret');\n        this.success = this.getResponseProperty('Success');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class PreloginResponse extends BaseResponse {\n    kdf: KdfType;\n    kdfIterations: number;\n\n    constructor(response: any) {\n        super(response);\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { SendType } from '../../enums/sendType';\n\nimport { SendFileApi } from '../api/sendFileApi';\nimport { SendTextApi } from '../api/sendTextApi';\n\nexport class SendAccessResponse extends BaseResponse {\n    id: string;\n    type: SendType;\n    name: string;\n    file: SendFileApi;\n    text: SendTextApi;\n    expirationDate: Date;\n    creatorIdentifier: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n\n        const text = this.getResponseProperty('Text');\n        if (text != null) {\n            this.text = new SendTextApi(text);\n        }\n\n        const file = this.getResponseProperty('File');\n        if (file != null) {\n            this.file = new SendFileApi(file);\n        }\n\n        this.expirationDate = this.getResponseProperty('ExpirationDate');\n        this.creatorIdentifier = this.getResponseProperty('CreatorIdentifier');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n\n    id: string = null;\n    url: string = null;\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.url = this.getResponseProperty('Url');\n    }\n}\n","import { FileUploadType } from '../../enums/fileUploadType';\n\nimport { BaseResponse } from './baseResponse';\nimport { SendResponse } from './sendResponse';\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n\n    fileUploadType: FileUploadType;\n    sendResponse: SendResponse;\n    url: string = null;\n    constructor(response: any) {\n        super(response);\n        this.fileUploadType = this.getResponseProperty('FileUploadType');\n        const sendResponse = this.getResponseProperty('SendResponse');\n        this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n        this.url = this.getResponseProperty('Url');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TaxInfoResponse extends BaseResponse {\n    taxId: string;\n    taxIdType: string;\n    line1: string;\n    line2: string;\n    city: string;\n    state: string;\n    country: string;\n    postalCode: string;\n\n    constructor(response: any) {\n        super(response);\n        this.taxId = this.getResponseProperty('TaxIdNumber');\n        this.taxIdType = this.getResponseProperty('TaxIdType');\n        this.line1 = this.getResponseProperty('Line1');\n        this.line2 = this.getResponseProperty('Line2');\n        this.city = this.getResponseProperty('City');\n        this.state = this.getResponseProperty('State');\n        this.postalCode = this.getResponseProperty('PostalCode');\n        this.country = this.getResponseProperty('Country');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TaxRateResponse extends BaseResponse {\n    id: string;\n    country: string;\n    state: string;\n    postalCode: string;\n    rate: number;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.country = this.getResponseProperty('Country');\n        this.state = this.getResponseProperty('State');\n        this.postalCode = this.getResponseProperty('PostalCode');\n        this.rate = this.getResponseProperty('Rate');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n    enabled: boolean;\n    key: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.key = this.getResponseProperty('Key');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n    enabled: boolean;\n    host: string;\n    secretKey: string;\n    integrationKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.host = this.getResponseProperty('Host');\n        this.secretKey = this.getResponseProperty('SecretKey');\n        this.integrationKey = this.getResponseProperty('IntegrationKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n    enabled: boolean;\n    email: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.email = this.getResponseProperty('Email');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n    enabled: boolean;\n    type: TwoFactorProviderType;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.type = this.getResponseProperty('Type');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n    code: string;\n\n    constructor(response: any) {\n        super(response);\n        this.code = this.getResponseProperty('Code');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n    enabled: boolean;\n    key1: string;\n    key2: string;\n    key3: string;\n    key4: string;\n    key5: string;\n    nfc: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.key1 = this.getResponseProperty('Key1');\n        this.key2 = this.getResponseProperty('Key2');\n        this.key3 = this.getResponseProperty('Key3');\n        this.key4 = this.getResponseProperty('Key4');\n        this.key5 = this.getResponseProperty('Key5');\n        this.nfc = this.getResponseProperty('Nfc');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class UserKeyResponse extends BaseResponse {\n    userId: string;\n    publicKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.userId = this.getResponseProperty('UserId');\n        this.publicKey = this.getResponseProperty('PublicKey');\n    }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n    return <T>(target: any, propertyKey: string | symbol,\n        descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>) => {\n        const originalMethod: () => Promise<T> = descriptor.value;\n        const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n        const getThrottles = (obj: any) => {\n            let throttles = allThrottles.get(obj);\n            if (throttles != null) {\n                return throttles;\n            }\n            throttles = new Map<string, (() => void)[]>();\n            allThrottles.set(obj, throttles);\n            return throttles;\n        };\n\n        return {\n            value: function(...args: any[]) {\n                const throttles = getThrottles(this);\n                const argsThrottleKey = throttleKey(args);\n                let queue = throttles.get(argsThrottleKey);\n                if (queue == null) {\n                    queue = [];\n                    throttles.set(argsThrottleKey, queue);\n                }\n\n                return new Promise<T>((resolve, reject) => {\n                    const exec = () => {\n                        const onFinally = () => {\n                            queue.splice(queue.indexOf(exec), 1);\n                            if (queue.length >= limit) {\n                                queue[limit - 1]();\n                            } else if (queue.length === 0) {\n                                throttles.delete(argsThrottleKey);\n                                if (throttles.size === 0) {\n                                    allThrottles.delete(this);\n                                }\n                            }\n                        };\n                        originalMethod.apply(this, args).then((val: any) => {\n                            onFinally();\n                            return val;\n                        }).catch((err: any) => {\n                            onFinally();\n                            throw err;\n                        }).then(resolve, reject);\n                    };\n                    queue.push(exec);\n                    if (queue.length <= limit) {\n                        exec();\n                    }\n                });\n            },\n        };\n    };\n}\n","export class CipherBulkMoveRequest {\n    ids: string[];\n    folderId: string;\n\n    constructor(ids: string[], folderId: string) {\n        this.ids = ids == null ? [] : ids;\n        this.folderId = folderId;\n    }\n}\n","export class CipherBulkRestoreRequest {\n    ids: string[];\n\n    constructor(ids: string[]) {\n        this.ids = ids == null ? [] : ids;\n    }\n}\n","import { CipherWithIdRequest } from './cipherWithIdRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherBulkShareRequest {\n    ciphers: CipherWithIdRequest[];\n    collectionIds: string[];\n\n    constructor(ciphers: Cipher[], collectionIds: string[]) {\n        if (ciphers != null) {\n            this.ciphers = [];\n            ciphers.forEach(c => {\n                this.ciphers.push(new CipherWithIdRequest(c));\n            });\n        }\n        this.collectionIds = collectionIds;\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherShareRequest {\n    cipher: CipherRequest;\n    collectionIds: string[];\n\n    constructor(cipher: Cipher) {\n        this.cipher = new CipherRequest(cipher);\n        this.collectionIds = cipher.collectionIds;\n    }\n}\n","import { CipherView } from '../view';\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n    private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n    private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n    constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) { }\n\n    isCached(url: string) {\n        return this.sortedCiphersByUrl.has(url);\n    }\n\n    addCiphers(url: string, ciphers: CipherView[]) {\n        ciphers.sort(this.comparator);\n        this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n        this.resetTimer(url);\n    }\n\n    getLastUsed(url: string) {\n        this.resetTimer(url);\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n    }\n\n    getLastLaunched(url: string) {\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n    }\n\n    getNext(url: string) {\n        this.resetTimer(url);\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n    }\n\n    updateLastUsedIndex(url: string) {\n        if (this.isCached(url)) {\n            this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n        }\n    }\n\n    clear() {\n        this.sortedCiphersByUrl.clear();\n        this.timeouts.clear();\n    }\n\n    private resetTimer(url: string) {\n        clearTimeout(this.timeouts.get(url));\n        this.timeouts.set(url, setTimeout(() => {\n            this.sortedCiphersByUrl.delete(url);\n            this.timeouts.delete(url);\n        }, CacheTTL));\n    }\n}\n\nclass Ciphers {\n    lastUsedIndex = -1;\n\n    constructor(private readonly ciphers: CipherView[]) { }\n\n    getLastUsed() {\n        this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n        return this.ciphers[this.lastUsedIndex];\n    }\n\n    getLastLaunched() {\n        const usedCiphers = this.ciphers.filter(cipher => cipher.localData?.lastLaunched);\n        const sortedCiphers = usedCiphers.sort((x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf());\n        return sortedCiphers[0];\n    }\n\n    getNextIndex() {\n        return (this.lastUsedIndex + 1) % this.ciphers.length;\n    }\n\n    getNext() {\n        return this.ciphers[this.getNextIndex()];\n    }\n\n    updateLastUsedIndex() {\n        this.lastUsedIndex = this.getNextIndex();\n    }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n    parent: T;\n    node: T;\n    children: TreeNode<T>[] = [];\n\n    constructor(node: T, name: string, parent: T) {\n        this.parent = parent;\n        this.node = node;\n        this.node.name = name;\n    }\n}\n\nexport interface ITreeNodeObject {\n    id: string;\n    name: string;\n}\n","export class EncArrayBuffer {\n    constructor(public buffer: ArrayBuffer) { }\n}\n","import Domain from './domainBase';\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n    defaultType: string = '';\n    minLength: number = 0;\n    useUppercase: boolean = false;\n    useLowercase: boolean = false;\n    useNumbers: boolean = false;\n    numberCount: number = 0;\n    useSpecial: boolean = false;\n    specialCount: number = 0;\n    minNumberWords: number = 0;\n    capitalize: boolean = false;\n    includeNumber: boolean = false;\n\n    inEffect() {\n        return this.defaultType !== '' ||\n            this.minLength > 0 ||\n            this.numberCount > 0 ||\n            this.specialCount > 0 ||\n            this.useUppercase ||\n            this.useLowercase ||\n            this.useNumbers ||\n            this.useSpecial ||\n            this.minNumberWords > 0 ||\n            this.capitalize ||\n            this.includeNumber;\n    }\n}\n","import { ProfileOrganizationResponse } from '../response/profileOrganizationResponse';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class OrganizationData {\n    id: string;\n    name: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useBusinessPortal: boolean;\n    useSso: boolean;\n    useResetPassword: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    ssoBound: boolean;\n    identifier: string;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n    userId: string;\n    hasPublicAndPrivateKeys: boolean;\n\n    constructor(response: ProfileOrganizationResponse) {\n        this.id = response.id;\n        this.name = response.name;\n        this.status = response.status;\n        this.type = response.type;\n        this.enabled = response.enabled;\n        this.usePolicies = response.usePolicies;\n        this.useGroups = response.useGroups;\n        this.useDirectory = response.useDirectory;\n        this.useEvents = response.useEvents;\n        this.useTotp = response.useTotp;\n        this.use2fa = response.use2fa;\n        this.useApi = response.useApi;\n        this.useBusinessPortal = response.useBusinessPortal;\n        this.useSso = response.useSso;\n        this.useResetPassword = response.useResetPassword;\n        this.selfHost = response.selfHost;\n        this.usersGetPremium = response.usersGetPremium;\n        this.seats = response.seats;\n        this.maxCollections = response.maxCollections;\n        this.maxStorageGb = response.maxStorageGb;\n        this.ssoBound = response.ssoBound;\n        this.identifier = response.identifier;\n        this.permissions = response.permissions;\n        this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n        this.userId = response.userId;\n        this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    }\n}\n","import { SendFileApi } from '../api/sendFileApi';\n\nexport class SendFileData {\n    id: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(data?: SendFileApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.id = data.id;\n        this.fileName = data.fileName;\n        this.key = data.key;\n        this.size = data.size;\n        this.sizeName = data.sizeName;\n    }\n}\n","import { SendTextApi } from '../api/sendTextApi';\n\nexport class SendTextData {\n    text: string;\n    hidden: boolean;\n\n    constructor(data?: SendTextApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.text = data.text;\n        this.hidden = data.hidden;\n    }\n}\n","import { I18nService as BaseI18nService } from 'jslib-common/services/i18n.service';\n\nexport class I18nService extends BaseI18nService {\n    constructor(systemLanguage: string, localesDirectory: string) {\n        super(systemLanguage || 'en-US', localesDirectory, async (formattedLocale: string) => {\n            const filePath = this.localesDirectory + '/' + formattedLocale + '/messages.json?cache=' +\n                process.env.CACHE_TAG;\n            const localesResult = await fetch(filePath);\n            const locales = await localesResult.json();\n            return locales;\n        });\n\n        this.supportedTranslationLocales = [\n            'az', 'en', 'bg', 'ca', 'cs', 'da', 'de', 'el', 'eo', 'en-GB', 'en-IN', 'es', 'et', 'fi', 'fr', 'he', 'hr', 'hu', 'id', 'it', 'ja', 'kn', 'ko', 'lv', 'ml', 'nb',\n            'nl', 'pl', 'pt-PT', 'pt-BR', 'ro', 'ru', 'sk', 'sr', 'sv', 'tr', 'uk', 'zh-CN', 'zh-TW',\n        ];\n    }\n}\n","import { StorageService } from 'jslib-common/abstractions/storage.service';\n\nexport class MemoryStorageService implements StorageService {\n    private store = new Map<string, any>();\n\n    get<T>(key: string): Promise<T> {\n        if (this.store.has(key)) {\n            const obj = this.store.get(key);\n            return Promise.resolve(obj as T);\n        }\n        return Promise.resolve(null);\n    }\n\n    async has(key: string): Promise<boolean> {\n        return this.get(key) != null;\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        if (obj == null) {\n            return this.remove(key);\n        }\n        this.store.set(key, obj);\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        this.store.delete(key);\n        return Promise.resolve();\n    }\n}\n","import Swal, { SweetAlertIcon } from 'sweetalert2';\n\nimport { DeviceType } from 'jslib-common/enums/deviceType';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n    identityClientId: string = 'web';\n\n    private browserCache: DeviceType = null;\n\n    constructor(private i18nService: I18nService, private messagingService: MessagingService,\n        private logService: LogService) { }\n\n    getDevice(): DeviceType {\n        if (this.browserCache != null) {\n            return this.browserCache;\n        }\n\n        if (navigator.userAgent.indexOf(' Firefox/') !== -1 || navigator.userAgent.indexOf(' Gecko/') !== -1) {\n            this.browserCache = DeviceType.FirefoxBrowser;\n        } else if (navigator.userAgent.indexOf(' OPR/') >= 0) {\n            this.browserCache = DeviceType.OperaBrowser;\n        } else if (navigator.userAgent.indexOf(' Edg/') !== -1) {\n            this.browserCache = DeviceType.EdgeBrowser;\n        } else if (navigator.userAgent.indexOf(' Vivaldi/') !== -1) {\n            this.browserCache = DeviceType.VivaldiBrowser;\n        } else if (navigator.userAgent.indexOf(' Safari/') !== -1 && navigator.userAgent.indexOf('Chrome') === -1) {\n            this.browserCache = DeviceType.SafariBrowser;\n        } else if ((window as any).chrome && navigator.userAgent.indexOf(' Chrome/') !== -1) {\n            this.browserCache = DeviceType.ChromeBrowser;\n        } else if (navigator.userAgent.indexOf(' Trident/') !== -1) {\n            this.browserCache = DeviceType.IEBrowser;\n        } else {\n            this.browserCache = DeviceType.UnknownBrowser;\n        }\n\n        return this.browserCache;\n    }\n\n    getDeviceString(): string {\n        const device = DeviceType[this.getDevice()].toLowerCase();\n        return device.replace('browser', '');\n    }\n\n    isFirefox(): boolean {\n        return this.getDevice() === DeviceType.FirefoxBrowser;\n    }\n\n    isChrome(): boolean {\n        return this.getDevice() === DeviceType.ChromeBrowser;\n    }\n\n    isEdge(): boolean {\n        return this.getDevice() === DeviceType.EdgeBrowser;\n    }\n\n    isOpera(): boolean {\n        return this.getDevice() === DeviceType.OperaBrowser;\n    }\n\n    isVivaldi(): boolean {\n        return this.getDevice() === DeviceType.VivaldiBrowser;\n    }\n\n    isSafari(): boolean {\n        return this.getDevice() === DeviceType.SafariBrowser;\n    }\n\n    isIE(): boolean {\n        return this.getDevice() === DeviceType.IEBrowser;\n    }\n\n    isMacAppStore(): boolean {\n        return false;\n    }\n\n    isViewOpen(): Promise<boolean> {\n        return Promise.resolve(false);\n    }\n\n    lockTimeout(): number {\n        return null;\n    }\n\n    launchUri(uri: string, options?: any): void {\n        const a = document.createElement('a');\n        a.href = uri;\n        if (options == null || !options.sameWindow) {\n            a.target = '_blank';\n            a.rel = 'noreferrer noopener';\n        }\n        a.classList.add('d-none');\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n    }\n\n    saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n        let blob: Blob = null;\n        let type: string = null;\n        const fileNameLower = fileName.toLowerCase();\n        let doDownload = true;\n        if (fileNameLower.endsWith('.pdf')) {\n            type = 'application/pdf';\n            doDownload = false;\n        } else if (fileNameLower.endsWith('.xlsx')) {\n            type = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n        } else if (fileNameLower.endsWith('.docx')) {\n            type = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n        } else if (fileNameLower.endsWith('.pptx')) {\n            type = 'application/vnd.openxmlformats-officedocument.presentationml.presentation';\n        } else if (fileNameLower.endsWith('.csv')) {\n            type = 'text/csv';\n        } else if (fileNameLower.endsWith('.png')) {\n            type = 'image/png';\n        } else if (fileNameLower.endsWith('.jpg') || fileNameLower.endsWith('.jpeg')) {\n            type = 'image/jpeg';\n        } else if (fileNameLower.endsWith('.gif')) {\n            type = 'image/gif';\n        }\n        if (type != null) {\n            blobOptions = blobOptions || {};\n            if (blobOptions.type == null) {\n                blobOptions.type = type;\n            }\n        }\n        if (blobOptions != null && !this.isIE()) {\n            blob = new Blob([blobData], blobOptions);\n        } else {\n            blob = new Blob([blobData]);\n        }\n        if (navigator.msSaveOrOpenBlob) {\n            navigator.msSaveBlob(blob, fileName);\n        } else {\n            const a = win.document.createElement('a');\n            if (doDownload) {\n                a.download = fileName;\n            } else if (!this.isSafari()) {\n                a.target = '_blank';\n            }\n            a.href = URL.createObjectURL(blob);\n            a.style.position = 'fixed';\n            win.document.body.appendChild(a);\n            a.click();\n            win.document.body.removeChild(a);\n        }\n    }\n\n    getApplicationVersion(): Promise<string> {\n        return Promise.resolve(process.env.APPLICATION_VERSION || '-');\n    }\n\n    supportsWebAuthn(win: Window): boolean {\n        return (typeof(PublicKeyCredential) !== 'undefined');\n    }\n\n    supportsDuo(): boolean {\n        return true;\n    }\n\n    showToast(type: 'error' | 'success' | 'warning' | 'info', title: string, text: string | string[],\n        options?: any): void {\n        this.messagingService.send('showToast', {\n            text: text,\n            title: title,\n            type: type,\n            options: options,\n        });\n    }\n\n    async showDialog(body: string, title?: string, confirmText?: string, cancelText?: string, type?: string,\n        bodyIsHtml: boolean = false) {\n        let iconClasses: string = null;\n        if (type != null) {\n            // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n            switch (type) {\n                case 'success':\n                    iconClasses = 'fa-check text-success';\n                    break;\n                case 'warning':\n                    iconClasses = 'fa-warning text-warning';\n                    break;\n                case 'error':\n                    iconClasses = 'fa-bolt text-danger';\n                    break;\n                case 'info':\n                    iconClasses = 'fa-info-circle text-info';\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        const bootstrapModal = document.querySelector('div.modal');\n        if (bootstrapModal != null) {\n            bootstrapModal.removeAttribute('tabindex');\n        }\n\n        const iconHtmlStr = iconClasses != null ? `<i class=\"swal-custom-icon fa ${iconClasses}\"></i>` : undefined;\n        const confirmed = await Swal.fire({\n            heightAuto: false,\n            buttonsStyling: false,\n            icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n            iconHtml: iconHtmlStr,\n            text: bodyIsHtml ? null : body,\n            html: bodyIsHtml ? body : null,\n            titleText: title,\n            showCancelButton: (cancelText != null),\n            cancelButtonText: cancelText,\n            showConfirmButton: true,\n            confirmButtonText: confirmText == null ? this.i18nService.t('ok') : confirmText,\n        });\n\n        if (bootstrapModal != null) {\n            bootstrapModal.setAttribute('tabindex', '-1');\n        }\n\n        return confirmed.value;\n    }\n\n    async showPasswordDialog(title: string, body: string, passwordValidation: (value: string) => Promise<boolean>):\n        Promise<boolean> {\n        const result = await Swal.fire({\n            heightAuto: false,\n            titleText: title,\n            input: 'password',\n            text: body,\n            confirmButtonText: this.i18nService.t('ok'),\n            showCancelButton: true,\n            cancelButtonText: this.i18nService.t('cancel'),\n            inputAttributes: {\n                autocapitalize: 'off',\n                autocorrect: 'off',\n            },\n            inputValidator: async (value: string): Promise<any> => {\n                if (await passwordValidation(value)) {\n                    return false;\n                }\n\n                return this.i18nService.t('invalidMasterPassword');\n            },\n        });\n\n        return result.isConfirmed;\n    }\n\n    isDev(): boolean {\n        return process.env.ENV === 'development';\n    }\n\n    isSelfHost(): boolean {\n        return process.env.SELF_HOST.toString() === 'true';\n    }\n\n    copyToClipboard(text: string, options?: any): void | boolean {\n        let win = window;\n        let doc = window.document;\n        if (options && (options.window || options.win)) {\n            win = options.window || options.win;\n            doc = win.document;\n        } else if (options && options.doc) {\n            doc = options.doc;\n        }\n        if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n            // IE specific code path to prevent textarea being shown while dialog is visible.\n            (win as any).clipboardData.setData('Text', text);\n        } else if (doc.queryCommandSupported && doc.queryCommandSupported('copy')) {\n            const textarea = doc.createElement('textarea');\n            textarea.textContent = text;\n            // Prevent scrolling to bottom of page in MS Edge.\n            textarea.style.position = 'fixed';\n            let copyEl = doc.body;\n            // For some reason copy command won't work when modal is open if appending to body\n            if (doc.body.classList.contains('modal-open')) {\n                copyEl = doc.body.querySelector<HTMLElement>('.modal');\n            }\n            copyEl.appendChild(textarea);\n            textarea.select();\n            let success = false;\n            try {\n                // Security exception may be thrown by some browsers.\n                success = doc.execCommand('copy');\n                if (!success) {\n                    this.logService.debug('Copy command unsupported or disabled.');\n                }\n            } catch (e) {\n                // tslint:disable-next-line\n                console.warn('Copy to clipboard failed.', e);\n            } finally {\n                copyEl.removeChild(textarea);\n            }\n            return success;\n        }\n    }\n\n    readFromClipboard(options?: any): Promise<string> {\n        throw new Error('Cannot read from clipboard on web.');\n    }\n\n    supportsBiometric() {\n        return Promise.resolve(false);\n    }\n\n    authenticateBiometric() {\n        return Promise.resolve(false);\n    }\n\n    supportsSecureStorage() {\n        return false;\n    }\n\n    getDefaultSystemTheme() {\n        return Promise.resolve(null as 'light' | 'dark');\n    }\n\n    onDefaultSystemThemeChange() {\n        /* noop */\n    }\n}\n","import { EventType } from '../enums/eventType';\n\nimport { EventData } from '../models/data/eventData';\n\nimport { EventRequest } from '../models/request/eventRequest';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { EventService as EventServiceAbstraction } from '../abstractions/event.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ConstantsService } from './constants.service';\n\nexport class EventService implements EventServiceAbstraction {\n    private inited = false;\n\n    constructor(private storageService: StorageService, private apiService: ApiService,\n        private userService: UserService, private cipherService: CipherService) { }\n\n    init(checkOnInterval: boolean) {\n        if (this.inited) {\n            return;\n        }\n\n        this.inited = true;\n        if (checkOnInterval) {\n            this.uploadEvents();\n            setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n        }\n    }\n\n    async collect(eventType: EventType, cipherId: string = null, uploadImmediately = false): Promise<any> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n        const organizations = await this.userService.getAllOrganizations();\n        if (organizations == null) {\n            return;\n        }\n        const orgIds = new Set<string>(organizations.filter(o => o.useEvents).map(o => o.id));\n        if (orgIds.size === 0) {\n            return;\n        }\n        if (cipherId != null) {\n            const cipher = await this.cipherService.get(cipherId);\n            if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n                return;\n            }\n        }\n        let eventCollection = await this.storageService.get<EventData[]>(ConstantsService.eventCollectionKey);\n        if (eventCollection == null) {\n            eventCollection = [];\n        }\n        const event = new EventData();\n        event.type = eventType;\n        event.cipherId = cipherId;\n        event.date = new Date().toISOString();\n        eventCollection.push(event);\n        await this.storageService.save(ConstantsService.eventCollectionKey, eventCollection);\n        if (uploadImmediately) {\n            await this.uploadEvents();\n        }\n    }\n\n    async uploadEvents(): Promise<any> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n        const eventCollection = await this.storageService.get<EventData[]>(ConstantsService.eventCollectionKey);\n        if (eventCollection == null || eventCollection.length === 0) {\n            return;\n        }\n        const request = eventCollection.map(e => {\n            const req = new EventRequest();\n            req.type = e.type;\n            req.cipherId = e.cipherId;\n            req.date = e.date;\n            return req;\n        });\n        try {\n            await this.apiService.postEventsCollect(request);\n            this.clearEvents();\n        } catch { }\n    }\n\n    async clearEvents(): Promise<any> {\n        await this.storageService.remove(ConstantsService.eventCollectionKey);\n    }\n}\n","import { EventType } from '../../enums/eventType';\n\nexport class EventData {\n    type: EventType;\n    cipherId: string;\n    date: string;\n}\n","import { EventType } from '../../enums/eventType';\n\nexport class EventRequest {\n    type: EventType;\n    cipherId: string;\n    date: string;\n}\n","import * as papa from 'papaparse';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { ExportService as ExportServiceAbstraction } from '../abstractions/export.service';\nimport { FolderService } from '../abstractions/folder.service';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { Cipher } from '../models/domain/cipher';\nimport { Collection } from '../models/domain/collection';\nimport { Folder } from '../models/domain/folder';\n\nimport { CipherData } from '../models/data/cipherData';\nimport { CollectionData } from '../models/data/collectionData';\nimport { CollectionDetailsResponse } from '../models/response/collectionResponse';\n\nimport { CipherWithIds as CipherExport } from '../models/export/cipherWithIds';\nimport { CollectionWithId as CollectionExport } from '../models/export/collectionWithId';\nimport { Event } from '../models/export/event';\nimport { FolderWithId as FolderExport } from '../models/export/folderWithId';\nimport { EventView } from '../models/view/eventView';\n\nimport { Utils } from '../misc/utils';\n\nexport class ExportService implements ExportServiceAbstraction {\n    constructor(private folderService: FolderService, private cipherService: CipherService,\n        private apiService: ApiService, private cryptoService: CryptoService) { }\n\n    async getExport(format: 'csv' | 'json' | 'encrypted_json' = 'csv'): Promise<string> {\n        if (format === 'encrypted_json') {\n            return this.getEncryptedExport();\n        } else {\n            return this.getDecryptedExport(format);\n        }\n    }\n\n    async getOrganizationExport(organizationId: string,\n        format: 'csv' | 'json' | 'encrypted_json' = 'csv'): Promise<string> {\n        if (format === 'encrypted_json') {\n            return this.getOrganizationEncryptedExport(organizationId);\n        } else {\n            return this.getOrganizationDecryptedExport(organizationId, format);\n        }\n    }\n\n    async getEventExport(events: EventView[]): Promise<string> {\n        return papa.unparse(events.map(e => new Event(e)));\n    }\n\n    getFileName(prefix: string = null, extension: string = 'csv'): string {\n        const now = new Date();\n        const dateString =\n            now.getFullYear() + '' + this.padNumber(now.getMonth() + 1, 2) + '' + this.padNumber(now.getDate(), 2) +\n            this.padNumber(now.getHours(), 2) + '' + this.padNumber(now.getMinutes(), 2) +\n            this.padNumber(now.getSeconds(), 2);\n\n        return 'bitwarden' + (prefix ? ('_' + prefix) : '') + '_export_' + dateString + '.' + extension;\n    }\n\n    private async getDecryptedExport(format: 'json' | 'csv'): Promise<string> {\n        let decFolders: FolderView[] = [];\n        let decCiphers: CipherView[] = [];\n        const promises = [];\n\n        promises.push(this.folderService.getAllDecrypted().then(folders => {\n            decFolders = folders;\n        }));\n\n        promises.push(this.cipherService.getAllDecrypted().then(ciphers => {\n            decCiphers = ciphers.filter(f => f.deletedDate == null);\n        }));\n\n        await Promise.all(promises);\n\n        if (format === 'csv') {\n            const foldersMap = new Map<string, FolderView>();\n            decFolders.forEach(f => {\n                if (f.id != null) {\n                    foldersMap.set(f.id, f);\n                }\n            });\n\n            const exportCiphers: any[] = [];\n            decCiphers.forEach(c => {\n                // only export logins and secure notes\n                if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n                    return;\n                }\n                if (c.organizationId != null) {\n                    return;\n                }\n\n                const cipher: any = {};\n                cipher.folder = c.folderId != null && foldersMap.has(c.folderId) ?\n                    foldersMap.get(c.folderId).name : null;\n                cipher.favorite = c.favorite ? 1 : null;\n                this.buildCommonCipher(cipher, c);\n                exportCiphers.push(cipher);\n            });\n\n            return papa.unparse(exportCiphers);\n        } else {\n            const jsonDoc: any = {\n                encrypted: false,\n                folders: [],\n                items: [],\n            };\n\n            decFolders.forEach(f => {\n                if (f.id == null) {\n                    return;\n                }\n                const folder = new FolderExport();\n                folder.build(f);\n                jsonDoc.folders.push(folder);\n            });\n\n            decCiphers.forEach(c => {\n                if (c.organizationId != null) {\n                    return;\n                }\n                const cipher = new CipherExport();\n                cipher.build(c);\n                cipher.collectionIds = null;\n                jsonDoc.items.push(cipher);\n            });\n\n            return JSON.stringify(jsonDoc, null, '  ');\n        }\n    }\n\n    private async getEncryptedExport(): Promise<string> {\n        let folders: Folder[] = [];\n        let ciphers: Cipher[] = [];\n        const promises = [];\n\n        promises.push(this.folderService.getAll().then(f => {\n            folders = f;\n        }));\n\n        promises.push(this.cipherService.getAll().then(c => {\n            ciphers = c.filter(f => f.deletedDate == null);\n        }));\n\n        await Promise.all(promises);\n\n        const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n        const jsonDoc: any = {\n            encrypted: true,\n            encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n            folders: [],\n            items: [],\n        };\n\n        folders.forEach(f => {\n            if (f.id == null) {\n                return;\n            }\n            const folder = new FolderExport();\n            folder.build(f);\n            jsonDoc.folders.push(folder);\n        });\n\n        ciphers.forEach(c => {\n            if (c.organizationId != null) {\n                return;\n            }\n            const cipher = new CipherExport();\n            cipher.build(c);\n            cipher.collectionIds = null;\n            jsonDoc.items.push(cipher);\n        });\n\n        return JSON.stringify(jsonDoc, null, '  ');\n    }\n\n    private async getOrganizationDecryptedExport(organizationId: string, format: 'json' | 'csv'): Promise<string> {\n        const decCollections: CollectionView[] = [];\n        const decCiphers: CipherView[] = [];\n        const promises = [];\n\n        promises.push(this.apiService.getCollections(organizationId).then(collections => {\n            const collectionPromises: any = [];\n            if (collections != null && collections.data != null && collections.data.length > 0) {\n                collections.data.forEach(c => {\n                    const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n                    collectionPromises.push(collection.decrypt().then(decCol => {\n                        decCollections.push(decCol);\n                    }));\n                });\n            }\n            return Promise.all(collectionPromises);\n        }));\n\n        promises.push(this.apiService.getCiphersOrganization(organizationId).then(ciphers => {\n            const cipherPromises: any = [];\n            if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n                ciphers.data.filter(c => c.deletedDate === null).forEach(c => {\n                    const cipher = new Cipher(new CipherData(c));\n                    cipherPromises.push(cipher.decrypt().then(decCipher => {\n                        decCiphers.push(decCipher);\n                    }));\n                });\n            }\n            return Promise.all(cipherPromises);\n        }));\n\n        await Promise.all(promises);\n\n        if (format === 'csv') {\n            const collectionsMap = new Map<string, CollectionView>();\n            decCollections.forEach(c => {\n                collectionsMap.set(c.id, c);\n            });\n\n            const exportCiphers: any[] = [];\n            decCiphers.forEach(c => {\n                // only export logins and secure notes\n                if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n                    return;\n                }\n\n                const cipher: any = {};\n                cipher.collections = [];\n                if (c.collectionIds != null) {\n                    cipher.collections = c.collectionIds.filter(id => collectionsMap.has(id))\n                        .map(id => collectionsMap.get(id).name);\n                }\n                this.buildCommonCipher(cipher, c);\n                exportCiphers.push(cipher);\n            });\n\n            return papa.unparse(exportCiphers);\n        } else {\n            const jsonDoc: any = {\n                encrypted: false,\n                collections: [],\n                items: [],\n            };\n\n            decCollections.forEach(c => {\n                const collection = new CollectionExport();\n                collection.build(c);\n                jsonDoc.collections.push(collection);\n            });\n\n            decCiphers.forEach(c => {\n                const cipher = new CipherExport();\n                cipher.build(c);\n                jsonDoc.items.push(cipher);\n            });\n            return JSON.stringify(jsonDoc, null, '  ');\n        }\n    }\n\n    private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n        const collections: Collection[] = [];\n        const ciphers: Cipher[] = [];\n        const promises = [];\n\n        promises.push(this.apiService.getCollections(organizationId).then(c => {\n            const collectionPromises: any = [];\n            if (c != null && c.data != null && c.data.length > 0) {\n                c.data.forEach(r => {\n                    const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n                    collections.push(collection);\n                });\n            }\n            return Promise.all(collectionPromises);\n        }));\n\n        promises.push(this.apiService.getCiphersOrganization(organizationId).then(c => {\n            const cipherPromises: any = [];\n            if (c != null && c.data != null && c.data.length > 0) {\n                c.data.filter(item => item.deletedDate === null).forEach(item => {\n                    const cipher = new Cipher(new CipherData(item));\n                    ciphers.push(cipher);\n                });\n            }\n            return Promise.all(cipherPromises);\n        }));\n\n        await Promise.all(promises);\n\n        const orgKey = await this.cryptoService.getOrgKey(organizationId);\n        const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n        const jsonDoc: any = {\n            encrypted: true,\n            encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n            collections: [],\n            items: [],\n        };\n\n        collections.forEach(c => {\n            const collection = new CollectionExport();\n            collection.build(c);\n            jsonDoc.collections.push(collection);\n        });\n\n        ciphers.forEach(c => {\n            const cipher = new CipherExport();\n            cipher.build(c);\n            jsonDoc.items.push(cipher);\n        });\n        return JSON.stringify(jsonDoc, null, '  ');\n    }\n\n    private padNumber(num: number, width: number, padCharacter: string = '0'): string {\n        const numString = num.toString();\n        return numString.length >= width ? numString :\n            new Array(width - numString.length + 1).join(padCharacter) + numString;\n    }\n\n    private buildCommonCipher(cipher: any, c: CipherView) {\n        cipher.type = null;\n        cipher.name = c.name;\n        cipher.notes = c.notes;\n        cipher.fields = null;\n        cipher.reprompt = c.reprompt;\n        // Login props\n        cipher.login_uri = null;\n        cipher.login_username = null;\n        cipher.login_password = null;\n        cipher.login_totp = null;\n\n        if (c.fields) {\n            c.fields.forEach((f: any) => {\n                if (!cipher.fields) {\n                    cipher.fields = '';\n                } else {\n                    cipher.fields += '\\n';\n                }\n\n                cipher.fields += ((f.name || '') + ': ' + f.value);\n            });\n        }\n\n        switch (c.type) {\n            case CipherType.Login:\n                cipher.type = 'login';\n                cipher.login_username = c.login.username;\n                cipher.login_password = c.login.password;\n                cipher.login_totp = c.login.totp;\n\n                if (c.login.uris) {\n                    cipher.login_uri = [];\n                    c.login.uris.forEach(u => {\n                        cipher.login_uri.push(u.uri);\n                    });\n                }\n                break;\n            case CipherType.SecureNote:\n                cipher.type = 'note';\n                break;\n            default:\n                return;\n        }\n\n        return cipher;\n    }\n}\n","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Cipher as CipherDomain } from '../domain/cipher';\nimport { EncString } from '../domain/encString';\n\nimport { Card } from './card';\nimport { Field } from './field';\nimport { Identity } from './identity';\nimport { Login } from './login';\nimport { SecureNote } from './secureNote';\n\nexport class Cipher {\n    static template(): Cipher {\n        const req = new Cipher();\n        req.organizationId = null;\n        req.collectionIds = null;\n        req.folderId = null;\n        req.type = CipherType.Login;\n        req.name = 'Item name';\n        req.notes = 'Some notes about this item.';\n        req.favorite = false;\n        req.fields = [];\n        req.login = null;\n        req.secureNote = null;\n        req.card = null;\n        req.identity = null;\n        req.reprompt = CipherRepromptType.None;\n        return req;\n    }\n\n    static toView(req: Cipher, view = new CipherView()) {\n        view.type = req.type;\n        view.folderId = req.folderId;\n        if (view.organizationId == null) {\n            view.organizationId = req.organizationId;\n        }\n        if (view.collectionIds || req.collectionIds) {\n            const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n            view.collectionIds = Array.from(set.values());\n        }\n        view.name = req.name;\n        view.notes = req.notes;\n        view.favorite = req.favorite;\n        view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n        if (req.fields != null) {\n            view.fields = req.fields.map(f => Field.toView(f));\n        }\n\n        switch (req.type) {\n            case CipherType.Login:\n                view.login = Login.toView(req.login);\n                break;\n            case CipherType.SecureNote:\n                view.secureNote = SecureNote.toView(req.secureNote);\n                break;\n            case CipherType.Card:\n                view.card = Card.toView(req.card);\n                break;\n            case CipherType.Identity:\n                view.identity = Identity.toView(req.identity);\n                break;\n        }\n\n        return view;\n    }\n\n    static toDomain(req: Cipher, domain = new CipherDomain()) {\n        domain.type = req.type;\n        domain.folderId = req.folderId;\n        if (domain.organizationId == null) {\n            domain.organizationId = req.organizationId;\n        }\n        domain.name = req.name != null ? new EncString(req.name) : null;\n        domain.notes = req.notes != null ? new EncString(req.notes) : null;\n        domain.favorite = req.favorite;\n        domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n        if (req.fields != null) {\n            domain.fields = req.fields.map(f => Field.toDomain(f));\n        }\n\n        switch (req.type) {\n            case CipherType.Login:\n                domain.login = Login.toDomain(req.login);\n                break;\n            case CipherType.SecureNote:\n                domain.secureNote = SecureNote.toDomain(req.secureNote);\n                break;\n            case CipherType.Card:\n                domain.card = Card.toDomain(req.card);\n                break;\n            case CipherType.Identity:\n                domain.identity = Identity.toDomain(req.identity);\n                break;\n        }\n\n        return domain;\n    }\n\n    type: CipherType;\n    folderId: string;\n    organizationId: string;\n    collectionIds: string[];\n    name: string;\n    notes: string;\n    favorite: boolean;\n    fields: Field[];\n    login: Login;\n    secureNote: SecureNote;\n    card: Card;\n    identity: Identity;\n    reprompt: CipherRepromptType;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CipherView | CipherDomain) {\n        this.organizationId = o.organizationId;\n        this.folderId = o.folderId;\n        this.type = o.type;\n        this.reprompt = o.reprompt;\n\n        if (o instanceof CipherView) {\n            this.name = o.name;\n            this.notes = o.notes;\n        } else {\n            this.name = o.name?.encryptedString;\n            this.notes = o.notes?.encryptedString;\n        }\n\n        this.favorite = o.favorite;\n\n        if (o.fields != null) {\n            if (o instanceof CipherView) {\n                this.fields = o.fields.map(f => new Field(f));\n            } else {\n                this.fields = o.fields.map(f => new Field(f));\n            }\n        }\n\n        switch (o.type) {\n            case CipherType.Login:\n                this.login = new Login(o.login);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNote(o.secureNote);\n                break;\n            case CipherType.Card:\n                this.card = new Card(o.card);\n                break;\n            case CipherType.Identity:\n                this.identity = new Identity(o.identity);\n                break;\n        }\n    }\n}\n","import { CardView } from '../view/cardView';\n\nimport { Card as CardDomain } from '../domain/card';\nimport { EncString } from '../domain/encString';\n\nexport class Card {\n    static template(): Card {\n        const req = new Card();\n        req.cardholderName = 'John Doe';\n        req.brand = 'visa';\n        req.number = '4242424242424242';\n        req.expMonth = '04';\n        req.expYear = '2023';\n        req.code = '123';\n        return req;\n    }\n\n    static toView(req: Card, view = new CardView()) {\n        view.cardholderName = req.cardholderName;\n        view.brand = req.brand;\n        view.number = req.number;\n        view.expMonth = req.expMonth;\n        view.expYear = req.expYear;\n        view.code = req.code;\n        return view;\n    }\n\n    static toDomain(req: Card, domain = new CardDomain()) {\n        domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n        domain.brand = req.brand != null ? new EncString(req.brand) : null;\n        domain.number = req.number != null ? new EncString(req.number) : null;\n        domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n        domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n        domain.code = req.code != null ? new EncString(req.code) : null;\n        return domain;\n    }\n\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(o?: CardView | CardDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o instanceof CardView) {\n            this.cardholderName = o.cardholderName;\n            this.brand = o.brand;\n            this.number = o.number;\n            this.expMonth = o.expMonth;\n            this.expYear = o.expYear;\n            this.code = o.code;\n        } else {\n            this.cardholderName = o.cardholderName?.encryptedString;\n            this.brand = o.brand?.encryptedString;\n            this.number = o.number?.encryptedString;\n            this.expMonth = o.expMonth?.encryptedString;\n            this.expYear = o.expYear?.encryptedString;\n            this.code = o.code?.encryptedString;\n        }\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldView } from '../view/fieldView';\n\nimport { EncString } from '../domain/encString';\nimport { Field as FieldDomain } from '../domain/field';\n\nexport class Field {\n    static template(): Field {\n        const req = new Field();\n        req.name = 'Field name';\n        req.value = 'Some value';\n        req.type = FieldType.Text;\n        return req;\n    }\n\n    static toView(req: Field, view = new FieldView()) {\n        view.type = req.type;\n        view.value = req.value;\n        view.name = req.name;\n        return view;\n    }\n\n    static toDomain(req: Field, domain = new FieldDomain()) {\n        domain.type = req.type;\n        domain.value = req.value != null ? new EncString(req.value) : null;\n        domain.name = req.name != null ? new EncString(req.name) : null;\n        return domain;\n    }\n\n    name: string;\n    value: string;\n    type: FieldType;\n\n    constructor(o?: FieldView | FieldDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o instanceof FieldView) {\n            this.name = o.name;\n            this.value = o.value;\n        } else {\n            this.name = o.name?.encryptedString;\n            this.value = o.value?.encryptedString;\n        }\n        this.type = o.type;\n    }\n}\n","import { IdentityView } from '../view/identityView';\n\nimport { EncString } from '../domain/encString';\nimport { Identity as IdentityDomain } from '../domain/identity';\n\nexport class Identity {\n    static template(): Identity {\n        const req = new Identity();\n        req.title = 'Mr';\n        req.firstName = 'John';\n        req.middleName = 'William';\n        req.lastName = 'Doe';\n        req.address1 = '123 Any St';\n        req.address2 = 'Apt #123';\n        req.address3 = null;\n        req.city = 'New York';\n        req.state = 'NY';\n        req.postalCode = '10001';\n        req.country = 'US';\n        req.company = 'Acme Inc.';\n        req.email = 'john@company.com';\n        req.phone = '5555551234';\n        req.ssn = '000-123-4567';\n        req.username = 'jdoe';\n        req.passportNumber = 'US-123456789';\n        req.licenseNumber = 'D123-12-123-12333';\n        return req;\n    }\n\n    static toView(req: Identity, view = new IdentityView()) {\n        view.title = req.title;\n        view.firstName = req.firstName;\n        view.middleName = req.middleName;\n        view.lastName = req.lastName;\n        view.address1 = req.address1;\n        view.address2 = req.address2;\n        view.address3 = req.address3;\n        view.city = req.city;\n        view.state = req.state;\n        view.postalCode = req.postalCode;\n        view.country = req.country;\n        view.company = req.company;\n        view.email = req.email;\n        view.phone = req.phone;\n        view.ssn = req.ssn;\n        view.username = req.username;\n        view.passportNumber = req.passportNumber;\n        view.licenseNumber = req.licenseNumber;\n        return view;\n    }\n\n    static toDomain(req: Identity, domain = new IdentityDomain()) {\n        domain.title = req.title != null ? new EncString(req.title) : null;\n        domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n        domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n        domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n        domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n        domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n        domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n        domain.city = req.city != null ? new EncString(req.city) : null;\n        domain.state = req.state != null ? new EncString(req.state) : null;\n        domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n        domain.country = req.country != null ? new EncString(req.country) : null;\n        domain.company = req.company != null ? new EncString(req.company) : null;\n        domain.email = req.email != null ? new EncString(req.email) : null;\n        domain.phone = req.phone != null ? new EncString(req.phone) : null;\n        domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n        domain.username = req.username != null ? new EncString(req.username) : null;\n        domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n        domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n        return domain;\n    }\n\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(o?: IdentityView | IdentityDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o instanceof IdentityView) {\n            this.title = o.title;\n            this.firstName = o.firstName;\n            this.middleName = o.middleName;\n            this.lastName = o.lastName;\n            this.address1 = o.address1;\n            this.address2 = o.address2;\n            this.address3 = o.address3;\n            this.city = o.city;\n            this.state = o.state;\n            this.postalCode = o.postalCode;\n            this.country = o.country;\n            this.company = o.company;\n            this.email = o.email;\n            this.phone = o.phone;\n            this.ssn = o.ssn;\n            this.username = o.username;\n            this.passportNumber = o.passportNumber;\n            this.licenseNumber = o.licenseNumber;\n        } else {\n            this.title = o.title?.encryptedString;\n            this.firstName = o.firstName?.encryptedString;\n            this.middleName = o.middleName?.encryptedString;\n            this.lastName = o.lastName?.encryptedString;\n            this.address1 = o.address1?.encryptedString;\n            this.address2 = o.address2?.encryptedString;\n            this.address3 = o.address3?.encryptedString;\n            this.city = o.city?.encryptedString;\n            this.state = o.state?.encryptedString;\n            this.postalCode = o.postalCode?.encryptedString;\n            this.country = o.country?.encryptedString;\n            this.company = o.company?.encryptedString;\n            this.email = o.email?.encryptedString;\n            this.phone = o.phone?.encryptedString;\n            this.ssn = o.ssn?.encryptedString;\n            this.username = o.username?.encryptedString;\n            this.passportNumber = o.passportNumber?.encryptedString;\n            this.licenseNumber = o.licenseNumber?.encryptedString;\n        }\n    }\n}\n","import { LoginUri } from './loginUri';\n\nimport { LoginView } from '../view/loginView';\n\nimport { EncString } from '../domain/encString';\nimport { Login as LoginDomain } from '../domain/login';\n\nexport class Login {\n    static template(): Login {\n        const req = new Login();\n        req.uris = [];\n        req.username = 'jdoe';\n        req.password = 'myp@ssword123';\n        req.totp = 'JBSWY3DPEHPK3PXP';\n        return req;\n    }\n\n    static toView(req: Login, view = new LoginView()) {\n        if (req.uris != null) {\n            view.uris = req.uris.map(u => LoginUri.toView(u));\n        }\n        view.username = req.username;\n        view.password = req.password;\n        view.totp = req.totp;\n        return view;\n    }\n\n    static toDomain(req: Login, domain = new LoginDomain()) {\n        if (req.uris != null) {\n            domain.uris = req.uris.map(u => LoginUri.toDomain(u));\n        }\n        domain.username = req.username != null ? new EncString(req.username) : null;\n        domain.password = req.password != null ? new EncString(req.password) : null;\n        domain.totp = req.totp != null ? new EncString(req.totp) : null;\n        return domain;\n    }\n\n    uris: LoginUri[];\n    username: string;\n    password: string;\n    totp: string;\n\n    constructor(o?: LoginView | LoginDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o.uris != null) {\n            if (o instanceof LoginView) {\n                this.uris = o.uris.map(u => new LoginUri(u));\n            } else {\n                this.uris = o.uris.map(u => new LoginUri(u));\n            }\n        }\n\n        if (o instanceof LoginView) {\n            this.username = o.username;\n            this.password = o.password;\n            this.totp = o.totp;\n        } else {\n            this.username = o.username?.encryptedString;\n            this.password = o.password?.encryptedString;\n            this.totp = o.totp?.encryptedString;\n        }\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriView } from '../view/loginUriView';\n\nimport { EncString } from '../domain/encString';\nimport { LoginUri as LoginUriDomain } from '../domain/loginUri';\n\nexport class LoginUri {\n    static template(): LoginUri {\n        const req = new LoginUri();\n        req.uri = 'https://google.com';\n        req.match = null;\n        return req;\n    }\n\n    static toView(req: LoginUri, view = new LoginUriView()) {\n        view.uri = req.uri;\n        view.match = req.match;\n        return view;\n    }\n\n    static toDomain(req: LoginUri, domain = new LoginUriDomain()) {\n        domain.uri = req.uri != null ? new EncString(req.uri) : null;\n        domain.match = req.match;\n        return domain;\n    }\n\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(o?: LoginUriView | LoginUriDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o instanceof LoginUriView) {\n            this.uri = o.uri;\n        } else {\n            this.uri = o.uri?.encryptedString;\n        }\n        this.match = o.match;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteView } from '../view/secureNoteView';\n\nimport { SecureNote as SecureNoteDomain } from '../domain/secureNote';\n\nexport class SecureNote {\n    static template(): SecureNote {\n        const req = new SecureNote();\n        req.type = SecureNoteType.Generic;\n        return req;\n    }\n\n    static toView(req: SecureNote, view = new SecureNoteView()) {\n        view.type = req.type;\n        return view;\n    }\n\n    static toDomain(req: SecureNote, view = new SecureNoteDomain()) {\n        view.type = req.type;\n        return view;\n    }\n\n    type: SecureNoteType;\n\n    constructor(o?: SecureNoteView | SecureNoteDomain) {\n        if (o == null) {\n            return;\n        }\n\n        this.type = o.type;\n    }\n}\n","import { CollectionView } from '../view/collectionView';\n\nimport { Collection as CollectionDomain } from '../domain/collection';\nimport { EncString } from '../domain/encString';\n\nexport class Collection {\n    static template(): Collection {\n        const req = new Collection();\n        req.organizationId = '00000000-0000-0000-0000-000000000000';\n        req.name = 'Collection name';\n        req.externalId = null;\n        return req;\n    }\n\n    static toView(req: Collection, view = new CollectionView()) {\n        view.name = req.name;\n        view.externalId = req.externalId;\n        if (view.organizationId == null) {\n            view.organizationId = req.organizationId;\n        }\n        return view;\n    }\n\n    static toDomain(req: Collection, domain = new CollectionDomain()) {\n        domain.name = req.name != null ? new EncString(req.name) : null;\n        domain.externalId = req.externalId;\n        if (domain.organizationId == null) {\n            domain.organizationId = req.organizationId;\n        }\n        return domain;\n    }\n\n    organizationId: string;\n    name: string;\n    externalId: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CollectionView | CollectionDomain) {\n        this.organizationId = o.organizationId;\n        if (o instanceof CollectionView) {\n            this.name = o.name;\n        } else {\n            this.name = o.name?.encryptedString;\n        }\n        this.externalId = o.externalId;\n    }\n}\n","import { EventType } from '../../enums/eventType';\nimport { EventView } from '../view/eventView';\n\nexport class Event {\n    message: string;\n    appIcon: string;\n    appName: string;\n    userId: string;\n    userName: string;\n    userEmail: string;\n    date: string;\n    ip: string;\n    type: string;\n\n    constructor(event: EventView) {\n        this.message = event.humanReadableMessage;\n        this.appIcon = event.appIcon;\n        this.appName = event.appName;\n        this.userId = event.userId;\n        this.userName = event.userName;\n        this.userEmail = event.userEmail;\n        this.date = event.date;\n        this.ip = event.ip;\n        this.type = EventType[event.type];\n    }\n}\n","import { FolderView } from '../view/folderView';\n\nimport { EncString } from '../domain/encString';\nimport { Folder as FolderDomain } from '../domain/folder';\n\nexport class Folder {\n    static template(): Folder {\n        const req = new Folder();\n        req.name = 'Folder name';\n        return req;\n    }\n\n    static toView(req: Folder, view = new FolderView()) {\n        view.name = req.name;\n        return view;\n    }\n\n    static toDomain(req: Folder, domain = new FolderDomain()) {\n        domain.name = req.name != null ? new EncString(req.name) : null;\n        return domain;\n    }\n\n    name: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: FolderView | FolderDomain) {\n        if (o instanceof FolderView) {\n            this.name = o.name;\n        } else {\n            this.name = o.name?.encryptedString;\n        }\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { FileUploadService as FileUploadServiceAbstraction } from '../abstractions/fileUpload.service';\nimport { LogService } from '../abstractions/log.service';\n\nimport { FileUploadType } from '../enums/fileUploadType';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\n\nimport { AttachmentUploadDataResponse } from '../models/response/attachmentUploadDataResponse';\nimport { SendFileUploadDataResponse } from '../models/response/sendFileUploadDataResponse';\n\nimport { AzureFileUploadService } from './azureFileUpload.service';\nimport { BitwardenFileUploadService } from './bitwardenFileUpload.service';\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n    private azureFileUploadService: AzureFileUploadService;\n    private bitwardenFileUploadService: BitwardenFileUploadService;\n\n    constructor(private logService: LogService, private apiService: ApiService) {\n        this.azureFileUploadService = new AzureFileUploadService(logService);\n        this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n    }\n\n    async uploadSendFile(uploadData: SendFileUploadDataResponse, fileName: EncString, encryptedFileData: EncArrayBuffer) {\n        try {\n            switch (uploadData.fileUploadType) {\n                case FileUploadType.Direct:\n                    await this.bitwardenFileUploadService.upload(fileName.encryptedString, encryptedFileData,\n                        fd => this.apiService.postSendFile(uploadData.sendResponse.id, uploadData.sendResponse.file.id, fd));\n                    break;\n                case FileUploadType.Azure:\n                    const renewalCallback = async () => {\n                        const renewalResponse = await this.apiService.renewSendFileUploadUrl(uploadData.sendResponse.id,\n                            uploadData.sendResponse.file.id);\n                        return renewalResponse.url;\n                    };\n                    await this.azureFileUploadService.upload(uploadData.url, encryptedFileData,\n                        renewalCallback);\n                    break;\n                default:\n                    throw new Error('Unknown file upload type');\n            }\n        } catch (e) {\n            await this.apiService.deleteSend(uploadData.sendResponse.id);\n            throw e;\n        }\n    }\n\n    async uploadCipherAttachment(admin: boolean, uploadData: AttachmentUploadDataResponse, encryptedFileName: EncString,\n        encryptedFileData: EncArrayBuffer) {\n        const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n        try {\n            switch (uploadData.fileUploadType) {\n                case FileUploadType.Direct:\n                    await this.bitwardenFileUploadService.upload(encryptedFileName.encryptedString, encryptedFileData,\n                        fd => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd));\n                    break;\n                case FileUploadType.Azure:\n                    const renewalCallback = async () => {\n                        const renewalResponse = await this.apiService.renewAttachmentUploadUrl(response.id,\n                            uploadData.attachmentId);\n                        return renewalResponse.url;\n                    };\n                    await this.azureFileUploadService.upload(uploadData.url, encryptedFileData, renewalCallback);\n                    break;\n                default:\n                    throw new Error('Unknown file upload type.');\n            }\n        } catch (e) {\n            if (admin) {\n                await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n            } else {\n                await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n            }\n            throw e;\n        }\n    }\n}\n","export enum FileUploadType {\n    Direct = 0,\n    Azure = 1,\n}\n","import { LogService } from '../abstractions/log.service';\n\nimport { Utils } from '../misc/utils';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n    constructor(private logService: LogService) { }\n\n    async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n        if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n            return await this.azureUploadBlob(url, data);\n        } else {\n            return await this.azureUploadBlocks(url, data, renewalCallback);\n        }\n    }\n    private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n        const urlObject = Utils.getUrl(url);\n        const headers = new Headers({\n            'x-ms-date': new Date().toUTCString(),\n            'x-ms-version': urlObject.searchParams.get('sv'),\n            'Content-Length': data.buffer.byteLength.toString(),\n            'x-ms-blob-type': 'BlockBlob',\n        });\n\n        const request = new Request(url, {\n            body: data.buffer,\n            cache: 'no-store',\n            method: 'PUT',\n            headers: headers,\n        });\n\n        const blobResponse = await fetch(request);\n\n        if (blobResponse.status !== 201) {\n            throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n        }\n    }\n    private async azureUploadBlocks(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n        const baseUrl = Utils.getUrl(url);\n        const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get('sv'));\n        let blockIndex = 0;\n        const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n        const blocksStaged: string[] = [];\n\n        if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n            throw new Error(`Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`);\n        }\n\n        try {\n            while (blockIndex < numBlocks) {\n                url = await this.renewUrlIfNecessary(url, renewalCallback);\n                const blockUrl = Utils.getUrl(url);\n                const blockId = this.encodedBlockId(blockIndex);\n                blockUrl.searchParams.append('comp', 'block');\n                blockUrl.searchParams.append('blockid', blockId);\n                const start = blockIndex * blockSize;\n                const blockData = data.buffer.slice(start, start + blockSize);\n                const blockHeaders = new Headers({\n                    'x-ms-date': new Date().toUTCString(),\n                    'x-ms-version': blockUrl.searchParams.get('sv'),\n                    'Content-Length': blockData.byteLength.toString(),\n                });\n\n                const blockRequest = new Request(blockUrl.toString(), {\n                    body: blockData,\n                    cache: 'no-store',\n                    method: 'PUT',\n                    headers: blockHeaders,\n                });\n\n                const blockResponse = await fetch(blockRequest);\n\n                if (blockResponse.status !== 201) {\n                    const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n                    this.logService.error(message + '\\n' + await blockResponse.json());\n                    throw new Error(message);\n                }\n\n                blocksStaged.push(blockId);\n                blockIndex++;\n            }\n\n            url = await this.renewUrlIfNecessary(url, renewalCallback);\n            const blockListUrl = Utils.getUrl(url);\n            const blockListXml = this.blockListXml(blocksStaged);\n            blockListUrl.searchParams.append('comp', 'blocklist');\n            const headers = new Headers({\n                'x-ms-date': new Date().toUTCString(),\n                'x-ms-version': blockListUrl.searchParams.get('sv'),\n                'Content-Length': blockListXml.length.toString(),\n            });\n\n            const request = new Request(blockListUrl.toString(), {\n                body: blockListXml,\n                cache: 'no-store',\n                method: 'PUT',\n                headers: headers,\n            });\n\n            const response = await fetch(request);\n\n            if (response.status !== 201) {\n                const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n                this.logService.error(message + '\\n' + await response.json());\n                throw new Error(message);\n            }\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    private async renewUrlIfNecessary(url: string, renewalCallback: () => Promise<string>): Promise<string> {\n        const urlObject = Utils.getUrl(url);\n        const expiry = new Date(urlObject.searchParams.get('se') ?? '');\n\n        if (isNaN(expiry.getTime())) {\n            expiry.setTime(Date.now() + 3600000);\n        }\n\n        if (expiry.getTime() < Date.now() + 1000) {\n            return await renewalCallback();\n        }\n        return url;\n    }\n\n    private encodedBlockId(blockIndex: number) {\n        // Encoded blockId max size is 64, so pre-encoding max size is 48\n        const utfBlockId = ('000000000000000000000000000000000000000000000000' + blockIndex.toString()).slice(-48);\n        return Utils.fromUtf8ToB64(utfBlockId);\n    }\n\n    private blockListXml(blockIdList: string[]) {\n        let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n        blockIdList.forEach(blockId => {\n            xml += `<Latest>${blockId}</Latest>`;\n        });\n        xml += '</BlockList>';\n        return xml;\n    }\n\n    private getMaxBlockSize(version: string) {\n        if (Version.compare(version, '2019-12-12') >= 0) {\n            return 4000 * 1024 * 1024; // 4000 MiB\n        } else if (Version.compare(version, '2016-05-31') >= 0) {\n            return 100 * 1024 * 1024; // 100 MiB\n        } else {\n            return 4 * 1024 * 1024; // 4 MiB\n        }\n    }\n}\n\nclass Version {\n    /**\n     * Compares two Azure Versions against each other\n     * @param a Version to compare\n     * @param b Version to compare\n     * @returns a number less than zero if b is newer than a, 0 if equal,\n     * and greater than zero if a is newer than b\n     */\n    static compare(a: Required<Version> | string, b: Required<Version> | string) {\n        if (typeof (a) === 'string') {\n            a = new Version(a);\n        }\n\n        if (typeof (b) === 'string') {\n            b = new Version(b);\n        }\n\n        return a.year !== b.year ? a.year - b.year :\n            a.month !== b.month ? a.month - b.month :\n                a.day !== b.day ? a.day - b.day :\n                    0;\n    }\n    year = 0;\n    month = 0;\n    day = 0;\n\n    constructor(version: string) {\n        try {\n            const parts = version.split('-').map(v => Number.parseInt(v, 10));\n            this.year = parts[0];\n            this.month = parts[1];\n            this.day = parts[2];\n        } catch { }\n    }\n    /**\n     * Compares two Azure Versions against each other\n     * @param compareTo Version to compare against\n     * @returns a number less than zero if compareTo is newer, 0 if equal,\n     * and greater than zero if this is greater than compareTo\n     */\n    compare(compareTo: Required<Version> | string) {\n        return Version.compare(this, compareTo);\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\n\nimport { Utils } from '../misc/utils';\n\nexport class BitwardenFileUploadService\n{\n    constructor(private apiService: ApiService) { }\n\n    async upload(encryptedFileName: string, encryptedFileData: EncArrayBuffer, apiCall: (fd: FormData) => Promise<any>) {\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encryptedFileData.buffer], { type: 'application/octet-stream' });\n            fd.append('data', blob, encryptedFileName);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('data', Buffer.from(encryptedFileData.buffer) as any, {\n                    filepath: encryptedFileName,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        await apiCall(fd);\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport {\n    ImportOption,\n    ImportService as ImportServiceAbstraction,\n} from '../abstractions/import.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { Utils } from '../misc/utils';\n\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KvpRequest } from '../models/request/kvpRequest';\n\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { CipherView } from '../models/view/cipherView';\n\nimport { AscendoCsvImporter } from '../importers/ascendoCsvImporter';\nimport { AvastCsvImporter } from '../importers/avastCsvImporter';\nimport { AvastJsonImporter } from '../importers/avastJsonImporter';\nimport { AviraCsvImporter } from '../importers/aviraCsvImporter';\nimport { BitwardenCsvImporter } from '../importers/bitwardenCsvImporter';\nimport { BitwardenJsonImporter } from '../importers/bitwardenJsonImporter';\nimport { BlackBerryCsvImporter } from '../importers/blackBerryCsvImporter';\nimport { BlurCsvImporter } from '../importers/blurCsvImporter';\nimport { ButtercupCsvImporter } from '../importers/buttercupCsvImporter';\nimport { ChromeCsvImporter } from '../importers/chromeCsvImporter';\nimport { ClipperzHtmlImporter } from '../importers/clipperzHtmlImporter';\nimport { CodebookCsvImporter } from '../importers/codebookCsvImporter';\nimport { DashlaneJsonImporter } from '../importers/dashlaneJsonImporter';\nimport { EncryptrCsvImporter } from '../importers/encryptrCsvImporter';\nimport { EnpassCsvImporter } from '../importers/enpassCsvImporter';\nimport { EnpassJsonImporter } from '../importers/enpassJsonImporter';\nimport { FirefoxCsvImporter } from '../importers/firefoxCsvImporter';\nimport { FSecureFskImporter } from '../importers/fsecureFskImporter';\nimport { GnomeJsonImporter } from '../importers/gnomeJsonImporter';\nimport { Importer } from '../importers/importer';\nimport { KasperskyTxtImporter } from '../importers/kasperskyTxtImporter';\nimport { KeePass2XmlImporter } from '../importers/keepass2XmlImporter';\nimport { KeePassXCsvImporter } from '../importers/keepassxCsvImporter';\nimport { KeeperCsvImporter } from '../importers/keeperCsvImporter';\nimport { LastPassCsvImporter } from '../importers/lastpassCsvImporter';\nimport { LogMeOnceCsvImporter } from '../importers/logMeOnceCsvImporter';\nimport { MeldiumCsvImporter } from '../importers/meldiumCsvImporter';\nimport { MSecureCsvImporter } from '../importers/msecureCsvImporter';\nimport { MykiCsvImporter } from '../importers/mykiCsvImporter';\nimport { NordPassCsvImporter } from '../importers/nordpassCsvImporter';\nimport { OnePassword1PifImporter } from '../importers/onepasswordImporters/onepassword1PifImporter';\nimport { OnePasswordMacCsvImporter } from '../importers/onepasswordImporters/onepasswordMacCsvImporter';\nimport { OnePasswordWinCsvImporter } from '../importers/onepasswordImporters/onepasswordWinCsvImporter';\nimport { PadlockCsvImporter } from '../importers/padlockCsvImporter';\nimport { PassKeepCsvImporter } from '../importers/passkeepCsvImporter';\nimport { PassmanJsonImporter } from '../importers/passmanJsonImporter';\nimport { PasspackCsvImporter } from '../importers/passpackCsvImporter';\nimport { PasswordAgentCsvImporter } from '../importers/passwordAgentCsvImporter';\nimport { PasswordBossJsonImporter } from '../importers/passwordBossJsonImporter';\nimport { PasswordDragonXmlImporter } from '../importers/passwordDragonXmlImporter';\nimport { PasswordSafeXmlImporter } from '../importers/passwordSafeXmlImporter';\nimport { PasswordWalletTxtImporter } from '../importers/passwordWalletTxtImporter';\nimport { RememBearCsvImporter } from '../importers/rememBearCsvImporter';\nimport { RoboFormCsvImporter } from '../importers/roboformCsvImporter';\nimport { SafeInCloudXmlImporter } from '../importers/safeInCloudXmlImporter';\nimport { SaferPassCsvImporter } from '../importers/saferpassCsvImport';\nimport { SecureSafeCsvImporter } from '../importers/secureSafeCsvImporter';\nimport { SplashIdCsvImporter } from '../importers/splashIdCsvImporter';\nimport { StickyPasswordXmlImporter } from '../importers/stickyPasswordXmlImporter';\nimport { TrueKeyCsvImporter } from '../importers/truekeyCsvImporter';\nimport { UpmCsvImporter } from '../importers/upmCsvImporter';\nimport { YotiCsvImporter } from '../importers/yotiCsvImporter';\nimport { ZohoVaultCsvImporter } from '../importers/zohoVaultCsvImporter';\n\nexport class ImportService implements ImportServiceAbstraction {\n    featuredImportOptions = [\n        { id: 'bitwardenjson', name: 'Bitwarden (json)' },\n        { id: 'bitwardencsv', name: 'Bitwarden (csv)' },\n        { id: 'lastpasscsv', name: 'LastPass (csv)' },\n        { id: 'chromecsv', name: 'Chrome (csv)' },\n        { id: 'firefoxcsv', name: 'Firefox (csv)' },\n        { id: 'keepass2xml', name: 'KeePass 2 (xml)' },\n        { id: '1password1pif', name: '1Password (1pif)' },\n        { id: 'dashlanejson', name: 'Dashlane (json)' },\n    ];\n\n    regularImportOptions: ImportOption[] = [\n        { id: 'keepassxcsv', name: 'KeePassX (csv)' },\n        { id: '1passwordwincsv', name: '1Password 6 and 7 Windows (csv)' },\n        { id: '1passwordmaccsv', name: '1Password 6 and 7 Mac (csv)' },\n        { id: 'roboformcsv', name: 'RoboForm (csv)' },\n        { id: 'keepercsv', name: 'Keeper (csv)' },\n        { id: 'enpasscsv', name: 'Enpass (csv)' },\n        { id: 'enpassjson', name: 'Enpass (json)' },\n        { id: 'safeincloudxml', name: 'SafeInCloud (xml)' },\n        { id: 'pwsafexml', name: 'Password Safe (xml)' },\n        { id: 'stickypasswordxml', name: 'Sticky Password (xml)' },\n        { id: 'msecurecsv', name: 'mSecure (csv)' },\n        { id: 'truekeycsv', name: 'True Key (csv)' },\n        { id: 'passwordbossjson', name: 'Password Boss (json)' },\n        { id: 'zohovaultcsv', name: 'Zoho Vault (csv)' },\n        { id: 'splashidcsv', name: 'SplashID (csv)' },\n        { id: 'passworddragonxml', name: 'Password Dragon (xml)' },\n        { id: 'padlockcsv', name: 'Padlock (csv)' },\n        { id: 'passboltcsv', name: 'Passbolt (csv)' },\n        { id: 'clipperzhtml', name: 'Clipperz (html)' },\n        { id: 'aviracsv', name: 'Avira (csv)' },\n        { id: 'saferpasscsv', name: 'SaferPass (csv)' },\n        { id: 'upmcsv', name: 'Universal Password Manager (csv)' },\n        { id: 'ascendocsv', name: 'Ascendo DataVault (csv)' },\n        { id: 'meldiumcsv', name: 'Meldium (csv)' },\n        { id: 'passkeepcsv', name: 'PassKeep (csv)' },\n        { id: 'operacsv', name: 'Opera (csv)' },\n        { id: 'vivaldicsv', name: 'Vivaldi (csv)' },\n        { id: 'gnomejson', name: 'GNOME Passwords and Keys/Seahorse (json)' },\n        { id: 'blurcsv', name: 'Blur (csv)' },\n        { id: 'passwordagentcsv', name: 'Password Agent (csv)' },\n        { id: 'passpackcsv', name: 'Passpack (csv)' },\n        { id: 'passmanjson', name: 'Passman (json)' },\n        { id: 'avastcsv', name: 'Avast Passwords (csv)' },\n        { id: 'avastjson', name: 'Avast Passwords (json)' },\n        { id: 'fsecurefsk', name: 'F-Secure KEY (fsk)' },\n        { id: 'kasperskytxt', name: 'Kaspersky Password Manager (txt)' },\n        { id: 'remembearcsv', name: 'RememBear (csv)' },\n        { id: 'passwordwallettxt', name: 'PasswordWallet (txt)' },\n        { id: 'mykicsv', name: 'Myki (csv)' },\n        { id: 'securesafecsv', name: 'SecureSafe (csv)' },\n        { id: 'logmeoncecsv', name: 'LogMeOnce (csv)' },\n        { id: 'blackberrycsv', name: 'BlackBerry Password Keeper (csv)' },\n        { id: 'buttercupcsv', name: 'Buttercup (csv)' },\n        { id: 'codebookcsv', name: 'Codebook (csv)' },\n        { id: 'encryptrcsv', name: 'Encryptr (csv)' },\n        { id: 'yoticsv', name: 'Yoti (csv)' },\n        { id: 'nordpasscsv', name: 'Nordpass (csv)' },\n    ];\n\n    constructor(private cipherService: CipherService, private folderService: FolderService,\n        private apiService: ApiService, private i18nService: I18nService,\n        private collectionService: CollectionService, private platformUtilsService: PlatformUtilsService,\n        private cryptoService: CryptoService) { }\n\n    getImportOptions(): ImportOption[] {\n        return this.featuredImportOptions.concat(this.regularImportOptions);\n    }\n\n    async import(importer: Importer, fileContents: string, organizationId: string = null): Promise<Error> {\n        const importResult = await importer.parse(fileContents);\n        if (importResult.success) {\n            if (importResult.folders.length === 0 && importResult.ciphers.length === 0) {\n                return new Error(this.i18nService.t('importNothingError'));\n            } else if (importResult.ciphers.length > 0) {\n                const halfway = Math.floor(importResult.ciphers.length / 2);\n                const last = importResult.ciphers.length - 1;\n\n                if (this.badData(importResult.ciphers[0]) &&\n                    this.badData(importResult.ciphers[halfway]) &&\n                    this.badData(importResult.ciphers[last])) {\n                    return new Error(this.i18nService.t('importFormatError'));\n                }\n            }\n            try {\n                await this.postImport(importResult, organizationId);\n            } catch (error) {\n                const errorResponse = new ErrorResponse(error, 400);\n                return this.handleServerError(errorResponse, importResult);\n            }\n            return null;\n        } else {\n            if (!Utils.isNullOrWhitespace(importResult.errorMessage)) {\n                return new Error(importResult.errorMessage);\n            } else {\n                return new Error(this.i18nService.t('importFormatError'));\n            }\n        }\n    }\n\n    getImporter(format: string, organizationId: string = null): Importer {\n        const importer = this.getImporterInstance(format);\n        if (importer == null) {\n            return null;\n        }\n        importer.organizationId = organizationId;\n        return importer;\n    }\n\n    private getImporterInstance(format: string) {\n        if (format == null || format === '') {\n            return null;\n        }\n\n        switch (format) {\n            case 'bitwardencsv':\n                return new BitwardenCsvImporter();\n            case 'bitwardenjson':\n                return new BitwardenJsonImporter(this.cryptoService, this.i18nService);\n            case 'lastpasscsv':\n            case 'passboltcsv':\n                return new LastPassCsvImporter();\n            case 'keepassxcsv':\n                return new KeePassXCsvImporter();\n            case 'aviracsv':\n                return new AviraCsvImporter();\n            case 'blurcsv':\n                return new BlurCsvImporter();\n            case 'safeincloudxml':\n                return new SafeInCloudXmlImporter();\n            case 'padlockcsv':\n                return new PadlockCsvImporter();\n            case 'keepass2xml':\n                return new KeePass2XmlImporter();\n            case 'chromecsv':\n            case 'operacsv':\n            case 'vivaldicsv':\n                return new ChromeCsvImporter();\n            case 'firefoxcsv':\n                return new FirefoxCsvImporter();\n            case 'upmcsv':\n                return new UpmCsvImporter();\n            case 'saferpasscsv':\n                return new SaferPassCsvImporter();\n            case 'meldiumcsv':\n                return new MeldiumCsvImporter();\n            case '1password1pif':\n                return new OnePassword1PifImporter();\n            case '1passwordwincsv':\n                return new OnePasswordWinCsvImporter();\n            case '1passwordmaccsv':\n                return new OnePasswordMacCsvImporter();\n            case 'keepercsv':\n                return new KeeperCsvImporter();\n            case 'passworddragonxml':\n                return new PasswordDragonXmlImporter();\n            case 'enpasscsv':\n                return new EnpassCsvImporter();\n            case 'enpassjson':\n                return new EnpassJsonImporter();\n            case 'pwsafexml':\n                return new PasswordSafeXmlImporter();\n            case 'dashlanejson':\n                return new DashlaneJsonImporter();\n            case 'msecurecsv':\n                return new MSecureCsvImporter();\n            case 'stickypasswordxml':\n                return new StickyPasswordXmlImporter();\n            case 'truekeycsv':\n                return new TrueKeyCsvImporter();\n            case 'clipperzhtml':\n                return new ClipperzHtmlImporter();\n            case 'roboformcsv':\n                return new RoboFormCsvImporter();\n            case 'ascendocsv':\n                return new AscendoCsvImporter();\n            case 'passwordbossjson':\n                return new PasswordBossJsonImporter();\n            case 'zohovaultcsv':\n                return new ZohoVaultCsvImporter();\n            case 'splashidcsv':\n                return new SplashIdCsvImporter();\n            case 'passkeepcsv':\n                return new PassKeepCsvImporter();\n            case 'gnomejson':\n                return new GnomeJsonImporter();\n            case 'passwordagentcsv':\n                return new PasswordAgentCsvImporter();\n            case 'passpackcsv':\n                return new PasspackCsvImporter();\n            case 'passmanjson':\n                return new PassmanJsonImporter();\n            case 'avastcsv':\n                return new AvastCsvImporter();\n            case 'avastjson':\n                return new AvastJsonImporter();\n            case 'fsecurefsk':\n                return new FSecureFskImporter();\n            case 'kasperskytxt':\n                return new KasperskyTxtImporter();\n            case 'remembearcsv':\n                return new RememBearCsvImporter();\n            case 'passwordwallettxt':\n                return new PasswordWalletTxtImporter();\n            case 'mykicsv':\n                return new MykiCsvImporter();\n            case 'securesafecsv':\n                return new SecureSafeCsvImporter();\n            case 'logmeoncecsv':\n                return new LogMeOnceCsvImporter();\n            case 'blackberrycsv':\n                return new BlackBerryCsvImporter();\n            case 'buttercupcsv':\n                return new ButtercupCsvImporter();\n            case 'codebookcsv':\n                return new CodebookCsvImporter();\n            case 'encryptrcsv':\n                return new EncryptrCsvImporter();\n            case 'yoticsv':\n                return new YotiCsvImporter();\n            case 'nordpasscsv':\n                return new NordPassCsvImporter();\n            default:\n                return null;\n        }\n    }\n\n    private async postImport(importResult: ImportResult, organizationId: string = null) {\n        if (organizationId == null) {\n            const request = new ImportCiphersRequest();\n            for (let i = 0; i < importResult.ciphers.length; i++) {\n                const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n                request.ciphers.push(new CipherRequest(c));\n            }\n            if (importResult.folders != null) {\n                for (let i = 0; i < importResult.folders.length; i++) {\n                    const f = await this.folderService.encrypt(importResult.folders[i]);\n                    request.folders.push(new FolderRequest(f));\n                }\n            }\n            if (importResult.folderRelationships != null) {\n                importResult.folderRelationships.forEach(r =>\n                    request.folderRelationships.push(new KvpRequest(r[0], r[1])));\n            }\n            return await this.apiService.postImportCiphers(request);\n        } else {\n            const request = new ImportOrganizationCiphersRequest();\n            for (let i = 0; i < importResult.ciphers.length; i++) {\n                importResult.ciphers[i].organizationId = organizationId;\n                const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n                request.ciphers.push(new CipherRequest(c));\n            }\n            if (importResult.collections != null) {\n                for (let i = 0; i < importResult.collections.length; i++) {\n                    importResult.collections[i].organizationId = organizationId;\n                    const c = await this.collectionService.encrypt(importResult.collections[i]);\n                    request.collections.push(new CollectionRequest(c));\n                }\n            }\n            if (importResult.collectionRelationships != null) {\n                importResult.collectionRelationships.forEach(r =>\n                    request.collectionRelationships.push(new KvpRequest(r[0], r[1])));\n            }\n            return await this.apiService.postImportOrganizationCiphers(organizationId, request);\n        }\n    }\n\n    private badData(c: CipherView) {\n        return (c.name == null || c.name === '--') &&\n            (c.type === CipherType.Login && c.login != null && Utils.isNullOrWhitespace(c.login.password));\n    }\n\n    private handleServerError(errorResponse: ErrorResponse, importResult: ImportResult): Error {\n        if (errorResponse.validationErrors == null) {\n            return new Error(errorResponse.message);\n        }\n\n        let errorMessage = '';\n\n        Object.entries(errorResponse.validationErrors).forEach(([key, value], index) => {\n            let item;\n            let itemType;\n            const i = Number(key.match(/[0-9]+/)[0]);\n\n            switch (key.match(/^\\w+/)[0]) {\n                case 'Ciphers':\n                    item = importResult.ciphers[i];\n                    itemType = CipherType[item.type];\n                    break;\n                case 'Folders':\n                    item = importResult.folders[i];\n                    itemType = 'Folder';\n                    break;\n                case 'Collections':\n                    item = importResult.collections[i];\n                    itemType = 'Collection';\n                    break;\n                default:\n                    return;\n            }\n\n            if (index > 0) {\n                errorMessage += '\\n\\n';\n            }\n\n            if (itemType !== 'Folder' && itemType !== 'Collection') {\n                errorMessage += '[' + (i + 1) + '] ';\n            }\n\n            errorMessage += '[' + itemType + '] \"' + item.name + '\": ' + value;\n        });\n\n        return new Error(errorMessage);\n    }\n}\n","import { CipherRequest } from './cipherRequest';\nimport { FolderRequest } from './folderRequest';\nimport { KvpRequest } from './kvpRequest';\n\nexport class ImportCiphersRequest {\n    ciphers: CipherRequest[] = [];\n    folders: FolderRequest[] = [];\n    folderRelationships: KvpRequest<number, number>[] = [];\n}\n","import { CipherRequest } from './cipherRequest';\nimport { CollectionRequest } from './collectionRequest';\nimport { KvpRequest } from './kvpRequest';\n\nexport class ImportOrganizationCiphersRequest {\n    ciphers: CipherRequest[] = [];\n    collections: CollectionRequest[] = [];\n    collectionRelationships: KvpRequest<number, number>[] = [];\n}\n","export class KvpRequest<TK, TV> {\n    key: TK;\n    value: TV;\n\n    constructor(key: TK, value: TV) {\n        this.key = key;\n        this.value = value;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AscendoCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 2) {\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            if (value.length > 2 && (value.length % 2) === 0) {\n                for (let i = 0; i < value.length - 2; i += 2) {\n                    const val: string = value[i + 2];\n                    const field: string = value[i + 1];\n                    if (this.isNullOrWhitespace(val) || this.isNullOrWhitespace(field)) {\n                        continue;\n                    }\n\n                    const fieldLower = field.toLowerCase();\n                    if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.password = this.getValueOrDefault(val);\n                    } else if (cipher.login.username == null &&\n                        this.usernameFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.username = this.getValueOrDefault(val);\n                    } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                        this.uriFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.uris = this.makeUriArray(val);\n                    } else {\n                        this.processKvp(cipher, field, val);\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AvastCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.login.uris = this.makeUriArray(value.web);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.username = this.getValueOrDefault(value.login);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class AvastJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        if (results.logins != null) {\n            results.logins.forEach((value: any) => {\n                const cipher = this.initLoginCipher();\n                cipher.name = this.getValueOrDefault(value.custName);\n                cipher.notes = this.getValueOrDefault(value.note);\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.password = this.getValueOrDefault(value.pwd);\n                cipher.login.username = this.getValueOrDefault(value.loginName);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (results.notes != null) {\n            results.notes.forEach((value: any) => {\n                const cipher = this.initLoginCipher();\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote.type = SecureNoteType.Generic;\n                cipher.name = this.getValueOrDefault(value.label);\n                cipher.notes = this.getValueOrDefault(value.text);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (results.cards != null) {\n            results.cards.forEach((value: any) => {\n                const cipher = this.initLoginCipher();\n                cipher.type = CipherType.Card;\n                cipher.name = this.getValueOrDefault(value.custName);\n                cipher.notes = this.getValueOrDefault(value.note);\n                cipher.card.cardholderName = this.getValueOrDefault(value.holderName);\n                cipher.card.number = this.getValueOrDefault(value.cardNumber);\n                cipher.card.code = this.getValueOrDefault(value.cvv);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                if (value.expirationDate != null) {\n                    if (value.expirationDate.month != null) {\n                        cipher.card.expMonth = value.expirationDate.month + '';\n                    }\n                    if (value.expirationDate.year != null) {\n                        cipher.card.expYear = value.expirationDate.year + '';\n                    }\n                }\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AviraCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name,\n                this.getValueOrDefault(this.nameFromUrl(value.website), '--'));\n            cipher.login.uris = this.makeUriArray(value.website);\n            cipher.login.password = this.getValueOrDefault(value.password);\n\n            if (this.isNullOrWhitespace(value.username) && !this.isNullOrWhitespace(value.secondary_username)) {\n                cipher.login.username = value.secondary_username;\n            } else {\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.notes = this.getValueOrDefault(value.secondary_username);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { FieldView } from '../models/view/fieldView';\nimport { FolderView } from '../models/view/folderView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherRepromptType } from '../enums/cipherRepromptType';\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class BitwardenCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (this.organization && !this.isNullOrWhitespace(value.collections)) {\n                const collections = (value.collections as string).split(',');\n                collections.forEach(col => {\n                    let addCollection = true;\n                    let collectionIndex = result.collections.length;\n\n                    for (let i = 0; i < result.collections.length; i++) {\n                        if (result.collections[i].name === col) {\n                            addCollection = false;\n                            collectionIndex = i;\n                            break;\n                        }\n                    }\n\n                    if (addCollection) {\n                        const collection = new CollectionView();\n                        collection.name = col;\n                        result.collections.push(collection);\n                    }\n\n                    result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                });\n            } else if (!this.organization) {\n                this.processFolder(result, value.folder);\n            }\n\n            const cipher = new CipherView();\n            cipher.favorite = !this.organization && this.getValueOrDefault(value.favorite, '0') !== '0' ? true : false;\n            cipher.type = CipherType.Login;\n            cipher.notes = this.getValueOrDefault(value.notes);\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            try {\n                cipher.reprompt = parseInt(this.getValueOrDefault(value.reprompt, CipherRepromptType.None.toString()), 10);\n            } catch (e) {\n                // tslint:disable-next-line\n                console.error('Unable to parse reprompt value', e);\n                cipher.reprompt = CipherRepromptType.None;\n            }\n\n            if (!this.isNullOrWhitespace(value.fields)) {\n                const fields = this.splitNewLine(value.fields);\n                for (let i = 0; i < fields.length; i++) {\n                    if (this.isNullOrWhitespace(fields[i])) {\n                        continue;\n                    }\n\n                    const delimPosition = fields[i].lastIndexOf(': ');\n                    if (delimPosition === -1) {\n                        continue;\n                    }\n\n                    if (cipher.fields == null) {\n                        cipher.fields = [];\n                    }\n\n                    const field = new FieldView();\n                    field.name = fields[i].substr(0, delimPosition);\n                    field.value = null;\n                    field.type = FieldType.Text;\n                    if (fields[i].length > (delimPosition + 2)) {\n                        field.value = fields[i].substr(delimPosition + 2);\n                    }\n                    cipher.fields.push(field);\n                }\n            }\n\n            const valueType = value.type != null ? value.type.toLowerCase() : null;\n            switch (valueType) {\n                case 'note':\n                    cipher.type = CipherType.SecureNote;\n                    cipher.secureNote = new SecureNoteView();\n                    cipher.secureNote.type = SecureNoteType.Generic;\n                    break;\n                default:\n                    cipher.type = CipherType.Login;\n                    cipher.login = new LoginView();\n                    cipher.login.totp = this.getValueOrDefault(value.login_totp || value.totp);\n                    cipher.login.username = this.getValueOrDefault(value.login_username || value.username);\n                    cipher.login.password = this.getValueOrDefault(value.login_password || value.password);\n                    const uris = this.parseSingleRowCsv(value.login_uri || value.uri);\n                    cipher.login.uris = this.makeUriArray(uris);\n                    break;\n            }\n\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { EncString } from '../models/domain/encString';\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherWithIds } from '../models/export/cipherWithIds';\nimport { CollectionWithId } from '../models/export/collectionWithId';\nimport { FolderWithId } from '../models/export/folderWithId';\n\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\n\nexport class BitwardenJsonImporter extends BaseImporter implements Importer {\n    private results: any;\n    private result: ImportResult;\n\n    constructor(private cryptoService: CryptoService, private i18nService: I18nService) {\n        super();\n    }\n\n    async parse(data: string): Promise<ImportResult> {\n        this.result = new ImportResult();\n        this.results = JSON.parse(data);\n        if (this.results == null || this.results.items == null || this.results.items.length === 0) {\n            this.result.success = false;\n            return this.result;\n        }\n\n        if (this.results.encrypted) {\n            await this.parseEncrypted();\n        } else {\n            this.parseDecrypted();\n        }\n\n        return this.result;\n    }\n\n    private async parseEncrypted() {\n        if (this.results.encKeyValidation_DO_NOT_EDIT != null) {\n            const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n            const encKeyValidation = new EncString(this.results.encKeyValidation_DO_NOT_EDIT);\n            const encKeyValidationDecrypt = await this.cryptoService.decryptToUtf8(encKeyValidation, orgKey);\n            if (encKeyValidationDecrypt === null) {\n                this.result.success = false;\n                this.result.errorMessage = this.i18nService.t('importEncKeyError');\n                return;\n            }\n        }\n\n        const groupingsMap = new Map<string, number>();\n\n        if (this.organization && this.results.collections != null) {\n            for (const c of this.results.collections as CollectionWithId[]) {\n                const collection = CollectionWithId.toDomain(c);\n                if (collection != null) {\n                    collection.id = null;\n                    collection.organizationId = this.organizationId;\n                    const view = await collection.decrypt();\n                    groupingsMap.set(c.id, this.result.collections.length);\n                    this.result.collections.push(view);\n                }\n            }\n        } else if (!this.organization && this.results.folders != null) {\n            for (const f of this.results.folders as FolderWithId[]) {\n                const folder = FolderWithId.toDomain(f);\n                if (folder != null) {\n                    folder.id = null;\n                    const view = await folder.decrypt();\n                    groupingsMap.set(f.id, this.result.folders.length);\n                    this.result.folders.push(view);\n                }\n            }\n        }\n\n        for (const c of this.results.items as CipherWithIds[]) {\n            const cipher = CipherWithIds.toDomain(c);\n            // reset ids incase they were set for some reason\n            cipher.id = null;\n            cipher.folderId = null;\n            cipher.organizationId = this.organizationId;\n            cipher.collectionIds = null;\n\n            // make sure password history is limited\n            if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n                cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n            }\n\n            if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n                this.result.folderRelationships.push([this.result.ciphers.length, groupingsMap.get(c.folderId)]);\n            } else if (this.organization && c.collectionIds != null) {\n                c.collectionIds.forEach(cId => {\n                    if (groupingsMap.has(cId)) {\n                        this.result.collectionRelationships.push([this.result.ciphers.length, groupingsMap.get(cId)]);\n                    }\n                });\n            }\n\n            const view = await cipher.decrypt();\n            this.cleanupCipher(view);\n            this.result.ciphers.push(view);\n        }\n\n        this.result.success = true;\n    }\n\n    private parseDecrypted() {\n        const groupingsMap = new Map<string, number>();\n        if (this.organization && this.results.collections != null) {\n            this.results.collections.forEach((c: CollectionWithId) => {\n                const collection = CollectionWithId.toView(c);\n                if (collection != null) {\n                    collection.id = null;\n                    collection.organizationId = null;\n                    groupingsMap.set(c.id, this.result.collections.length);\n                    this.result.collections.push(collection);\n                }\n            });\n        } else if (!this.organization && this.results.folders != null) {\n            this.results.folders.forEach((f: FolderWithId) => {\n                const folder = FolderWithId.toView(f);\n                if (folder != null) {\n                    folder.id = null;\n                    groupingsMap.set(f.id, this.result.folders.length);\n                    this.result.folders.push(folder);\n                }\n            });\n        }\n\n        this.results.items.forEach((c: CipherWithIds) => {\n            const cipher = CipherWithIds.toView(c);\n            // reset ids incase they were set for some reason\n            cipher.id = null;\n            cipher.folderId = null;\n            cipher.organizationId = null;\n            cipher.collectionIds = null;\n\n            // make sure password history is limited\n            if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n                cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n            }\n\n            if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n                this.result.folderRelationships.push([this.result.ciphers.length, groupingsMap.get(c.folderId)]);\n            } else if (this.organization && c.collectionIds != null) {\n                c.collectionIds.forEach(cId => {\n                    if (groupingsMap.has(cId)) {\n                        this.result.collectionRelationships.push([this.result.ciphers.length, groupingsMap.get(cId)]);\n                    }\n                });\n            }\n\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n\n        this.result.success = true;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class BlackBerryCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.grouping === 'list') {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.favorite = value.fav === '1';\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.notes = this.getValueOrDefault(value.extra);\n            if (value.grouping !== 'note') {\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.username = this.getValueOrDefault(value.username);\n            }\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class BlurCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.label === 'null') {\n                value.label = null;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.label,\n                this.getValueOrDefault(this.nameFromUrl(value.domain), '--'));\n            cipher.login.uris = this.makeUriArray(value.domain);\n            cipher.login.password = this.getValueOrDefault(value.password);\n\n            if (this.isNullOrWhitespace(value.email) && !this.isNullOrWhitespace(value.username)) {\n                cipher.login.username = value.username;\n            } else {\n                cipher.login.username = this.getValueOrDefault(value.email);\n                cipher.notes = this.getValueOrDefault(value.username);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nconst OfficialProps = [\n    '!group_id', '!group_name', 'title', 'username', 'password', 'URL', 'id',\n];\n\nexport class ButtercupCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            this.processFolder(result, this.getValueOrDefault(value['!group_name']));\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.title, '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n\n            let processingCustomFields = false;\n            for (const prop in value) {\n                if (value.hasOwnProperty(prop)) {\n                    if (!processingCustomFields && OfficialProps.indexOf(prop) === -1) {\n                        processingCustomFields = true;\n                    }\n                    if (processingCustomFields) {\n                        this.processKvp(cipher, prop, value[prop]);\n                    }\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class ChromeCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class ClipperzHtmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const textarea = doc.querySelector('textarea');\n        if (textarea == null || this.isNullOrWhitespace(textarea.textContent)) {\n            result.errorMessage = 'Missing textarea.';\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const entries = JSON.parse(textarea.textContent);\n        entries.forEach((entry: any) => {\n            const cipher = this.initLoginCipher();\n            if (!this.isNullOrWhitespace(entry.label)) {\n                cipher.name = entry.label.split(' ')[0];\n            }\n            if (entry.data != null && !this.isNullOrWhitespace(entry.data.notes)) {\n                cipher.notes = entry.data.notes.split('\\\\n').join('\\n');\n            }\n\n            if (entry.currentVersion != null && entry.currentVersion.fields != null) {\n                for (const property in entry.currentVersion.fields) {\n                    if (!entry.currentVersion.fields.hasOwnProperty(property)) {\n                        continue;\n                    }\n\n                    const field = entry.currentVersion.fields[property];\n                    const actionType = field.actionType != null ? field.actionType.toLowerCase() : null;\n                    switch (actionType) {\n                        case 'password':\n                            cipher.login.password = this.getValueOrDefault(field.value);\n                            break;\n                        case 'email':\n                        case 'username':\n                        case 'user':\n                        case 'name':\n                            cipher.login.username = this.getValueOrDefault(field.value);\n                            break;\n                        case 'url':\n                            cipher.login.uris = this.makeUriArray(field.value);\n                            break;\n                        default:\n                            const labelLower = field.label != null ? field.label.toLowerCase() : null;\n                            if (cipher.login.password == null && this.passwordFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.password = this.getValueOrDefault(field.value);\n                            } else if (cipher.login.username == null &&\n                                this.usernameFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.username = this.getValueOrDefault(field.value);\n                            } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                                this.uriFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.uris = this.makeUriArray(field.value);\n                            } else {\n                                this.processKvp(cipher, field.label, field.value);\n                            }\n                            break;\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class CodebookCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            this.processFolder(result, this.getValueOrDefault(value.Category));\n\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.Favorite) === 'True';\n            cipher.name = this.getValueOrDefault(value.Entry, '--');\n            cipher.notes = this.getValueOrDefault(value.Note);\n            cipher.login.username = this.getValueOrDefault(value.Username, value.Email);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.totp = this.getValueOrDefault(value.TOTP);\n            cipher.login.uris = this.makeUriArray(value.Website);\n\n            if (!this.isNullOrWhitespace(value.Username)) {\n                this.processKvp(cipher, 'Email', value.Email);\n            }\n            this.processKvp(cipher, 'Phone', value.Phone);\n            this.processKvp(cipher, 'PIN', value.PIN);\n            this.processKvp(cipher, 'Account', value.Account);\n            this.processKvp(cipher, 'Date', value.Date);\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { IdentityView } from '../models/view/identityView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nconst HandledResults = new Set(['ADDRESS', 'AUTHENTIFIANT', 'BANKSTATEMENT', 'IDCARD', 'IDENTITY',\n    'PAYMENTMEANS_CREDITCARD', 'PAYMENTMEAN_PAYPAL', 'EMAIL']);\n\nexport class DashlaneJsonImporter extends BaseImporter implements Importer {\n    private result: ImportResult;\n\n    parse(data: string): Promise<ImportResult> {\n        this.result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.length === 0) {\n            this.result.success = false;\n            return Promise.resolve(this.result);\n        }\n\n        if (results.ADDRESS != null) {\n            this.processAddress(results.ADDRESS);\n        }\n        if (results.AUTHENTIFIANT != null) {\n            this.processAuth(results.AUTHENTIFIANT);\n        }\n        if (results.BANKSTATEMENT != null) {\n            this.processNote(results.BANKSTATEMENT, 'BankAccountName');\n        }\n        if (results.IDCARD != null) {\n            this.processNote(results.IDCARD, 'Fullname');\n        }\n        if (results.PAYMENTMEANS_CREDITCARD != null) {\n            this.processCard(results.PAYMENTMEANS_CREDITCARD);\n        }\n        if (results.IDENTITY != null) {\n            this.processIdentity(results.IDENTITY);\n        }\n\n        for (const key in results) {\n            if (results.hasOwnProperty(key) && !HandledResults.has(key)) {\n                this.processNote(results[key], null, 'Generic Note');\n            }\n        }\n\n        this.result.success = true;\n        return Promise.resolve(this.result);\n    }\n\n    private processAuth(results: any[]) {\n        results.forEach((credential: any) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(credential.title);\n\n            cipher.login.username = this.getValueOrDefault(credential.login,\n                this.getValueOrDefault(credential.secondaryLogin));\n            if (this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = this.getValueOrDefault(credential.email);\n            } else if (!this.isNullOrWhitespace(credential.email)) {\n                cipher.notes = ('Email: ' + credential.email + '\\n');\n            }\n\n            cipher.login.password = this.getValueOrDefault(credential.password);\n            cipher.login.uris = this.makeUriArray(credential.domain);\n            cipher.notes += this.getValueOrDefault(credential.note, '');\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processIdentity(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.identity = new IdentityView();\n            cipher.type = CipherType.Identity;\n            cipher.name = this.getValueOrDefault(obj.fullName, '');\n            const nameParts = cipher.name.split(' ');\n            if (nameParts.length > 0) {\n                cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n            }\n            if (nameParts.length === 2) {\n                cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n            } else if (nameParts.length === 3) {\n                cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n                cipher.identity.lastName = this.getValueOrDefault(nameParts[2]);\n            }\n            cipher.identity.username = this.getValueOrDefault(obj.pseudo);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processAddress(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.identity = new IdentityView();\n            cipher.type = CipherType.Identity;\n            cipher.name = this.getValueOrDefault(obj.addressName);\n            cipher.identity.address1 = this.getValueOrDefault(obj.addressFull);\n            cipher.identity.city = this.getValueOrDefault(obj.city);\n            cipher.identity.state = this.getValueOrDefault(obj.state);\n            cipher.identity.postalCode = this.getValueOrDefault(obj.zipcode);\n            cipher.identity.country = this.getValueOrDefault(obj.country);\n            if (cipher.identity.country != null) {\n                cipher.identity.country = cipher.identity.country.toUpperCase();\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processCard(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.card = new CardView();\n            cipher.type = CipherType.Card;\n            cipher.name = this.getValueOrDefault(obj.bank);\n            cipher.card.number = this.getValueOrDefault(obj.cardNumber);\n            cipher.card.brand = this.getCardBrand(cipher.card.number);\n            cipher.card.cardholderName = this.getValueOrDefault(obj.owner);\n            if (!this.isNullOrWhitespace(cipher.card.brand)) {\n                if (this.isNullOrWhitespace(cipher.name)) {\n                    cipher.name = cipher.card.brand;\n                } else {\n                    cipher.name += (' - ' + cipher.card.brand);\n                }\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processNote(results: any[], nameProperty: string, name: string = null) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.secureNote = new SecureNoteView();\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote.type = SecureNoteType.Generic;\n            if (name != null) {\n                cipher.name = name;\n            } else {\n                cipher.name = this.getValueOrDefault(obj[nameProperty]);\n            }\n            for (const key in obj) {\n                if (obj.hasOwnProperty(key) && key !== nameProperty) {\n                    this.processKvp(cipher, key, obj[key].toString());\n                }\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class EncryptrCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Label, '--');\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            const text = this.getValueOrDefault(value.Text);\n            if (!this.isNullOrWhitespace(text)) {\n                if (this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes = text;\n                } else {\n                    cipher.notes += ('\\n\\n' + text);\n                }\n            }\n\n            const type = value['Entry Type'];\n            if (type === 'Password') {\n                cipher.login.username = this.getValueOrDefault(value.Username);\n                cipher.login.password = this.getValueOrDefault(value.Password);\n                cipher.login.uris = this.makeUriArray(value['Site URL']);\n            } else if (type === 'Credit Card') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value['Name on card']);\n                cipher.card.number = this.getValueOrDefault(value['Card Number']);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.CVV);\n                const expiry = this.getValueOrDefault(value.Expiry);\n                if (!this.isNullOrWhitespace(expiry)) {\n                    const expParts = expiry.split('/');\n                    if (expParts.length > 1) {\n                        cipher.card.expMonth = parseInt(expParts[0], null).toString();\n                        cipher.card.expYear = (2000 + parseInt(expParts[1], null)).toString();\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { CardView } from '../models/view/cardView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nexport class EnpassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        let firstRow = true;\n        results.forEach(value => {\n            if (value.length < 2 || (firstRow && (value[0] === 'Title' || value[0] === 'title'))) {\n                firstRow = false;\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            if (value.length === 2 || (!this.containsField(value, 'username') &&\n                !this.containsField(value, 'password') && !this.containsField(value, 'email') &&\n                !this.containsField(value, 'url'))) {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n            }\n\n            if (this.containsField(value, 'cardholder') && this.containsField(value, 'number') &&\n                this.containsField(value, 'expiry date')) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            }\n\n            if (value.length > 2 && (value.length % 2) === 0) {\n                for (let i = 0; i < value.length - 2; i += 2) {\n                    const fieldValue: string = value[i + 2];\n                    if (this.isNullOrWhitespace(fieldValue)) {\n                        continue;\n                    }\n\n                    const fieldName: string = value[i + 1];\n                    const fieldNameLower = fieldName.toLowerCase();\n\n                    if (cipher.type === CipherType.Login) {\n                        if (fieldNameLower === 'url' && (cipher.login.uris == null || cipher.login.uris.length === 0)) {\n                            cipher.login.uris = this.makeUriArray(fieldValue);\n                            continue;\n                        } else if ((fieldNameLower === 'username' || fieldNameLower === 'email') &&\n                            this.isNullOrWhitespace(cipher.login.username)) {\n                            cipher.login.username = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'password' && this.isNullOrWhitespace(cipher.login.password)) {\n                            cipher.login.password = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'totp' && this.isNullOrWhitespace(cipher.login.totp)) {\n                            cipher.login.totp = fieldValue;\n                            continue;\n                        }\n                    } else if (cipher.type === CipherType.Card) {\n                        if (fieldNameLower === 'cardholder' && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n                            cipher.card.cardholderName = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'number' && this.isNullOrWhitespace(cipher.card.number)) {\n                            cipher.card.number = fieldValue;\n                            cipher.card.brand = this.getCardBrand(fieldValue);\n                            continue;\n                        } else if (fieldNameLower === 'cvc' && this.isNullOrWhitespace(cipher.card.code)) {\n                            cipher.card.code = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'expiry date' && this.isNullOrWhitespace(cipher.card.expMonth) &&\n                            this.isNullOrWhitespace(cipher.card.expYear)) {\n                            if (this.setCardExpiration(cipher, fieldValue)) {\n                                continue;\n                            }\n                        } else if (fieldNameLower === 'type') {\n                            // Skip since brand was determined from number above\n                            continue;\n                        }\n                    }\n\n                    this.processKvp(cipher, fieldName, fieldValue);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private containsField(fields: any[], name: string) {\n        if (fields == null || name == null) {\n            return false;\n        }\n        return fields.filter(f => !this.isNullOrWhitespace(f) &&\n            f.toLowerCase() === name.toLowerCase()).length > 0;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\n\nexport class EnpassJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.items == null || results.items.length === 0) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const foldersMap = new Map<string, string>();\n        const foldersIndexMap = new Map<string, number>();\n        const folderTree = this.buildFolderTree(results.folders);\n        this.flattenFolderTree(null, folderTree, foldersMap);\n        foldersMap.forEach((val, key) => {\n            foldersIndexMap.set(key, result.folders.length);\n            const f = new FolderView();\n            f.name = val;\n            result.folders.push(f);\n        });\n\n        results.items.forEach((item: any) => {\n            if (item.folders != null && item.folders.length > 0 && foldersIndexMap.has(item.folders[0])) {\n                result.folderRelationships.push([result.ciphers.length, foldersIndexMap.get(item.folders[0])]);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(item.title);\n            cipher.favorite = item.favorite > 0;\n\n            if (item.template_type != null && item.fields != null && item.fields.length > 0) {\n                if (item.template_type.indexOf('login.') === 0 || item.template_type.indexOf('password.') === 0) {\n                    this.processLogin(cipher, item.fields);\n                } else if (item.template_type.indexOf('creditcard.') === 0) {\n                    this.processCard(cipher, item.fields);\n                } else if (item.template_type.indexOf('identity.') < 0 &&\n                    item.fields.some((f: any) => f.type === 'password' && !this.isNullOrWhitespace(f.value))) {\n                    this.processLogin(cipher, item.fields);\n                } else {\n                    this.processNote(cipher, item.fields);\n                }\n            }\n\n            cipher.notes += ('\\n' + this.getValueOrDefault(item.note, ''));\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private processLogin(cipher: CipherView, fields: any[]) {\n        const urls: string[] = [];\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section') {\n                return;\n            }\n\n            if ((field.type === 'username' || field.type === 'email') &&\n                this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = field.value;\n            } else if (field.type === 'password' && this.isNullOrWhitespace(cipher.login.password)) {\n                cipher.login.password = field.value;\n            } else if (field.type === 'totp' && this.isNullOrWhitespace(cipher.login.totp)) {\n                cipher.login.totp = field.value;\n            } else if (field.type === 'url') {\n                urls.push(field.value);\n            } else {\n                this.processKvp(cipher, field.label, field.value,\n                    field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n            }\n        });\n        cipher.login.uris = this.makeUriArray(urls);\n    }\n\n    private processCard(cipher: CipherView, fields: any[]) {\n        cipher.card = new CardView();\n        cipher.type = CipherType.Card;\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section' || field.type === 'ccType') {\n                return;\n            }\n\n            if (field.type === 'ccName' && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n                cipher.card.cardholderName = field.value;\n            } else if (field.type === 'ccNumber' && this.isNullOrWhitespace(cipher.card.number)) {\n                cipher.card.number = field.value;\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n            } else if (field.type === 'ccCvc' && this.isNullOrWhitespace(cipher.card.code)) {\n                cipher.card.code = field.value;\n            } else if (field.type === 'ccExpiry' && this.isNullOrWhitespace(cipher.card.expYear)) {\n                if (!this.setCardExpiration(cipher, field.value)) {\n                    this.processKvp(cipher, field.label, field.value,\n                        field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n                }\n            } else {\n                this.processKvp(cipher, field.label, field.value,\n                    field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n            }\n        });\n    }\n\n    private processNote(cipher: CipherView, fields: any[]) {\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section') {\n                return;\n            }\n            this.processKvp(cipher, field.label, field.value,\n                field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n        });\n    }\n\n    private buildFolderTree(folders: any[]): any[] {\n        if (folders == null) {\n            return [];\n        }\n        const folderTree: any[] = [];\n        const map = new Map<string, any>([]);\n        folders.forEach((obj: any) => {\n            map.set(obj.uuid, obj);\n            obj.children = [];\n        });\n        folders.forEach((obj: any) => {\n            if (obj.parent_uuid != null && obj.parent_uuid !== '' && map.has(obj.parent_uuid)) {\n                map.get(obj.parent_uuid).children.push(obj);\n            } else {\n                folderTree.push(obj);\n            }\n        });\n        return folderTree;\n    }\n\n    private flattenFolderTree(titlePrefix: string, tree: any[], map: Map<string, string>) {\n        if (tree == null) {\n            return;\n        }\n        tree.forEach((f: any) => {\n            if (f.title != null && f.title.trim() !== '') {\n                let title = f.title.trim();\n                if (titlePrefix != null && titlePrefix.trim() !== '') {\n                    title = titlePrefix + '/' + title;\n                }\n                map.set(f.uuid, title);\n                if (f.children != null && f.children.length !== 0) {\n                    this.flattenFolderTree(title, f.children, map);\n                }\n            }\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class FirefoxCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.filter(value => {\n            return value.url !== 'chrome://FirefoxAccounts';\n        }).forEach(value => {\n            const cipher = this.initLoginCipher();\n            const url = this.getValueOrDefault(value.url, this.getValueOrDefault(value.hostname));\n            cipher.name = this.getValueOrDefault(this.nameFromUrl(url), '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class FSecureFskImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.data == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        for (const key in results.data) {\n            if (!results.data.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const value = results.data[key];\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.service);\n            cipher.notes = this.getValueOrDefault(value.notes);\n\n            if (value.style === 'website') {\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.uris = this.makeUriArray(value.url);\n            } else if (value.style === 'creditcard') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.username);\n                cipher.card.number = this.getValueOrDefault(value.creditNumber);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.creditCvv);\n                if (!this.isNullOrWhitespace(value.creditExpiry)) {\n                    if (!this.setCardExpiration(cipher, value.creditExpiry)) {\n                        this.processKvp(cipher, 'Expiration', value.creditExpiry);\n                    }\n                }\n                if (!this.isNullOrWhitespace(value.password)) {\n                    this.processKvp(cipher, 'PIN', value.password);\n                }\n            } else {\n                continue;\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class GnomeJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || Object.keys(results).length === 0) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        for (const keyRing in results) {\n            if (!results.hasOwnProperty(keyRing) || this.isNullOrWhitespace(keyRing) ||\n                results[keyRing].length === 0) {\n                continue;\n            }\n\n            results[keyRing].forEach((value: any) => {\n                if (this.isNullOrWhitespace(value.display_name) || value.display_name.indexOf('http') !== 0) {\n                    return;\n                }\n\n                this.processFolder(result, keyRing);\n                const cipher = this.initLoginCipher();\n                cipher.name = value.display_name.replace('http://', '').replace('https://', '');\n                if (cipher.name.length > 30) {\n                    cipher.name = cipher.name.substring(0, 30);\n                }\n                cipher.login.password = this.getValueOrDefault(value.secret);\n                cipher.login.uris = this.makeUriArray(value.display_name);\n\n                if (value.attributes != null) {\n                    cipher.login.username = value.attributes != null ?\n                        this.getValueOrDefault(value.attributes.username_value) : null;\n                    for (const attr in value.attributes) {\n                        if (!value.attributes.hasOwnProperty(attr) || attr === 'username_value' ||\n                            attr === 'xdg:schema') {\n                            continue;\n                        }\n                        this.processKvp(cipher, attr, value.attributes[attr]);\n                    }\n                }\n\n                this.convertToNoteIfNeeded(cipher);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nconst NotesHeader = 'Notes\\n\\n';\nconst ApplicationsHeader = 'Applications\\n\\n';\nconst WebsitesHeader = 'Websites\\n\\n';\nconst Delimiter = '\\n---\\n';\n\nexport class KasperskyTxtImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n\n        let notesData: string;\n        let applicationsData: string;\n        let websitesData: string;\n        let workingData = this.splitNewLine(data).join('\\n');\n\n        if (workingData.indexOf(NotesHeader) !== -1) {\n            const parts = workingData.split(NotesHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                notesData = parts[1];\n            }\n        }\n        if (workingData.indexOf(ApplicationsHeader) !== -1) {\n            const parts = workingData.split(ApplicationsHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                applicationsData = parts[1];\n            }\n        }\n        if (workingData.indexOf(WebsitesHeader) === 0) {\n            const parts = workingData.split(WebsitesHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                websitesData = parts[1];\n            }\n        }\n\n        const notes = this.parseDataCategory(notesData);\n        const applications = this.parseDataCategory(applicationsData);\n        const websites = this.parseDataCategory(websitesData);\n\n        notes.forEach(n => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(n.get('Name'));\n            cipher.notes = this.getValueOrDefault(n.get('Text'));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        websites.concat(applications).forEach(w => {\n            const cipher = this.initLoginCipher();\n            const nameKey = w.has('Website name') ? 'Website name' : 'Application';\n            cipher.name = this.getValueOrDefault(w.get(nameKey), '');\n            if (!this.isNullOrWhitespace(w.get('Login name'))) {\n                if (!this.isNullOrWhitespace(cipher.name)) {\n                    cipher.name += ': ';\n                }\n                cipher.name += w.get('Login name');\n            }\n            cipher.notes = this.getValueOrDefault(w.get('Comment'));\n            if (w.has('Website URL')) {\n                cipher.login.uris = this.makeUriArray(w.get('Website URL'));\n            }\n            cipher.login.username = this.getValueOrDefault(w.get('Login'));\n            cipher.login.password = this.getValueOrDefault(w.get('Password'));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private parseDataCategory(data: string): Map<string, string>[] {\n        if (this.isNullOrWhitespace(data) || data.indexOf(Delimiter) === -1) {\n            return [];\n        }\n        const items: Map<string, string>[] = [];\n        data.split(Delimiter).forEach(p => {\n            if (p.indexOf('\\n') === -1) {\n                return;\n            }\n            const item = new Map<string, string>();\n            let itemComment: string;\n            let itemCommentKey: string;\n            p.split('\\n').forEach(l => {\n                if (itemComment != null) {\n                    itemComment += ('\\n' + l);\n                    return;\n                }\n                const colonIndex = l.indexOf(':');\n                let key: string;\n                let val: string;\n                if (colonIndex === -1) {\n                    return;\n                } else {\n                    key = l.substring(0, colonIndex);\n                    if (l.length > colonIndex + 1) {\n                        val = l.substring(colonIndex + 2);\n                    }\n                }\n                if (key != null) {\n                    item.set(key, val);\n                }\n                if (key === 'Comment' || key === 'Text') {\n                    itemComment = val;\n                    itemCommentKey = key;\n                }\n            });\n            if (itemComment != null && itemCommentKey != null) {\n                item.set(itemCommentKey, itemComment);\n            }\n            if (item.size === 0) {\n                return;\n            }\n            items.push(item);\n        });\n        return items;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { FieldType } from '../enums/fieldType';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport class KeePass2XmlImporter extends BaseImporter implements Importer {\n    result = new ImportResult();\n\n    parse(data: string): Promise<ImportResult> {\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            this.result.success = false;\n            return Promise.resolve(this.result);\n        }\n\n        const rootGroup = doc.querySelector('KeePassFile > Root > Group');\n        if (rootGroup == null) {\n            this.result.errorMessage = 'Missing `KeePassFile > Root > Group` node.';\n            this.result.success = false;\n            return Promise.resolve(this.result);\n        }\n\n        this.traverse(rootGroup, true, '');\n\n        if (this.organization) {\n            this.moveFoldersToCollections(this.result);\n        }\n\n        this.result.success = true;\n        return Promise.resolve(this.result);\n    }\n\n    traverse(node: Element, isRootNode: boolean, groupPrefixName: string) {\n        const folderIndex = this.result.folders.length;\n        let groupName = groupPrefixName;\n\n        if (!isRootNode) {\n            if (groupName !== '') {\n                groupName += '/';\n            }\n            const nameEl = this.querySelectorDirectChild(node, 'Name');\n            groupName += nameEl == null ? '-' : nameEl.textContent;\n            const folder = new FolderView();\n            folder.name = groupName;\n            this.result.folders.push(folder);\n        }\n\n        this.querySelectorAllDirectChild(node, 'Entry').forEach(entry => {\n            const cipherIndex = this.result.ciphers.length;\n\n            const cipher = this.initLoginCipher();\n            this.querySelectorAllDirectChild(entry, 'String').forEach(entryString => {\n                const valueEl = this.querySelectorDirectChild(entryString, 'Value');\n                const value = valueEl != null ? valueEl.textContent : null;\n                if (this.isNullOrWhitespace(value)) {\n                    return;\n                }\n                const keyEl = this.querySelectorDirectChild(entryString, 'Key');\n                const key = keyEl != null ? keyEl.textContent : null;\n\n                if (key === 'URL') {\n                    cipher.login.uris = this.makeUriArray(value);\n                } else if (key === 'UserName') {\n                    cipher.login.username = value;\n                } else if (key === 'Password') {\n                    cipher.login.password = value;\n                }  else if (key === 'otp') {\n                    cipher.login.totp = value.replace('key=', '');\n                } else if (key === 'Title') {\n                    cipher.name = value;\n                } else if (key === 'Notes') {\n                    cipher.notes += (value + '\\n');\n                } else {\n                    let type = FieldType.Text;\n                    const attrs = (valueEl.attributes as any);\n                    if (attrs.length > 0 && attrs.ProtectInMemory != null &&\n                        attrs.ProtectInMemory.value === 'True') {\n                        type = FieldType.Hidden;\n                    }\n                    this.processKvp(cipher, key, value, type);\n                }\n            });\n\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n\n            if (!isRootNode) {\n                this.result.folderRelationships.push([cipherIndex, folderIndex]);\n            }\n        });\n\n        this.querySelectorAllDirectChild(node, 'Group').forEach(group => {\n            this.traverse(group, false, groupName);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class KeePassXCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (this.isNullOrWhitespace(value.Title)) {\n                return;\n            }\n\n            value.Group = !this.isNullOrWhitespace(value.Group) && value.Group.startsWith('Root/') ?\n                value.Group.replace('Root/', '') : value.Group;\n            const groupName = !this.isNullOrWhitespace(value.Group) ? value.Group : null;\n            this.processFolder(result, groupName);\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.name = this.getValueOrDefault(value.Title, '--');\n            cipher.login.username = this.getValueOrDefault(value.Username);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport class KeeperCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 6) {\n                return;\n            }\n\n            this.processFolder(result, value[0]);\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[5]) + '\\n';\n            cipher.name = this.getValueOrDefault(value[1], '--');\n            cipher.login.username = this.getValueOrDefault(value[2]);\n            cipher.login.password = this.getValueOrDefault(value[3]);\n            cipher.login.uris = this.makeUriArray(value[4]);\n\n            if (value.length > 7) {\n                // we have some custom fields.\n                for (let i = 7; i < value.length; i = i + 2) {\n                    this.processKvp(cipher, value[i], value[i + 1]);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FolderView } from '../models/view/folderView';\nimport { IdentityView } from '../models/view/identityView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class LastPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach((value, index) => {\n            const cipherIndex = result.ciphers.length;\n            let folderIndex = result.folders.length;\n            let grouping = value.grouping;\n            if (grouping != null) {\n                grouping = grouping.replace(/\\\\/g, '/').replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, '');\n            }\n            const hasFolder = this.getValueOrDefault(grouping, '(none)') !== '(none)';\n            let addFolder = hasFolder;\n\n            if (hasFolder) {\n                for (let i = 0; i < result.folders.length; i++) {\n                    if (result.folders[i].name === grouping) {\n                        addFolder = false;\n                        folderIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            const cipher = this.buildBaseCipher(value);\n            if (cipher.type === CipherType.Login) {\n                cipher.notes = this.getValueOrDefault(value.extra);\n                cipher.login = new LoginView();\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.totp = this.getValueOrDefault(value.totp);\n            } else if (cipher.type === CipherType.SecureNote) {\n                this.parseSecureNote(value, cipher);\n            } else if (cipher.type === CipherType.Card) {\n                cipher.card = this.parseCard(value);\n                cipher.notes = this.getValueOrDefault(value.notes);\n            } else if (cipher.type === CipherType.Identity) {\n                cipher.identity = this.parseIdentity(value);\n                cipher.notes = this.getValueOrDefault(value.notes);\n                if (!this.isNullOrWhitespace(value.ccnum)) {\n                    // there is a card on this identity too\n                    const cardCipher = this.buildBaseCipher(value);\n                    cardCipher.identity = null;\n                    cardCipher.type = CipherType.Card;\n                    cardCipher.card = this.parseCard(value);\n                    result.ciphers.push(cardCipher);\n                }\n            }\n\n            result.ciphers.push(cipher);\n\n            if (addFolder) {\n                const f = new FolderView();\n                f.name = grouping;\n                result.folders.push(f);\n            }\n            if (hasFolder) {\n                result.folderRelationships.push([cipherIndex, folderIndex]);\n            }\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private buildBaseCipher(value: any) {\n        const cipher = new CipherView();\n        if (value.hasOwnProperty('profilename') && value.hasOwnProperty('profilelanguage')) {\n            // form fill\n            cipher.favorite = false;\n            cipher.name = this.getValueOrDefault(value.profilename, '--');\n            cipher.type = CipherType.Card;\n\n            if (!this.isNullOrWhitespace(value.title) || !this.isNullOrWhitespace(value.firstname) ||\n                !this.isNullOrWhitespace(value.lastname) || !this.isNullOrWhitespace(value.address1) ||\n                !this.isNullOrWhitespace(value.phone) || !this.isNullOrWhitespace(value.username) ||\n                !this.isNullOrWhitespace(value.email)) {\n                cipher.type = CipherType.Identity;\n            }\n        } else {\n            // site or secure note\n            cipher.favorite = !this.organization && this.getValueOrDefault(value.fav, '0') === '1';\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.type = value.url === 'http://sn' ? CipherType.SecureNote : CipherType.Login;\n        }\n        return cipher;\n    }\n\n    private parseCard(value: any): CardView {\n        const card = new CardView();\n        card.cardholderName = this.getValueOrDefault(value.ccname);\n        card.number = this.getValueOrDefault(value.ccnum);\n        card.code = this.getValueOrDefault(value.cccsc);\n        card.brand = this.getCardBrand(value.ccnum);\n\n        if (!this.isNullOrWhitespace(value.ccexp) && value.ccexp.indexOf('-') > -1) {\n            const ccexpParts = (value.ccexp as string).split('-');\n            if (ccexpParts.length > 1) {\n                card.expYear = ccexpParts[0];\n                card.expMonth = ccexpParts[1];\n                if (card.expMonth.length === 2 && card.expMonth[0] === '0') {\n                    card.expMonth = card.expMonth[1];\n                }\n            }\n        }\n\n        return card;\n    }\n\n    private parseIdentity(value: any): IdentityView {\n        const identity = new IdentityView();\n        identity.title = this.getValueOrDefault(value.title);\n        identity.firstName = this.getValueOrDefault(value.firstname);\n        identity.middleName = this.getValueOrDefault(value.middlename);\n        identity.lastName = this.getValueOrDefault(value.lastname);\n        identity.username = this.getValueOrDefault(value.username);\n        identity.company = this.getValueOrDefault(value.company);\n        identity.ssn = this.getValueOrDefault(value.ssn);\n        identity.address1 = this.getValueOrDefault(value.address1);\n        identity.address2 = this.getValueOrDefault(value.address2);\n        identity.address3 = this.getValueOrDefault(value.address3);\n        identity.city = this.getValueOrDefault(value.city);\n        identity.state = this.getValueOrDefault(value.state);\n        identity.postalCode = this.getValueOrDefault(value.zip);\n        identity.country = this.getValueOrDefault(value.country);\n        identity.email = this.getValueOrDefault(value.email);\n        identity.phone = this.getValueOrDefault(value.phone);\n\n        if (!this.isNullOrWhitespace(identity.title)) {\n            identity.title = identity.title.charAt(0).toUpperCase() + identity.title.slice(1);\n        }\n\n        return identity;\n    }\n\n    private parseSecureNote(value: any, cipher: CipherView) {\n        const extraParts = this.splitNewLine(value.extra);\n        let processedNote = false;\n\n        if (extraParts.length) {\n            const typeParts = extraParts[0].split(':');\n            if (typeParts.length > 1 && typeParts[0] === 'NoteType' &&\n                (typeParts[1] === 'Credit Card' || typeParts[1] === 'Address')) {\n                if (typeParts[1] === 'Credit Card') {\n                    const mappedData = this.parseSecureNoteMapping<CardView>(cipher, extraParts, {\n                        'Number': 'number',\n                        'Name on Card': 'cardholderName',\n                        'Security Code': 'code',\n                        // LP provides date in a format like 'June,2020'\n                        // Store in expMonth, then parse and modify\n                        'Expiration Date': 'expMonth',\n                    });\n\n                    if (this.isNullOrWhitespace(mappedData.expMonth) || mappedData.expMonth === ',') {\n                        // No expiration data\n                        mappedData.expMonth = undefined;\n                    } else {\n                        const [monthString, year] = mappedData.expMonth.split(',');\n                        // Parse month name into number\n                        if (!this.isNullOrWhitespace(monthString)) {\n                            const month = new Date(Date.parse(monthString.trim() + ' 1, 2012')).getMonth() + 1;\n                            if (isNaN(month)) {\n                                mappedData.expMonth = undefined;\n                            } else {\n                                mappedData.expMonth = month.toString();\n                            }\n                        } else {\n                            mappedData.expMonth = undefined;\n                        }\n                        if (!this.isNullOrWhitespace(year)) {\n                            mappedData.expYear = year;\n                        }\n                    }\n\n                    cipher.type = CipherType.Card;\n                    cipher.card = mappedData;\n                } else if (typeParts[1] === 'Address') {\n                    const mappedData = this.parseSecureNoteMapping<IdentityView>(cipher, extraParts, {\n                        'Title': 'title',\n                        'First Name': 'firstName',\n                        'Last Name': 'lastName',\n                        'Middle Name': 'middleName',\n                        'Company': 'company',\n                        'Address 1': 'address1',\n                        'Address 2': 'address2',\n                        'Address 3': 'address3',\n                        'City / Town': 'city',\n                        'State': 'state',\n                        'Zip / Postal Code': 'postalCode',\n                        'Country': 'country',\n                        'Email Address': 'email',\n                        'Username': 'username',\n                    });\n                    cipher.type = CipherType.Identity;\n                    cipher.identity = mappedData;\n                }\n                processedNote = true;\n            }\n        }\n\n        if (!processedNote) {\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n            cipher.notes = this.getValueOrDefault(value.extra);\n        }\n    }\n\n    private parseSecureNoteMapping<T>(cipher: CipherView, extraParts: string[], map: any): T {\n        const dataObj: any = {};\n\n        let processingNotes = false;\n        extraParts.forEach(extraPart => {\n            let key: string = null;\n            let val: string = null;\n            if (!processingNotes) {\n                if (this.isNullOrWhitespace(extraPart)) {\n                    return;\n                }\n                const colonIndex = extraPart.indexOf(':');\n                if (colonIndex === -1) {\n                    key = extraPart;\n                } else {\n                    key = extraPart.substring(0, colonIndex);\n                    if (extraPart.length > colonIndex) {\n                        val = extraPart.substring(colonIndex + 1);\n                    }\n                }\n                if (this.isNullOrWhitespace(key) || this.isNullOrWhitespace(val) || key === 'NoteType') {\n                    return;\n                }\n            }\n\n            if (processingNotes) {\n                cipher.notes += ('\\n' + extraPart);\n            } else if (key === 'Notes') {\n                if (!this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes += ('\\n' + val);\n                } else {\n                    cipher.notes = val;\n                }\n                processingNotes = true;\n            } else if (map.hasOwnProperty(key)) {\n                dataObj[map[key]] = val;\n            } else {\n                this.processKvp(cipher, key, val);\n            }\n        });\n\n        return dataObj;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class LogMeOnceCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 4) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            cipher.login.username = this.getValueOrDefault(value[2]);\n            cipher.login.password = this.getValueOrDefault(value[3]);\n            cipher.login.uris = this.makeUriArray(value[1]);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class MeldiumCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.DisplayName, '--');\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.login.username = this.getValueOrDefault(value.UserName);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.Url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nexport class MSecureCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 3) {\n                return;\n            }\n\n            const folderName = this.getValueOrDefault(value[0], 'Unassigned') !== 'Unassigned' ? value[0] : null;\n            this.processFolder(result, folderName);\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[2], '--');\n\n            if (value[1] === 'Web Logins' || value[1] === 'Login') {\n                cipher.login.uris = this.makeUriArray(value[4]);\n                cipher.login.username = this.getValueOrDefault(value[5]);\n                cipher.login.password = this.getValueOrDefault(value[6]);\n                cipher.notes = !this.isNullOrWhitespace(value[3]) ? value[3].split('\\\\n').join('\\n') : null;\n            } else if (value.length > 3) {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n                for (let i = 3; i < value.length; i++) {\n                    if (!this.isNullOrWhitespace(value[i])) {\n                        cipher.notes += (value[i] + '\\n');\n                    }\n                }\n            }\n\n            if (!this.isNullOrWhitespace(value[1]) && cipher.type !== CipherType.Login) {\n                cipher.name = value[1] + ': ' + cipher.name;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { CardView } from '../models/view/cardView';\nimport { IdentityView } from '../models/view/identityView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class MykiCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.nickname, '--');\n            cipher.notes = this.getValueOrDefault(value.additionalInfo);\n\n            if (value.url !== undefined) {\n                // Accounts\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.totp = this.getValueOrDefault(value.twoFactAuthToken);\n            } else if (value.cardNumber !== undefined) {\n                // Cards\n                cipher.card = new CardView();\n                cipher.type = CipherType.Card;\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardName);\n                cipher.card.number = this.getValueOrDefault(value.cardNumber);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.expMonth = this.getValueOrDefault(value.exp_month);\n                cipher.card.expYear = this.getValueOrDefault(value.exp_year);\n                cipher.card.code = this.getValueOrDefault(value.cvv);\n            } else if (value.firstName !== undefined) {\n                // Identities\n                cipher.identity = new IdentityView();\n                cipher.type = CipherType.Identity;\n                cipher.identity.title = this.getValueOrDefault(value.title);\n                cipher.identity.firstName = this.getValueOrDefault(value.firstName);\n                cipher.identity.middleName = this.getValueOrDefault(value.middleName);\n                cipher.identity.lastName = this.getValueOrDefault(value.lastName);\n                cipher.identity.phone = this.getValueOrDefault(value.number);\n                cipher.identity.email = this.getValueOrDefault(value.email);\n                cipher.identity.address1 = this.getValueOrDefault(value.firstAddressLine);\n                cipher.identity.address2 = this.getValueOrDefault(value.secondAddressLine);\n                cipher.identity.city = this.getValueOrDefault(value.city);\n                cipher.identity.country = this.getValueOrDefault(value.country);\n                cipher.identity.postalCode = this.getValueOrDefault(value.zipCode);\n            } else if (value.content !== undefined) {\n                // Notes\n                cipher.secureNote = new SecureNoteView();\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote.type = SecureNoteType.Generic;\n                cipher.name = this.getValueOrDefault(value.title, '--');\n                cipher.notes = this.getValueOrDefault(value.content);\n            } else {\n                return;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { LoginView } from '../models/view/loginView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\ntype nodePassCsvParsed = {\n    name: string;\n    url: string;\n    username: string;\n    password: string;\n    note: string;\n    cardholdername: string;\n    cardnumber: string;\n    cvc: string;\n    expirydate: string;\n    zipcode: string;\n    folder: string;\n    full_name: string;\n    phone_number: string;\n    email: string;\n    address1: string;\n    address2: string;\n    city: string;\n    country: string;\n    state: string;\n};\n\nexport class NordPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results: nodePassCsvParsed[] = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(record => {\n\n            const recordType = this.evaluateType(record);\n            if (recordType === undefined) {\n                return;\n            }\n\n            if (!this.organization) {\n                this.processFolder(result, record.folder);\n            }\n\n            const cipher = new CipherView();\n            cipher.name = this.getValueOrDefault(record.name, '--');\n            cipher.notes = this.getValueOrDefault(record.note);\n\n            switch (recordType) {\n                case CipherType.Login:\n                    cipher.type = CipherType.Login;\n                    cipher.login = new LoginView();\n                    cipher.login.username = this.getValueOrDefault(record.username);\n                    cipher.login.password = this.getValueOrDefault(record.password);\n                    cipher.login.uris = this.makeUriArray(record.url);\n                    break;\n                case CipherType.Card:\n                    cipher.type = CipherType.Card;\n                    cipher.card.cardholderName = this.getValueOrDefault(record.cardholdername);\n                    cipher.card.number = this.getValueOrDefault(record.cardnumber);\n                    cipher.card.code = this.getValueOrDefault(record.cvc);\n                    cipher.card.brand = this.getCardBrand(cipher.card.number);\n                    this.setCardExpiration(cipher, record.expirydate);\n                    break;\n\n                case CipherType.Identity:\n                    cipher.type = CipherType.Identity;\n\n                    this.processName(cipher, this.getValueOrDefault(record.full_name));\n                    cipher.identity.address1 = this.getValueOrDefault(record.address1);\n                    cipher.identity.address2 = this.getValueOrDefault(record.address2);\n                    cipher.identity.city = this.getValueOrDefault(record.city);\n                    cipher.identity.state = this.getValueOrDefault(record.state);\n                    cipher.identity.postalCode = this.getValueOrDefault(record.zipcode);\n                    cipher.identity.country = this.getValueOrDefault(record.country);\n                    if (cipher.identity.country != null) {\n                        cipher.identity.country = cipher.identity.country.toUpperCase();\n                    }\n                    cipher.identity.email = this.getValueOrDefault(record.email);\n                    cipher.identity.phone = this.getValueOrDefault(record.phone_number);\n                    break;\n                case CipherType.SecureNote:\n                    cipher.type = CipherType.SecureNote;\n                    cipher.secureNote.type = SecureNoteType.Generic;\n                    break;\n                default:\n                    break;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private evaluateType(record: nodePassCsvParsed): CipherType {\n\n        if (!this.isNullOrWhitespace(record.username)) {\n            return CipherType.Login;\n        }\n\n        if (!this.isNullOrWhitespace(record.cardnumber)) {\n            return CipherType.Card;\n        }\n\n        if (!this.isNullOrWhitespace(record.full_name)) {\n            return CipherType.Identity;\n        }\n\n        if (!this.isNullOrWhitespace(record.note)) {\n            return CipherType.SecureNote;\n        }\n\n        return undefined;\n    }\n\n    private processName(cipher: CipherView, fullName: string) {\n\n        if (this.isNullOrWhitespace(fullName)) {\n            return;\n        }\n\n        const nameParts = fullName.split(' ');\n        if (nameParts.length > 0) {\n            cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n        }\n        if (nameParts.length === 2) {\n            cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n        } else if (nameParts.length >= 3) {\n            cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n            cipher.identity.lastName = nameParts.slice(2, nameParts.length).join(' ');\n        }\n    }\n}\n","import { BaseImporter } from '../baseImporter';\nimport { Importer } from '../importer';\n\nimport { ImportResult } from '../../models/domain/importResult';\n\nimport { CardView } from '../../models/view/cardView';\nimport { CipherView } from '../../models/view/cipherView';\nimport { IdentityView } from '../../models/view/identityView';\nimport { PasswordHistoryView } from '../../models/view/passwordHistoryView';\nimport { SecureNoteView } from '../../models/view/secureNoteView';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { FieldType } from '../../enums/fieldType';\nimport { SecureNoteType } from '../../enums/secureNoteType';\n\nexport class OnePassword1PifImporter extends BaseImporter implements Importer {\n    result = new ImportResult();\n\n    parse(data: string): Promise<ImportResult> {\n        data.split(this.newLineRegex).forEach(line => {\n            if (this.isNullOrWhitespace(line) || line[0] !== '{') {\n                return;\n            }\n            const item = JSON.parse(line);\n            if (item.trashed === true) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n\n            if (this.isNullOrWhitespace(item.hmac)) {\n                this.processStandardItem(item, cipher);\n            } else {\n                this.processWinOpVaultItem(item, cipher);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n\n        this.result.success = true;\n        return Promise.resolve(this.result);\n    }\n\n    private processWinOpVaultItem(item: any, cipher: CipherView) {\n        if (item.overview != null) {\n            cipher.name = this.getValueOrDefault(item.overview.title);\n            if (item.overview.URLs != null) {\n                const urls: string[] = [];\n                item.overview.URLs.forEach((url: any) => {\n                    if (!this.isNullOrWhitespace(url.u)) {\n                        urls.push(url.u);\n                    }\n                });\n                cipher.login.uris = this.makeUriArray(urls);\n            }\n        }\n\n        if (item.details != null) {\n            if (item.details.passwordHistory != null) {\n                this.parsePasswordHistory(item.details.passwordHistory, cipher);\n            }\n            if (!this.isNullOrWhitespace(item.details.ccnum) || !this.isNullOrWhitespace(item.details.cvv)) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            } else if (!this.isNullOrWhitespace(item.details.firstname) ||\n                !this.isNullOrWhitespace(item.details.address1)) {\n                cipher.type = CipherType.Identity;\n                cipher.identity = new IdentityView();\n            }\n            if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(item.details.password)) {\n                cipher.login.password = item.details.password;\n            }\n            if (!this.isNullOrWhitespace(item.details.notesPlain)) {\n                cipher.notes = item.details.notesPlain.split(this.newLineRegex).join('\\n') + '\\n';\n            }\n            if (item.details.fields != null) {\n                this.parseFields(item.details.fields, cipher, 'designation', 'value', 'name');\n            }\n            if (item.details.sections != null) {\n                item.details.sections.forEach((section: any) => {\n                    if (section.fields != null) {\n                        this.parseFields(section.fields, cipher, 'n', 'v', 't');\n                    }\n                });\n            }\n        }\n    }\n\n    private processStandardItem(item: any, cipher: CipherView) {\n        cipher.favorite = item.openContents && item.openContents.faveIndex ? true : false;\n        cipher.name = this.getValueOrDefault(item.title);\n\n        if (item.typeName === 'securenotes.SecureNote') {\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n        } else if (item.typeName === 'wallet.financial.CreditCard') {\n            cipher.type = CipherType.Card;\n            cipher.card = new CardView();\n        } else if (item.typeName === 'identities.Identity') {\n            cipher.type = CipherType.Identity;\n            cipher.identity = new IdentityView();\n        } else {\n            cipher.login.uris = this.makeUriArray(item.location);\n        }\n\n        if (item.secureContents != null) {\n            if (item.secureContents.passwordHistory != null) {\n                this.parsePasswordHistory(item.secureContents.passwordHistory, cipher);\n            }\n            if (!this.isNullOrWhitespace(item.secureContents.notesPlain)) {\n                cipher.notes = item.secureContents.notesPlain.split(this.newLineRegex).join('\\n') + '\\n';\n            }\n            if (cipher.type === CipherType.Login) {\n                if (!this.isNullOrWhitespace(item.secureContents.password)) {\n                    cipher.login.password = item.secureContents.password;\n                }\n                if (item.secureContents.URLs != null) {\n                    const urls: string[] = [];\n                    item.secureContents.URLs.forEach((u: any) => {\n                        if (!this.isNullOrWhitespace(u.url)) {\n                            urls.push(u.url);\n                        }\n                    });\n                    if (urls.length > 0) {\n                        cipher.login.uris = this.makeUriArray(urls);\n                    }\n                }\n            }\n            if (item.secureContents.fields != null) {\n                this.parseFields(item.secureContents.fields, cipher, 'designation', 'value', 'name');\n            }\n            if (item.secureContents.sections != null) {\n                item.secureContents.sections.forEach((section: any) => {\n                    if (section.fields != null) {\n                        this.parseFields(section.fields, cipher, 'n', 'v', 't');\n                    }\n                });\n            }\n        }\n    }\n\n    private parsePasswordHistory(items: any[], cipher: CipherView) {\n        const maxSize = items.length > 5 ? 5 : items.length;\n        cipher.passwordHistory = items\n            .filter((h: any) => !this.isNullOrWhitespace(h.value) && h.time != null)\n            .sort((a, b) => b.time - a.time)\n            .slice(0, maxSize)\n            .map((h: any) => {\n                const ph = new PasswordHistoryView();\n                ph.password = h.value;\n                ph.lastUsedDate = new Date(('' + h.time).length >= 13 ? h.time : h.time * 1000);\n                return ph;\n            });\n    }\n\n    private parseFields(fields: any[], cipher: CipherView, designationKey: string, valueKey: string, nameKey: string) {\n        fields.forEach((field: any) => {\n            if (field[valueKey] == null || field[valueKey].toString().trim() === '') {\n                return;\n            }\n\n            const fieldValue = field[valueKey].toString();\n            const fieldDesignation = field[designationKey] != null ? field[designationKey].toString() : null;\n\n            if (cipher.type === CipherType.Login) {\n                if (this.isNullOrWhitespace(cipher.login.username) && fieldDesignation === 'username') {\n                    cipher.login.username = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.login.password) && fieldDesignation === 'password') {\n                    cipher.login.password = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.login.totp) && fieldDesignation != null &&\n                    fieldDesignation.startsWith('TOTP_')) {\n                    cipher.login.totp = fieldValue;\n                    return;\n                }\n            } else if (cipher.type === CipherType.Card) {\n                if (this.isNullOrWhitespace(cipher.card.number) && fieldDesignation === 'ccnum') {\n                    cipher.card.number = fieldValue;\n                    cipher.card.brand = this.getCardBrand(fieldValue);\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.code) && fieldDesignation === 'cvv') {\n                    cipher.card.code = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.cardholderName) && fieldDesignation === 'cardholder') {\n                    cipher.card.cardholderName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.expiration) && fieldDesignation === 'expiry' &&\n                    fieldValue.length === 6) {\n                    cipher.card.expMonth = (fieldValue as string).substr(4, 2);\n                    if (cipher.card.expMonth[0] === '0') {\n                        cipher.card.expMonth = cipher.card.expMonth.substr(1, 1);\n                    }\n                    cipher.card.expYear = (fieldValue as string).substr(0, 4);\n                    return;\n                } else if (fieldDesignation === 'type') {\n                    // Skip since brand was determined from number above\n                    return;\n                }\n            } else if (cipher.type === CipherType.Identity) {\n                const identity = cipher.identity;\n                if (this.isNullOrWhitespace(identity.firstName) && fieldDesignation === 'firstname') {\n                    identity.firstName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.lastName) && fieldDesignation === 'lastname') {\n                    identity.lastName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.middleName) && fieldDesignation === 'initial') {\n                    identity.middleName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.phone) && fieldDesignation === 'defphone') {\n                    identity.phone = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.company) && fieldDesignation === 'company') {\n                    identity.company = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.email) && fieldDesignation === 'email') {\n                    identity.email = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.username) && fieldDesignation === 'username') {\n                    identity.username = fieldValue;\n                    return;\n                } else if (fieldDesignation === 'address') {\n                    // fieldValue is an object casted into a string, so access the plain value instead\n                    const { street, city, country, zip } = field[valueKey];\n                    identity.address1 = this.getValueOrDefault(street);\n                    identity.city = this.getValueOrDefault(city);\n                    if (!this.isNullOrWhitespace(country)) {\n                        identity.country = country.toUpperCase();\n                    }\n                    identity.postalCode = this.getValueOrDefault(zip);\n                    return;\n                }\n            }\n\n            const fieldName = this.isNullOrWhitespace(field[nameKey]) ? 'no_name' : field[nameKey];\n            if (fieldName === 'password' && cipher.passwordHistory != null &&\n                cipher.passwordHistory.some(h => h.password === fieldValue)) {\n                return;\n            }\n\n            const fieldType = field.k === 'concealed' ? FieldType.Hidden : FieldType.Text;\n            this.processKvp(cipher, fieldName, fieldValue, fieldType);\n        });\n    }\n}\n","import { Importer } from '../importer';\nimport { IgnoredProperties, OnePasswordCsvImporter } from './onepasswordCsvImporter';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { CardView, CipherView, IdentityView } from '../../models/view';\n\nexport class OnePasswordMacCsvImporter extends OnePasswordCsvImporter implements Importer {\n    setCipherType(value: any, cipher: CipherView) {\n        const onePassType = this.getValueOrDefault(this.getProp(value, 'type'), 'Login');\n        switch (onePassType) {\n            case 'Credit Card':\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                IgnoredProperties.push('type');\n                break;\n            case 'Identity':\n                cipher.type = CipherType.Identity;\n                cipher.identity = new IdentityView();\n                IgnoredProperties.push('type');\n                break;\n            case 'Login':\n            case 'Secure Note':\n                IgnoredProperties.push('type');\n            default:\n                break;\n        }\n    }\n}\n","import { CipherView } from '../../models/view';\n\nexport class CipherImportContext {\n    lowerProperty: string;\n    constructor(public importRecord: any, public property: string, public cipher: CipherView) {\n        this.lowerProperty = property.toLowerCase();\n    }\n}\n","export class View {\n}\n","import { Importer } from '../importer';\nimport { CipherImportContext } from './cipherImportContext';\nimport { OnePasswordCsvImporter } from './onepasswordCsvImporter';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { CardView, CipherView, IdentityView, LoginView } from '../../models/view';\n\nexport class OnePasswordWinCsvImporter extends OnePasswordCsvImporter implements Importer {\n    constructor() {\n        super();\n        this.identityPropertyParsers.push(this.setIdentityAddress);\n    }\n\n    setCipherType(value: any, cipher: CipherView) {\n        cipher.type = CipherType.Login;\n        cipher.login = new LoginView();\n\n        if (!this.isNullOrWhitespace(this.getPropByRegexp(value, /\\d+: number/i)) &&\n            !this.isNullOrWhitespace(this.getPropByRegexp(value, /\\d+: expiry date/i))) {\n            cipher.type = CipherType.Card;\n            cipher.card = new CardView();\n        }\n\n        if (!this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: first name/i)) ||\n            !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: initial/i)) ||\n            !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: last name/i)) ||\n            !this.isNullOrWhitespace(this.getPropByRegexp(value, /internet \\d+: email/i))) {\n            cipher.type = CipherType.Identity;\n            cipher.identity = new IdentityView();\n        }\n    }\n\n    setIdentityAddress(context: CipherImportContext) {\n        if (context.lowerProperty.match(/address \\d+: address/i)) {\n            this.processKvp(context.cipher, 'address', context.importRecord[context.property]);\n            return true;\n        }\n        return false;\n    }\n\n    setCreditCardExpiry(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.card.expiration) && context.lowerProperty.includes('expiry date')) {\n            const expSplit = (context.importRecord[context.property] as string).split('/');\n            context.cipher.card.expMonth = expSplit[0];\n            if (context.cipher.card.expMonth[0] === '0' && context.cipher.card.expMonth.length === 2) {\n                context.cipher.card.expMonth = context.cipher.card.expMonth.substr(1, 1);\n            }\n            context.cipher.card.expYear = expSplit[2].length > 4 ? expSplit[2].substr(0, 4) : expSplit[2];\n            return true;\n        }\n        return false;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CollectionView } from '../models/view/collectionView';\nimport { FolderView } from '../models/view/folderView';\n\nexport class PadlockCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        let headers: string[] = null;\n        results.forEach(value => {\n            if (headers == null) {\n                headers = value.map((v: string) => v);\n                return;\n            }\n\n            if (value.length < 2 || value.length !== headers.length) {\n                return;\n            }\n\n            if (!this.isNullOrWhitespace(value[1])) {\n                if (this.organization) {\n                    const tags = (value[1] as string).split(',');\n                    tags.forEach(tag => {\n                        tag = tag.trim();\n                        let addCollection = true;\n                        let collectionIndex = result.collections.length;\n\n                        for (let i = 0; i < result.collections.length; i++) {\n                            if (result.collections[i].name === tag) {\n                                addCollection = false;\n                                collectionIndex = i;\n                                break;\n                            }\n                        }\n\n                        if (addCollection) {\n                            const collection = new CollectionView();\n                            collection.name = tag;\n                            result.collections.push(collection);\n                        }\n\n                        result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                    });\n                } else {\n                    const tags = (value[1] as string).split(',');\n                    const tag = tags.length > 0 ? tags[0].trim() : null;\n                    this.processFolder(result, tag);\n                }\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            for (let i = 2; i < value.length; i++) {\n                const header = headers[i].trim().toLowerCase();\n                if (this.isNullOrWhitespace(value[i]) || this.isNullOrWhitespace(header)) {\n                    continue;\n                }\n\n                if (this.usernameFieldNames.indexOf(header) > -1) {\n                    cipher.login.username = value[i];\n                } else if (this.passwordFieldNames.indexOf(header) > -1) {\n                    cipher.login.password = value[i];\n                } else if (this.uriFieldNames.indexOf(header) > -1) {\n                    cipher.login.uris = this.makeUriArray(value[i]);\n                } else {\n                    this.processKvp(cipher, headers[i], value[i]);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PassKeepCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            this.processFolder(result, this.getValue('category', value));\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValue('description', value);\n            cipher.name = this.getValueOrDefault(this.getValue('title', value), '--');\n            cipher.login.username = this.getValue('username', value);\n            cipher.login.password = this.getValue('password', value);\n            cipher.login.uris = this.makeUriArray(this.getValue('site', value));\n            this.processKvp(cipher, 'Password 2', this.getValue('password2', value));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private getValue(key: string, value: any) {\n        return this.getValueOrDefault(value[key], this.getValueOrDefault(value[(' ' + key)]));\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PassmanJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.length === 0) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach((credential: any) => {\n            if (credential.tags != null && credential.tags.length > 0) {\n                const folderName = credential.tags[0].text;\n                this.processFolder(result, folderName);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = credential.label;\n\n            cipher.login.username = this.getValueOrDefault(credential.username);\n            if (this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = this.getValueOrDefault(credential.email);\n            } else if (!this.isNullOrWhitespace(credential.email)) {\n                cipher.notes = ('Email: ' + credential.email + '\\n');\n            }\n\n            cipher.login.password = this.getValueOrDefault(credential.password);\n            cipher.login.uris = this.makeUriArray(credential.url);\n            cipher.notes += this.getValueOrDefault(credential.description, '');\n            if (credential.otp != null) {\n                cipher.login.totp = this.getValueOrDefault(credential.otp.secret);\n            }\n\n            if (credential.custom_fields != null) {\n                credential.custom_fields.forEach((customField: any) => {\n                    switch (customField.field_type) {\n                        case 'text':\n                        case 'password':\n                            this.processKvp(cipher, customField.label, customField.value);\n                            break;\n                    }\n                });\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nexport class PasspackCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const tagsJson = !this.isNullOrWhitespace(value.Tags) ? JSON.parse(value.Tags) : null;\n            const tags: string[] = tagsJson != null && tagsJson.tags != null && tagsJson.tags.length > 0 ?\n                tagsJson.tags.map((tagJson: string) => {\n                    try {\n                        const t = JSON.parse(tagJson);\n                        return this.getValueOrDefault(t.tag);\n                    } catch { }\n                    return null;\n                }).filter((t: string) => !this.isNullOrWhitespace(t)) : null;\n\n            if (this.organization && tags != null && tags.length > 0) {\n                tags.forEach(tag => {\n                    let addCollection = true;\n                    let collectionIndex = result.collections.length;\n\n                    for (let i = 0; i < result.collections.length; i++) {\n                        if (result.collections[i].name === tag) {\n                            addCollection = false;\n                            collectionIndex = i;\n                            break;\n                        }\n                    }\n\n                    if (addCollection) {\n                        const collection = new CollectionView();\n                        collection.name = tag;\n                        result.collections.push(collection);\n                    }\n\n                    result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                });\n            } else if (!this.organization && tags != null && tags.length > 0) {\n                this.processFolder(result, tags[0]);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Notes, '');\n            cipher.notes += ('\\n\\n' + this.getValueOrDefault(value['Shared Notes'], '') + '\\n');\n            cipher.name = this.getValueOrDefault(value['Entry Name'], '--');\n            cipher.login.username = this.getValueOrDefault(value['User ID']);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n\n            if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n                value.__parsed_extra.forEach((extra: string) => {\n                    if (!this.isNullOrWhitespace(extra)) {\n                        cipher.notes += ('\\n' + extra);\n                    }\n                });\n            }\n\n            const fieldsJson = !this.isNullOrWhitespace(value['Extra Fields']) ?\n                JSON.parse(value['Extra Fields']) : null;\n            const fields = fieldsJson != null && fieldsJson.extraFields != null &&\n                fieldsJson.extraFields.length > 0 ? fieldsJson.extraFields.map((fieldJson: string) => {\n                    try {\n                        return JSON.parse(fieldJson);\n                    } catch { }\n                    return null;\n                }) : null;\n            if (fields != null) {\n                fields.forEach((f: any) => {\n                    if (f != null) {\n                        this.processKvp(cipher, f.name, f.data);\n                    }\n                });\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordAgentCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        let newVersion = true;\n        results.forEach(value => {\n            if (value.length !== 5 && value.length < 9) {\n                return;\n            }\n            const altFormat = value.length === 10 && value[0] === '0';\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[altFormat ? 1 : 0], '--');\n            cipher.login.username = this.getValueOrDefault(value[altFormat ? 2 : 1]);\n            cipher.login.password = this.getValueOrDefault(value[altFormat ? 3 : 2]);\n            if (value.length === 5) {\n                newVersion = false;\n                cipher.notes = this.getValueOrDefault(value[4]);\n                cipher.login.uris = this.makeUriArray(value[3]);\n            } else {\n                const folder = this.getValueOrDefault(value[altFormat ? 9 : 8], '(None)');\n                let folderName = folder !== '(None)' ? folder.split('\\\\').join('/') : null;\n                if (folderName != null) {\n                    folderName = folder.split(' > ').join('/');\n                    folderName = folder.split('>').join('/');\n                }\n                this.processFolder(result, folderName);\n                cipher.notes = this.getValueOrDefault(value[altFormat ? 5 : 3]);\n                cipher.login.uris = this.makeUriArray(value[4]);\n            }\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (newVersion && this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class PasswordBossJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.items == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const foldersMap = new Map<string, string>();\n        results.folders.forEach((value: any) => {\n            foldersMap.set(value.id, value.name);\n        });\n        const foldersIndexMap = new Map<string, number>();\n        foldersMap.forEach((val, key) => {\n            foldersIndexMap.set(key, result.folders.length);\n            const f = new FolderView();\n            f.name = val;\n            result.folders.push(f);\n        });\n\n        results.items.forEach((value: any) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.login.uris = this.makeUriArray(value.login_url);\n\n            if (value.folder != null && foldersIndexMap.has(value.folder)) {\n                result.folderRelationships.push([result.ciphers.length, foldersIndexMap.get(value.folder)]);\n            }\n\n            if (value.identifiers == null) {\n                return;\n            }\n\n            if (!this.isNullOrWhitespace(value.identifiers.notes)) {\n                cipher.notes = value.identifiers.notes.split('\\\\r\\\\n').join('\\n').split('\\\\n').join('\\n');\n            }\n\n            if (value.type === 'CreditCard') {\n                cipher.card = new CardView();\n                cipher.type = CipherType.Card;\n            }\n\n            for (const property in value.identifiers) {\n                if (!value.identifiers.hasOwnProperty(property)) {\n                    continue;\n                }\n                const valObj = value.identifiers[property];\n                const val = valObj != null ? valObj.toString() : null;\n                if (this.isNullOrWhitespace(val) || property === 'notes' || property === 'ignoreItemInSecurityScore') {\n                    continue;\n                }\n\n                if (property === 'custom_fields') {\n                    valObj.forEach((cf: any) => {\n                        this.processKvp(cipher, cf.name, cf.value);\n                    });\n                    continue;\n                }\n\n                if (cipher.type === CipherType.Card) {\n                    if (property === 'cardNumber') {\n                        cipher.card.number = val;\n                        cipher.card.brand = this.getCardBrand(val);\n                        continue;\n                    } else if (property === 'nameOnCard') {\n                        cipher.card.cardholderName = val;\n                        continue;\n                    } else if (property === 'security_code') {\n                        cipher.card.code = val;\n                        continue;\n                    } else if (property === 'expires') {\n                        try {\n                            const expDate = new Date(val);\n                            cipher.card.expYear = expDate.getFullYear().toString();\n                            cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n                        } catch { }\n                        continue;\n                    } else if (property === 'cardType') {\n                        continue;\n                    }\n                } else {\n                    if ((property === 'username' || property === 'email') &&\n                        this.isNullOrWhitespace(cipher.login.username)) {\n                        cipher.login.username = val;\n                        continue;\n                    } else if (property === 'password') {\n                        cipher.login.password = val;\n                        continue;\n                    } else if (property === 'totp') {\n                        cipher.login.totp = val;\n                        continue;\n                    } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                        this.uriFieldNames.indexOf(property) > -1) {\n                        cipher.login.uris = this.makeUriArray(val);\n                        continue;\n                    }\n                }\n\n                this.processKvp(cipher, property, val);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordDragonXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const records = doc.querySelectorAll('PasswordManager > record');\n        Array.from(records).forEach(record => {\n            const category = this.querySelectorDirectChild(record, 'Category');\n            const categoryText = category != null && !this.isNullOrWhitespace(category.textContent) &&\n                category.textContent !== 'Unfiled' ? category.textContent : null;\n            this.processFolder(result, categoryText);\n\n            const accountName = this.querySelectorDirectChild(record, 'Account-Name');\n            const userId = this.querySelectorDirectChild(record, 'User-Id');\n            const password = this.querySelectorDirectChild(record, 'Password');\n            const url = this.querySelectorDirectChild(record, 'URL');\n            const notes = this.querySelectorDirectChild(record, 'Notes');\n            const cipher = this.initLoginCipher();\n            cipher.name = accountName != null ? this.getValueOrDefault(accountName.textContent, '--') : '--';\n            cipher.notes = notes != null ? this.getValueOrDefault(notes.textContent) : '';\n            cipher.login.username = userId != null ? this.getValueOrDefault(userId.textContent) : null;\n            cipher.login.password = password != null ? this.getValueOrDefault(password.textContent) : null;\n            cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n            const attributes: string[] = [];\n            for (let i = 1; i <= 10; i++) {\n                attributes.push('Attribute-' + i);\n            }\n\n            this.querySelectorAllDirectChild(record, attributes.join(',')).forEach(attr => {\n                if (this.isNullOrWhitespace(attr.textContent) || attr.textContent === 'null') {\n                    return;\n                }\n                this.processKvp(cipher, attr.tagName, attr.textContent);\n            });\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordSafeXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const passwordSafe = doc.querySelector('passwordsafe');\n        if (passwordSafe == null) {\n            result.errorMessage = 'Missing `passwordsafe` node.';\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const notesDelimiter = passwordSafe.getAttribute('delimiter');\n        const entries = doc.querySelectorAll('passwordsafe > entry');\n        Array.from(entries).forEach(entry => {\n            const group = this.querySelectorDirectChild(entry, 'group');\n            const groupText = group != null && !this.isNullOrWhitespace(group.textContent) ?\n                group.textContent.split('.').join('/') : null;\n            this.processFolder(result, groupText);\n\n            const title = this.querySelectorDirectChild(entry, 'title');\n            const username = this.querySelectorDirectChild(entry, 'username');\n            const email = this.querySelectorDirectChild(entry, 'email');\n            const password = this.querySelectorDirectChild(entry, 'password');\n            const url = this.querySelectorDirectChild(entry, 'url');\n            const notes = this.querySelectorDirectChild(entry, 'notes');\n            const cipher = this.initLoginCipher();\n            cipher.name = title != null ? this.getValueOrDefault(title.textContent, '--') : '--';\n            cipher.notes = notes != null ?\n                this.getValueOrDefault(notes.textContent, '').split(notesDelimiter).join('\\n') : null;\n            cipher.login.username = username != null ? this.getValueOrDefault(username.textContent) : null;\n            cipher.login.password = password != null ? this.getValueOrDefault(password.textContent) : null;\n            cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n            if (this.isNullOrWhitespace(cipher.login.username) && email != null) {\n                cipher.login.username = this.getValueOrDefault(email.textContent);\n            } else if (email != null && !this.isNullOrWhitespace(email.textContent)) {\n                cipher.notes = this.isNullOrWhitespace(cipher.notes) ? 'Email: ' + email.textContent\n                    : (cipher.notes + '\\n' + 'Email: ' + email.textContent);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordWalletTxtImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 1) {\n                return;\n            }\n            if (value.length > 5) {\n                this.processFolder(result, value[5]);\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            if (value.length > 4) {\n                cipher.notes = this.getValueOrDefault(value[4], '').split('¬').join('\\n');\n            }\n            if (value.length > 2) {\n                cipher.login.username = this.getValueOrDefault(value[2]);\n            }\n            if (value.length > 3) {\n                cipher.login.password = this.getValueOrDefault(value[3]);\n            }\n            if (value.length > 1) {\n                cipher.login.uris = this.makeUriArray(value[1]);\n            }\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nexport class RememBearCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.trash === 'true') {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.notes = this.getValueOrDefault(value.notes);\n            if (value.type === 'LoginItem') {\n                cipher.login.uris = this.makeUriArray(value.website);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.username = this.getValueOrDefault(value.username);\n            } else if (value.type === 'CreditCardItem') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n                cipher.card.number = this.getValueOrDefault(value.number);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.verification);\n\n                try {\n                    const expMonth = this.getValueOrDefault(value.expiryMonth);\n                    if (expMonth != null) {\n                        const expMonthNumber = parseInt(expMonth, null);\n                        if (expMonthNumber != null && expMonthNumber >= 1 && expMonthNumber <= 12) {\n                            cipher.card.expMonth = expMonthNumber.toString();\n                        }\n                    }\n                } catch { }\n                try {\n                    const expYear = this.getValueOrDefault(value.expiryYear);\n                    if (expYear != null) {\n                        const expYearNumber = parseInt(expYear, null);\n                        if (expYearNumber != null) {\n                            cipher.card.expYear = expYearNumber.toString();\n                        }\n                    }\n                } catch { }\n\n                const pin = this.getValueOrDefault(value.pin);\n                if (pin != null) {\n                    this.processKvp(cipher, 'PIN', pin);\n                }\n                const zip = this.getValueOrDefault(value.zipCode);\n                if (zip != null) {\n                    this.processKvp(cipher, 'Zip Code', zip);\n                }\n            }\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class RoboFormCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        let i = 1;\n        results.forEach(value => {\n            const folder = !this.isNullOrWhitespace(value.Folder) && value.Folder.startsWith('/') ?\n                value.Folder.replace('/', '') : value.Folder;\n            const folderName = !this.isNullOrWhitespace(folder) ? folder : null;\n            this.processFolder(result, folderName);\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Note);\n            cipher.name = this.getValueOrDefault(value.Name, '--');\n            cipher.login.username = this.getValueOrDefault(value.Login);\n            cipher.login.password = this.getValueOrDefault(value.Pwd);\n            cipher.login.uris = this.makeUriArray(value.Url);\n\n            if (!this.isNullOrWhitespace(value.Rf_fields)) {\n                let fields: string[] = [value.Rf_fields];\n                if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n                    fields = fields.concat(value.__parsed_extra);\n                }\n                fields.forEach((field: string) => {\n                    const parts = field.split(':');\n                    if (parts.length < 3) {\n                        return;\n                    }\n                    const key = parts[0] === '-no-name-' ? null : parts[0];\n                    const val = parts.length === 4 && parts[2] === 'rck' ? parts[1] : parts[2];\n                    this.processKvp(cipher, key, val);\n                });\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n\n            if (i === results.length && cipher.name === '--' && this.isNullOrWhitespace(cipher.login.password)) {\n                return;\n            }\n\n            result.ciphers.push(cipher);\n            i++;\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { FieldType } from '../enums';\nimport { CipherView, FieldView } from '../models/view';\n\nexport class SafeInCloudXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const db = doc.querySelector('database');\n        if (db == null) {\n            result.errorMessage = 'Missing `database` node.';\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const foldersMap = new Map<string, number>();\n\n        Array.from(doc.querySelectorAll('database > label')).forEach(labelEl => {\n            const name = labelEl.getAttribute('name');\n            const id = labelEl.getAttribute('id');\n            if (!this.isNullOrWhitespace(name) && !this.isNullOrWhitespace(id)) {\n                foldersMap.set(id, result.folders.length);\n                const folder = new FolderView();\n                folder.name = name;\n                result.folders.push(folder);\n            }\n        });\n\n        Array.from(doc.querySelectorAll('database > card')).forEach(cardEl => {\n            if (cardEl.getAttribute('template') === 'true' || cardEl.getAttribute('deleted') === 'true') {\n                return;\n            }\n\n            const labelIdEl = this.querySelectorDirectChild(cardEl, 'label_id');\n            if (labelIdEl != null) {\n                const labelId = labelIdEl.textContent;\n                if (!this.isNullOrWhitespace(labelId) && foldersMap.has(labelId)) {\n                    result.folderRelationships.push([result.ciphers.length, foldersMap.get(labelId)]);\n                }\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(cardEl.getAttribute('title'), '--');\n\n            if (cardEl.getAttribute('star') === 'true') {\n                cipher.favorite = true;\n            }\n\n            const cardType = cardEl.getAttribute('type');\n            if (cardType === 'note') {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n            } else {\n                Array.from(this.querySelectorAllDirectChild(cardEl, 'field')).forEach(fieldEl => {\n                    const text = fieldEl.textContent;\n                    if (this.isNullOrWhitespace(text)) {\n                        return;\n                    }\n                    const name = fieldEl.getAttribute('name');\n                    const fieldType = this.getValueOrDefault(fieldEl.getAttribute('type'), '').toLowerCase();\n                    if (fieldType === 'login') {\n                        cipher.login.username = text;\n                    } else if (fieldType === 'password' || fieldType === 'secret') {\n                        // safeInCloud allows for more than one password. we just insert them here and find the one used as password later\n                        this.processKvp(cipher, name, text, FieldType.Hidden);\n                    } else if (fieldType === 'one_time_password') {\n                        cipher.login.totp = text;\n                    } else if (fieldType === 'notes') {\n                        cipher.notes += (text + '\\n');\n                    } else if (fieldType === 'weblogin' || fieldType === 'website') {\n                        cipher.login.uris = this.makeUriArray(text);\n                    }\n                    else {\n                        this.processKvp(cipher, name, text);\n                    }\n                });\n            }\n\n            Array.from(this.querySelectorAllDirectChild(cardEl, 'notes')).forEach(notesEl => {\n                cipher.notes += (notesEl.textContent + '\\n');\n            });\n\n            this.setPassword(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    // Choose a password from all passwords. Take one that has password in its name, or the first one if there is no such entry\n    // if its name is password, we can safely remove it form the fields. otherwise, it would maybe be best to keep it as a hidden field\n    setPassword(cipher: CipherView) {\n        const candidates = cipher.fields.filter(field => field.type === FieldType.Hidden);\n        if (!candidates.length) {\n            return;\n        }\n\n        let choice: FieldView;\n        for (const field of candidates) {\n            if (this.passwordFieldNames.includes(field.name.toLowerCase())) {\n                choice = field;\n                cipher.fields = cipher.fields.filter(f => f !== choice);\n                break;\n            }\n        }\n\n        if (!choice) {\n            choice = candidates[0];\n        }\n\n        cipher.login.password = choice.value;\n    }\n}\n","export { CipherType } from './cipherType';\nexport { DeviceType } from './deviceType';\nexport { EncryptionType } from './encryptionType';\nexport { FieldType } from './fieldType';\nexport { LogLevelType } from './logLevelType';\nexport { SecureNoteType } from './secureNoteType';\nexport { TwoFactorProviderType } from './twoFactorProviderType';\nexport { UriMatchType } from './uriMatchType';\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class SaferPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(this.nameFromUrl(value.url), '--');\n            cipher.notes = this.getValueOrDefault(value.notes);\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class SecureSafeCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Title);\n            cipher.notes = this.getValueOrDefault(value.Comment);\n            cipher.login.uris = this.makeUriArray(value.Url);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.username = this.getValueOrDefault(value.Username);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\nimport { CipherView } from '../models/view/cipherView';\n\nexport class SplashIdCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 3) {\n                return;\n            }\n\n            this.processFolder(result, this.getValueOrDefault(value[value.length - 1]));\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 2], '');\n            cipher.name = this.getValueOrDefault(value[1], '--');\n\n            if (value[0] === 'Web Logins' || value[0] === 'Servers' || value[0] === 'Email Accounts') {\n                cipher.login.username = this.getValueOrDefault(value[2]);\n                cipher.login.password = this.getValueOrDefault(value[3]);\n                cipher.login.uris = this.makeUriArray(value[4]);\n                this.parseFieldsToNotes(cipher, 5, value);\n            } else {\n                this.parseFieldsToNotes(cipher, 2, value);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private parseFieldsToNotes(cipher: CipherView, startIndex: number, value: any) {\n        // last 3 rows do not get parsed\n        for (let i = startIndex; i < value.length - 3; i++) {\n            if (this.isNullOrWhitespace(value[i])) {\n                continue;\n            }\n            cipher.notes += (value[i] + '\\n');\n        }\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class StickyPasswordXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const loginNodes = doc.querySelectorAll('root > Database > Logins > Login');\n        Array.from(loginNodes).forEach(loginNode => {\n            const accountId = loginNode.getAttribute('ID');\n            if (this.isNullOrWhitespace(accountId)) {\n                return;\n            }\n\n            const usernameText = loginNode.getAttribute('Name');\n            const passwordText = loginNode.getAttribute('Password');\n            let titleText: string = null;\n            let linkText: string = null;\n            let notesText: string = null;\n            let groupId: string = null;\n            let groupText: string = null;\n\n            const accountLogin = doc.querySelector('root > Database > Accounts > Account > ' +\n                'LoginLinks > Login[SourceLoginID=\"' + accountId + '\"]');\n            if (accountLogin != null) {\n                const account = accountLogin.parentElement.parentElement;\n                if (account != null) {\n                    titleText = account.getAttribute('Name');\n                    linkText = account.getAttribute('Link');\n                    groupId = account.getAttribute('ParentID');\n                    notesText = account.getAttribute('Comments');\n                    if (!this.isNullOrWhitespace(notesText)) {\n                        notesText = notesText.split('/n').join('\\n');\n                    }\n                }\n            }\n\n            if (!this.isNullOrWhitespace(groupId)) {\n                groupText = this.buildGroupText(doc, groupId, '');\n                this.processFolder(result, groupText);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(titleText, '--');\n            cipher.notes = this.getValueOrDefault(notesText);\n            cipher.login.username = this.getValueOrDefault(usernameText);\n            cipher.login.password = this.getValueOrDefault(passwordText);\n            cipher.login.uris = this.makeUriArray(linkText);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    buildGroupText(doc: Document, groupId: string, groupText: string): string {\n        const group = doc.querySelector('root > Database > Groups > Group[ID=\"' + groupId + '\"]');\n        if (group == null) {\n            return groupText;\n        }\n        if (!this.isNullOrWhitespace(groupText)) {\n            groupText = '/' + groupText;\n        }\n        groupText = group.getAttribute('Name') + groupText;\n        return this.buildGroupText(doc, group.getAttribute('ParentID'), groupText);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nconst PropertiesToIgnore = ['kind', 'autologin', 'favorite', 'hexcolor', 'protectedwithpassword', 'subdomainonly',\n    'type', 'tk_export_version', 'note', 'title', 'document_content',\n];\n\nexport class TrueKeyCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.favorite, '').toLowerCase() === 'true';\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.notes = this.getValueOrDefault(value.memo, '');\n            cipher.login.username = this.getValueOrDefault(value.login);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n\n            if (value.kind !== 'login') {\n                cipher.name = this.getValueOrDefault(value.title, '--');\n                cipher.notes = this.getValueOrDefault(value.note, '');\n            }\n\n            if (value.kind === 'cc') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n                cipher.card.number = this.getValueOrDefault(value.number);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                if (!this.isNullOrWhitespace(value.expiryDate)) {\n                    try {\n                        const expDate = new Date(value.expiryDate);\n                        cipher.card.expYear = expDate.getFullYear().toString();\n                        cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n                    } catch { }\n                }\n            } else if (value.kind !== 'login') {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n                if (!this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes = this.getValueOrDefault(value.document_content, '');\n                }\n                for (const property in value) {\n                    if (value.hasOwnProperty(property) && PropertiesToIgnore.indexOf(property.toLowerCase()) < 0 &&\n                        !this.isNullOrWhitespace(value[property])) {\n                        this.processKvp(cipher, property, value[property]);\n                    }\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class UpmCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length !== 5) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            cipher.notes = this.getValueOrDefault(value[4]);\n            cipher.login.username = this.getValueOrDefault(value[1]);\n            cipher.login.password = this.getValueOrDefault(value[2]);\n            cipher.login.uris = this.makeUriArray(value[3]);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class YotiCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Name, '--');\n            cipher.login.username = this.getValueOrDefault(value['User name']);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\nimport { CipherView } from '../models/view';\n\nexport class ZohoVaultCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (this.isNullOrWhitespace(value['Password Name']) && this.isNullOrWhitespace(value['Secret Name'])) {\n                return;\n            }\n            this.processFolder(result, this.getValueOrDefault(value.ChamberName));\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.Favorite, '0') === '1';\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.name = this.getValueOrDefault(\n                value['Password Name'], this.getValueOrDefault(value['Secret Name'], '--'));\n            cipher.login.uris = this.makeUriArray(\n                this.getValueOrDefault(value['Password URL'], this.getValueOrDefault(value['Secret URL'])));\n            this.parseData(cipher, value.SecretData);\n            this.parseData(cipher, value.CustomData);\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private parseData(cipher: CipherView, data: string) {\n        if (this.isNullOrWhitespace(data)) {\n            return;\n        }\n        const dataLines = this.splitNewLine(data);\n        dataLines.forEach(line => {\n            const delimPosition = line.indexOf(':');\n            if (delimPosition < 0) {\n                return;\n            }\n            const field = line.substring(0, delimPosition);\n            const value = line.length > delimPosition ? line.substring(delimPosition + 1) : null;\n            if (this.isNullOrWhitespace(field) || this.isNullOrWhitespace(value) || field === 'SecretType') {\n                return;\n            }\n            const fieldLower = field.toLowerCase();\n            if (cipher.login.username == null && this.usernameFieldNames.indexOf(fieldLower) > -1) {\n                cipher.login.username = value;\n            } else if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n                cipher.login.password = value;\n            } else {\n                this.processKvp(cipher, field, value);\n            }\n        });\n    }\n}\n","import * as signalR from '@microsoft/signalr';\nimport * as signalRMsgPack from '@microsoft/signalr-protocol-msgpack';\n\nimport { NotificationType } from '../enums/notificationType';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { AppIdService } from '../abstractions/appId.service';\nimport { EnvironmentService } from '../abstractions/environment.service';\nimport { LogService } from '../abstractions/log.service';\nimport { NotificationsService as NotificationsServiceAbstraction } from '../abstractions/notifications.service';\nimport { SyncService } from '../abstractions/sync.service';\nimport { UserService } from '../abstractions/user.service';\nimport { VaultTimeoutService } from '../abstractions/vaultTimeout.service';\n\nimport {\n    NotificationResponse,\n    SyncCipherNotification,\n    SyncFolderNotification,\n    SyncSendNotification,\n} from '../models/response/notificationResponse';\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n    private signalrConnection: signalR.HubConnection;\n    private url: string;\n    private connected = false;\n    private inited = false;\n    private inactive = false;\n    private reconnectTimer: any = null;\n\n    constructor(private userService: UserService, private syncService: SyncService,\n        private appIdService: AppIdService, private apiService: ApiService,\n        private vaultTimeoutService: VaultTimeoutService,\n        private logoutCallback: () => Promise<void>, private logService: LogService) {\n    }\n\n    async init(environmentService: EnvironmentService): Promise<void> {\n        this.inited = false;\n        this.url = 'https://notifications.bitwarden.com';\n        if (environmentService.notificationsUrl != null) {\n            this.url = environmentService.notificationsUrl;\n        } else if (environmentService.baseUrl != null) {\n            this.url = environmentService.baseUrl + '/notifications';\n        }\n\n        // Set notifications server URL to `https://-` to effectively disable communication\n        // with the notifications server from the client app\n        if (this.url === 'https://-') {\n            return;\n        }\n\n        if (this.signalrConnection != null) {\n            this.signalrConnection.off('ReceiveMessage');\n            this.signalrConnection.off('Heartbeat');\n            await this.signalrConnection.stop();\n            this.connected = false;\n            this.signalrConnection = null;\n        }\n\n        this.signalrConnection = new signalR.HubConnectionBuilder()\n            .withUrl(this.url + '/hub', {\n                accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n                skipNegotiation: true,\n                transport: signalR.HttpTransportType.WebSockets,\n            })\n            .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n            // .configureLogging(signalR.LogLevel.Trace)\n            .build();\n\n        this.signalrConnection.on('ReceiveMessage',\n            (data: any) => this.processNotification(new NotificationResponse(data)));\n        this.signalrConnection.on('Heartbeat',\n            (data: any) => { /*console.log('Heartbeat!');*/ });\n        this.signalrConnection.onclose(() => {\n            this.connected = false;\n            this.reconnect(true);\n        });\n        this.inited = true;\n        if (await this.isAuthedAndUnlocked()) {\n            await this.reconnect(false);\n        }\n    }\n\n    async updateConnection(sync = false): Promise<void> {\n        if (!this.inited) {\n            return;\n        }\n        try {\n            if (await this.isAuthedAndUnlocked()) {\n                await this.reconnect(sync);\n            } else {\n                await this.signalrConnection.stop();\n            }\n        } catch (e) {\n            this.logService.error(e.toString());\n        }\n    }\n\n    async reconnectFromActivity(): Promise<void> {\n        this.inactive = false;\n        if (this.inited && !this.connected) {\n            await this.reconnect(true);\n        }\n    }\n\n    async disconnectFromInactivity(): Promise<void> {\n        this.inactive = true;\n        if (this.inited && this.connected) {\n            await this.signalrConnection.stop();\n        }\n    }\n\n    private async processNotification(notification: NotificationResponse) {\n        const appId = await this.appIdService.getAppId();\n        if (notification == null || notification.contextId === appId) {\n            return;\n        }\n\n        const isAuthenticated = await this.userService.isAuthenticated();\n        const payloadUserId = notification.payload.userId || notification.payload.UserId;\n        const myUserId = await this.userService.getUserId();\n        if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n            return;\n        }\n\n        switch (notification.type) {\n            case NotificationType.SyncCipherCreate:\n            case NotificationType.SyncCipherUpdate:\n                await this.syncService.syncUpsertCipher(notification.payload as SyncCipherNotification,\n                    notification.type === NotificationType.SyncCipherUpdate);\n                break;\n            case NotificationType.SyncCipherDelete:\n            case NotificationType.SyncLoginDelete:\n                await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n                break;\n            case NotificationType.SyncFolderCreate:\n            case NotificationType.SyncFolderUpdate:\n                await this.syncService.syncUpsertFolder(notification.payload as SyncFolderNotification,\n                    notification.type === NotificationType.SyncFolderUpdate);\n                break;\n            case NotificationType.SyncFolderDelete:\n                await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n                break;\n            case NotificationType.SyncVault:\n            case NotificationType.SyncCiphers:\n            case NotificationType.SyncSettings:\n                if (isAuthenticated) {\n                    await this.syncService.fullSync(false);\n                }\n                break;\n            case NotificationType.SyncOrgKeys:\n                if (isAuthenticated) {\n                    await this.apiService.refreshIdentityToken();\n                    await this.syncService.fullSync(true);\n                    // Stop so a reconnect can be made\n                    await this.signalrConnection.stop();\n                }\n                break;\n            case NotificationType.LogOut:\n                if (isAuthenticated) {\n                    this.logoutCallback();\n                }\n                break;\n            case NotificationType.SyncSendCreate:\n            case NotificationType.SyncSendUpdate:\n                await this.syncService.syncUpsertSend(notification.payload as SyncSendNotification,\n                    notification.type === NotificationType.SyncSendUpdate);\n                break;\n            case NotificationType.SyncSendDelete:\n                await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n            default:\n                break;\n        }\n    }\n\n    private async reconnect(sync: boolean) {\n        if (this.reconnectTimer != null) {\n            clearTimeout(this.reconnectTimer);\n            this.reconnectTimer = null;\n        }\n        if (this.connected || !this.inited || this.inactive) {\n            return;\n        }\n        const authedAndUnlocked = await this.isAuthedAndUnlocked();\n        if (!authedAndUnlocked) {\n            return;\n        }\n\n        try {\n            await this.signalrConnection.start();\n            this.connected = true;\n            if (sync) {\n                await this.syncService.fullSync(false);\n            }\n        } catch { }\n\n        if (!this.connected) {\n            this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n        }\n    }\n\n    private async isAuthedAndUnlocked() {\n        if (await this.userService.isAuthenticated()) {\n            const locked = await this.vaultTimeoutService.isLocked();\n            return !locked;\n        }\n        return false;\n    }\n\n    private random(min: number, max: number) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { NotificationType } from '../../enums/notificationType';\n\nexport class NotificationResponse extends BaseResponse {\n    contextId: string;\n    type: NotificationType;\n    payload: any;\n\n    constructor(response: any) {\n        super(response);\n        this.contextId = this.getResponseProperty('ContextId');\n        this.type = this.getResponseProperty('Type');\n\n        const payload = this.getResponseProperty('Payload');\n        switch (this.type) {\n            case NotificationType.SyncCipherCreate:\n            case NotificationType.SyncCipherDelete:\n            case NotificationType.SyncCipherUpdate:\n            case NotificationType.SyncLoginDelete:\n                this.payload = new SyncCipherNotification(payload);\n                break;\n            case NotificationType.SyncFolderCreate:\n            case NotificationType.SyncFolderDelete:\n            case NotificationType.SyncFolderUpdate:\n                this.payload = new SyncFolderNotification(payload);\n                break;\n            case NotificationType.SyncVault:\n            case NotificationType.SyncCiphers:\n            case NotificationType.SyncOrgKeys:\n            case NotificationType.SyncSettings:\n            case NotificationType.LogOut:\n                this.payload = new UserNotification(payload);\n                break;\n            case NotificationType.SyncSendCreate:\n            case NotificationType.SyncSendUpdate:\n            case NotificationType.SyncSendDelete:\n                this.payload = new SyncSendNotification(payload);\n            default:\n                break;\n        }\n    }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n    id: string;\n    userId: string;\n    organizationId: string;\n    collectionIds: string[];\n    revisionDate: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.collectionIds = this.getResponseProperty('CollectionIds');\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\n    }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n    id: string;\n    userId: string;\n    revisionDate: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\n    }\n}\n\nexport class UserNotification extends BaseResponse {\n    userId: string;\n    date: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.userId = this.getResponseProperty('UserId');\n        this.date = new Date(this.getResponseProperty('Date'));\n    }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n    id: string;\n    userId: string;\n    revisionDate: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\n    }\n}\n","import { PlatformUtilsService } from '../abstractions';\n\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from '../abstractions/passwordReprompt.service';\n\nimport { HashPurpose } from '../enums/hashPurpose';\n\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n    constructor(private i18nService: I18nService, private cryptoService: CryptoService,\n        private platformUtilService: PlatformUtilsService) { }\n\n    protectedFields() {\n        return ['TOTP', 'Password', 'H_Field', 'Card Number', 'Security Code'];\n    }\n\n    async showPasswordPrompt() {\n        const passwordValidator = (value: string) => {\n            return this.cryptoService.compareAndUpdateKeyHash(value, null);\n        };\n\n        return this.platformUtilService.showPasswordDialog(this.i18nService.t('passwordConfirmation'), this.i18nService.t('passwordConfirmationDesc'), passwordValidator);\n    }\n}\n","import { PolicyService as PolicyServiceAbstraction } from '../abstractions/policy.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { PolicyData } from '../models/data/policyData';\n\nimport { MasterPasswordPolicyOptions } from '../models/domain/masterPasswordPolicyOptions';\nimport { Policy } from '../models/domain/policy';\nimport { ResetPasswordPolicyOptions } from '../models/domain/resetPasswordPolicyOptions';\n\nimport { PolicyType } from '../enums/policyType';\n\nimport { ListResponse } from '../models/response/listResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\n\nconst Keys = {\n    policiesPrefix: 'policies_',\n};\n\nexport class PolicyService implements PolicyServiceAbstraction {\n    policyCache: Policy[];\n\n    constructor(private userService: UserService, private storageService: StorageService) {\n    }\n\n    clearCache(): void {\n        this.policyCache = null;\n    }\n\n    async getAll(type?: PolicyType): Promise<Policy[]> {\n        if (this.policyCache == null) {\n            const userId = await this.userService.getUserId();\n            const policies = await this.storageService.get<{ [id: string]: PolicyData; }>(\n                Keys.policiesPrefix + userId);\n            const response: Policy[] = [];\n            for (const id in policies) {\n                if (policies.hasOwnProperty(id)) {\n                    response.push(new Policy(policies[id]));\n                }\n            }\n            this.policyCache = response;\n        }\n        if (type != null) {\n            return this.policyCache.filter(p => p.type === type);\n        } else {\n            return this.policyCache;\n        }\n    }\n\n    async replace(policies: { [id: string]: PolicyData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.policiesPrefix + userId, policies);\n        this.policyCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.policiesPrefix + userId);\n        this.policyCache = null;\n    }\n\n    async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n        let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n        if (policies == null) {\n            policies = await this.getAll(PolicyType.MasterPassword);\n        } else {\n            policies = policies.filter(p => p.type === PolicyType.MasterPassword);\n        }\n\n        if (policies == null || policies.length === 0) {\n            return enforcedOptions;\n        }\n\n        policies.forEach(currentPolicy => {\n            if (!currentPolicy.enabled || currentPolicy.data == null) {\n                return;\n            }\n\n            if (enforcedOptions == null) {\n                enforcedOptions = new MasterPasswordPolicyOptions();\n            }\n\n            if (currentPolicy.data.minComplexity != null\n                && currentPolicy.data.minComplexity > enforcedOptions.minComplexity) {\n                enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n            }\n\n            if (currentPolicy.data.minLength != null\n                && currentPolicy.data.minLength > enforcedOptions.minLength) {\n                enforcedOptions.minLength = currentPolicy.data.minLength;\n            }\n\n            if (currentPolicy.data.requireUpper) {\n                enforcedOptions.requireUpper = true;\n            }\n\n            if (currentPolicy.data.requireLower) {\n                enforcedOptions.requireLower = true;\n            }\n\n            if (currentPolicy.data.requireNumbers) {\n                enforcedOptions.requireNumbers = true;\n            }\n\n            if (currentPolicy.data.requireSpecial) {\n                enforcedOptions.requireSpecial = true;\n            }\n        });\n\n        return enforcedOptions;\n    }\n\n    evaluateMasterPassword(passwordStrength: number, newPassword: string,\n        enforcedPolicyOptions: MasterPasswordPolicyOptions): boolean {\n        if (enforcedPolicyOptions == null) {\n            return true;\n        }\n\n        if (enforcedPolicyOptions.minComplexity > 0 && enforcedPolicyOptions.minComplexity > passwordStrength) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.minLength > 0 && enforcedPolicyOptions.minLength > newPassword.length) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireNumbers && !(/[0-9]/.test(newPassword))) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireSpecial && !(/[!@#$%\\^&*]/g.test(newPassword))) {\n            return false;\n        }\n\n        return true;\n    }\n\n    getResetPasswordPolicyOptions(policies: Policy[], orgId: string): [ResetPasswordPolicyOptions, boolean] {\n        const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n        if (policies == null || orgId == null) {\n            return [resetPasswordPolicyOptions, false];\n        }\n\n        const policy = policies.find(p => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled);\n        resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n        return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n    }\n\n    mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n        if (policiesResponse == null || policiesResponse.data == null) {\n            return null;\n        }\n\n        const policiesData = policiesResponse.data.map(p => new PolicyData(p));\n        return policiesData.map(p => new Policy(p));\n    }\n}\n","import Domain from './domainBase';\n\nexport class MasterPasswordPolicyOptions extends Domain {\n    minComplexity: number = 0;\n    minLength: number = 0;\n    requireUpper: boolean = false;\n    requireLower: boolean = false;\n    requireNumbers: boolean = false;\n    requireSpecial: boolean = false;\n}\n","import Domain from './domainBase';\n\nexport class ResetPasswordPolicyOptions extends Domain {\n    autoEnrollEnabled: boolean = false;\n}\n","import * as lunr from 'lunr';\n\nimport { CipherView } from '../models/view/cipherView';\n\nimport { CipherService } from '../abstractions/cipher.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { LogService } from '../abstractions/log.service';\nimport { SearchService as SearchServiceAbstraction } from '../abstractions/search.service';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { UriMatchType } from '../enums/uriMatchType';\nimport { SendView } from '../models/view/sendView';\n\nexport class SearchService implements SearchServiceAbstraction {\n    indexedEntityId?: string = null;\n    private indexing = false;\n    private index: lunr.Index = null;\n    private searchableMinLength = 2;\n\n    constructor(private cipherService: CipherService, private logService: LogService,\n        private i18nService: I18nService) {\n        if (['zh-CN', 'zh-TW'].indexOf(i18nService.locale) !== -1) {\n            this.searchableMinLength = 1;\n        }\n    }\n\n    clearIndex(): void {\n        this.indexedEntityId = null;\n        this.index = null;\n    }\n\n    isSearchable(query: string): boolean {\n        const notSearchable = query == null || (this.index == null && query.length < this.searchableMinLength) ||\n            (this.index != null && query.length < this.searchableMinLength && query.indexOf('>') !== 0);\n        return !notSearchable;\n    }\n\n    async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n        if (this.indexing) {\n            return;\n        }\n\n        this.logService.time('search indexing');\n        this.indexing = true;\n        this.indexedEntityId = indexedEntityId;\n        this.index = null;\n        const builder = new lunr.Builder();\n        builder.ref('id');\n        builder.field('shortid', { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n        builder.field('name', { boost: 10 });\n        builder.field('subtitle', {\n            boost: 5,\n            extractor: (c: CipherView) => {\n                if (c.subTitle != null && c.type === CipherType.Card) {\n                    return c.subTitle.replace(/\\*/g, '');\n                }\n                return c.subTitle;\n            },\n        });\n        builder.field('notes');\n        builder.field('login.username', {\n            extractor: (c: CipherView) => c.type === CipherType.Login && c.login != null ? c.login.username : null,\n        });\n        builder.field('login.uris', { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n        builder.field('fields', { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n        builder.field('fields_joined', { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n        builder.field('attachments', { extractor: (c: CipherView) => this.attachmentExtractor(c, false) });\n        builder.field('attachments_joined',\n            { extractor: (c: CipherView) => this.attachmentExtractor(c, true) });\n        builder.field('organizationid', { extractor: (c: CipherView) => c.organizationId });\n        ciphers = ciphers || await this.cipherService.getAllDecrypted();\n        ciphers.forEach(c => builder.add(c));\n        this.index = builder.build();\n\n        this.indexing = false;\n\n        this.logService.timeEnd('search indexing');\n    }\n\n    async searchCiphers(query: string,\n        filter: (((cipher: CipherView) => boolean) | (((cipher: CipherView) => boolean)[])) = null,\n        ciphers: CipherView[] = null):\n        Promise<CipherView[]> {\n        const results: CipherView[] = [];\n        if (query != null) {\n            query = query.trim().toLowerCase();\n        }\n        if (query === '') {\n            query = null;\n        }\n\n        if (ciphers == null) {\n            ciphers = await this.cipherService.getAllDecrypted();\n        }\n\n        if (filter != null && Array.isArray(filter) && filter.length > 0) {\n            ciphers = ciphers.filter(c => filter.every(f => f == null || f(c)));\n        } else if (filter != null) {\n            ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n        }\n\n        if (!this.isSearchable(query)) {\n            return ciphers;\n        }\n\n        if (this.indexing) {\n            await new Promise(r => setTimeout(r, 250));\n            if (this.indexing) {\n                await new Promise(r => setTimeout(r, 500));\n            }\n        }\n\n        const index = this.getIndexForSearch();\n        if (index == null) {\n            // Fall back to basic search if index is not available\n            return this.searchCiphersBasic(ciphers, query);\n        }\n\n        const ciphersMap = new Map<string, CipherView>();\n        ciphers.forEach(c => ciphersMap.set(c.id, c));\n\n        let searchResults: lunr.Index.Result[] = null;\n        const isQueryString = query != null && query.length > 1 && query.indexOf('>') === 0;\n        if (isQueryString) {\n            try {\n                searchResults = index.search(query.substr(1).trim());\n            } catch { }\n        } else {\n            // tslint:disable-next-line\n            const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n            searchResults = index.query(q => {\n                lunr.tokenizer(query).forEach(token => {\n                    const t = token.toString();\n                    q.term(t, { fields: ['name'], wildcard: soWild });\n                    q.term(t, { fields: ['subtitle'], wildcard: soWild });\n                    q.term(t, { fields: ['login.uris'], wildcard: soWild });\n                    q.term(t, {});\n                });\n            });\n        }\n\n        if (searchResults != null) {\n            searchResults.forEach(r => {\n                if (ciphersMap.has(r.ref)) {\n                    results.push(ciphersMap.get(r.ref));\n                }\n            });\n        }\n        return results;\n    }\n\n    searchCiphersBasic(ciphers: CipherView[], query: string, deleted: boolean = false) {\n        query = query.trim().toLowerCase();\n        return ciphers.filter(c => {\n            if (deleted !== c.isDeleted) {\n                return false;\n            }\n            if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (query.length >= 8 && c.id.startsWith(query)) {\n                return true;\n            }\n            if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            return false;\n        });\n    }\n\n    searchSends(sends: SendView[], query: string) {\n        query = query.trim().toLocaleLowerCase();\n\n        return sends.filter(s => {\n            if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (query.length >= 8 && (s.id.startsWith(query) || s.accessId.toLocaleLowerCase().startsWith(query) || (s.file?.id != null && s.file.id.startsWith(query)))) {\n                return true;\n            }\n            if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n        });\n    }\n\n    getIndexForSearch(): lunr.Index {\n        return this.index;\n    }\n\n    private fieldExtractor(c: CipherView, joined: boolean) {\n        if (!c.hasFields) {\n            return null;\n        }\n        let fields: string[] = [];\n        c.fields.forEach(f => {\n            if (f.name != null) {\n                fields.push(f.name);\n            }\n            if (f.type === FieldType.Text && f.value != null) {\n                fields.push(f.value);\n            }\n        });\n        fields = fields.filter(f => f.trim() !== '');\n        if (fields.length === 0) {\n            return null;\n        }\n        return joined ? fields.join(' ') : fields;\n    }\n\n    private attachmentExtractor(c: CipherView, joined: boolean) {\n        if (!c.hasAttachments) {\n            return null;\n        }\n        let attachments: string[] = [];\n        c.attachments.forEach(a => {\n            if (a != null && a.fileName != null) {\n                if (joined && a.fileName.indexOf('.') > -1) {\n                    attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf('.')));\n                } else {\n                    attachments.push(a.fileName);\n                }\n            }\n        });\n        attachments = attachments.filter(f => f.trim() !== '');\n        if (attachments.length === 0) {\n            return null;\n        }\n        return joined ? attachments.join(' ') : attachments;\n    }\n\n    private uriExtractor(c: CipherView) {\n        if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n            return null;\n        }\n        const uris: string[] = [];\n        c.login.uris.forEach(u => {\n            if (u.uri == null || u.uri === '') {\n                return;\n            }\n            if (u.hostname != null) {\n                uris.push(u.hostname);\n                return;\n            }\n            let uri = u.uri;\n            if (u.match !== UriMatchType.RegularExpression) {\n                const protocolIndex = uri.indexOf('://');\n                if (protocolIndex > -1) {\n                    uri = uri.substr(protocolIndex + 3);\n                }\n                const queryIndex = uri.search(/\\?|&|#/);\n                if (queryIndex > -1) {\n                    uri = uri.substring(0, queryIndex);\n                }\n            }\n            uris.push(uri);\n        });\n        return uris.length > 0 ? uris : null;\n    }\n}\n","import { SendData } from '../models/data/sendData';\n\nimport { SendRequest } from '../models/request/sendRequest';\n\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { SendResponse } from '../models/response/sendResponse';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\nimport { Send } from '../models/domain/send';\nimport { SendFile } from '../models/domain/sendFile';\nimport { SendText } from '../models/domain/sendText';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { FileUploadType } from '../enums/fileUploadType';\nimport { SendType } from '../enums/sendType';\n\nimport { SendView } from '../models/view/sendView';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { FileUploadService } from '../abstractions/fileUpload.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { SendService as SendServiceAbstraction } from '../abstractions/send.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    sendsPrefix: 'sends_',\n};\n\nexport class SendService implements SendServiceAbstraction {\n    decryptedSendCache: SendView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private apiService: ApiService, private fileUploadService: FileUploadService,\n        private storageService: StorageService, private i18nService: I18nService,\n        private cryptoFunctionService: CryptoFunctionService) { }\n\n    clearCache(): void {\n        this.decryptedSendCache = null;\n    }\n\n    async encrypt(model: SendView, file: File | ArrayBuffer, password: string,\n        key?: SymmetricCryptoKey): Promise<[Send, EncArrayBuffer]> {\n        let fileData: EncArrayBuffer = null;\n        const send = new Send();\n        send.id = model.id;\n        send.type = model.type;\n        send.disabled = model.disabled;\n        send.hideEmail = model.hideEmail;\n        send.maxAccessCount = model.maxAccessCount;\n        if (model.key == null) {\n            model.key = await this.cryptoFunctionService.randomBytes(16);\n            model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n        }\n        if (password != null) {\n            const passwordHash = await this.cryptoFunctionService.pbkdf2(password, model.key, 'sha256', 100000);\n            send.password = Utils.fromBufferToB64(passwordHash);\n        }\n        send.key = await this.cryptoService.encrypt(model.key, key);\n        send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n        send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n        if (send.type === SendType.Text) {\n            send.text = new SendText();\n            send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n            send.text.hidden = model.text.hidden;\n        } else if (send.type === SendType.File) {\n            send.file = new SendFile();\n            if (file != null) {\n                if (file instanceof ArrayBuffer) {\n                    const [name, data] = await this.encryptFileData(model.file.fileName, file, model.cryptoKey);\n                    send.file.fileName = name;\n                    fileData = data;\n                } else {\n                    fileData = await this.parseFile(send, file, model.cryptoKey);\n                }\n            }\n        }\n\n        return [send, fileData];\n    }\n\n    async get(id: string): Promise<Send> {\n        const userId = await this.userService.getUserId();\n        const sends = await this.storageService.get<{ [id: string]: SendData; }>(\n            Keys.sendsPrefix + userId);\n        if (sends == null || !sends.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Send(sends[id]);\n    }\n\n    async getAll(): Promise<Send[]> {\n        const userId = await this.userService.getUserId();\n        const sends = await this.storageService.get<{ [id: string]: SendData; }>(\n            Keys.sendsPrefix + userId);\n        const response: Send[] = [];\n        for (const id in sends) {\n            if (sends.hasOwnProperty(id)) {\n                response.push(new Send(sends[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<SendView[]> {\n        if (this.decryptedSendCache != null) {\n            return this.decryptedSendCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const decSends: SendView[] = [];\n        const promises: Promise<any>[] = [];\n        const sends = await this.getAll();\n        sends.forEach(send => {\n            promises.push(send.decrypt().then(f => decSends.push(f)));\n        });\n\n        await Promise.all(promises);\n        decSends.sort(Utils.getSortFunction(this.i18nService, 'name'));\n\n        this.decryptedSendCache = decSends;\n        return this.decryptedSendCache;\n    }\n\n    async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n        const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n        let response: SendResponse;\n        if (sendData[0].id == null) {\n            if (sendData[0].type === SendType.Text) {\n                response = await this.apiService.postSend(request);\n            } else {\n                try {\n                    const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n                    response = uploadDataResponse.sendResponse;\n\n                    await this.fileUploadService.uploadSendFile(uploadDataResponse, sendData[0].file.fileName, sendData[1]);\n                } catch (e) {\n                    if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n                        response = await this.legacyServerSendFileUpload(sendData, request);\n                    } else if (e instanceof ErrorResponse) {\n                        throw new Error((e as ErrorResponse).getSingleMessage());\n                    } else {\n                        throw e;\n                    }\n                }\n            }\n            sendData[0].id = response.id;\n            sendData[0].accessId = response.accessId;\n        } else {\n            response = await this.apiService.putSend(sendData[0].id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new SendData(response, userId);\n        await this.upsert(data);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async legacyServerSendFileUpload(sendData: [Send, EncArrayBuffer], request: SendRequest): Promise<SendResponse>\n    {\n        const fd = new FormData();\n        try {\n            const blob = new Blob([sendData[1].buffer], { type: 'application/octet-stream' });\n            fd.append('model', JSON.stringify(request));\n            fd.append('data', blob, sendData[0].file.fileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('model', JSON.stringify(request));\n                fd.append('data', Buffer.from(sendData[1].buffer) as any, {\n                    filepath: sendData[0].file.fileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n        return await this.apiService.postSendFileLegacy(fd);\n    }\n\n    async upsert(send: SendData | SendData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let sends = await this.storageService.get<{ [id: string]: SendData; }>(\n            Keys.sendsPrefix + userId);\n        if (sends == null) {\n            sends = {};\n        }\n\n        if (send instanceof SendData) {\n            const s = send as SendData;\n            sends[s.id] = s;\n        } else {\n            (send as SendData[]).forEach(s => {\n                sends[s.id] = s;\n            });\n        }\n\n        await this.storageService.save(Keys.sendsPrefix + userId, sends);\n        this.decryptedSendCache = null;\n    }\n\n    async replace(sends: { [id: string]: SendData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.sendsPrefix + userId, sends);\n        this.decryptedSendCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.sendsPrefix + userId);\n        this.decryptedSendCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const sends = await this.storageService.get<{ [id: string]: SendData; }>(\n            Keys.sendsPrefix + userId);\n        if (sends == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            if (sends[id] == null) {\n                return;\n            }\n            delete sends[id];\n        } else {\n            (id as string[]).forEach(i => {\n                delete sends[i];\n            });\n        }\n\n        await this.storageService.save(Keys.sendsPrefix + userId, sends);\n        this.decryptedSendCache = null;\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteSend(id);\n        await this.delete(id);\n    }\n\n    async removePasswordWithServer(id: string): Promise<any> {\n        const response = await this.apiService.putSendRemovePassword(id);\n        const userId = await this.userService.getUserId();\n        const data = new SendData(response, userId);\n        await this.upsert(data);\n    }\n\n    private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsArrayBuffer(file);\n            reader.onload = async evt => {\n                try {\n                    const [name, data] = await this.encryptFileData(file.name, evt.target.result as ArrayBuffer, key);\n                    send.file.fileName = name;\n                    resolve(data);\n                } catch (e) {\n                    reject(e);\n                }\n            };\n            reader.onerror = evt => {\n                reject('Error reading file.');\n            };\n        });\n    }\n\n    private async encryptFileData(fileName: string, data: ArrayBuffer,\n        key: SymmetricCryptoKey): Promise<[EncString, EncArrayBuffer]> {\n        const encFileName = await this.cryptoService.encrypt(fileName, key);\n        const encFileData = await this.cryptoService.encryptToBytes(data, key);\n        return [encFileName, encFileData];\n    }\n}\n","import { SendType } from '../../enums/sendType';\n\nimport { SendFileApi } from '../api/sendFileApi';\nimport { SendTextApi } from '../api/sendTextApi';\n\nimport { Send } from '../domain/send';\n\nexport class SendRequest {\n    type: SendType;\n    fileLength?: number;\n    name: string;\n    notes: string;\n    key: string;\n    maxAccessCount?: number;\n    expirationDate: string;\n    deletionDate: string;\n    text: SendTextApi;\n    file: SendFileApi;\n    password: string;\n    disabled: boolean;\n    hideEmail: boolean;\n\n    constructor(send: Send, fileLength?: number) {\n        this.type = send.type;\n        this.fileLength = fileLength;\n        this.name = send.name ? send.name.encryptedString : null;\n        this.notes = send.notes ? send.notes.encryptedString : null;\n        this.maxAccessCount = send.maxAccessCount;\n        this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n        this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n        this.key = send.key != null ? send.key.encryptedString : null;\n        this.password = send.password;\n        this.disabled = send.disabled;\n        this.hideEmail = send.hideEmail;\n\n        switch (this.type) {\n            case SendType.Text:\n                this.text = new SendTextApi();\n                this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n                this.text.hidden = send.text.hidden;\n                break;\n            case SendType.File:\n                this.file = new SendFileApi();\n                this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n                break;\n            default:\n                break;\n        }\n    }\n}\n","import { CryptoService } from '../../abstractions/crypto.service';\n\nimport { SendType } from '../../enums/sendType';\n\nimport { Utils } from '../../misc/utils';\n\nimport { SendData } from '../data/sendData';\n\nimport { SendView } from '../view/sendView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SendFile } from './sendFile';\nimport { SendText } from './sendText';\n\nexport class Send extends Domain {\n    id: string;\n    accessId: string;\n    userId: string;\n    type: SendType;\n    name: EncString;\n    notes: EncString;\n    file: SendFile;\n    text: SendText;\n    key: EncString;\n    maxAccessCount?: number;\n    accessCount: number;\n    revisionDate: Date;\n    expirationDate: Date;\n    deletionDate: Date;\n    password: string;\n    disabled: boolean;\n    hideEmail: boolean;\n\n    constructor(obj?: SendData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            accessId: null,\n            userId: null,\n            name: null,\n            notes: null,\n            key: null,\n        }, alreadyEncrypted, ['id', 'accessId', 'userId']);\n\n        this.type = obj.type;\n        this.maxAccessCount = obj.maxAccessCount;\n        this.accessCount = obj.accessCount;\n        this.password = obj.password;\n        this.disabled = obj.disabled;\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n        this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n        this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n        this.hideEmail = obj.hideEmail;\n\n        switch (this.type) {\n            case SendType.Text:\n                this.text = new SendText(obj.text, alreadyEncrypted);\n                break;\n            case SendType.File:\n                this.file = new SendFile(obj.file, alreadyEncrypted);\n                break;\n            default:\n                break;\n        }\n    }\n\n    async decrypt(): Promise<SendView> {\n        const model = new SendView(this);\n\n        let cryptoService: CryptoService;\n        const containerService = (Utils.global as any).bitwardenContainerService;\n        if (containerService) {\n            cryptoService = containerService.getCryptoService();\n        } else {\n            throw new Error('global bitwardenContainerService not initialized.');\n        }\n\n        try {\n            model.key = await cryptoService.decryptToBytes(this.key, null);\n            model.cryptoKey = await cryptoService.makeSendKey(model.key);\n        } catch (e) {\n            // TODO: error?\n        }\n\n        await this.decryptObj(model, {\n            name: null,\n            notes: null,\n        }, null, model.cryptoKey);\n\n        switch (this.type) {\n            case SendType.File:\n                model.file = await this.file.decrypt(model.cryptoKey);\n                break;\n            case SendType.Text:\n                model.text = await this.text.decrypt(model.cryptoKey);\n                break;\n            default:\n                break;\n        }\n\n        return model;\n    }\n}\n","import * as forge from 'node-forge';\n\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\n\nimport { Utils } from '../misc/utils';\n\nimport { DecryptParameters } from '../models/domain/decryptParameters';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n    private crypto: Crypto;\n    private subtle: SubtleCrypto;\n    private isIE: boolean;\n    private isOldSafari: boolean;\n\n    constructor(private win: Window, private platformUtilsService: PlatformUtilsService) {\n        this.crypto = typeof win.crypto !== 'undefined' ? win.crypto : null;\n        this.subtle = (!!this.crypto && typeof win.crypto.subtle !== 'undefined') ? win.crypto.subtle : null;\n        this.isIE = platformUtilsService.isIE();\n        const ua = win.navigator.userAgent;\n        this.isOldSafari = platformUtilsService.isSafari() &&\n            (ua.indexOf(' Version/10.') > -1 || ua.indexOf(' Version/9.') > -1);\n    }\n\n    async pbkdf2(password: string | ArrayBuffer, salt: string | ArrayBuffer, algorithm: 'sha256' | 'sha512',\n        iterations: number): Promise<ArrayBuffer> {\n        if (this.isIE || this.isOldSafari) {\n            const forgeLen = algorithm === 'sha256' ? 32 : 64;\n            const passwordBytes = this.toByteString(password);\n            const saltBytes = this.toByteString(salt);\n            const derivedKeyBytes = (forge as any).pbkdf2(passwordBytes, saltBytes, iterations, forgeLen, algorithm);\n            return Utils.fromByteStringToArray(derivedKeyBytes).buffer;\n        }\n\n        const wcLen = algorithm === 'sha256' ? 256 : 512;\n        const passwordBuf = this.toBuf(password);\n        const saltBuf = this.toBuf(salt);\n\n        const pbkdf2Params: Pbkdf2Params = {\n            name: 'PBKDF2',\n            salt: saltBuf,\n            iterations: iterations,\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', passwordBuf, { name: 'PBKDF2' } as any,\n            false, ['deriveBits']);\n        return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n    }\n\n    async hkdf(ikm: ArrayBuffer, salt: string | ArrayBuffer, info: string | ArrayBuffer,\n        outputByteSize: number, algorithm: 'sha256' | 'sha512'): Promise<ArrayBuffer> {\n        const saltBuf = this.toBuf(salt);\n        const infoBuf = this.toBuf(info);\n\n        const hkdfParams: HkdfParams = {\n            name: 'HKDF',\n            salt: saltBuf,\n            info: infoBuf,\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', ikm, { name: 'HKDF' } as any,\n            false, ['deriveBits']);\n        return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n    }\n\n    // ref: https://tools.ietf.org/html/rfc5869\n    async hkdfExpand(prk: ArrayBuffer, info: string | ArrayBuffer, outputByteSize: number,\n        algorithm: 'sha256' | 'sha512'): Promise<ArrayBuffer> {\n        const hashLen = algorithm === 'sha256' ? 32 : 64;\n        if (outputByteSize > 255 * hashLen) {\n            throw new Error('outputByteSize is too large.');\n        }\n        const prkArr = new Uint8Array(prk);\n        if (prkArr.length < hashLen) {\n            throw new Error('prk is too small.');\n        }\n        const infoBuf = this.toBuf(info);\n        const infoArr = new Uint8Array(infoBuf);\n        let runningOkmLength = 0;\n        let previousT = new Uint8Array(0);\n        const n = Math.ceil(outputByteSize / hashLen);\n        const okm = new Uint8Array(n * hashLen);\n        for (let i = 0; i < n; i++) {\n            const t = new Uint8Array(previousT.length + infoArr.length + 1);\n            t.set(previousT);\n            t.set(infoArr, previousT.length);\n            t.set([i + 1], t.length - 1);\n            previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n            okm.set(previousT, runningOkmLength);\n            runningOkmLength += previousT.length;\n            if (runningOkmLength >= outputByteSize) {\n                break;\n            }\n        }\n        return okm.slice(0, outputByteSize).buffer;\n    }\n\n    async hash(value: string | ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5'): Promise<ArrayBuffer> {\n        if ((this.isIE && algorithm === 'sha1') || algorithm === 'md5') {\n            const md = algorithm === 'md5' ? forge.md.md5.create() : forge.md.sha1.create();\n            const valueBytes = this.toByteString(value);\n            md.update(valueBytes, 'raw');\n            return Utils.fromByteStringToArray(md.digest().data).buffer;\n        }\n\n        const valueBuf = this.toBuf(value);\n        return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n    }\n\n    async hmac(value: ArrayBuffer, key: ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<ArrayBuffer> {\n        if (this.isIE && algorithm === 'sha512') {\n            const hmac = (forge as any).hmac.create();\n            const keyBytes = this.toByteString(key);\n            const valueBytes = this.toByteString(value);\n            hmac.start(algorithm, keyBytes);\n            hmac.update(valueBytes, 'raw');\n            return Utils.fromByteStringToArray(hmac.digest().data).buffer;\n        }\n\n        const signingAlgorithm = {\n            name: 'HMAC',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', key, signingAlgorithm, false, ['sign']);\n        return await this.subtle.sign(signingAlgorithm, impKey, value);\n    }\n\n    // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n    // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n    // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n    async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n        const macKey = await this.randomBytes(32);\n        const signingAlgorithm = {\n            name: 'HMAC',\n            hash: { name: 'SHA-256' },\n        };\n        const impKey = await this.subtle.importKey('raw', macKey, signingAlgorithm, false, ['sign']);\n        const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n        const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n        if (mac1.byteLength !== mac2.byteLength) {\n            return false;\n        }\n\n        const arr1 = new Uint8Array(mac1);\n        const arr2 = new Uint8Array(mac2);\n        for (let i = 0; i < arr2.length; i++) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hmacFast(value: string, key: string, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<string> {\n        const hmac = (forge as any).hmac.create();\n        hmac.start(algorithm, key);\n        hmac.update(value);\n        const bytes = hmac.digest().getBytes();\n        return Promise.resolve(bytes);\n    }\n\n    async compareFast(a: string, b: string): Promise<boolean> {\n        const rand = await this.randomBytes(32);\n        const bytes = new Uint32Array(rand);\n        const buffer = forge.util.createBuffer();\n        for (let i = 0; i < bytes.length; i++) {\n            buffer.putInt32(bytes[i]);\n        }\n        const macKey = buffer.getBytes();\n\n        const hmac = (forge as any).hmac.create();\n        hmac.start('sha256', macKey);\n        hmac.update(a);\n        const mac1 = hmac.digest().getBytes();\n\n        hmac.start(null, null);\n        hmac.update(b);\n        const mac2 = hmac.digest().getBytes();\n\n        const equals = mac1 === mac2;\n        return equals;\n    }\n\n    async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n        const impKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' } as any, false, ['encrypt']);\n        return await this.subtle.encrypt({ name: 'AES-CBC', iv: iv }, impKey, data);\n    }\n\n    aesDecryptFastParameters(data: string, iv: string, mac: string, key: SymmetricCryptoKey):\n        DecryptParameters<string> {\n        const p = new DecryptParameters<string>();\n        if (key.meta != null) {\n            p.encKey = key.meta.encKeyByteString;\n            p.macKey = key.meta.macKeyByteString;\n        }\n\n        if (p.encKey == null) {\n            p.encKey = forge.util.decode64(key.encKeyB64);\n        }\n        p.data = forge.util.decode64(data);\n        p.iv = forge.util.decode64(iv);\n        p.macData = p.iv + p.data;\n        if (p.macKey == null && key.macKeyB64 != null) {\n            p.macKey = forge.util.decode64(key.macKeyB64);\n        }\n        if (mac != null) {\n            p.mac = forge.util.decode64(mac);\n        }\n\n        // cache byte string keys for later\n        if (key.meta == null) {\n            key.meta = {};\n        }\n        if (key.meta.encKeyByteString == null) {\n            key.meta.encKeyByteString = p.encKey;\n        }\n        if (p.macKey != null && key.meta.macKeyByteString == null) {\n            key.meta.macKeyByteString = p.macKey;\n        }\n\n        return p;\n    }\n\n    aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n        const dataBuffer = (forge as any).util.createBuffer(parameters.data);\n        const decipher = (forge as any).cipher.createDecipher('AES-CBC', parameters.encKey);\n        decipher.start({ iv: parameters.iv });\n        decipher.update(dataBuffer);\n        decipher.finish();\n        const val = decipher.output.toString('utf8');\n        return Promise.resolve(val);\n    }\n\n    async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n        const impKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' } as any, false, ['decrypt']);\n        return await this.subtle.decrypt({ name: 'AES-CBC', iv: iv }, impKey, data);\n    }\n\n    async rsaEncrypt(data: ArrayBuffer, publicKey: ArrayBuffer, algorithm: 'sha1' | 'sha256'): Promise<ArrayBuffer> {\n        // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n        // We cannot use the proper types here.\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n        const impKey = await this.subtle.importKey('spki', publicKey, rsaParams, false, ['encrypt']);\n        return await this.subtle.encrypt(rsaParams, impKey, data);\n    }\n\n    async rsaDecrypt(data: ArrayBuffer, privateKey: ArrayBuffer, algorithm: 'sha1' | 'sha256'): Promise<ArrayBuffer> {\n        // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n        // We cannot use the proper types here.\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n        const impKey = await this.subtle.importKey('pkcs8', privateKey, rsaParams, false, ['decrypt']);\n        return await this.subtle.decrypt(rsaParams, impKey, data);\n    }\n\n    async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            // Have to specify some algorithm\n            hash: { name: this.toWebCryptoAlgorithm('sha1') },\n        };\n        const impPrivateKey = await this.subtle.importKey('pkcs8', privateKey, rsaParams, true, ['decrypt']);\n        const jwkPrivateKey = await this.subtle.exportKey('jwk', impPrivateKey);\n        const jwkPublicKeyParams = {\n            kty: 'RSA',\n            e: jwkPrivateKey.e,\n            n: jwkPrivateKey.n,\n            alg: 'RSA-OAEP',\n            ext: true,\n        };\n        const impPublicKey = await this.subtle.importKey('jwk', jwkPublicKeyParams, rsaParams, true, ['encrypt']);\n        return await this.subtle.exportKey('spki', impPublicKey);\n    }\n\n    async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            modulusLength: length,\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n            // Have to specify some algorithm\n            hash: { name: this.toWebCryptoAlgorithm('sha1') },\n        };\n        const keyPair = (await this.subtle.generateKey(rsaParams, true, ['encrypt', 'decrypt'])) as CryptoKeyPair;\n        const publicKey = await this.subtle.exportKey('spki', keyPair.publicKey);\n        const privateKey = await this.subtle.exportKey('pkcs8', keyPair.privateKey);\n        return [publicKey, privateKey];\n    }\n\n    randomBytes(length: number): Promise<ArrayBuffer> {\n        const arr = new Uint8Array(length);\n        this.crypto.getRandomValues(arr);\n        return Promise.resolve(arr.buffer);\n    }\n\n    private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n        let buf: ArrayBuffer;\n        if (typeof (value) === 'string') {\n            buf = Utils.fromUtf8ToArray(value).buffer;\n        } else {\n            buf = value;\n        }\n        return buf;\n    }\n\n    private toByteString(value: string | ArrayBuffer): string {\n        let bytes: string;\n        if (typeof (value) === 'string') {\n            bytes = forge.util.encodeUtf8(value);\n        } else {\n            bytes = Utils.fromBufferToByteString(value);\n        }\n        return bytes;\n    }\n\n    private toWebCryptoAlgorithm(algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5'): string {\n        if (algorithm === 'md5') {\n            throw new Error('MD5 is not supported in WebCrypto.');\n        }\n        return algorithm === 'sha1' ? 'SHA-1' : algorithm === 'sha256' ? 'SHA-256' : 'SHA-512';\n    }\n}\n","export class DecryptParameters<T> {\n    encKey: T;\n    data: T;\n    iv: T;\n    macKey: T;\n    mac: T;\n    macData: T;\n}\n","import { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\nimport { AttachmentUploadDataResponse } from '../models/response/attachmentUploadDataResponse';\nimport { SendFileUploadDataResponse } from '../models/response/sendFileUploadDataResponse';\n\nexport abstract class FileUploadService {\n    uploadSendFile: (uploadData: SendFileUploadDataResponse, fileName: EncString,\n        encryptedFileData: EncArrayBuffer) => Promise<any>;\n    uploadCipherAttachment: (admin: boolean, uploadData: AttachmentUploadDataResponse, fileName: EncString,\n        encryptedFileData: EncArrayBuffer) => Promise<any>;\n}\n"],"sourceRoot":""}